#ifndef ZWCC_SWITCH_THERMOSTAT_H
#define ZWCC_SWITCH_THERMOSTAT_H

#include "ZWSupport.h"

#define THERMOSTAT_MODE_VERSION_RELEASED 0x03
#define THERMOSTAT_SETPOINT_VERSION_RELEASED 0x03
#define THERMOSTAT_OPERATING_STATE_VERSION_RELEASED 0x02
#define THERMOSTAT_FAN_MODE_VERSION_RELEASED 0x05
#define THERMOSTAT_FAN_STATE_VERSION_RELEASED 0x02

#define THERMOSTAT_FLAGS_OFF					0x01
#define THERMOSTAT_FLAGS_HEAT					0x02
#define THERMOSTAT_FLAGS_COOL					0x04
#define THERMOSTAT_FLAGS_FURNACE				0x08
#define THERMOSTAT_FLAGS_DRY					0x10
#define THERMOSTAT_FLAGS_MOIST					0x20
#define THERMOSTAT_FLAGS_AUTO_CHANGEOVER		0x40
#define THERMOSTAT_FLAGS_AUTO					THERMOSTAT_FLAGS_AUTO_CHANGEOVER
#define THERMOSTAT_FLAGS_FULL_POWER				0x80
#define THERMOSTAT_FLAGS_MASK_SUB_TYPE			(THERMOSTAT_FLAGS_OFF | THERMOSTAT_FLAGS_HEAT | THERMOSTAT_FLAGS_COOL | THERMOSTAT_FLAGS_FURNACE | THERMOSTAT_FLAGS_DRY | THERMOSTAT_FLAGS_MOIST | THERMOSTAT_FLAGS_AUTO_CHANGEOVER | THERMOSTAT_FLAGS_FULL_POWER)

#define THERMOSTAT_FLAGS_ENERGY_SAVE_HEATING	(0x1 << 0x8)
#define THERMOSTAT_FLAGS_ENERGY_SAVE_COOLING	(0x1 << 0x9)
#define THERMOSTAT_FLAGS_AWAY_HEATING			(0x1 << 0xA)
#define THERMOSTAT_FLAGS_AWAY_COOLING			(0x1 << 0xB)
#define THERMOSTAT_FLAGS_MASK_PARAM_01			(THERMOSTAT_FLAGS_ENERGY_SAVE_HEATING | THERMOSTAT_FLAGS_ENERGY_SAVE_COOLING | THERMOSTAT_FLAGS_AWAY_HEATING | THERMOSTAT_FLAGS_AWAY_COOLING)

#define THERMOSTAT_MODE_OFF						0x00
#define THERMOSTAT_MODE_HEAT					0x01
#define THERMOSTAT_MODE_COOL					0x02
#define THERMOSTAT_MODE_FURNACE					0x07
#define THERMOSTAT_MODE_DRY						0x08
#define THERMOSTAT_MODE_MOIST					0x09
#define THERMOSTAT_MODE_AUTO_CHANGEOVER			0x0A
#define THERMOSTAT_MODE_AUTO					THERMOSTAT_MODE_AUTO_CHANGEOVER
#define THERMOSTAT_MODE_ENERGY_SAVE_HEATING		0x0B
#define THERMOSTAT_MODE_ENERGY_SAVE_COOLING		0x0C
#define THERMOSTAT_MODE_AWAY_HEATING			0x0D
#define THERMOSTAT_MODE_AWAY_COOLING			0x0E
#define THERMOSTAT_MODE_FULL_POWER				0x0F

#define THERMOSTAT_UNITS_CELSIUS		0
#define THERMOSTAT_UNITS_FAHRENHEIT		0x80
#define THERMOSTAT_RANGE_NEG			0x20
#define THERMOSTAT_RANGE_POS			0x40
#define THERMOSTAT_LIMITS_MASK			0x1F


#define THERMOSTAT_SIZE_SHIFT 16
#define THERMOSTAT_SIZE_MASK (0x3 << THERMOSTAT_SIZE_SHIFT)
#define THERMOSTAT_SIZE_ONE_BYTE (0x1 << THERMOSTAT_SIZE_SHIFT)
#define THERMOSTAT_SIZE_TWO_BYTES (0x0 << THERMOSTAT_SIZE_SHIFT)
#define THERMOSTAT_SIZE_FOUR_BYTES (0x2 << THERMOSTAT_SIZE_SHIFT)
#define THERMOSTAT_PRECISION_SHIFT 18
#define THERMOSTAT_PRECISION_MASK (0x7 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_ZERO_DECIMALS (0x01 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_ONE_DECIMALS (0x00 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_TWO_DECIMALS (0x02 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_THREE_DECIMALS (0x03 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_FOUR_DECIMALS (0x04 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_FIVE_DECIMALS (0x05 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_SIX_DECIMALS (0x06 << THERMOSTAT_PRECISION_SHIFT)
#define THERMOSTAT_PRECISION_SEVEN_DECIMALS (0x07 << THERMOSTAT_PRECISION_SHIFT)

#define THERMOSTAT_FAN_MODE_AUTO_LOW 0x0
#define THERMOSTAT_FAN_MODE_LOW 0x1
#define THERMOSTAT_FAN_MODE_AUTO_HIGH 0x2
#define THERMOSTAT_FAN_MODE_HIGH 0x3
#define THERMOSTAT_FAN_MODE_AUTO_MEDIUM 0x4
#define THERMOSTAT_FAN_MODE_MEDIUM 0x5
#define THERMOSTAT_FAN_MODE_CIRCULATION 0x6
#define THERMOSTAT_FAN_MODE_HUMIDITY_CIRCULATION 0x7
#define THERMOSTAT_FAN_MODE_LEFT_RIGHT 0x8
#define THERMOSTAT_FAN_MODE_UP_DOWN 0x9
#define THERMOSTAT_FAN_MODE_QUIET 0xA
// #define THERMOSTAT_FAN_MODE_EXTERNAL_CIRCULATION 0xB

#define THERMOSTAT_FAN_MODE_SHIFT 21
#define THERMOSTAT_FAN_MODE_MASK (0x7FF << THERMOSTAT_FAN_MODE_SHIFT)
#define THERMOSTAT_FAN_MODE_AUTO_LOW_MASK (0x01 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_AUTO_LOW))
#define THERMOSTAT_FAN_MODE_LOW_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_LOW))
#define THERMOSTAT_FAN_MODE_AUTO_HIGH_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_AUTO_HIGH))
#define THERMOSTAT_FAN_MODE_HIGH_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_HIGH))
#define THERMOSTAT_FAN_MODE_AUTO_MEDIUM_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_AUTO_MEDIUM))
#define THERMOSTAT_FAN_MODE_MEDIUM_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_MEDIUM))
#define THERMOSTAT_FAN_MODE_CIRCULATION_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_CIRCULATION))
#define THERMOSTAT_FAN_MODE_HUMIDITY_CIRCULATION_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_HUMIDITY_CIRCULATION))
#define THERMOSTAT_FAN_MODE_LEFT_RIGHT_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_LEFT_RIGHT))
#define THERMOSTAT_FAN_MODE_UP_DOWN_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_UP_DOWN))
#define THERMOSTAT_FAN_MODE_QUIET_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_QUIET))
// #define THERMOSTAT_FAN_MODE_EXTERNAL_CIRCULATIO_MASK (0x1 << (THERMOSTAT_FAN_MODE_SHIFT + THERMOSTAT_FAN_MODE_EXTERNAL_CIRCULATION))

#define THERMOSTAT_PROPERTIES_COMBINER(UNITS, POS_NEG, LIMITS, MODES) (((UNITS & THERMOSTAT_UNITS_FAHRENHEIT) | (POS_NEG & (THERMOSTAT_RANGE_NEG | THERMOSTAT_RANGE_POS))) | \
(LIMITS & THERMOSTAT_LIMITS_MASK) | ((MODES) & THERMOSTAT_FLAGS_MASK_PARAM_01) | ((LIMITS & THERMOSTAT_SIZE_MASK) | (LIMITS & THERMOSTAT_PRECISION_MASK) | ((MODES) & THERMOSTAT_FAN_MODE_MASK)))

#define THERMOSTAT_OPERATING_STATE_IDLE 0x0
#define THERMOSTAT_OPERATING_STATE_HEATING 0x1
#define THERMOSTAT_OPERATING_STATE_COOLING 0x2
#define THERMOSTAT_OPERATING_STATE_FAN_ONLY 0x3
#define THERMOSTAT_OPERATING_STATE_PENDING_HEAT 0x4
#define THERMOSTAT_OPERATING_STATE_PENDING_COOL 0x5
#define THERMOSTAT_OPERATING_STATE_VENT 0x6
#define THERMOSTAT_OPERATING_STATE_AUX_HEATING 0x7
#define THERMOSTAT_OPERATING_STATE_2ND_STAGE_HEATING 0x8
#define THERMOSTAT_OPERATING_STATE_2ND_STAGE_COOLING 0x9
#define THERMOSTAT_OPERATING_STATE_2ND_STAGE_AUX_HEAT 0xA
#define THERMOSTAT_OPERATING_STATE_3RD_STAGE_AUX_HEAT 0xB


#define THERMOSTAT_FAN_STATE_IDLE 0x00
#define THERMOSTAT_FAN_STATE_RUNNING 0x01
#define THERMOSTAT_FAN_STATE_RUNNING_HIGH 0x02
#define THERMOSTAT_FAN_STATE_RUNNING_MEDIUM 0x03
#define THERMOSTAT_FAN_STATE_CIRCULATION 0x04
#define THERMOSTAT_FAN_STATE_HUMIDITY_CIRCULATION 0x05
#define THERMOSTAT_FAN_STATE_LEFT_RIGHT 0x06
#define THERMOSTAT_FAN_STATE_UP_DOWN 0x07
#define THERMOSTAT_FAN_STATE_QUIET 0x08

int zuno_CCThermostatModeHandler(uint8_t channel, const ZUNOCommandCmd_t *cmd, ZUNOCommandPacketReport_t *frame_report);
int zuno_CCThermostatSetPointHandler(uint8_t channel, const ZUNOCommandCmd_t *cmd, ZUNOCommandPacketReport_t *frame_report);
int zuno_CCThermostatOperationStateHandler(uint8_t channel, const ZUNOCommandCmd_t *cmd, ZUNOCommandPacketReport_t *frame_report);
int zuno_CCThermostatFanModeHandler(uint8_t channel, const ZUNOCommandCmd_t *cmd, ZUNOCommandPacketReport_t *frame_report);
int zuno_CCThermostatFanStateHandler(uint8_t channel, const ZUNOCommandCmd_t *cmd, ZUNOCommandPacketReport_t *frame_report);

int zuno_CCThermostatReport(byte channel, ZUNOCommandPacket_t *packet);
bool zuno_CCThermostatCompareChanneltypeCC(size_t cmdClass);

ssize_t zuno_CCThermostatModeAssociationGroupCommand(_ZwAssociationGroupCommand_t *gpr_info, size_t gpr_info_max);
ssize_t zuno_CCThermostatSetPointAssociationGroupCommand(_ZwAssociationGroupCommand_t *gpr_info, size_t gpr_info_max);
ssize_t zuno_CCThermostatOperationStateAssociationGroupCommand(_ZwAssociationGroupCommand_t *gpr_info, size_t gpr_info_max);
ssize_t zuno_CCThermostatFanModeAssociationGroupCommand(_ZwAssociationGroupCommand_t *gpr_info, size_t gpr_info_max);
ssize_t zuno_CCThermostatFanStateAssociationGroupCommand(_ZwAssociationGroupCommand_t *gpr_info, size_t gpr_info_max);

bool zuno_CCThermostatModeIsBlockMultiBroadcast(size_t cmd);
bool zuno_CCThermostatSetPointIsBlockMultiBroadcast(size_t cmd);
bool zuno_CCThermostatOperationStateIsBlockMultiBroadcast(size_t cmd);
bool zuno_CCThermostatFanModeIsBlockMultiBroadcast(size_t cmd);
bool zuno_CCThermostatFanStateIsBlockMultiBroadcast(size_t cmd);

#endif // ZWCC_SWITCH_THERMOSTAT_H