/// SPDX-License-Identifier: BSD-3-Clause
/// SPDX-FileCopyrightText: Silicon Laboratories Inc. https://www.silabs.com
// This file is auto generated. Do not edit it manually!
// Generated on: 11/6/2024 9:32:05AM
 /**
 * @file
 * @version 2.15.2
 * Device and command class types and definitions.
 * 
 * @copyright 2022 Silicon Laboratories Inc.
 */
#ifndef _ZW_CLASSCMD_H_
#define _ZW_CLASSCMD_H_

 /****************************************************************************/
 /*                              INCLUDE FILES                               */
 /****************************************************************************/
#include <stdint.h>

/****************************************************************************
 *    TYPES and DEFINITIONS
 ***************************************************************************/


#define ZW_FRAME_COLLECTION_MACRO0\
   ZW_COMMON_FRAME                                       ZW_Common;\
/* Command class Alarm */\
  ZW_ALARM_GET_FRAME                                           ZW_AlarmGetFrame;\
  ZW_ALARM_REPORT_FRAME                                        ZW_AlarmReportFrame;\
/* Command class Alarm V2 */\
  ZW_ALARM_GET_V2_FRAME                                        ZW_AlarmGetV2Frame;\
  ZW_ALARM_REPORT_1BYTE_V2_FRAME                               ZW_AlarmReport1byteV2Frame;\
  ZW_ALARM_REPORT_2BYTE_V2_FRAME                               ZW_AlarmReport2byteV2Frame;\
  ZW_ALARM_REPORT_3BYTE_V2_FRAME                               ZW_AlarmReport3byteV2Frame;\
  ZW_ALARM_REPORT_4BYTE_V2_FRAME                               ZW_AlarmReport4byteV2Frame;\
  ZW_ALARM_SET_V2_FRAME                                        ZW_AlarmSetV2Frame;\
  ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME                         ZW_AlarmTypeSupportedGetV2Frame;\
  ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport1byteV2Frame;\
  ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport2byteV2Frame;\
  ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport3byteV2Frame;\
  ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V2_FRAME                ZW_AlarmTypeSupportedReport4byteV2Frame;\
/* Command class Notification V3 */\
  ZW_NOTIFICATION_GET_V3_FRAME                                 ZW_NotificationGetV3Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME                        ZW_NotificationReport1byteV3Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME                        ZW_NotificationReport2byteV3Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME                        ZW_NotificationReport3byteV3Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME                        ZW_NotificationReport4byteV3Frame;\
  ZW_NOTIFICATION_SET_V3_FRAME                                 ZW_NotificationSetV3Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME                       ZW_NotificationSupportedGetV3Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V3_FRAME              ZW_NotificationSupportedReport1byteV3Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V3_FRAME              ZW_NotificationSupportedReport2byteV3Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V3_FRAME              ZW_NotificationSupportedReport3byteV3Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V3_FRAME              ZW_NotificationSupportedReport4byteV3Frame;\
  ZW_EVENT_SUPPORTED_GET_V3_FRAME                              ZW_EventSupportedGetV3Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAME                     ZW_EventSupportedReport1byteV3Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAME                     ZW_EventSupportedReport2byteV3Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAME                     ZW_EventSupportedReport3byteV3Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAME                     ZW_EventSupportedReport4byteV3Frame;\
/* Command class Notification V4 */\
  ZW_NOTIFICATION_GET_V4_FRAME                                 ZW_NotificationGetV4Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V4_FRAME                        ZW_NotificationReport1byteV4Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V4_FRAME                        ZW_NotificationReport2byteV4Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V4_FRAME                        ZW_NotificationReport3byteV4Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V4_FRAME                        ZW_NotificationReport4byteV4Frame;\
  ZW_NOTIFICATION_SET_V4_FRAME                                 ZW_NotificationSetV4Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V4_FRAME                       ZW_NotificationSupportedGetV4Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V4_FRAME              ZW_NotificationSupportedReport1byteV4Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V4_FRAME              ZW_NotificationSupportedReport2byteV4Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V4_FRAME              ZW_NotificationSupportedReport3byteV4Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V4_FRAME              ZW_NotificationSupportedReport4byteV4Frame;\
  ZW_EVENT_SUPPORTED_GET_V4_FRAME                              ZW_EventSupportedGetV4Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V4_FRAME                     ZW_EventSupportedReport1byteV4Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V4_FRAME                     ZW_EventSupportedReport2byteV4Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V4_FRAME                     ZW_EventSupportedReport3byteV4Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V4_FRAME                     ZW_EventSupportedReport4byteV4Frame;\
/* Command class Notification V5 */\
  ZW_NOTIFICATION_GET_V5_FRAME                                 ZW_NotificationGetV5Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V5_FRAME                        ZW_NotificationReport1byteV5Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V5_FRAME                        ZW_NotificationReport2byteV5Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V5_FRAME                        ZW_NotificationReport3byteV5Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V5_FRAME                        ZW_NotificationReport4byteV5Frame;\
  ZW_NOTIFICATION_SET_V5_FRAME                                 ZW_NotificationSetV5Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V5_FRAME                       ZW_NotificationSupportedGetV5Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V5_FRAME              ZW_NotificationSupportedReport1byteV5Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V5_FRAME              ZW_NotificationSupportedReport2byteV5Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V5_FRAME              ZW_NotificationSupportedReport3byteV5Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V5_FRAME              ZW_NotificationSupportedReport4byteV5Frame;\
  ZW_EVENT_SUPPORTED_GET_V5_FRAME                              ZW_EventSupportedGetV5Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V5_FRAME                     ZW_EventSupportedReport1byteV5Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V5_FRAME                     ZW_EventSupportedReport2byteV5Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V5_FRAME                     ZW_EventSupportedReport3byteV5Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V5_FRAME                     ZW_EventSupportedReport4byteV5Frame;\
/* Command class Notification V6 */\
  ZW_NOTIFICATION_GET_V6_FRAME                                 ZW_NotificationGetV6Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V6_FRAME                        ZW_NotificationReport1byteV6Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V6_FRAME                        ZW_NotificationReport2byteV6Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V6_FRAME                        ZW_NotificationReport3byteV6Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V6_FRAME                        ZW_NotificationReport4byteV6Frame;\
  ZW_NOTIFICATION_SET_V6_FRAME                                 ZW_NotificationSetV6Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V6_FRAME                       ZW_NotificationSupportedGetV6Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V6_FRAME              ZW_NotificationSupportedReport1byteV6Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V6_FRAME              ZW_NotificationSupportedReport2byteV6Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V6_FRAME              ZW_NotificationSupportedReport3byteV6Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V6_FRAME              ZW_NotificationSupportedReport4byteV6Frame;\
  ZW_EVENT_SUPPORTED_GET_V6_FRAME                              ZW_EventSupportedGetV6Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V6_FRAME                     ZW_EventSupportedReport1byteV6Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V6_FRAME                     ZW_EventSupportedReport2byteV6Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V6_FRAME                     ZW_EventSupportedReport3byteV6Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V6_FRAME                     ZW_EventSupportedReport4byteV6Frame;\
/* Command class Notification V7 */\
  ZW_NOTIFICATION_GET_V7_FRAME                                 ZW_NotificationGetV7Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V7_FRAME                        ZW_NotificationReport1byteV7Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V7_FRAME                        ZW_NotificationReport2byteV7Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V7_FRAME                        ZW_NotificationReport3byteV7Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V7_FRAME                        ZW_NotificationReport4byteV7Frame;\
  ZW_NOTIFICATION_SET_V7_FRAME                                 ZW_NotificationSetV7Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V7_FRAME                       ZW_NotificationSupportedGetV7Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V7_FRAME              ZW_NotificationSupportedReport1byteV7Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V7_FRAME              ZW_NotificationSupportedReport2byteV7Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V7_FRAME              ZW_NotificationSupportedReport3byteV7Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V7_FRAME              ZW_NotificationSupportedReport4byteV7Frame;\
  ZW_EVENT_SUPPORTED_GET_V7_FRAME                              ZW_EventSupportedGetV7Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V7_FRAME                     ZW_EventSupportedReport1byteV7Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V7_FRAME                     ZW_EventSupportedReport2byteV7Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V7_FRAME                     ZW_EventSupportedReport3byteV7Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V7_FRAME                     ZW_EventSupportedReport4byteV7Frame;\
/* Command class Notification V8 */\
  ZW_NOTIFICATION_GET_V8_FRAME                                 ZW_NotificationGetV8Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V8_FRAME                        ZW_NotificationReport1byteV8Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V8_FRAME                        ZW_NotificationReport2byteV8Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V8_FRAME                        ZW_NotificationReport3byteV8Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V8_FRAME                        ZW_NotificationReport4byteV8Frame;\
  ZW_NOTIFICATION_SET_V8_FRAME                                 ZW_NotificationSetV8Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V8_FRAME                       ZW_NotificationSupportedGetV8Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V8_FRAME              ZW_NotificationSupportedReport1byteV8Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V8_FRAME              ZW_NotificationSupportedReport2byteV8Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V8_FRAME              ZW_NotificationSupportedReport3byteV8Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V8_FRAME              ZW_NotificationSupportedReport4byteV8Frame;\
  ZW_EVENT_SUPPORTED_GET_V8_FRAME                              ZW_EventSupportedGetV8Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V8_FRAME                     ZW_EventSupportedReport1byteV8Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V8_FRAME                     ZW_EventSupportedReport2byteV8Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V8_FRAME                     ZW_EventSupportedReport3byteV8Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V8_FRAME                     ZW_EventSupportedReport4byteV8Frame;\
/* Command class Notification V9 */\
  ZW_NOTIFICATION_GET_V9_FRAME                                 ZW_NotificationGetV9Frame;\
  ZW_NOTIFICATION_REPORT_1BYTE_V9_FRAME                        ZW_NotificationReport1byteV9Frame;\
  ZW_NOTIFICATION_REPORT_2BYTE_V9_FRAME                        ZW_NotificationReport2byteV9Frame;\
  ZW_NOTIFICATION_REPORT_3BYTE_V9_FRAME                        ZW_NotificationReport3byteV9Frame;\
  ZW_NOTIFICATION_REPORT_4BYTE_V9_FRAME                        ZW_NotificationReport4byteV9Frame;\
  ZW_NOTIFICATION_SET_V9_FRAME                                 ZW_NotificationSetV9Frame;\
  ZW_NOTIFICATION_SUPPORTED_GET_V9_FRAME                       ZW_NotificationSupportedGetV9Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V9_FRAME              ZW_NotificationSupportedReport1byteV9Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V9_FRAME              ZW_NotificationSupportedReport2byteV9Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V9_FRAME              ZW_NotificationSupportedReport3byteV9Frame;\
  ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V9_FRAME              ZW_NotificationSupportedReport4byteV9Frame;\
  ZW_EVENT_SUPPORTED_GET_V9_FRAME                              ZW_EventSupportedGetV9Frame;\
  ZW_EVENT_SUPPORTED_REPORT_1BYTE_V9_FRAME                     ZW_EventSupportedReport1byteV9Frame;\
  ZW_EVENT_SUPPORTED_REPORT_2BYTE_V9_FRAME                     ZW_EventSupportedReport2byteV9Frame;\
  ZW_EVENT_SUPPORTED_REPORT_3BYTE_V9_FRAME                     ZW_EventSupportedReport3byteV9Frame;\
  ZW_EVENT_SUPPORTED_REPORT_4BYTE_V9_FRAME                     ZW_EventSupportedReport4byteV9Frame;\
/* Command class Application Status */\
  ZW_APPLICATION_BUSY_FRAME                                    ZW_ApplicationBusyFrame;\
  ZW_APPLICATION_REJECTED_REQUEST_FRAME                        ZW_ApplicationRejectedRequestFrame;\
/* Command class Association Command Configuration */\
  ZW_COMMAND_CONFIGURATION_GET_FRAME                           ZW_CommandConfigurationGetFrame;\
  ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_FRAME                  ZW_CommandConfigurationReport1byteFrame;\
  ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_FRAME                  ZW_CommandConfigurationReport2byteFrame;\
  ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_FRAME                  ZW_CommandConfigurationReport3byteFrame;\
  ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_FRAME                  ZW_CommandConfigurationReport4byteFrame;\
  ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAME                     ZW_CommandConfigurationSet1byteFrame;\
  ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAME                     ZW_CommandConfigurationSet2byteFrame;\
  ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAME                     ZW_CommandConfigurationSet3byteFrame;\
  ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAME                     ZW_CommandConfigurationSet4byteFrame;\
  ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME                       ZW_CommandRecordsSupportedGetFrame;\
  ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FRAME                    ZW_CommandRecordsSupportedReportFrame;\
/* Command class Association */\
  ZW_ASSOCIATION_GET_FRAME                                     ZW_AssociationGetFrame;\
  ZW_ASSOCIATION_GROUPINGS_GET_FRAME                           ZW_AssociationGroupingsGetFrame;\
  ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME                        ZW_AssociationGroupingsReportFrame;\
  ZW_ASSOCIATION_REMOVE_1BYTE_FRAME                            ZW_AssociationRemove1byteFrame;\
  ZW_ASSOCIATION_REMOVE_2BYTE_FRAME                            ZW_AssociationRemove2byteFrame;\
  ZW_ASSOCIATION_REMOVE_3BYTE_FRAME                            ZW_AssociationRemove3byteFrame;\
  ZW_ASSOCIATION_REMOVE_4BYTE_FRAME                            ZW_AssociationRemove4byteFrame;\
  ZW_ASSOCIATION_REPORT_1BYTE_FRAME                            ZW_AssociationReport1byteFrame;\
  ZW_ASSOCIATION_REPORT_2BYTE_FRAME                            ZW_AssociationReport2byteFrame;\
  ZW_ASSOCIATION_REPORT_3BYTE_FRAME                            ZW_AssociationReport3byteFrame;\
  ZW_ASSOCIATION_REPORT_4BYTE_FRAME                            ZW_AssociationReport4byteFrame;\
  ZW_ASSOCIATION_SET_1BYTE_FRAME                               ZW_AssociationSet1byteFrame;\
  ZW_ASSOCIATION_SET_2BYTE_FRAME                               ZW_AssociationSet2byteFrame;\
  ZW_ASSOCIATION_SET_3BYTE_FRAME                               ZW_AssociationSet3byteFrame;\
  ZW_ASSOCIATION_SET_4BYTE_FRAME                               ZW_AssociationSet4byteFrame;\
/* Command class Association V2 */\
  ZW_ASSOCIATION_GET_V2_FRAME                                  ZW_AssociationGetV2Frame;\
  ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME                        ZW_AssociationGroupingsGetV2Frame;\
  ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME                     ZW_AssociationGroupingsReportV2Frame;\
  ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME                         ZW_AssociationRemove1byteV2Frame;\
  ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME                         ZW_AssociationRemove2byteV2Frame;\
  ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME                         ZW_AssociationRemove3byteV2Frame;\
  ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME                         ZW_AssociationRemove4byteV2Frame;\
  ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME                         ZW_AssociationReport1byteV2Frame;\
  ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME                         ZW_AssociationReport2byteV2Frame;\
  ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME                         ZW_AssociationReport3byteV2Frame;\
  ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME                         ZW_AssociationReport4byteV2Frame;\
  ZW_ASSOCIATION_SET_1BYTE_V2_FRAME                            ZW_AssociationSet1byteV2Frame;\
  ZW_ASSOCIATION_SET_2BYTE_V2_FRAME                            ZW_AssociationSet2byteV2Frame;\
  ZW_ASSOCIATION_SET_3BYTE_V2_FRAME                            ZW_AssociationSet3byteV2Frame;\
  ZW_ASSOCIATION_SET_4BYTE_V2_FRAME                            ZW_AssociationSet4byteV2Frame;\
  ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_FRAME                   ZW_AssociationSpecificGroupGetV2Frame;\
  ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V2_FRAME                ZW_AssociationSpecificGroupReportV2Frame;\
/* Command class Association V3 */\
  ZW_ASSOCIATION_GET_V3_FRAME                                  ZW_AssociationGetV3Frame;\
  ZW_ASSOCIATION_GROUPINGS_GET_V3_FRAME                        ZW_AssociationGroupingsGetV3Frame;\
  ZW_ASSOCIATION_GROUPINGS_REPORT_V3_FRAME                     ZW_AssociationGroupingsReportV3Frame;\
  ZW_ASSOCIATION_REMOVE_1BYTE_V3_FRAME                         ZW_AssociationRemove1byteV3Frame;\
  ZW_ASSOCIATION_REMOVE_2BYTE_V3_FRAME                         ZW_AssociationRemove2byteV3Frame;\
  ZW_ASSOCIATION_REMOVE_3BYTE_V3_FRAME                         ZW_AssociationRemove3byteV3Frame;\
  ZW_ASSOCIATION_REMOVE_4BYTE_V3_FRAME                         ZW_AssociationRemove4byteV3Frame;\
  ZW_ASSOCIATION_REPORT_1BYTE_V3_FRAME                         ZW_AssociationReport1byteV3Frame;\
  ZW_ASSOCIATION_REPORT_2BYTE_V3_FRAME                         ZW_AssociationReport2byteV3Frame;\
  ZW_ASSOCIATION_REPORT_3BYTE_V3_FRAME                         ZW_AssociationReport3byteV3Frame;\
  ZW_ASSOCIATION_REPORT_4BYTE_V3_FRAME                         ZW_AssociationReport4byteV3Frame;\
  ZW_ASSOCIATION_SET_1BYTE_V3_FRAME                            ZW_AssociationSet1byteV3Frame;\
  ZW_ASSOCIATION_SET_2BYTE_V3_FRAME                            ZW_AssociationSet2byteV3Frame;\
  ZW_ASSOCIATION_SET_3BYTE_V3_FRAME                            ZW_AssociationSet3byteV3Frame;\
  ZW_ASSOCIATION_SET_4BYTE_V3_FRAME                            ZW_AssociationSet4byteV3Frame;\
  ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V3_FRAME                   ZW_AssociationSpecificGroupGetV3Frame;\
  ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V3_FRAME                ZW_AssociationSpecificGroupReportV3Frame;\
/* Command class Association V4 */\
  ZW_ASSOCIATION_GET_V4_FRAME                                  ZW_AssociationGetV4Frame;\
  ZW_ASSOCIATION_GROUPINGS_GET_V4_FRAME                        ZW_AssociationGroupingsGetV4Frame;\
  ZW_ASSOCIATION_GROUPINGS_REPORT_V4_FRAME                     ZW_AssociationGroupingsReportV4Frame;\
  ZW_ASSOCIATION_REMOVE_1BYTE_V4_FRAME                         ZW_AssociationRemove1byteV4Frame;\
  ZW_ASSOCIATION_REMOVE_2BYTE_V4_FRAME                         ZW_AssociationRemove2byteV4Frame;\
  ZW_ASSOCIATION_REMOVE_3BYTE_V4_FRAME                         ZW_AssociationRemove3byteV4Frame;\
  ZW_ASSOCIATION_REMOVE_4BYTE_V4_FRAME                         ZW_AssociationRemove4byteV4Frame;\
  ZW_ASSOCIATION_REPORT_1BYTE_V4_FRAME                         ZW_AssociationReport1byteV4Frame;\
  ZW_ASSOCIATION_REPORT_2BYTE_V4_FRAME                         ZW_AssociationReport2byteV4Frame;\
  ZW_ASSOCIATION_REPORT_3BYTE_V4_FRAME                         ZW_AssociationReport3byteV4Frame;\
  ZW_ASSOCIATION_REPORT_4BYTE_V4_FRAME                         ZW_AssociationReport4byteV4Frame;\
  ZW_ASSOCIATION_SET_1BYTE_V4_FRAME                            ZW_AssociationSet1byteV4Frame;\
  ZW_ASSOCIATION_SET_2BYTE_V4_FRAME                            ZW_AssociationSet2byteV4Frame;\
  ZW_ASSOCIATION_SET_3BYTE_V4_FRAME                            ZW_AssociationSet3byteV4Frame;\
  ZW_ASSOCIATION_SET_4BYTE_V4_FRAME                            ZW_AssociationSet4byteV4Frame;\
  ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V4_FRAME                   ZW_AssociationSpecificGroupGetV4Frame;\
  ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V4_FRAME                ZW_AssociationSpecificGroupReportV4Frame;\
/* Command class Av Content Directory Md */\
  ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_FRAME                  ZW_AvContentBrowseMdByLetterGetFrame;\
  ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT_FRAME               ZW_AvContentBrowseMdByLetterReportFrame;\
  ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET_FRAME                ZW_AvContentBrowseMdChildCountGetFrame;\
  ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT_FRAME             ZW_AvContentBrowseMdChildCountReportFrame;\
  ZW_AV_CONTENT_BROWSE_MD_GET_FRAME                            ZW_AvContentBrowseMdGetFrame;\
  ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME                         ZW_AvContentBrowseMdReportFrame;\
  ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FRAME                    ZW_AvMatchItemToRendererMdGetFrame;\
  ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT_FRAME                 ZW_AvMatchItemToRendererMdReportFrame;\
/* Command class Av Content Search Md */\
  ZW_AV_CONTENT_SEARCH_MD_GET_FRAME                            ZW_AvContentSearchMdGetFrame;\
  ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME                         ZW_AvContentSearchMdReportFrame;\
/* Command class Av Renderer Status */\
  ZW_AV_RENDERER_STATUS_GET_FRAME                              ZW_AvRendererStatusGetFrame;\
  ZW_AV_RENDERER_STATUS_REPORT_FRAME                           ZW_AvRendererStatusReportFrame;\
/* Command class Av Tagging Md */\
  ZW_AV_TAGGING_MD_GET_FRAME                                   ZW_AvTaggingMdGetFrame;\
  ZW_AV_TAGGING_MD_REPORT_FRAME                                ZW_AvTaggingMdReportFrame;\
/* Command class Basic Tariff Info */\
  ZW_BASIC_TARIFF_INFO_GET_FRAME                               ZW_BasicTariffInfoGetFrame;\
  ZW_BASIC_TARIFF_INFO_REPORT_FRAME                            ZW_BasicTariffInfoReportFrame;\
/* Command class Basic Window Covering */\
  ZW_BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME            ZW_BasicWindowCoveringStartLevelChangeFrame;\
  ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME             ZW_BasicWindowCoveringStopLevelChangeFrame;\
/* Command class Basic */\
  ZW_BASIC_GET_FRAME                                           ZW_BasicGetFrame;\
  ZW_BASIC_REPORT_FRAME                                        ZW_BasicReportFrame;\
  ZW_BASIC_SET_FRAME                                           ZW_BasicSetFrame;\
/* Command class Basic V2 */\
  ZW_BASIC_GET_V2_FRAME                                        ZW_BasicGetV2Frame;\
  ZW_BASIC_REPORT_V2_FRAME                                     ZW_BasicReportV2Frame;\
  ZW_BASIC_SET_V2_FRAME                                        ZW_BasicSetV2Frame;\
/* Command class Battery */\
  ZW_BATTERY_GET_FRAME                                         ZW_BatteryGetFrame;\
  ZW_BATTERY_REPORT_FRAME                                      ZW_BatteryReportFrame;\
/* Command class Battery V2 */\
  ZW_BATTERY_GET_V2_FRAME                                      ZW_BatteryGetV2Frame;\
  ZW_BATTERY_REPORT_V2_FRAME                                   ZW_BatteryReportV2Frame;\
  ZW_BATTERY_HEALTH_GET_V2_FRAME                               ZW_BatteryHealthGetV2Frame;\
  ZW_BATTERY_HEALTH_REPORT_1BYTE_V2_FRAME                      ZW_BatteryHealthReport1byteV2Frame;\
  ZW_BATTERY_HEALTH_REPORT_2BYTE_V2_FRAME                      ZW_BatteryHealthReport2byteV2Frame;\
  ZW_BATTERY_HEALTH_REPORT_3BYTE_V2_FRAME                      ZW_BatteryHealthReport3byteV2Frame;\
  ZW_BATTERY_HEALTH_REPORT_4BYTE_V2_FRAME                      ZW_BatteryHealthReport4byteV2Frame;\
/* Command class Battery V3 */\
  ZW_BATTERY_GET_V3_FRAME                                      ZW_BatteryGetV3Frame;\
  ZW_BATTERY_REPORT_V3_FRAME                                   ZW_BatteryReportV3Frame;\
  ZW_BATTERY_HEALTH_GET_V3_FRAME                               ZW_BatteryHealthGetV3Frame;\
  ZW_BATTERY_HEALTH_REPORT_1BYTE_V3_FRAME                      ZW_BatteryHealthReport1byteV3Frame;\
  ZW_BATTERY_HEALTH_REPORT_2BYTE_V3_FRAME                      ZW_BatteryHealthReport2byteV3Frame;\
  ZW_BATTERY_HEALTH_REPORT_3BYTE_V3_FRAME                      ZW_BatteryHealthReport3byteV3Frame;\
  ZW_BATTERY_HEALTH_REPORT_4BYTE_V3_FRAME                      ZW_BatteryHealthReport4byteV3Frame;\
/* Command class Chimney Fan */\
  ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME                           ZW_ChimneyFanAlarmLogGetFrame;\
  ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME                        ZW_ChimneyFanAlarmLogReportFrame;\
  ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME                           ZW_ChimneyFanAlarmLogSetFrame;\
  ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME                        ZW_ChimneyFanAlarmStatusGetFrame;\
  ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAME                     ZW_ChimneyFanAlarmStatusReportFrame;\
  ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME                        ZW_ChimneyFanAlarmStatusSetFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME                          ZW_ChimneyFanAlarmTempGetFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport1byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport2byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport3byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE_FRAME                 ZW_ChimneyFanAlarmTempReport4byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet1byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet2byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet3byteFrame;\
  ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FRAME                    ZW_ChimneyFanAlarmTempSet4byteFrame;\
  ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME                          ZW_ChimneyFanBoostTimeGetFrame;\
  ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME                       ZW_ChimneyFanBoostTimeReportFrame;\
  ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME                          ZW_ChimneyFanBoostTimeSetFrame;\
  ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME                             ZW_ChimneyFanDefaultSetFrame;\
  ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME                           ZW_ChimneyFanMinSpeedGetFrame;\
  ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME                        ZW_ChimneyFanMinSpeedReportFrame;\
  ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME                           ZW_ChimneyFanMinSpeedSetFrame;\
  ZW_CHIMNEY_FAN_MODE_GET_FRAME                                ZW_ChimneyFanModeGetFrame;\
  ZW_CHIMNEY_FAN_MODE_REPORT_FRAME                             ZW_ChimneyFanModeReportFrame;\
  ZW_CHIMNEY_FAN_MODE_SET_FRAME                                ZW_ChimneyFanModeSetFrame;\
  ZW_CHIMNEY_FAN_SETUP_GET_FRAME                               ZW_ChimneyFanSetupGetFrame;\
  ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME                      ZW_ChimneyFanSetupReport1byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME                      ZW_ChimneyFanSetupReport2byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME                      ZW_ChimneyFanSetupReport3byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME                      ZW_ChimneyFanSetupReport4byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME                         ZW_ChimneyFanSetupSet1byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME                         ZW_ChimneyFanSetupSet2byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME                         ZW_ChimneyFanSetupSet3byteFrame;\
  ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME                         ZW_ChimneyFanSetupSet4byteFrame;\
  ZW_CHIMNEY_FAN_SPEED_GET_FRAME                               ZW_ChimneyFanSpeedGetFrame;\
  ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME                            ZW_ChimneyFanSpeedReportFrame;\
  ZW_CHIMNEY_FAN_SPEED_SET_FRAME                               ZW_ChimneyFanSpeedSetFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME                          ZW_ChimneyFanStartTempGetFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE_FRAME                 ZW_ChimneyFanStartTempReport1byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE_FRAME                 ZW_ChimneyFanStartTempReport2byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE_FRAME                 ZW_ChimneyFanStartTempReport3byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE_FRAME                 ZW_ChimneyFanStartTempReport4byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FRAME                    ZW_ChimneyFanStartTempSet1byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FRAME                    ZW_ChimneyFanStartTempSet2byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FRAME                    ZW_ChimneyFanStartTempSet3byteFrame;\
  ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FRAME                    ZW_ChimneyFanStartTempSet4byteFrame;\
  ZW_CHIMNEY_FAN_STATE_GET_FRAME                               ZW_ChimneyFanStateGetFrame;\
  ZW_CHIMNEY_FAN_STATE_REPORT_FRAME                            ZW_ChimneyFanStateReportFrame;\
  ZW_CHIMNEY_FAN_STATE_SET_FRAME                               ZW_ChimneyFanStateSetFrame;\
  ZW_CHIMNEY_FAN_STATUS_GET_FRAME                              ZW_ChimneyFanStatusGetFrame;\
  ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAME                     ZW_ChimneyFanStatusReport1byteFrame;\
  ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAME                     ZW_ChimneyFanStatusReport2byteFrame;\
  ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAME                     ZW_ChimneyFanStatusReport3byteFrame;\
  ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAME                     ZW_ChimneyFanStatusReport4byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME                           ZW_ChimneyFanStopTempGetFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_FRAME                  ZW_ChimneyFanStopTempReport1byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_FRAME                  ZW_ChimneyFanStopTempReport2byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_FRAME                  ZW_ChimneyFanStopTempReport3byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_FRAME                  ZW_ChimneyFanStopTempReport4byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAME                     ZW_ChimneyFanStopTempSet1byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAME                     ZW_ChimneyFanStopTempSet2byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAME                     ZW_ChimneyFanStopTempSet3byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAME                     ZW_ChimneyFanStopTempSet4byteFrame;\
  ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME                           ZW_ChimneyFanStopTimeGetFrame;\
  ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME                        ZW_ChimneyFanStopTimeReportFrame;\
  ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME                           ZW_ChimneyFanStopTimeSetFrame;\
/* Command class Climate Control Schedule */\
  ZW_SCHEDULE_CHANGED_GET_FRAME                                ZW_ScheduleChangedGetFrame;\
  ZW_SCHEDULE_CHANGED_REPORT_FRAME                             ZW_ScheduleChangedReportFrame;\
  ZW_SCHEDULE_GET_FRAME                                        ZW_ScheduleGetFrame;\
  ZW_SCHEDULE_OVERRIDE_GET_FRAME                               ZW_ScheduleOverrideGetFrame;\
  ZW_SCHEDULE_OVERRIDE_REPORT_FRAME                            ZW_ScheduleOverrideReportFrame;\
  ZW_SCHEDULE_OVERRIDE_SET_FRAME                               ZW_ScheduleOverrideSetFrame;\
  ZW_SCHEDULE_REPORT_FRAME                                     ZW_ScheduleReportFrame;\
  ZW_SCHEDULE_SET_FRAME                                        ZW_ScheduleSetFrame;\
/* Command class Clock */\
  ZW_CLOCK_GET_FRAME                                           ZW_ClockGetFrame;\
  ZW_CLOCK_REPORT_FRAME                                        ZW_ClockReportFrame;\
  ZW_CLOCK_SET_FRAME                                           ZW_ClockSetFrame;\
/* Command class Configuration */\
  ZW_CONFIGURATION_GET_FRAME                                   ZW_ConfigurationGetFrame;\
  ZW_CONFIGURATION_REPORT_1BYTE_FRAME                          ZW_ConfigurationReport1byteFrame;\
  ZW_CONFIGURATION_REPORT_2BYTE_FRAME                          ZW_ConfigurationReport2byteFrame;\
  ZW_CONFIGURATION_REPORT_3BYTE_FRAME                          ZW_ConfigurationReport3byteFrame;\
  ZW_CONFIGURATION_REPORT_4BYTE_FRAME                          ZW_ConfigurationReport4byteFrame;\
  ZW_CONFIGURATION_SET_1BYTE_FRAME                             ZW_ConfigurationSet1byteFrame;\
  ZW_CONFIGURATION_SET_2BYTE_FRAME                             ZW_ConfigurationSet2byteFrame;\
  ZW_CONFIGURATION_SET_3BYTE_FRAME                             ZW_ConfigurationSet3byteFrame;\
  ZW_CONFIGURATION_SET_4BYTE_FRAME                             ZW_ConfigurationSet4byteFrame;\
/* Command class Configuration V2 */\
  ZW_CONFIGURATION_BULK_GET_V2_FRAME                           ZW_ConfigurationBulkGetV2Frame;\
  VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VG                     VG_ConfigurationBulkReport1byteV2VGroup;\
  VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VG                     VG_ConfigurationBulkReport2byteV2VGroup;\
  VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VG                     VG_ConfigurationBulkReport3byteV2VGroup;\
  VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG                     VG_ConfigurationBulkReport4byteV2VGroup;\
  ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_FRAME                  ZW_ConfigurationBulkReport1byteV2Frame;\
  ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_FRAME                  ZW_ConfigurationBulkReport2byteV2Frame;\
  ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_FRAME                  ZW_ConfigurationBulkReport3byteV2Frame;\
  ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_FRAME                  ZW_ConfigurationBulkReport4byteV2Frame;\
  VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG                        VG_ConfigurationBulkSet1byteV2VGroup;\
  VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG                        VG_ConfigurationBulkSet2byteV2VGroup;\
  VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG                        VG_ConfigurationBulkSet3byteV2VGroup;\
  VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG                        VG_ConfigurationBulkSet4byteV2VGroup;\
  ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAME                     ZW_ConfigurationBulkSet1byteV2Frame;\
  ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAME                     ZW_ConfigurationBulkSet2byteV2Frame;\
  ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAME                     ZW_ConfigurationBulkSet3byteV2Frame;\
  ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAME                     ZW_ConfigurationBulkSet4byteV2Frame;\
  ZW_CONFIGURATION_GET_V2_FRAME                                ZW_ConfigurationGetV2Frame;\
  ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME                       ZW_ConfigurationReport1byteV2Frame;\
  ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME                       ZW_ConfigurationReport2byteV2Frame;\
  ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME                       ZW_ConfigurationReport3byteV2Frame;\
  ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME                       ZW_ConfigurationReport4byteV2Frame;\
  ZW_CONFIGURATION_SET_1BYTE_V2_FRAME                          ZW_ConfigurationSet1byteV2Frame;\
  ZW_CONFIGURATION_SET_2BYTE_V2_FRAME                          ZW_ConfigurationSet2byteV2Frame;\
  ZW_CONFIGURATION_SET_3BYTE_V2_FRAME                          ZW_ConfigurationSet3byteV2Frame;\
  ZW_CONFIGURATION_SET_4BYTE_V2_FRAME                          ZW_ConfigurationSet4byteV2Frame;\
/* Command class Configuration V3 */\
  ZW_CONFIGURATION_BULK_GET_V3_FRAME                           ZW_ConfigurationBulkGetV3Frame;\
  VG_CONFIGURATION_BULK_REPORT_1BYTE_V3_VG                     VG_ConfigurationBulkReport1byteV3VGroup;\
  VG_CONFIGURATION_BULK_REPORT_2BYTE_V3_VG                     VG_ConfigurationBulkReport2byteV3VGroup;\
  VG_CONFIGURATION_BULK_REPORT_3BYTE_V3_VG                     VG_ConfigurationBulkReport3byteV3VGroup;\
  VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG                     VG_ConfigurationBulkReport4byteV3VGroup;\
  ZW_CONFIGURATION_BULK_REPORT_1BYTE_V3_FRAME                  ZW_ConfigurationBulkReport1byteV3Frame;\
  ZW_CONFIGURATION_BULK_REPORT_2BYTE_V3_FRAME                  ZW_ConfigurationBulkReport2byteV3Frame;\
  ZW_CONFIGURATION_BULK_REPORT_3BYTE_V3_FRAME                  ZW_ConfigurationBulkReport3byteV3Frame;\
  ZW_CONFIGURATION_BULK_REPORT_4BYTE_V3_FRAME                  ZW_ConfigurationBulkReport4byteV3Frame;\
  VG_CONFIGURATION_BULK_SET_1BYTE_V3_VG                        VG_ConfigurationBulkSet1byteV3VGroup;\
  VG_CONFIGURATION_BULK_SET_2BYTE_V3_VG                        VG_ConfigurationBulkSet2byteV3VGroup;\
  VG_CONFIGURATION_BULK_SET_3BYTE_V3_VG                        VG_ConfigurationBulkSet3byteV3VGroup;\

#define ZW_FRAME_COLLECTION_MACRO1\
  VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG                        VG_ConfigurationBulkSet4byteV3VGroup;\
  ZW_CONFIGURATION_BULK_SET_1BYTE_V3_FRAME                     ZW_ConfigurationBulkSet1byteV3Frame;\
  ZW_CONFIGURATION_BULK_SET_2BYTE_V3_FRAME                     ZW_ConfigurationBulkSet2byteV3Frame;\
  ZW_CONFIGURATION_BULK_SET_3BYTE_V3_FRAME                     ZW_ConfigurationBulkSet3byteV3Frame;\
  ZW_CONFIGURATION_BULK_SET_4BYTE_V3_FRAME                     ZW_ConfigurationBulkSet4byteV3Frame;\
  ZW_CONFIGURATION_GET_V3_FRAME                                ZW_ConfigurationGetV3Frame;\
  ZW_CONFIGURATION_REPORT_1BYTE_V3_FRAME                       ZW_ConfigurationReport1byteV3Frame;\
  ZW_CONFIGURATION_REPORT_2BYTE_V3_FRAME                       ZW_ConfigurationReport2byteV3Frame;\
  ZW_CONFIGURATION_REPORT_3BYTE_V3_FRAME                       ZW_ConfigurationReport3byteV3Frame;\
  ZW_CONFIGURATION_REPORT_4BYTE_V3_FRAME                       ZW_ConfigurationReport4byteV3Frame;\
  ZW_CONFIGURATION_SET_1BYTE_V3_FRAME                          ZW_ConfigurationSet1byteV3Frame;\
  ZW_CONFIGURATION_SET_2BYTE_V3_FRAME                          ZW_ConfigurationSet2byteV3Frame;\
  ZW_CONFIGURATION_SET_3BYTE_V3_FRAME                          ZW_ConfigurationSet3byteV3Frame;\
  ZW_CONFIGURATION_SET_4BYTE_V3_FRAME                          ZW_ConfigurationSet4byteV3Frame;\
  ZW_CONFIGURATION_NAME_GET_V3_FRAME                           ZW_ConfigurationNameGetV3Frame;\
  ZW_CONFIGURATION_NAME_REPORT_1BYTE_V3_FRAME                  ZW_ConfigurationNameReport1byteV3Frame;\
  ZW_CONFIGURATION_NAME_REPORT_2BYTE_V3_FRAME                  ZW_ConfigurationNameReport2byteV3Frame;\
  ZW_CONFIGURATION_NAME_REPORT_3BYTE_V3_FRAME                  ZW_ConfigurationNameReport3byteV3Frame;\
  ZW_CONFIGURATION_NAME_REPORT_4BYTE_V3_FRAME                  ZW_ConfigurationNameReport4byteV3Frame;\
  ZW_CONFIGURATION_INFO_GET_V3_FRAME                           ZW_ConfigurationInfoGetV3Frame;\
  ZW_CONFIGURATION_INFO_REPORT_1BYTE_V3_FRAME                  ZW_ConfigurationInfoReport1byteV3Frame;\
  ZW_CONFIGURATION_INFO_REPORT_2BYTE_V3_FRAME                  ZW_ConfigurationInfoReport2byteV3Frame;\
  ZW_CONFIGURATION_INFO_REPORT_3BYTE_V3_FRAME                  ZW_ConfigurationInfoReport3byteV3Frame;\
  ZW_CONFIGURATION_INFO_REPORT_4BYTE_V3_FRAME                  ZW_ConfigurationInfoReport4byteV3Frame;\
  ZW_CONFIGURATION_PROPERTIES_GET_V3_FRAME                     ZW_ConfigurationPropertiesGetV3Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_1BYTE_V3_FRAME            ZW_ConfigurationPropertiesReport1byteV3Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_2BYTE_V3_FRAME            ZW_ConfigurationPropertiesReport2byteV3Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_3BYTE_V3_FRAME            ZW_ConfigurationPropertiesReport3byteV3Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_4BYTE_V3_FRAME            ZW_ConfigurationPropertiesReport4byteV3Frame;\
/* Command class Configuration V4 */\
  ZW_CONFIGURATION_BULK_GET_V4_FRAME                           ZW_ConfigurationBulkGetV4Frame;\
  VG_CONFIGURATION_BULK_REPORT_1BYTE_V4_VG                     VG_ConfigurationBulkReport1byteV4VGroup;\
  VG_CONFIGURATION_BULK_REPORT_2BYTE_V4_VG                     VG_ConfigurationBulkReport2byteV4VGroup;\
  VG_CONFIGURATION_BULK_REPORT_3BYTE_V4_VG                     VG_ConfigurationBulkReport3byteV4VGroup;\
  VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG                     VG_ConfigurationBulkReport4byteV4VGroup;\
  ZW_CONFIGURATION_BULK_REPORT_1BYTE_V4_FRAME                  ZW_ConfigurationBulkReport1byteV4Frame;\
  ZW_CONFIGURATION_BULK_REPORT_2BYTE_V4_FRAME                  ZW_ConfigurationBulkReport2byteV4Frame;\
  ZW_CONFIGURATION_BULK_REPORT_3BYTE_V4_FRAME                  ZW_ConfigurationBulkReport3byteV4Frame;\
  ZW_CONFIGURATION_BULK_REPORT_4BYTE_V4_FRAME                  ZW_ConfigurationBulkReport4byteV4Frame;\
  VG_CONFIGURATION_BULK_SET_1BYTE_V4_VG                        VG_ConfigurationBulkSet1byteV4VGroup;\
  VG_CONFIGURATION_BULK_SET_2BYTE_V4_VG                        VG_ConfigurationBulkSet2byteV4VGroup;\
  VG_CONFIGURATION_BULK_SET_3BYTE_V4_VG                        VG_ConfigurationBulkSet3byteV4VGroup;\
  VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG                        VG_ConfigurationBulkSet4byteV4VGroup;\
  ZW_CONFIGURATION_BULK_SET_1BYTE_V4_FRAME                     ZW_ConfigurationBulkSet1byteV4Frame;\
  ZW_CONFIGURATION_BULK_SET_2BYTE_V4_FRAME                     ZW_ConfigurationBulkSet2byteV4Frame;\
  ZW_CONFIGURATION_BULK_SET_3BYTE_V4_FRAME                     ZW_ConfigurationBulkSet3byteV4Frame;\
  ZW_CONFIGURATION_BULK_SET_4BYTE_V4_FRAME                     ZW_ConfigurationBulkSet4byteV4Frame;\
  ZW_CONFIGURATION_GET_V4_FRAME                                ZW_ConfigurationGetV4Frame;\
  ZW_CONFIGURATION_REPORT_1BYTE_V4_FRAME                       ZW_ConfigurationReport1byteV4Frame;\
  ZW_CONFIGURATION_REPORT_2BYTE_V4_FRAME                       ZW_ConfigurationReport2byteV4Frame;\
  ZW_CONFIGURATION_REPORT_3BYTE_V4_FRAME                       ZW_ConfigurationReport3byteV4Frame;\
  ZW_CONFIGURATION_REPORT_4BYTE_V4_FRAME                       ZW_ConfigurationReport4byteV4Frame;\
  ZW_CONFIGURATION_SET_1BYTE_V4_FRAME                          ZW_ConfigurationSet1byteV4Frame;\
  ZW_CONFIGURATION_SET_2BYTE_V4_FRAME                          ZW_ConfigurationSet2byteV4Frame;\
  ZW_CONFIGURATION_SET_3BYTE_V4_FRAME                          ZW_ConfigurationSet3byteV4Frame;\
  ZW_CONFIGURATION_SET_4BYTE_V4_FRAME                          ZW_ConfigurationSet4byteV4Frame;\
  ZW_CONFIGURATION_NAME_GET_V4_FRAME                           ZW_ConfigurationNameGetV4Frame;\
  ZW_CONFIGURATION_NAME_REPORT_1BYTE_V4_FRAME                  ZW_ConfigurationNameReport1byteV4Frame;\
  ZW_CONFIGURATION_NAME_REPORT_2BYTE_V4_FRAME                  ZW_ConfigurationNameReport2byteV4Frame;\
  ZW_CONFIGURATION_NAME_REPORT_3BYTE_V4_FRAME                  ZW_ConfigurationNameReport3byteV4Frame;\
  ZW_CONFIGURATION_NAME_REPORT_4BYTE_V4_FRAME                  ZW_ConfigurationNameReport4byteV4Frame;\
  ZW_CONFIGURATION_INFO_GET_V4_FRAME                           ZW_ConfigurationInfoGetV4Frame;\
  ZW_CONFIGURATION_INFO_REPORT_1BYTE_V4_FRAME                  ZW_ConfigurationInfoReport1byteV4Frame;\
  ZW_CONFIGURATION_INFO_REPORT_2BYTE_V4_FRAME                  ZW_ConfigurationInfoReport2byteV4Frame;\
  ZW_CONFIGURATION_INFO_REPORT_3BYTE_V4_FRAME                  ZW_ConfigurationInfoReport3byteV4Frame;\
  ZW_CONFIGURATION_INFO_REPORT_4BYTE_V4_FRAME                  ZW_ConfigurationInfoReport4byteV4Frame;\
  ZW_CONFIGURATION_PROPERTIES_GET_V4_FRAME                     ZW_ConfigurationPropertiesGetV4Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_1BYTE_V4_FRAME            ZW_ConfigurationPropertiesReport1byteV4Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_2BYTE_V4_FRAME            ZW_ConfigurationPropertiesReport2byteV4Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_3BYTE_V4_FRAME            ZW_ConfigurationPropertiesReport3byteV4Frame;\
  ZW_CONFIGURATION_PROPERTIES_REPORT_4BYTE_V4_FRAME            ZW_ConfigurationPropertiesReport4byteV4Frame;\
  ZW_CONFIGURATION_DEFAULT_RESET_V4_FRAME                      ZW_ConfigurationDefaultResetV4Frame;\
/* Command class Controller Replication */\
  ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAME                     ZW_CtrlReplicationTransferGroupFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_1BYTE_FRAME          ZW_CtrlReplicationTransferGroupName1byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_2BYTE_FRAME          ZW_CtrlReplicationTransferGroupName2byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_3BYTE_FRAME          ZW_CtrlReplicationTransferGroupName3byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_4BYTE_FRAME          ZW_CtrlReplicationTransferGroupName4byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAME                     ZW_CtrlReplicationTransferSceneFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_1BYTE_FRAME          ZW_CtrlReplicationTransferSceneName1byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_2BYTE_FRAME          ZW_CtrlReplicationTransferSceneName2byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_3BYTE_FRAME          ZW_CtrlReplicationTransferSceneName3byteFrame;\
  ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_4BYTE_FRAME          ZW_CtrlReplicationTransferSceneName4byteFrame;\
/* Command class Dcp Config */\
  ZW_DCP_LIST_REMOVE_FRAME                                     ZW_DcpListRemoveFrame;\
  VG_DCP_LIST_SET_VG                                           VG_DcpListSetVGroup;\
  ZW_DCP_LIST_SET_1BYTE_FRAME                                  ZW_DcpListSet1byteFrame;\
  ZW_DCP_LIST_SET_2BYTE_FRAME                                  ZW_DcpListSet2byteFrame;\
  ZW_DCP_LIST_SET_3BYTE_FRAME                                  ZW_DcpListSet3byteFrame;\
  ZW_DCP_LIST_SET_4BYTE_FRAME                                  ZW_DcpListSet4byteFrame;\
  ZW_DCP_LIST_SUPPORTED_GET_FRAME                              ZW_DcpListSupportedGetFrame;\
  ZW_DCP_LIST_SUPPORTED_REPORT_FRAME                           ZW_DcpListSupportedReportFrame;\
/* Command class Dcp Monitor */\
  ZW_DCP_EVENT_STATUS_GET_FRAME                                ZW_DcpEventStatusGetFrame;\
  ZW_DCP_EVENT_STATUS_REPORT_FRAME                             ZW_DcpEventStatusReportFrame;\
  ZW_DCP_LIST_GET_FRAME                                        ZW_DcpListGetFrame;\
  VG_DCP_LIST_REPORT_VG                                        VG_DcpListReportVGroup;\
  ZW_DCP_LIST_REPORT_1BYTE_FRAME                               ZW_DcpListReport1byteFrame;\
  ZW_DCP_LIST_REPORT_2BYTE_FRAME                               ZW_DcpListReport2byteFrame;\
  ZW_DCP_LIST_REPORT_3BYTE_FRAME                               ZW_DcpListReport3byteFrame;\
  ZW_DCP_LIST_REPORT_4BYTE_FRAME                               ZW_DcpListReport4byteFrame;\
/* Command class Door Lock Logging */\
  ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET_FRAME             ZW_DoorLockLoggingRecordsSupportedGetFrame;\
  ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT_FRAME          ZW_DoorLockLoggingRecordsSupportedReportFrame;\
  ZW_RECORD_GET_FRAME                                          ZW_RecordGetFrame;\
  ZW_RECORD_REPORT_1BYTE_FRAME                                 ZW_RecordReport1byteFrame;\
  ZW_RECORD_REPORT_2BYTE_FRAME                                 ZW_RecordReport2byteFrame;\
  ZW_RECORD_REPORT_3BYTE_FRAME                                 ZW_RecordReport3byteFrame;\
  ZW_RECORD_REPORT_4BYTE_FRAME                                 ZW_RecordReport4byteFrame;\
/* Command class Door Lock */\
  ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME                         ZW_DoorLockConfigurationGetFrame;\
  ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME                      ZW_DoorLockConfigurationReportFrame;\
  ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME                         ZW_DoorLockConfigurationSetFrame;\
  ZW_DOOR_LOCK_OPERATION_GET_FRAME                             ZW_DoorLockOperationGetFrame;\
  ZW_DOOR_LOCK_OPERATION_REPORT_FRAME                          ZW_DoorLockOperationReportFrame;\
  ZW_DOOR_LOCK_OPERATION_SET_FRAME                             ZW_DoorLockOperationSetFrame;\
/* Command class Door Lock V2 */\
  ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME                      ZW_DoorLockConfigurationGetV2Frame;\
  ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_FRAME                   ZW_DoorLockConfigurationReportV2Frame;\
  ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME                      ZW_DoorLockConfigurationSetV2Frame;\
  ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME                          ZW_DoorLockOperationGetV2Frame;\
  ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME                       ZW_DoorLockOperationReportV2Frame;\
  ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME                          ZW_DoorLockOperationSetV2Frame;\
/* Command class Door Lock V3 */\
  ZW_DOOR_LOCK_CONFIGURATION_GET_V3_FRAME                      ZW_DoorLockConfigurationGetV3Frame;\
  ZW_DOOR_LOCK_CONFIGURATION_REPORT_V3_FRAME                   ZW_DoorLockConfigurationReportV3Frame;\
  ZW_DOOR_LOCK_CONFIGURATION_SET_V3_FRAME                      ZW_DoorLockConfigurationSetV3Frame;\
  ZW_DOOR_LOCK_OPERATION_GET_V3_FRAME                          ZW_DoorLockOperationGetV3Frame;\
  ZW_DOOR_LOCK_OPERATION_REPORT_V3_FRAME                       ZW_DoorLockOperationReportV3Frame;\
  ZW_DOOR_LOCK_OPERATION_SET_V3_FRAME                          ZW_DoorLockOperationSetV3Frame;\
/* Command class Door Lock V4 */\
  ZW_DOOR_LOCK_CONFIGURATION_GET_V4_FRAME                      ZW_DoorLockConfigurationGetV4Frame;\
  ZW_DOOR_LOCK_CONFIGURATION_REPORT_V4_FRAME                   ZW_DoorLockConfigurationReportV4Frame;\
  ZW_DOOR_LOCK_CONFIGURATION_SET_V4_FRAME                      ZW_DoorLockConfigurationSetV4Frame;\
  ZW_DOOR_LOCK_OPERATION_GET_V4_FRAME                          ZW_DoorLockOperationGetV4Frame;\
  ZW_DOOR_LOCK_OPERATION_REPORT_V4_FRAME                       ZW_DoorLockOperationReportV4Frame;\
  ZW_DOOR_LOCK_OPERATION_SET_V4_FRAME                          ZW_DoorLockOperationSetV4Frame;\
  ZW_DOOR_LOCK_CAPABILITIES_GET_V4_FRAME                       ZW_DoorLockCapabilitiesGetV4Frame;\
  ZW_DOOR_LOCK_CAPABILITIES_REPORT_1BYTE_V4_FRAME              ZW_DoorLockCapabilitiesReport1byteV4Frame;\
  ZW_DOOR_LOCK_CAPABILITIES_REPORT_2BYTE_V4_FRAME              ZW_DoorLockCapabilitiesReport2byteV4Frame;\
  ZW_DOOR_LOCK_CAPABILITIES_REPORT_3BYTE_V4_FRAME              ZW_DoorLockCapabilitiesReport3byteV4Frame;\
  ZW_DOOR_LOCK_CAPABILITIES_REPORT_4BYTE_V4_FRAME              ZW_DoorLockCapabilitiesReport4byteV4Frame;\
/* Command class Energy Production */\
  ZW_ENERGY_PRODUCTION_GET_FRAME                               ZW_EnergyProductionGetFrame;\
  ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME                      ZW_EnergyProductionReport1byteFrame;\
  ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME                      ZW_EnergyProductionReport2byteFrame;\
  ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME                      ZW_EnergyProductionReport3byteFrame;\
  ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME                      ZW_EnergyProductionReport4byteFrame;\
/* Command class Firmware Update Md */\
  ZW_FIRMWARE_MD_GET_FRAME                                     ZW_FirmwareMdGetFrame;\
  ZW_FIRMWARE_MD_REPORT_FRAME                                  ZW_FirmwareMdReportFrame;\
  ZW_FIRMWARE_UPDATE_MD_GET_FRAME                              ZW_FirmwareUpdateMdGetFrame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAME                     ZW_FirmwareUpdateMdReport1byteFrame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAME                     ZW_FirmwareUpdateMdReport2byteFrame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAME                     ZW_FirmwareUpdateMdReport3byteFrame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAME                     ZW_FirmwareUpdateMdReport4byteFrame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME                      ZW_FirmwareUpdateMdRequestGetFrame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_FRAME                   ZW_FirmwareUpdateMdRequestReportFrame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FRAME                    ZW_FirmwareUpdateMdStatusReportFrame;\
/* Command class Firmware Update Md V2 */\
  ZW_FIRMWARE_MD_GET_V2_FRAME                                  ZW_FirmwareMdGetV2Frame;\
  ZW_FIRMWARE_MD_REPORT_V2_FRAME                               ZW_FirmwareMdReportV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME                           ZW_FirmwareUpdateMdGetV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport1byteV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport2byteV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport3byteV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_FRAME                  ZW_FirmwareUpdateMdReport4byteV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_FRAME                   ZW_FirmwareUpdateMdRequestGetV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2_FRAME                ZW_FirmwareUpdateMdRequestReportV2Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2_FRAME                 ZW_FirmwareUpdateMdStatusReportV2Frame;\
/* Command class Firmware Update Md V3 */\
  ZW_FIRMWARE_MD_GET_V3_FRAME                                  ZW_FirmwareMdGetV3Frame;\
  VG_FIRMWARE_MD_REPORT_V3_VG                                  VG_FirmwareMdReportV3VGroup;\
  ZW_FIRMWARE_MD_REPORT_1BYTE_V3_FRAME                         ZW_FirmwareMdReport1byteV3Frame;\
  ZW_FIRMWARE_MD_REPORT_2BYTE_V3_FRAME                         ZW_FirmwareMdReport2byteV3Frame;\
  ZW_FIRMWARE_MD_REPORT_3BYTE_V3_FRAME                         ZW_FirmwareMdReport3byteV3Frame;\
  ZW_FIRMWARE_MD_REPORT_4BYTE_V3_FRAME                         ZW_FirmwareMdReport4byteV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V3_FRAME                           ZW_FirmwareUpdateMdGetV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V3_FRAME                  ZW_FirmwareUpdateMdReport1byteV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V3_FRAME                  ZW_FirmwareUpdateMdReport2byteV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V3_FRAME                  ZW_FirmwareUpdateMdReport3byteV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V3_FRAME                  ZW_FirmwareUpdateMdReport4byteV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V3_FRAME                   ZW_FirmwareUpdateMdRequestGetV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V3_FRAME                ZW_FirmwareUpdateMdRequestReportV3Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V3_FRAME                 ZW_FirmwareUpdateMdStatusReportV3Frame;\
/* Command class Firmware Update Md V4 */\
  ZW_FIRMWARE_MD_GET_V4_FRAME                                  ZW_FirmwareMdGetV4Frame;\
  VG_FIRMWARE_MD_REPORT_V4_VG                                  VG_FirmwareMdReportV4VGroup;\
  ZW_FIRMWARE_MD_REPORT_1BYTE_V4_FRAME                         ZW_FirmwareMdReport1byteV4Frame;\
  ZW_FIRMWARE_MD_REPORT_2BYTE_V4_FRAME                         ZW_FirmwareMdReport2byteV4Frame;\
  ZW_FIRMWARE_MD_REPORT_3BYTE_V4_FRAME                         ZW_FirmwareMdReport3byteV4Frame;\
  ZW_FIRMWARE_MD_REPORT_4BYTE_V4_FRAME                         ZW_FirmwareMdReport4byteV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V4_FRAME                           ZW_FirmwareUpdateMdGetV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V4_FRAME                  ZW_FirmwareUpdateMdReport1byteV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V4_FRAME                  ZW_FirmwareUpdateMdReport2byteV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V4_FRAME                  ZW_FirmwareUpdateMdReport3byteV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V4_FRAME                  ZW_FirmwareUpdateMdReport4byteV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V4_FRAME                   ZW_FirmwareUpdateMdRequestGetV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V4_FRAME                ZW_FirmwareUpdateMdRequestReportV4Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V4_FRAME                 ZW_FirmwareUpdateMdStatusReportV4Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V4_FRAME                   ZW_FirmwareUpdateActivationSetV4Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V4_FRAME         ZW_FirmwareUpdateActivationStatusReportV4Frame;\
/* Command class Firmware Update Md V5 */\
  ZW_FIRMWARE_MD_GET_V5_FRAME                                  ZW_FirmwareMdGetV5Frame;\
  VG_FIRMWARE_MD_REPORT_V5_VG                                  VG_FirmwareMdReportV5VGroup;\
  ZW_FIRMWARE_MD_REPORT_1BYTE_V5_FRAME                         ZW_FirmwareMdReport1byteV5Frame;\
  ZW_FIRMWARE_MD_REPORT_2BYTE_V5_FRAME                         ZW_FirmwareMdReport2byteV5Frame;\
  ZW_FIRMWARE_MD_REPORT_3BYTE_V5_FRAME                         ZW_FirmwareMdReport3byteV5Frame;\
  ZW_FIRMWARE_MD_REPORT_4BYTE_V5_FRAME                         ZW_FirmwareMdReport4byteV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V5_FRAME                           ZW_FirmwareUpdateMdGetV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V5_FRAME                  ZW_FirmwareUpdateMdReport1byteV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V5_FRAME                  ZW_FirmwareUpdateMdReport2byteV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V5_FRAME                  ZW_FirmwareUpdateMdReport3byteV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V5_FRAME                  ZW_FirmwareUpdateMdReport4byteV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V5_FRAME                   ZW_FirmwareUpdateMdRequestGetV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V5_FRAME                ZW_FirmwareUpdateMdRequestReportV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V5_FRAME                 ZW_FirmwareUpdateMdStatusReportV5Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V5_FRAME                   ZW_FirmwareUpdateActivationSetV5Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V5_FRAME         ZW_FirmwareUpdateActivationStatusReportV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V5_FRAME                   ZW_FirmwareUpdateMdPrepareGetV5Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V5_FRAME                ZW_FirmwareUpdateMdPrepareReportV5Frame;\
/* Command class Firmware Update Md V6 */\
  ZW_FIRMWARE_MD_GET_V6_FRAME                                  ZW_FirmwareMdGetV6Frame;\
  VG_FIRMWARE_MD_REPORT_V6_VG                                  VG_FirmwareMdReportV6VGroup;\
  ZW_FIRMWARE_MD_REPORT_1BYTE_V6_FRAME                         ZW_FirmwareMdReport1byteV6Frame;\
  ZW_FIRMWARE_MD_REPORT_2BYTE_V6_FRAME                         ZW_FirmwareMdReport2byteV6Frame;\
  ZW_FIRMWARE_MD_REPORT_3BYTE_V6_FRAME                         ZW_FirmwareMdReport3byteV6Frame;\
  ZW_FIRMWARE_MD_REPORT_4BYTE_V6_FRAME                         ZW_FirmwareMdReport4byteV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V6_FRAME                           ZW_FirmwareUpdateMdGetV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V6_FRAME                  ZW_FirmwareUpdateMdReport1byteV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V6_FRAME                  ZW_FirmwareUpdateMdReport2byteV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V6_FRAME                  ZW_FirmwareUpdateMdReport3byteV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V6_FRAME                  ZW_FirmwareUpdateMdReport4byteV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V6_FRAME                   ZW_FirmwareUpdateMdRequestGetV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V6_FRAME                ZW_FirmwareUpdateMdRequestReportV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V6_FRAME                 ZW_FirmwareUpdateMdStatusReportV6Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V6_FRAME                   ZW_FirmwareUpdateActivationSetV6Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V6_FRAME         ZW_FirmwareUpdateActivationStatusReportV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V6_FRAME                   ZW_FirmwareUpdateMdPrepareGetV6Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V6_FRAME                ZW_FirmwareUpdateMdPrepareReportV6Frame;\
/* Command class Firmware Update Md V7 */\
  ZW_FIRMWARE_MD_GET_V7_FRAME                                  ZW_FirmwareMdGetV7Frame;\
  VG_FIRMWARE_MD_REPORT_V7_VG                                  VG_FirmwareMdReportV7VGroup;\
  ZW_FIRMWARE_MD_REPORT_1BYTE_V7_FRAME                         ZW_FirmwareMdReport1byteV7Frame;\
  ZW_FIRMWARE_MD_REPORT_2BYTE_V7_FRAME                         ZW_FirmwareMdReport2byteV7Frame;\
  ZW_FIRMWARE_MD_REPORT_3BYTE_V7_FRAME                         ZW_FirmwareMdReport3byteV7Frame;\
  ZW_FIRMWARE_MD_REPORT_4BYTE_V7_FRAME                         ZW_FirmwareMdReport4byteV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V7_FRAME                           ZW_FirmwareUpdateMdGetV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V7_FRAME                  ZW_FirmwareUpdateMdReport1byteV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V7_FRAME                  ZW_FirmwareUpdateMdReport2byteV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V7_FRAME                  ZW_FirmwareUpdateMdReport3byteV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V7_FRAME                  ZW_FirmwareUpdateMdReport4byteV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V7_FRAME                   ZW_FirmwareUpdateMdRequestGetV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V7_FRAME                ZW_FirmwareUpdateMdRequestReportV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V7_FRAME                 ZW_FirmwareUpdateMdStatusReportV7Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V7_FRAME                   ZW_FirmwareUpdateActivationSetV7Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V7_FRAME         ZW_FirmwareUpdateActivationStatusReportV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V7_FRAME                   ZW_FirmwareUpdateMdPrepareGetV7Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V7_FRAME                ZW_FirmwareUpdateMdPrepareReportV7Frame;\
/* Command class Firmware Update Md V8 */\
  ZW_FIRMWARE_MD_GET_V8_FRAME                                  ZW_FirmwareMdGetV8Frame;\
  VG_FIRMWARE_MD_REPORT_V8_VG                                  VG_FirmwareMdReportV8VGroup;\
  ZW_FIRMWARE_MD_REPORT_1BYTE_V8_FRAME                         ZW_FirmwareMdReport1byteV8Frame;\
  ZW_FIRMWARE_MD_REPORT_2BYTE_V8_FRAME                         ZW_FirmwareMdReport2byteV8Frame;\
  ZW_FIRMWARE_MD_REPORT_3BYTE_V8_FRAME                         ZW_FirmwareMdReport3byteV8Frame;\
  ZW_FIRMWARE_MD_REPORT_4BYTE_V8_FRAME                         ZW_FirmwareMdReport4byteV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_GET_V8_FRAME                           ZW_FirmwareUpdateMdGetV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V8_FRAME                  ZW_FirmwareUpdateMdReport1byteV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V8_FRAME                  ZW_FirmwareUpdateMdReport2byteV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V8_FRAME                  ZW_FirmwareUpdateMdReport3byteV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V8_FRAME                  ZW_FirmwareUpdateMdReport4byteV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V8_FRAME                   ZW_FirmwareUpdateMdRequestGetV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V8_FRAME                ZW_FirmwareUpdateMdRequestReportV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V8_FRAME                 ZW_FirmwareUpdateMdStatusReportV8Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V8_FRAME                   ZW_FirmwareUpdateActivationSetV8Frame;\
  ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V8_FRAME         ZW_FirmwareUpdateActivationStatusReportV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V8_FRAME                   ZW_FirmwareUpdateMdPrepareGetV8Frame;\
  ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V8_FRAME                ZW_FirmwareUpdateMdPrepareReportV8Frame;\
/* Command class Geographic Location */\
  ZW_GEOGRAPHIC_LOCATION_GET_FRAME                             ZW_GeographicLocationGetFrame;\
  ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME                          ZW_GeographicLocationReportFrame;\
  ZW_GEOGRAPHIC_LOCATION_SET_FRAME                             ZW_GeographicLocationSetFrame;\
/* Command class Grouping Name */\
  ZW_GROUPING_NAME_GET_FRAME                                   ZW_GroupingNameGetFrame;\
  ZW_GROUPING_NAME_REPORT_FRAME                                ZW_GroupingNameReportFrame;\
  ZW_GROUPING_NAME_SET_FRAME                                   ZW_GroupingNameSetFrame;\
/* Command class Hail */\
  ZW_HAIL_FRAME                                                ZW_HailFrame;\
/* Command class Hrv Control */\
  ZW_HRV_CONTROL_BYPASS_GET_FRAME                              ZW_HrvControlBypassGetFrame;\
  ZW_HRV_CONTROL_BYPASS_REPORT_FRAME                           ZW_HrvControlBypassReportFrame;\
  ZW_HRV_CONTROL_BYPASS_SET_FRAME                              ZW_HrvControlBypassSetFrame;\
  ZW_HRV_CONTROL_MODE_GET_FRAME                                ZW_HrvControlModeGetFrame;\
  ZW_HRV_CONTROL_MODE_REPORT_FRAME                             ZW_HrvControlModeReportFrame;\
  ZW_HRV_CONTROL_MODE_SET_FRAME                                ZW_HrvControlModeSetFrame;\
  ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME                      ZW_HrvControlModeSupportedGetFrame;\
  ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1BYTE_FRAME             ZW_HrvControlModeSupportedReport1byteFrame;\
  ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2BYTE_FRAME             ZW_HrvControlModeSupportedReport2byteFrame;\
  ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3BYTE_FRAME             ZW_HrvControlModeSupportedReport3byteFrame;\
  ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4BYTE_FRAME             ZW_HrvControlModeSupportedReport4byteFrame;\
  ZW_HRV_CONTROL_VENTILATION_RATE_GET_FRAME                    ZW_HrvControlVentilationRateGetFrame;\
  ZW_HRV_CONTROL_VENTILATION_RATE_REPORT_FRAME                 ZW_HrvControlVentilationRateReportFrame;\
  ZW_HRV_CONTROL_VENTILATION_RATE_SET_FRAME                    ZW_HrvControlVentilationRateSetFrame;\
/* Command class Hrv Status */\
  ZW_HRV_STATUS_GET_FRAME                                      ZW_HrvStatusGetFrame;\
  ZW_HRV_STATUS_REPORT_1BYTE_FRAME                             ZW_HrvStatusReport1byteFrame;\
  ZW_HRV_STATUS_REPORT_2BYTE_FRAME                             ZW_HrvStatusReport2byteFrame;\
  ZW_HRV_STATUS_REPORT_3BYTE_FRAME                             ZW_HrvStatusReport3byteFrame;\
  ZW_HRV_STATUS_REPORT_4BYTE_FRAME                             ZW_HrvStatusReport4byteFrame;\
  ZW_HRV_STATUS_SUPPORTED_GET_FRAME                            ZW_HrvStatusSupportedGetFrame;\
  ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_FRAME                   ZW_HrvStatusSupportedReport1byteFrame;\
  ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_FRAME                   ZW_HrvStatusSupportedReport2byteFrame;\
  ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_FRAME                   ZW_HrvStatusSupportedReport3byteFrame;\
  ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_FRAME                   ZW_HrvStatusSupportedReport4byteFrame;\
/* Command class Indicator */\
  ZW_INDICATOR_GET_FRAME                                       ZW_IndicatorGetFrame;\
  ZW_INDICATOR_REPORT_FRAME                                    ZW_IndicatorReportFrame;\
  ZW_INDICATOR_SET_FRAME                                       ZW_IndicatorSetFrame;\
/* Command class Indicator V2 */\
  ZW_INDICATOR_GET_V2_FRAME                                    ZW_IndicatorGetV2Frame;\
  VG_INDICATOR_REPORT_V2_VG                                    VG_IndicatorReportV2VGroup;\
  ZW_INDICATOR_REPORT_1BYTE_V2_FRAME                           ZW_IndicatorReport1byteV2Frame;\
  ZW_INDICATOR_REPORT_2BYTE_V2_FRAME                           ZW_IndicatorReport2byteV2Frame;\
  ZW_INDICATOR_REPORT_3BYTE_V2_FRAME                           ZW_IndicatorReport3byteV2Frame;\
  ZW_INDICATOR_REPORT_4BYTE_V2_FRAME                           ZW_IndicatorReport4byteV2Frame;\
  VG_INDICATOR_SET_V2_VG                                       VG_IndicatorSetV2VGroup;\
  ZW_INDICATOR_SET_1BYTE_V2_FRAME                              ZW_IndicatorSet1byteV2Frame;\
  ZW_INDICATOR_SET_2BYTE_V2_FRAME                              ZW_IndicatorSet2byteV2Frame;\
  ZW_INDICATOR_SET_3BYTE_V2_FRAME                              ZW_IndicatorSet3byteV2Frame;\
  ZW_INDICATOR_SET_4BYTE_V2_FRAME                              ZW_IndicatorSet4byteV2Frame;\
  ZW_INDICATOR_SUPPORTED_GET_V2_FRAME                          ZW_IndicatorSupportedGetV2Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V2_FRAME                 ZW_IndicatorSupportedReport1byteV2Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V2_FRAME                 ZW_IndicatorSupportedReport2byteV2Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V2_FRAME                 ZW_IndicatorSupportedReport3byteV2Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V2_FRAME                 ZW_IndicatorSupportedReport4byteV2Frame;\
/* Command class Indicator V3 */\
  ZW_INDICATOR_GET_V3_FRAME                                    ZW_IndicatorGetV3Frame;\
  VG_INDICATOR_REPORT_V3_VG                                    VG_IndicatorReportV3VGroup;\
  ZW_INDICATOR_REPORT_1BYTE_V3_FRAME                           ZW_IndicatorReport1byteV3Frame;\
  ZW_INDICATOR_REPORT_2BYTE_V3_FRAME                           ZW_IndicatorReport2byteV3Frame;\
  ZW_INDICATOR_REPORT_3BYTE_V3_FRAME                           ZW_IndicatorReport3byteV3Frame;\
  ZW_INDICATOR_REPORT_4BYTE_V3_FRAME                           ZW_IndicatorReport4byteV3Frame;\
  VG_INDICATOR_SET_V3_VG                                       VG_IndicatorSetV3VGroup;\
  ZW_INDICATOR_SET_1BYTE_V3_FRAME                              ZW_IndicatorSet1byteV3Frame;\
  ZW_INDICATOR_SET_2BYTE_V3_FRAME                              ZW_IndicatorSet2byteV3Frame;\
  ZW_INDICATOR_SET_3BYTE_V3_FRAME                              ZW_IndicatorSet3byteV3Frame;\
  ZW_INDICATOR_SET_4BYTE_V3_FRAME                              ZW_IndicatorSet4byteV3Frame;\
  ZW_INDICATOR_SUPPORTED_GET_V3_FRAME                          ZW_IndicatorSupportedGetV3Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V3_FRAME                 ZW_IndicatorSupportedReport1byteV3Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V3_FRAME                 ZW_IndicatorSupportedReport2byteV3Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V3_FRAME                 ZW_IndicatorSupportedReport3byteV3Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V3_FRAME                 ZW_IndicatorSupportedReport4byteV3Frame;\
/* Command class Indicator V4 */\
  ZW_INDICATOR_GET_V4_FRAME                                    ZW_IndicatorGetV4Frame;\
  VG_INDICATOR_REPORT_V4_VG                                    VG_IndicatorReportV4VGroup;\
  ZW_INDICATOR_REPORT_1BYTE_V4_FRAME                           ZW_IndicatorReport1byteV4Frame;\
  ZW_INDICATOR_REPORT_2BYTE_V4_FRAME                           ZW_IndicatorReport2byteV4Frame;\
  ZW_INDICATOR_REPORT_3BYTE_V4_FRAME                           ZW_IndicatorReport3byteV4Frame;\
  ZW_INDICATOR_REPORT_4BYTE_V4_FRAME                           ZW_IndicatorReport4byteV4Frame;\
  VG_INDICATOR_SET_V4_VG                                       VG_IndicatorSetV4VGroup;\
  ZW_INDICATOR_SET_1BYTE_V4_FRAME                              ZW_IndicatorSet1byteV4Frame;\
  ZW_INDICATOR_SET_2BYTE_V4_FRAME                              ZW_IndicatorSet2byteV4Frame;\
  ZW_INDICATOR_SET_3BYTE_V4_FRAME                              ZW_IndicatorSet3byteV4Frame;\
  ZW_INDICATOR_SET_4BYTE_V4_FRAME                              ZW_IndicatorSet4byteV4Frame;\
  ZW_INDICATOR_SUPPORTED_GET_V4_FRAME                          ZW_IndicatorSupportedGetV4Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V4_FRAME                 ZW_IndicatorSupportedReport1byteV4Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V4_FRAME                 ZW_IndicatorSupportedReport2byteV4Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V4_FRAME                 ZW_IndicatorSupportedReport3byteV4Frame;\
  ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V4_FRAME                 ZW_IndicatorSupportedReport4byteV4Frame;\
  ZW_INDICATOR_DESCRIPTION_GET_V4_FRAME                        ZW_IndicatorDescriptionGetV4Frame;\
  ZW_INDICATOR_DESCRIPTION_REPORT_1BYTE_V4_FRAME               ZW_IndicatorDescriptionReport1byteV4Frame;\
  ZW_INDICATOR_DESCRIPTION_REPORT_2BYTE_V4_FRAME               ZW_IndicatorDescriptionReport2byteV4Frame;\
  ZW_INDICATOR_DESCRIPTION_REPORT_3BYTE_V4_FRAME               ZW_IndicatorDescriptionReport3byteV4Frame;\
  ZW_INDICATOR_DESCRIPTION_REPORT_4BYTE_V4_FRAME               ZW_IndicatorDescriptionReport4byteV4Frame;\
/* Command class Ip Configuration */\
  ZW_IP_CONFIGURATION_GET_FRAME                                ZW_IpConfigurationGetFrame;\
  ZW_IP_CONFIGURATION_RELEASE_FRAME                            ZW_IpConfigurationReleaseFrame;\
  ZW_IP_CONFIGURATION_RENEW_FRAME                              ZW_IpConfigurationRenewFrame;\
  ZW_IP_CONFIGURATION_REPORT_FRAME                             ZW_IpConfigurationReportFrame;\
  ZW_IP_CONFIGURATION_SET_FRAME                                ZW_IpConfigurationSetFrame;\
/* Command class Language */\
  ZW_LANGUAGE_GET_FRAME                                        ZW_LanguageGetFrame;\
  ZW_LANGUAGE_REPORT_FRAME                                     ZW_LanguageReportFrame;\
  ZW_LANGUAGE_SET_FRAME                                        ZW_LanguageSetFrame;\
/* Command class Manufacturer Specific */\
  ZW_MANUFACTURER_SPECIFIC_GET_FRAME                           ZW_ManufacturerSpecificGetFrame;\
  ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME                        ZW_ManufacturerSpecificReportFrame;\
/* Command class Manufacturer Specific V2 */\
  ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME                        ZW_ManufacturerSpecificGetV2Frame;\
  ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAME                     ZW_ManufacturerSpecificReportV2Frame;\
  ZW_DEVICE_SPECIFIC_GET_V2_FRAME                              ZW_DeviceSpecificGetV2Frame;\
  ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAME                     ZW_DeviceSpecificReport1byteV2Frame;\
  ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAME                     ZW_DeviceSpecificReport2byteV2Frame;\
  ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAME                     ZW_DeviceSpecificReport3byteV2Frame;\
  ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAME                     ZW_DeviceSpecificReport4byteV2Frame;\
/* Command class Meter Pulse */\
  ZW_METER_PULSE_GET_FRAME                                     ZW_MeterPulseGetFrame;\
  ZW_METER_PULSE_REPORT_FRAME                                  ZW_MeterPulseReportFrame;\
/* Command class Meter Tbl Config */\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet1byteFrame;\

#define ZW_FRAME_COLLECTION_MACRO2\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet2byteFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet3byteFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4BYTE_FRAME              ZW_MeterTblTablePointAdmNoSet4byteFrame;\
/* Command class Meter Tbl Monitor */\
  VG_METER_TBL_STATUS_REPORT_VG                                VG_MeterTblStatusReportVGroup;\
  ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME                       ZW_MeterTblStatusReport1byteFrame;\
  ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME                       ZW_MeterTblStatusReport2byteFrame;\
  ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME                       ZW_MeterTblStatusReport3byteFrame;\
  ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME                       ZW_MeterTblStatusReport4byteFrame;\
  ZW_METER_TBL_STATUS_DATE_GET_FRAME                           ZW_MeterTblStatusDateGetFrame;\
  ZW_METER_TBL_STATUS_DEPTH_GET_FRAME                          ZW_MeterTblStatusDepthGetFrame;\
  ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME                      ZW_MeterTblStatusSupportedGetFrame;\
  ZW_METER_TBL_STATUS_SUPPORTED_REPORT_FRAME                   ZW_MeterTblStatusSupportedReportFrame;\
  ZW_METER_TBL_CURRENT_DATA_GET_FRAME                          ZW_MeterTblCurrentDataGetFrame;\
  VG_METER_TBL_CURRENT_DATA_REPORT_VG                          VG_MeterTblCurrentDataReportVGroup;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME                 ZW_MeterTblCurrentDataReport1byteFrame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME                 ZW_MeterTblCurrentDataReport2byteFrame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME                 ZW_MeterTblCurrentDataReport3byteFrame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME                 ZW_MeterTblCurrentDataReport4byteFrame;\
  ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME                       ZW_MeterTblHistoricalDataGetFrame;\
  VG_METER_TBL_HISTORICAL_DATA_REPORT_VG                       VG_MeterTblHistoricalDataReportVGroup;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME              ZW_MeterTblHistoricalDataReport1byteFrame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME              ZW_MeterTblHistoricalDataReport2byteFrame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME              ZW_MeterTblHistoricalDataReport3byteFrame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME              ZW_MeterTblHistoricalDataReport4byteFrame;\
  ZW_METER_TBL_TABLE_CAPABILITY_REPORT_FRAME                   ZW_MeterTblTableCapabilityReportFrame;\
  ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME                      ZW_MeterTblTableCapabilityGetFrame;\
  ZW_METER_TBL_TABLE_ID_GET_FRAME                              ZW_MeterTblTableIdGetFrame;\
  ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAME                     ZW_MeterTblTableIdReport1byteFrame;\
  ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAME                     ZW_MeterTblTableIdReport2byteFrame;\
  ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAME                     ZW_MeterTblTableIdReport3byteFrame;\
  ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAME                     ZW_MeterTblTableIdReport4byteFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FRAME                    ZW_MeterTblTablePointAdmNoGetFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport1byteFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport2byteFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport3byteFrame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_FRAME           ZW_MeterTblTablePointAdmNoReport4byteFrame;\
/* Command class Meter Tbl Monitor V2 */\
  VG_METER_TBL_STATUS_REPORT_V2_VG                             VG_MeterTblStatusReportV2VGroup;\
  ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FRAME                    ZW_MeterTblStatusReport1byteV2Frame;\
  ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FRAME                    ZW_MeterTblStatusReport2byteV2Frame;\
  ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FRAME                    ZW_MeterTblStatusReport3byteV2Frame;\
  ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FRAME                    ZW_MeterTblStatusReport4byteV2Frame;\
  ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME                        ZW_MeterTblStatusDateGetV2Frame;\
  ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME                       ZW_MeterTblStatusDepthGetV2Frame;\
  ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_FRAME                   ZW_MeterTblStatusSupportedGetV2Frame;\
  ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V2_FRAME                ZW_MeterTblStatusSupportedReportV2Frame;\
  ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME                       ZW_MeterTblCurrentDataGetV2Frame;\
  VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG                       VG_MeterTblCurrentDataReportV2VGroup;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport1byteV2Frame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport2byteV2Frame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport3byteV2Frame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V2_FRAME              ZW_MeterTblCurrentDataReport4byteV2Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FRAME                    ZW_MeterTblHistoricalDataGetV2Frame;\
  VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG                    VG_MeterTblHistoricalDataReportV2VGroup;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport1byteV2Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport2byteV2Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport3byteV2Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V2_FRAME           ZW_MeterTblHistoricalDataReport4byteV2Frame;\
  ZW_METER_TBL_TABLE_CAPABILITY_REPORT_V2_FRAME                ZW_MeterTblTableCapabilityReportV2Frame;\
  ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_FRAME                   ZW_MeterTblTableCapabilityGetV2Frame;\
  ZW_METER_TBL_TABLE_ID_GET_V2_FRAME                           ZW_MeterTblTableIdGetV2Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_FRAME                  ZW_MeterTblTableIdReport1byteV2Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_FRAME                  ZW_MeterTblTableIdReport2byteV2Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_FRAME                  ZW_MeterTblTableIdReport3byteV2Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_FRAME                  ZW_MeterTblTableIdReport4byteV2Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2_FRAME                 ZW_MeterTblTablePointAdmNoGetV2Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport1byteV2Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport2byteV2Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport3byteV2Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V2_FRAME        ZW_MeterTblTablePointAdmNoReport4byteV2Frame;\
/* Command class Meter Tbl Monitor V3 */\
  VG_METER_TBL_STATUS_REPORT_V3_VG                             VG_MeterTblStatusReportV3VGroup;\
  ZW_METER_TBL_STATUS_REPORT_1BYTE_V3_FRAME                    ZW_MeterTblStatusReport1byteV3Frame;\
  ZW_METER_TBL_STATUS_REPORT_2BYTE_V3_FRAME                    ZW_MeterTblStatusReport2byteV3Frame;\
  ZW_METER_TBL_STATUS_REPORT_3BYTE_V3_FRAME                    ZW_MeterTblStatusReport3byteV3Frame;\
  ZW_METER_TBL_STATUS_REPORT_4BYTE_V3_FRAME                    ZW_MeterTblStatusReport4byteV3Frame;\
  ZW_METER_TBL_STATUS_DATE_GET_V3_FRAME                        ZW_MeterTblStatusDateGetV3Frame;\
  ZW_METER_TBL_STATUS_DEPTH_GET_V3_FRAME                       ZW_MeterTblStatusDepthGetV3Frame;\
  ZW_METER_TBL_STATUS_SUPPORTED_GET_V3_FRAME                   ZW_MeterTblStatusSupportedGetV3Frame;\
  ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V3_FRAME                ZW_MeterTblStatusSupportedReportV3Frame;\
  ZW_METER_TBL_CURRENT_DATA_GET_V3_FRAME                       ZW_MeterTblCurrentDataGetV3Frame;\
  VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG                       VG_MeterTblCurrentDataReportV3VGroup;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V3_FRAME              ZW_MeterTblCurrentDataReport1byteV3Frame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V3_FRAME              ZW_MeterTblCurrentDataReport2byteV3Frame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V3_FRAME              ZW_MeterTblCurrentDataReport3byteV3Frame;\
  ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V3_FRAME              ZW_MeterTblCurrentDataReport4byteV3Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_GET_V3_FRAME                    ZW_MeterTblHistoricalDataGetV3Frame;\
  VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG                    VG_MeterTblHistoricalDataReportV3VGroup;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V3_FRAME           ZW_MeterTblHistoricalDataReport1byteV3Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V3_FRAME           ZW_MeterTblHistoricalDataReport2byteV3Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V3_FRAME           ZW_MeterTblHistoricalDataReport3byteV3Frame;\
  ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V3_FRAME           ZW_MeterTblHistoricalDataReport4byteV3Frame;\
  ZW_METER_TBL_TABLE_CAPABILITY_REPORT_V3_FRAME                ZW_MeterTblTableCapabilityReportV3Frame;\
  ZW_METER_TBL_TABLE_CAPABILITY_GET_V3_FRAME                   ZW_MeterTblTableCapabilityGetV3Frame;\
  ZW_METER_TBL_TABLE_ID_GET_V3_FRAME                           ZW_MeterTblTableIdGetV3Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V3_FRAME                  ZW_MeterTblTableIdReport1byteV3Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V3_FRAME                  ZW_MeterTblTableIdReport2byteV3Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V3_FRAME                  ZW_MeterTblTableIdReport3byteV3Frame;\
  ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V3_FRAME                  ZW_MeterTblTableIdReport4byteV3Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V3_FRAME                 ZW_MeterTblTablePointAdmNoGetV3Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V3_FRAME        ZW_MeterTblTablePointAdmNoReport1byteV3Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V3_FRAME        ZW_MeterTblTablePointAdmNoReport2byteV3Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V3_FRAME        ZW_MeterTblTablePointAdmNoReport3byteV3Frame;\
  ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V3_FRAME        ZW_MeterTblTablePointAdmNoReport4byteV3Frame;\
/* Command class Meter Tbl Push */\
  ZW_METER_TBL_PUSH_CONFIGURATION_GET_FRAME                    ZW_MeterTblPushConfigurationGetFrame;\
  ZW_METER_TBL_PUSH_CONFIGURATION_REPORT_FRAME                 ZW_MeterTblPushConfigurationReportFrame;\
  ZW_METER_TBL_PUSH_CONFIGURATION_SET_FRAME                    ZW_MeterTblPushConfigurationSetFrame;\
/* Command class Meter */\
  ZW_METER_GET_FRAME                                           ZW_MeterGetFrame;\
  ZW_METER_REPORT_1BYTE_FRAME                                  ZW_MeterReport1byteFrame;\
  ZW_METER_REPORT_2BYTE_FRAME                                  ZW_MeterReport2byteFrame;\
  ZW_METER_REPORT_3BYTE_FRAME                                  ZW_MeterReport3byteFrame;\
  ZW_METER_REPORT_4BYTE_FRAME                                  ZW_MeterReport4byteFrame;\
/* Command class Meter V2 */\
  ZW_METER_GET_V2_FRAME                                        ZW_MeterGetV2Frame;\
  ZW_METER_REPORT_1BYTE_V2_FRAME                               ZW_MeterReport1byteV2Frame;\
  ZW_METER_REPORT_2BYTE_V2_FRAME                               ZW_MeterReport2byteV2Frame;\
  ZW_METER_REPORT_3BYTE_V2_FRAME                               ZW_MeterReport3byteV2Frame;\
  ZW_METER_REPORT_4BYTE_V2_FRAME                               ZW_MeterReport4byteV2Frame;\
  ZW_METER_RESET_V2_FRAME                                      ZW_MeterResetV2Frame;\
  ZW_METER_SUPPORTED_GET_V2_FRAME                              ZW_MeterSupportedGetV2Frame;\
  ZW_METER_SUPPORTED_REPORT_V2_FRAME                           ZW_MeterSupportedReportV2Frame;\
/* Command class Meter V3 */\
  ZW_METER_GET_V3_FRAME                                        ZW_MeterGetV3Frame;\
  ZW_METER_REPORT_1BYTE_V3_FRAME                               ZW_MeterReport1byteV3Frame;\
  ZW_METER_REPORT_2BYTE_V3_FRAME                               ZW_MeterReport2byteV3Frame;\
  ZW_METER_REPORT_3BYTE_V3_FRAME                               ZW_MeterReport3byteV3Frame;\
  ZW_METER_REPORT_4BYTE_V3_FRAME                               ZW_MeterReport4byteV3Frame;\
  ZW_METER_RESET_V3_FRAME                                      ZW_MeterResetV3Frame;\
  ZW_METER_SUPPORTED_GET_V3_FRAME                              ZW_MeterSupportedGetV3Frame;\
  ZW_METER_SUPPORTED_REPORT_V3_FRAME                           ZW_MeterSupportedReportV3Frame;\
/* Command class Meter V4 */\
  ZW_METER_GET_V4_FRAME                                        ZW_MeterGetV4Frame;\
  ZW_METER_REPORT_1BYTE_V4_FRAME                               ZW_MeterReport1byteV4Frame;\
  ZW_METER_REPORT_2BYTE_V4_FRAME                               ZW_MeterReport2byteV4Frame;\
  ZW_METER_REPORT_3BYTE_V4_FRAME                               ZW_MeterReport3byteV4Frame;\
  ZW_METER_REPORT_4BYTE_V4_FRAME                               ZW_MeterReport4byteV4Frame;\
  ZW_METER_RESET_V4_FRAME                                      ZW_MeterResetV4Frame;\
  ZW_METER_SUPPORTED_GET_V4_FRAME                              ZW_MeterSupportedGetV4Frame;\
  ZW_METER_SUPPORTED_REPORT_1BYTE_V4_FRAME                     ZW_MeterSupportedReport1byteV4Frame;\
  ZW_METER_SUPPORTED_REPORT_2BYTE_V4_FRAME                     ZW_MeterSupportedReport2byteV4Frame;\
  ZW_METER_SUPPORTED_REPORT_3BYTE_V4_FRAME                     ZW_MeterSupportedReport3byteV4Frame;\
  ZW_METER_SUPPORTED_REPORT_4BYTE_V4_FRAME                     ZW_MeterSupportedReport4byteV4Frame;\
/* Command class Meter V5 */\
  ZW_METER_GET_V5_FRAME                                        ZW_MeterGetV5Frame;\
  ZW_METER_REPORT_1BYTE_V5_FRAME                               ZW_MeterReport1byteV5Frame;\
  ZW_METER_REPORT_2BYTE_V5_FRAME                               ZW_MeterReport2byteV5Frame;\
  ZW_METER_REPORT_3BYTE_V5_FRAME                               ZW_MeterReport3byteV5Frame;\
  ZW_METER_REPORT_4BYTE_V5_FRAME                               ZW_MeterReport4byteV5Frame;\
  ZW_METER_RESET_V5_FRAME                                      ZW_MeterResetV5Frame;\
  ZW_METER_SUPPORTED_GET_V5_FRAME                              ZW_MeterSupportedGetV5Frame;\
  ZW_METER_SUPPORTED_REPORT_1BYTE_V5_FRAME                     ZW_MeterSupportedReport1byteV5Frame;\
  ZW_METER_SUPPORTED_REPORT_2BYTE_V5_FRAME                     ZW_MeterSupportedReport2byteV5Frame;\
  ZW_METER_SUPPORTED_REPORT_3BYTE_V5_FRAME                     ZW_MeterSupportedReport3byteV5Frame;\
  ZW_METER_SUPPORTED_REPORT_4BYTE_V5_FRAME                     ZW_MeterSupportedReport4byteV5Frame;\
/* Command class Meter V6 */\
  ZW_METER_GET_V6_FRAME                                        ZW_MeterGetV6Frame;\
  ZW_METER_REPORT_1BYTE_V6_FRAME                               ZW_MeterReport1byteV6Frame;\
  ZW_METER_REPORT_2BYTE_V6_FRAME                               ZW_MeterReport2byteV6Frame;\
  ZW_METER_REPORT_3BYTE_V6_FRAME                               ZW_MeterReport3byteV6Frame;\
  ZW_METER_REPORT_4BYTE_V6_FRAME                               ZW_MeterReport4byteV6Frame;\
  ZW_METER_RESET_1BYTE_V6_FRAME                                ZW_MeterReset1byteV6Frame;\
  ZW_METER_RESET_2BYTE_V6_FRAME                                ZW_MeterReset2byteV6Frame;\
  ZW_METER_RESET_3BYTE_V6_FRAME                                ZW_MeterReset3byteV6Frame;\
  ZW_METER_RESET_4BYTE_V6_FRAME                                ZW_MeterReset4byteV6Frame;\
  ZW_METER_SUPPORTED_GET_V6_FRAME                              ZW_MeterSupportedGetV6Frame;\
  ZW_METER_SUPPORTED_REPORT_1BYTE_V6_FRAME                     ZW_MeterSupportedReport1byteV6Frame;\
  ZW_METER_SUPPORTED_REPORT_2BYTE_V6_FRAME                     ZW_MeterSupportedReport2byteV6Frame;\
  ZW_METER_SUPPORTED_REPORT_3BYTE_V6_FRAME                     ZW_MeterSupportedReport3byteV6Frame;\
  ZW_METER_SUPPORTED_REPORT_4BYTE_V6_FRAME                     ZW_MeterSupportedReport4byteV6Frame;\
/* Command class Mtp Window Covering */\
  ZW_MOVE_TO_POSITION_GET_FRAME                                ZW_MoveToPositionGetFrame;\
  ZW_MOVE_TO_POSITION_REPORT_FRAME                             ZW_MoveToPositionReportFrame;\
  ZW_MOVE_TO_POSITION_SET_FRAME                                ZW_MoveToPositionSetFrame;\
/* Command class Multi Channel Association V2 */\
  ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FRAME                    ZW_MultiChannelAssociationGetV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2_FRAME          ZW_MultiChannelAssociationGroupingsGetV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME       ZW_MultiChannelAssociationGroupingsReportV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove1byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove2byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove3byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V2_FRAME           ZW_MultiChannelAssociationRemove4byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V2_FRAME           ZW_MultiChannelAssociationReport1byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V2_FRAME           ZW_MultiChannelAssociationReport2byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V2_FRAME           ZW_MultiChannelAssociationReport3byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V2_FRAME           ZW_MultiChannelAssociationReport4byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V2_FRAME              ZW_MultiChannelAssociationSet1byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V2_FRAME              ZW_MultiChannelAssociationSet2byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V2_FRAME              ZW_MultiChannelAssociationSet3byteV2Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V2_FRAME              ZW_MultiChannelAssociationSet4byteV2Frame;\
/* Command class Multi Channel Association V3 */\
  ZW_MULTI_CHANNEL_ASSOCIATION_GET_V3_FRAME                    ZW_MultiChannelAssociationGetV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V3_FRAME          ZW_MultiChannelAssociationGroupingsGetV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V3_FRAME       ZW_MultiChannelAssociationGroupingsReportV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V3_FRAME           ZW_MultiChannelAssociationRemove1byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V3_FRAME           ZW_MultiChannelAssociationRemove2byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V3_FRAME           ZW_MultiChannelAssociationRemove3byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V3_FRAME           ZW_MultiChannelAssociationRemove4byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V3_FRAME           ZW_MultiChannelAssociationReport1byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V3_FRAME           ZW_MultiChannelAssociationReport2byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V3_FRAME           ZW_MultiChannelAssociationReport3byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V3_FRAME           ZW_MultiChannelAssociationReport4byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V3_FRAME              ZW_MultiChannelAssociationSet1byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V3_FRAME              ZW_MultiChannelAssociationSet2byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V3_FRAME              ZW_MultiChannelAssociationSet3byteV3Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V3_FRAME              ZW_MultiChannelAssociationSet4byteV3Frame;\
/* Command class Multi Channel Association V4 */\
  ZW_MULTI_CHANNEL_ASSOCIATION_GET_V4_FRAME                    ZW_MultiChannelAssociationGetV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V4_FRAME          ZW_MultiChannelAssociationGroupingsGetV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V4_FRAME       ZW_MultiChannelAssociationGroupingsReportV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V4_FRAME           ZW_MultiChannelAssociationRemove1byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V4_FRAME           ZW_MultiChannelAssociationRemove2byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V4_FRAME           ZW_MultiChannelAssociationRemove3byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V4_FRAME           ZW_MultiChannelAssociationRemove4byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V4_FRAME           ZW_MultiChannelAssociationReport1byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V4_FRAME           ZW_MultiChannelAssociationReport2byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V4_FRAME           ZW_MultiChannelAssociationReport3byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V4_FRAME           ZW_MultiChannelAssociationReport4byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V4_FRAME              ZW_MultiChannelAssociationSet1byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V4_FRAME              ZW_MultiChannelAssociationSet2byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V4_FRAME              ZW_MultiChannelAssociationSet3byteV4Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V4_FRAME              ZW_MultiChannelAssociationSet4byteV4Frame;\
/* Command class Multi Channel Association V5 */\
  ZW_MULTI_CHANNEL_ASSOCIATION_GET_V5_FRAME                    ZW_MultiChannelAssociationGetV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V5_FRAME          ZW_MultiChannelAssociationGroupingsGetV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V5_FRAME       ZW_MultiChannelAssociationGroupingsReportV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V5_FRAME           ZW_MultiChannelAssociationRemove1byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V5_FRAME           ZW_MultiChannelAssociationRemove2byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V5_FRAME           ZW_MultiChannelAssociationRemove3byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V5_FRAME           ZW_MultiChannelAssociationRemove4byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V5_FRAME           ZW_MultiChannelAssociationReport1byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V5_FRAME           ZW_MultiChannelAssociationReport2byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V5_FRAME           ZW_MultiChannelAssociationReport3byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V5_FRAME           ZW_MultiChannelAssociationReport4byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V5_FRAME              ZW_MultiChannelAssociationSet1byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V5_FRAME              ZW_MultiChannelAssociationSet2byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V5_FRAME              ZW_MultiChannelAssociationSet3byteV5Frame;\
  ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V5_FRAME              ZW_MultiChannelAssociationSet4byteV5Frame;\
/* Command class Multi Channel V2 */\
  ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME                     ZW_MultiChannelCapabilityGetV2Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport1byteV2Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport2byteV2Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport3byteV2Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME            ZW_MultiChannelCapabilityReport4byteV2Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAME                     ZW_MultiChannelEndPointFindV2Frame;\
  VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG                 VG_MultiChannelEndPointFindReportV2VGroup;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport1byteV2Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport2byteV2Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport3byteV2Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V2_FRAME        ZW_MultiChannelEndPointFindReport4byteV2Frame;\
  ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME                      ZW_MultiChannelEndPointGetV2Frame;\
  ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME                   ZW_MultiChannelEndPointReportV2Frame;\
  ZW_MULTI_INSTANCE_GET_V2_FRAME                               ZW_MultiInstanceGetV2Frame;\
  ZW_MULTI_INSTANCE_REPORT_V2_FRAME                            ZW_MultiInstanceReportV2Frame;\
/* Command class Multi Channel V3 */\
  ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME                     ZW_MultiChannelCapabilityGetV3Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport1byteV3Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport2byteV3Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport3byteV3Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME            ZW_MultiChannelCapabilityReport4byteV3Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAME                     ZW_MultiChannelEndPointFindV3Frame;\
  VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG                 VG_MultiChannelEndPointFindReportV3VGroup;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport1byteV3Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport2byteV3Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport3byteV3Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V3_FRAME        ZW_MultiChannelEndPointFindReport4byteV3Frame;\
  ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME                      ZW_MultiChannelEndPointGetV3Frame;\
  ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME                   ZW_MultiChannelEndPointReportV3Frame;\
  ZW_MULTI_INSTANCE_GET_V3_FRAME                               ZW_MultiInstanceGetV3Frame;\
  ZW_MULTI_INSTANCE_REPORT_V3_FRAME                            ZW_MultiInstanceReportV3Frame;\
/* Command class Multi Channel V4 */\
  ZW_MULTI_CHANNEL_CAPABILITY_GET_V4_FRAME                     ZW_MultiChannelCapabilityGetV4Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V4_FRAME            ZW_MultiChannelCapabilityReport1byteV4Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V4_FRAME            ZW_MultiChannelCapabilityReport2byteV4Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V4_FRAME            ZW_MultiChannelCapabilityReport3byteV4Frame;\
  ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V4_FRAME            ZW_MultiChannelCapabilityReport4byteV4Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_V4_FRAME                     ZW_MultiChannelEndPointFindV4Frame;\
  VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG                 VG_MultiChannelEndPointFindReportV4VGroup;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V4_FRAME        ZW_MultiChannelEndPointFindReport1byteV4Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V4_FRAME        ZW_MultiChannelEndPointFindReport2byteV4Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V4_FRAME        ZW_MultiChannelEndPointFindReport3byteV4Frame;\
  ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V4_FRAME        ZW_MultiChannelEndPointFindReport4byteV4Frame;\
  ZW_MULTI_CHANNEL_END_POINT_GET_V4_FRAME                      ZW_MultiChannelEndPointGetV4Frame;\
  ZW_MULTI_CHANNEL_END_POINT_REPORT_V4_FRAME                   ZW_MultiChannelEndPointReportV4Frame;\
  ZW_MULTI_INSTANCE_GET_V4_FRAME                               ZW_MultiInstanceGetV4Frame;\
  ZW_MULTI_INSTANCE_REPORT_V4_FRAME                            ZW_MultiInstanceReportV4Frame;\
  ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4_FRAME             ZW_MultiChannelAggregatedMembersGetV4Frame;\
  ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V4_FRAME    ZW_MultiChannelAggregatedMembersReport1byteV4Frame;\
  ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V4_FRAME    ZW_MultiChannelAggregatedMembersReport2byteV4Frame;\
  ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V4_FRAME    ZW_MultiChannelAggregatedMembersReport3byteV4Frame;\
  ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V4_FRAME    ZW_MultiChannelAggregatedMembersReport4byteV4Frame;\
/* Command class Multi Instance Association */\
  ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME                      ZW_MultiInstanceAssociationGetFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET_FRAME            ZW_MultiInstanceAssociationGroupingsGetFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT_FRAME         ZW_MultiInstanceAssociationGroupingsReportFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1BYTE_FRAME             ZW_MultiInstanceAssociationRemove1byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2BYTE_FRAME             ZW_MultiInstanceAssociationRemove2byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3BYTE_FRAME             ZW_MultiInstanceAssociationRemove3byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4BYTE_FRAME             ZW_MultiInstanceAssociationRemove4byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1BYTE_FRAME             ZW_MultiInstanceAssociationReport1byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2BYTE_FRAME             ZW_MultiInstanceAssociationReport2byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3BYTE_FRAME             ZW_MultiInstanceAssociationReport3byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4BYTE_FRAME             ZW_MultiInstanceAssociationReport4byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYTE_FRAME                ZW_MultiInstanceAssociationSet1byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYTE_FRAME                ZW_MultiInstanceAssociationSet2byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYTE_FRAME                ZW_MultiInstanceAssociationSet3byteFrame;\
  ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYTE_FRAME                ZW_MultiInstanceAssociationSet4byteFrame;\
/* Command class Multi Instance */\
  ZW_MULTI_INSTANCE_GET_FRAME                                  ZW_MultiInstanceGetFrame;\
  ZW_MULTI_INSTANCE_REPORT_FRAME                               ZW_MultiInstanceReportFrame;\
/* Command class Network Management Proxy */\
  ZW_NODE_INFO_CACHED_GET_FRAME                                ZW_NodeInfoCachedGetFrame;\
  ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME                       ZW_NodeInfoCachedReport1byteFrame;\
  ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME                       ZW_NodeInfoCachedReport2byteFrame;\
  ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME                       ZW_NodeInfoCachedReport3byteFrame;\
  ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME                       ZW_NodeInfoCachedReport4byteFrame;\
  ZW_NODE_LIST_GET_FRAME                                       ZW_NodeListGetFrame;\
  ZW_NODE_LIST_REPORT_1BYTE_FRAME                              ZW_NodeListReport1byteFrame;\
  ZW_NODE_LIST_REPORT_2BYTE_FRAME                              ZW_NodeListReport2byteFrame;\
  ZW_NODE_LIST_REPORT_3BYTE_FRAME                              ZW_NodeListReport3byteFrame;\
  ZW_NODE_LIST_REPORT_4BYTE_FRAME                              ZW_NodeListReport4byteFrame;\
/* Command class Network Management Proxy V2 */\
  ZW_NODE_INFO_CACHED_GET_V2_FRAME                             ZW_NodeInfoCachedGetV2Frame;\
  ZW_NODE_INFO_CACHED_REPORT_1BYTE_V2_FRAME                    ZW_NodeInfoCachedReport1byteV2Frame;\
  ZW_NODE_INFO_CACHED_REPORT_2BYTE_V2_FRAME                    ZW_NodeInfoCachedReport2byteV2Frame;\
  ZW_NODE_INFO_CACHED_REPORT_3BYTE_V2_FRAME                    ZW_NodeInfoCachedReport3byteV2Frame;\
  ZW_NODE_INFO_CACHED_REPORT_4BYTE_V2_FRAME                    ZW_NodeInfoCachedReport4byteV2Frame;\
  ZW_NODE_LIST_GET_V2_FRAME                                    ZW_NodeListGetV2Frame;\
  ZW_NODE_LIST_REPORT_1BYTE_V2_FRAME                           ZW_NodeListReport1byteV2Frame;\
  ZW_NODE_LIST_REPORT_2BYTE_V2_FRAME                           ZW_NodeListReport2byteV2Frame;\
  ZW_NODE_LIST_REPORT_3BYTE_V2_FRAME                           ZW_NodeListReport3byteV2Frame;\
  ZW_NODE_LIST_REPORT_4BYTE_V2_FRAME                           ZW_NodeListReport4byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_END_POINT_GET_V2_FRAME                   ZW_NmMultiChannelEndPointGetV2Frame;\
  ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME                ZW_NmMultiChannelEndPointReportV2Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME                  ZW_NmMultiChannelCapabilityGetV2Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME         ZW_NmMultiChannelCapabilityReport1byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME         ZW_NmMultiChannelCapabilityReport2byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME         ZW_NmMultiChannelCapabilityReport3byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME         ZW_NmMultiChannelCapabilityReport4byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V2_FRAME          ZW_NmMultiChannelAggregatedMembersGetV2Frame;\
  VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG          VG_NmMultiChannelAggregatedMembersReportV2VGroup;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V2_FRAME ZW_NmMultiChannelAggregatedMembersReport1byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V2_FRAME ZW_NmMultiChannelAggregatedMembersReport2byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V2_FRAME ZW_NmMultiChannelAggregatedMembersReport3byteV2Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V2_FRAME ZW_NmMultiChannelAggregatedMembersReport4byteV2Frame;\
/* Command class Network Management Proxy V3 */\
  ZW_NODE_INFO_CACHED_GET_V3_FRAME                             ZW_NodeInfoCachedGetV3Frame;\
  ZW_NODE_INFO_CACHED_REPORT_1BYTE_V3_FRAME                    ZW_NodeInfoCachedReport1byteV3Frame;\
  ZW_NODE_INFO_CACHED_REPORT_2BYTE_V3_FRAME                    ZW_NodeInfoCachedReport2byteV3Frame;\
  ZW_NODE_INFO_CACHED_REPORT_3BYTE_V3_FRAME                    ZW_NodeInfoCachedReport3byteV3Frame;\
  ZW_NODE_INFO_CACHED_REPORT_4BYTE_V3_FRAME                    ZW_NodeInfoCachedReport4byteV3Frame;\
  ZW_NODE_LIST_GET_V3_FRAME                                    ZW_NodeListGetV3Frame;\
  ZW_NODE_LIST_REPORT_1BYTE_V3_FRAME                           ZW_NodeListReport1byteV3Frame;\
  ZW_NODE_LIST_REPORT_2BYTE_V3_FRAME                           ZW_NodeListReport2byteV3Frame;\
  ZW_NODE_LIST_REPORT_3BYTE_V3_FRAME                           ZW_NodeListReport3byteV3Frame;\
  ZW_NODE_LIST_REPORT_4BYTE_V3_FRAME                           ZW_NodeListReport4byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_END_POINT_GET_V3_FRAME                   ZW_NmMultiChannelEndPointGetV3Frame;\
  ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME                ZW_NmMultiChannelEndPointReportV3Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME                  ZW_NmMultiChannelCapabilityGetV3Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME         ZW_NmMultiChannelCapabilityReport1byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME         ZW_NmMultiChannelCapabilityReport2byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME         ZW_NmMultiChannelCapabilityReport3byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME         ZW_NmMultiChannelCapabilityReport4byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V3_FRAME          ZW_NmMultiChannelAggregatedMembersGetV3Frame;\
  VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG          VG_NmMultiChannelAggregatedMembersReportV3VGroup;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V3_FRAME ZW_NmMultiChannelAggregatedMembersReport1byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V3_FRAME ZW_NmMultiChannelAggregatedMembersReport2byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V3_FRAME ZW_NmMultiChannelAggregatedMembersReport3byteV3Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V3_FRAME ZW_NmMultiChannelAggregatedMembersReport4byteV3Frame;\
  ZW_FAILED_NODE_LIST_GET_V3_FRAME                             ZW_FailedNodeListGetV3Frame;\
  ZW_FAILED_NODE_LIST_REPORT_V3_FRAME                          ZW_FailedNodeListReportV3Frame;\
/* Command class Network Management Proxy V4 */\
  ZW_NODE_INFO_CACHED_GET_V4_FRAME                             ZW_NodeInfoCachedGetV4Frame;\
  ZW_NODE_INFO_CACHED_REPORT_1BYTE_V4_FRAME                    ZW_NodeInfoCachedReport1byteV4Frame;\
  ZW_NODE_INFO_CACHED_REPORT_2BYTE_V4_FRAME                    ZW_NodeInfoCachedReport2byteV4Frame;\
  ZW_NODE_INFO_CACHED_REPORT_3BYTE_V4_FRAME                    ZW_NodeInfoCachedReport3byteV4Frame;\
  ZW_NODE_INFO_CACHED_REPORT_4BYTE_V4_FRAME                    ZW_NodeInfoCachedReport4byteV4Frame;\
  ZW_NODE_LIST_GET_V4_FRAME                                    ZW_NodeListGetV4Frame;\
  ZW_NODE_LIST_REPORT_1BYTE_V4_FRAME                           ZW_NodeListReport1byteV4Frame;\
  ZW_NODE_LIST_REPORT_2BYTE_V4_FRAME                           ZW_NodeListReport2byteV4Frame;\
  ZW_NODE_LIST_REPORT_3BYTE_V4_FRAME                           ZW_NodeListReport3byteV4Frame;\
  ZW_NODE_LIST_REPORT_4BYTE_V4_FRAME                           ZW_NodeListReport4byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_END_POINT_GET_V4_FRAME                   ZW_NmMultiChannelEndPointGetV4Frame;\
  ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V4_FRAME                ZW_NmMultiChannelEndPointReportV4Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V4_FRAME                  ZW_NmMultiChannelCapabilityGetV4Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V4_FRAME         ZW_NmMultiChannelCapabilityReport1byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V4_FRAME         ZW_NmMultiChannelCapabilityReport2byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V4_FRAME         ZW_NmMultiChannelCapabilityReport3byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V4_FRAME         ZW_NmMultiChannelCapabilityReport4byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4_FRAME          ZW_NmMultiChannelAggregatedMembersGetV4Frame;\
  VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG          VG_NmMultiChannelAggregatedMembersReportV4VGroup;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V4_FRAME ZW_NmMultiChannelAggregatedMembersReport1byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V4_FRAME ZW_NmMultiChannelAggregatedMembersReport2byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V4_FRAME ZW_NmMultiChannelAggregatedMembersReport3byteV4Frame;\
  ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V4_FRAME ZW_NmMultiChannelAggregatedMembersReport4byteV4Frame;\
  ZW_FAILED_NODE_LIST_GET_V4_FRAME                             ZW_FailedNodeListGetV4Frame;\
  ZW_FAILED_NODE_LIST_REPORT_1BYTE_V4_FRAME                    ZW_FailedNodeListReport1byteV4Frame;\
  ZW_FAILED_NODE_LIST_REPORT_2BYTE_V4_FRAME                    ZW_FailedNodeListReport2byteV4Frame;\

#define ZW_FRAME_COLLECTION_MACRO3\
  ZW_FAILED_NODE_LIST_REPORT_3BYTE_V4_FRAME                    ZW_FailedNodeListReport3byteV4Frame;\
  ZW_FAILED_NODE_LIST_REPORT_4BYTE_V4_FRAME                    ZW_FailedNodeListReport4byteV4Frame;\
/* Command class Network Management Basic */\
  ZW_LEARN_MODE_SET_FRAME                                      ZW_LearnModeSetFrame;\
  ZW_LEARN_MODE_SET_STATUS_FRAME                               ZW_LearnModeSetStatusFrame;\
  ZW_NODE_INFORMATION_SEND_FRAME                               ZW_NodeInformationSendFrame;\
  ZW_NETWORK_UPDATE_REQUEST_FRAME                              ZW_NetworkUpdateRequestFrame;\
  ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME                       ZW_NetworkUpdateRequestStatusFrame;\
  ZW_DEFAULT_SET_FRAME                                         ZW_DefaultSetFrame;\
  ZW_DEFAULT_SET_COMPLETE_FRAME                                ZW_DefaultSetCompleteFrame;\
/* Command class Network Management Basic V2 */\
  ZW_LEARN_MODE_SET_V2_FRAME                                   ZW_LearnModeSetV2Frame;\
  ZW_LEARN_MODE_SET_STATUS_V2_FRAME                            ZW_LearnModeSetStatusV2Frame;\
  ZW_NODE_INFORMATION_SEND_V2_FRAME                            ZW_NodeInformationSendV2Frame;\
  ZW_NETWORK_UPDATE_REQUEST_V2_FRAME                           ZW_NetworkUpdateRequestV2Frame;\
  ZW_NETWORK_UPDATE_REQUEST_STATUS_V2_FRAME                    ZW_NetworkUpdateRequestStatusV2Frame;\
  ZW_DEFAULT_SET_V2_FRAME                                      ZW_DefaultSetV2Frame;\
  ZW_DEFAULT_SET_COMPLETE_V2_FRAME                             ZW_DefaultSetCompleteV2Frame;\
  ZW_DSK_GET_V2_FRAME                                          ZW_DskGetV2Frame;\
  ZW_DSK_REPORT_V2_FRAME                                       ZW_DskReportV2Frame;\
/* Command class Network Management Inclusion */\
  ZW_FAILED_NODE_REMOVE_FRAME                                  ZW_FailedNodeRemoveFrame;\
  ZW_FAILED_NODE_REMOVE_STATUS_FRAME                           ZW_FailedNodeRemoveStatusFrame;\
  ZW_NODE_ADD_FRAME                                            ZW_NodeAddFrame;\
  ZW_NODE_ADD_STATUS_1BYTE_FRAME                               ZW_NodeAddStatus1byteFrame;\
  ZW_NODE_ADD_STATUS_2BYTE_FRAME                               ZW_NodeAddStatus2byteFrame;\
  ZW_NODE_ADD_STATUS_3BYTE_FRAME                               ZW_NodeAddStatus3byteFrame;\
  ZW_NODE_ADD_STATUS_4BYTE_FRAME                               ZW_NodeAddStatus4byteFrame;\
  ZW_NODE_REMOVE_FRAME                                         ZW_NodeRemoveFrame;\
  ZW_NODE_REMOVE_STATUS_FRAME                                  ZW_NodeRemoveStatusFrame;\
  ZW_FAILED_NODE_REPLACE_FRAME                                 ZW_FailedNodeReplaceFrame;\
  ZW_FAILED_NODE_REPLACE_STATUS_FRAME                          ZW_FailedNodeReplaceStatusFrame;\
  ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME                        ZW_NodeNeighborUpdateRequestFrame;\
  ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME                         ZW_NodeNeighborUpdateStatusFrame;\
  ZW_RETURN_ROUTE_ASSIGN_FRAME                                 ZW_ReturnRouteAssignFrame;\
  ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME                        ZW_ReturnRouteAssignCompleteFrame;\
  ZW_RETURN_ROUTE_DELETE_FRAME                                 ZW_ReturnRouteDeleteFrame;\
  ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME                        ZW_ReturnRouteDeleteCompleteFrame;\
/* Command class Network Management Inclusion V2 */\
  ZW_FAILED_NODE_REMOVE_V2_FRAME                               ZW_FailedNodeRemoveV2Frame;\
  ZW_FAILED_NODE_REMOVE_STATUS_V2_FRAME                        ZW_FailedNodeRemoveStatusV2Frame;\
  ZW_NODE_ADD_V2_FRAME                                         ZW_NodeAddV2Frame;\
  ZW_NODE_ADD_STATUS_1BYTE_V2_FRAME                            ZW_NodeAddStatus1byteV2Frame;\
  ZW_NODE_ADD_STATUS_2BYTE_V2_FRAME                            ZW_NodeAddStatus2byteV2Frame;\
  ZW_NODE_ADD_STATUS_3BYTE_V2_FRAME                            ZW_NodeAddStatus3byteV2Frame;\
  ZW_NODE_ADD_STATUS_4BYTE_V2_FRAME                            ZW_NodeAddStatus4byteV2Frame;\
  ZW_NODE_REMOVE_V2_FRAME                                      ZW_NodeRemoveV2Frame;\
  ZW_NODE_REMOVE_STATUS_V2_FRAME                               ZW_NodeRemoveStatusV2Frame;\
  ZW_FAILED_NODE_REPLACE_V2_FRAME                              ZW_FailedNodeReplaceV2Frame;\
  ZW_FAILED_NODE_REPLACE_STATUS_V2_FRAME                       ZW_FailedNodeReplaceStatusV2Frame;\
  ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V2_FRAME                     ZW_NodeNeighborUpdateRequestV2Frame;\
  ZW_NODE_NEIGHBOR_UPDATE_STATUS_V2_FRAME                      ZW_NodeNeighborUpdateStatusV2Frame;\
  ZW_RETURN_ROUTE_ASSIGN_V2_FRAME                              ZW_ReturnRouteAssignV2Frame;\
  ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V2_FRAME                     ZW_ReturnRouteAssignCompleteV2Frame;\
  ZW_RETURN_ROUTE_DELETE_V2_FRAME                              ZW_ReturnRouteDeleteV2Frame;\
  ZW_RETURN_ROUTE_DELETE_COMPLETE_V2_FRAME                     ZW_ReturnRouteDeleteCompleteV2Frame;\
  ZW_NODE_ADD_KEYS_REPORT_V2_FRAME                             ZW_NodeAddKeysReportV2Frame;\
  ZW_NODE_ADD_KEYS_SET_V2_FRAME                                ZW_NodeAddKeysSetV2Frame;\
  ZW_NODE_ADD_DSK_REPORT_V2_FRAME                              ZW_NodeAddDskReportV2Frame;\
  ZW_NODE_ADD_DSK_SET_1BYTE_V2_FRAME                           ZW_NodeAddDskSet1byteV2Frame;\
  ZW_NODE_ADD_DSK_SET_2BYTE_V2_FRAME                           ZW_NodeAddDskSet2byteV2Frame;\
  ZW_NODE_ADD_DSK_SET_3BYTE_V2_FRAME                           ZW_NodeAddDskSet3byteV2Frame;\
  ZW_NODE_ADD_DSK_SET_4BYTE_V2_FRAME                           ZW_NodeAddDskSet4byteV2Frame;\
/* Command class Network Management Inclusion V3 */\
  ZW_FAILED_NODE_REMOVE_V3_FRAME                               ZW_FailedNodeRemoveV3Frame;\
  ZW_FAILED_NODE_REMOVE_STATUS_V3_FRAME                        ZW_FailedNodeRemoveStatusV3Frame;\
  ZW_NODE_ADD_V3_FRAME                                         ZW_NodeAddV3Frame;\
  ZW_NODE_ADD_STATUS_1BYTE_V3_FRAME                            ZW_NodeAddStatus1byteV3Frame;\
  ZW_NODE_ADD_STATUS_2BYTE_V3_FRAME                            ZW_NodeAddStatus2byteV3Frame;\
  ZW_NODE_ADD_STATUS_3BYTE_V3_FRAME                            ZW_NodeAddStatus3byteV3Frame;\
  ZW_NODE_ADD_STATUS_4BYTE_V3_FRAME                            ZW_NodeAddStatus4byteV3Frame;\
  ZW_NODE_REMOVE_V3_FRAME                                      ZW_NodeRemoveV3Frame;\
  ZW_NODE_REMOVE_STATUS_V3_FRAME                               ZW_NodeRemoveStatusV3Frame;\
  ZW_FAILED_NODE_REPLACE_V3_FRAME                              ZW_FailedNodeReplaceV3Frame;\
  ZW_FAILED_NODE_REPLACE_STATUS_V3_FRAME                       ZW_FailedNodeReplaceStatusV3Frame;\
  ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V3_FRAME                     ZW_NodeNeighborUpdateRequestV3Frame;\
  ZW_NODE_NEIGHBOR_UPDATE_STATUS_V3_FRAME                      ZW_NodeNeighborUpdateStatusV3Frame;\
  ZW_RETURN_ROUTE_ASSIGN_V3_FRAME                              ZW_ReturnRouteAssignV3Frame;\
  ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V3_FRAME                     ZW_ReturnRouteAssignCompleteV3Frame;\
  ZW_RETURN_ROUTE_DELETE_V3_FRAME                              ZW_ReturnRouteDeleteV3Frame;\
  ZW_RETURN_ROUTE_DELETE_COMPLETE_V3_FRAME                     ZW_ReturnRouteDeleteCompleteV3Frame;\
  ZW_NODE_ADD_KEYS_REPORT_V3_FRAME                             ZW_NodeAddKeysReportV3Frame;\
  ZW_NODE_ADD_KEYS_SET_V3_FRAME                                ZW_NodeAddKeysSetV3Frame;\
  ZW_NODE_ADD_DSK_REPORT_V3_FRAME                              ZW_NodeAddDskReportV3Frame;\
  ZW_NODE_ADD_DSK_SET_1BYTE_V3_FRAME                           ZW_NodeAddDskSet1byteV3Frame;\
  ZW_NODE_ADD_DSK_SET_2BYTE_V3_FRAME                           ZW_NodeAddDskSet2byteV3Frame;\
  ZW_NODE_ADD_DSK_SET_3BYTE_V3_FRAME                           ZW_NodeAddDskSet3byteV3Frame;\
  ZW_NODE_ADD_DSK_SET_4BYTE_V3_FRAME                           ZW_NodeAddDskSet4byteV3Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_1BYTE_V3_FRAME            ZW_SmartStartJoinStartedReport1byteV3Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_2BYTE_V3_FRAME            ZW_SmartStartJoinStartedReport2byteV3Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_3BYTE_V3_FRAME            ZW_SmartStartJoinStartedReport3byteV3Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_4BYTE_V3_FRAME            ZW_SmartStartJoinStartedReport4byteV3Frame;\
  ZW_INCLUDED_NIF_REPORT_1BYTE_V3_FRAME                        ZW_IncludedNifReport1byteV3Frame;\
  ZW_INCLUDED_NIF_REPORT_2BYTE_V3_FRAME                        ZW_IncludedNifReport2byteV3Frame;\
  ZW_INCLUDED_NIF_REPORT_3BYTE_V3_FRAME                        ZW_IncludedNifReport3byteV3Frame;\
  ZW_INCLUDED_NIF_REPORT_4BYTE_V3_FRAME                        ZW_IncludedNifReport4byteV3Frame;\
/* Command class Network Management Inclusion V4 */\
  ZW_FAILED_NODE_REMOVE_V4_FRAME                               ZW_FailedNodeRemoveV4Frame;\
  ZW_FAILED_NODE_REMOVE_STATUS_V4_FRAME                        ZW_FailedNodeRemoveStatusV4Frame;\
  ZW_NODE_ADD_V4_FRAME                                         ZW_NodeAddV4Frame;\
  ZW_NODE_ADD_STATUS_1BYTE_V4_FRAME                            ZW_NodeAddStatus1byteV4Frame;\
  ZW_NODE_ADD_STATUS_2BYTE_V4_FRAME                            ZW_NodeAddStatus2byteV4Frame;\
  ZW_NODE_ADD_STATUS_3BYTE_V4_FRAME                            ZW_NodeAddStatus3byteV4Frame;\
  ZW_NODE_ADD_STATUS_4BYTE_V4_FRAME                            ZW_NodeAddStatus4byteV4Frame;\
  ZW_NODE_REMOVE_V4_FRAME                                      ZW_NodeRemoveV4Frame;\
  ZW_NODE_REMOVE_STATUS_V4_FRAME                               ZW_NodeRemoveStatusV4Frame;\
  ZW_FAILED_NODE_REPLACE_V4_FRAME                              ZW_FailedNodeReplaceV4Frame;\
  ZW_FAILED_NODE_REPLACE_STATUS_V4_FRAME                       ZW_FailedNodeReplaceStatusV4Frame;\
  ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V4_FRAME                     ZW_NodeNeighborUpdateRequestV4Frame;\
  ZW_NODE_NEIGHBOR_UPDATE_STATUS_V4_FRAME                      ZW_NodeNeighborUpdateStatusV4Frame;\
  ZW_RETURN_ROUTE_ASSIGN_V4_FRAME                              ZW_ReturnRouteAssignV4Frame;\
  ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V4_FRAME                     ZW_ReturnRouteAssignCompleteV4Frame;\
  ZW_RETURN_ROUTE_DELETE_V4_FRAME                              ZW_ReturnRouteDeleteV4Frame;\
  ZW_RETURN_ROUTE_DELETE_COMPLETE_V4_FRAME                     ZW_ReturnRouteDeleteCompleteV4Frame;\
  ZW_NODE_ADD_KEYS_REPORT_V4_FRAME                             ZW_NodeAddKeysReportV4Frame;\
  ZW_NODE_ADD_KEYS_SET_V4_FRAME                                ZW_NodeAddKeysSetV4Frame;\
  ZW_NODE_ADD_DSK_REPORT_V4_FRAME                              ZW_NodeAddDskReportV4Frame;\
  ZW_NODE_ADD_DSK_SET_1BYTE_V4_FRAME                           ZW_NodeAddDskSet1byteV4Frame;\
  ZW_NODE_ADD_DSK_SET_2BYTE_V4_FRAME                           ZW_NodeAddDskSet2byteV4Frame;\
  ZW_NODE_ADD_DSK_SET_3BYTE_V4_FRAME                           ZW_NodeAddDskSet3byteV4Frame;\
  ZW_NODE_ADD_DSK_SET_4BYTE_V4_FRAME                           ZW_NodeAddDskSet4byteV4Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_1BYTE_V4_FRAME            ZW_SmartStartJoinStartedReport1byteV4Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_2BYTE_V4_FRAME            ZW_SmartStartJoinStartedReport2byteV4Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_3BYTE_V4_FRAME            ZW_SmartStartJoinStartedReport3byteV4Frame;\
  ZW_SMART_START_JOIN_STARTED_REPORT_4BYTE_V4_FRAME            ZW_SmartStartJoinStartedReport4byteV4Frame;\
  ZW_INCLUDED_NIF_REPORT_1BYTE_V4_FRAME                        ZW_IncludedNifReport1byteV4Frame;\
  ZW_INCLUDED_NIF_REPORT_2BYTE_V4_FRAME                        ZW_IncludedNifReport2byteV4Frame;\
  ZW_INCLUDED_NIF_REPORT_3BYTE_V4_FRAME                        ZW_IncludedNifReport3byteV4Frame;\
  ZW_INCLUDED_NIF_REPORT_4BYTE_V4_FRAME                        ZW_IncludedNifReport4byteV4Frame;\
  ZW_EXTENDED_NODE_ADD_STATUS_1BYTE_V4_FRAME                   ZW_ExtendedNodeAddStatus1byteV4Frame;\
  ZW_EXTENDED_NODE_ADD_STATUS_2BYTE_V4_FRAME                   ZW_ExtendedNodeAddStatus2byteV4Frame;\
  ZW_EXTENDED_NODE_ADD_STATUS_3BYTE_V4_FRAME                   ZW_ExtendedNodeAddStatus3byteV4Frame;\
  ZW_EXTENDED_NODE_ADD_STATUS_4BYTE_V4_FRAME                   ZW_ExtendedNodeAddStatus4byteV4Frame;\
/* Command class Node Naming */\
  ZW_NODE_NAMING_NODE_LOCATION_REPORT_FRAME                    ZW_NodeNamingNodeLocationReportFrame;\
  ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME                       ZW_NodeNamingNodeLocationSetFrame;\
  ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME                       ZW_NodeNamingNodeLocationGetFrame;\
  ZW_NODE_NAMING_NODE_NAME_GET_FRAME                           ZW_NodeNamingNodeNameGetFrame;\
  ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME                        ZW_NodeNamingNodeNameReportFrame;\
  ZW_NODE_NAMING_NODE_NAME_SET_FRAME                           ZW_NodeNamingNodeNameSetFrame;\
/* Command class Powerlevel */\
  ZW_POWERLEVEL_GET_FRAME                                      ZW_PowerlevelGetFrame;\
  ZW_POWERLEVEL_REPORT_FRAME                                   ZW_PowerlevelReportFrame;\
  ZW_POWERLEVEL_SET_FRAME                                      ZW_PowerlevelSetFrame;\
  ZW_POWERLEVEL_TEST_NODE_GET_FRAME                            ZW_PowerlevelTestNodeGetFrame;\
  ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME                         ZW_PowerlevelTestNodeReportFrame;\
  ZW_POWERLEVEL_TEST_NODE_SET_FRAME                            ZW_PowerlevelTestNodeSetFrame;\
/* Command class Prepayment Encapsulation */\
  ZW_CMD_ENCAPSULATION_1BYTE_FRAME                             ZW_CmdEncapsulation1byteFrame;\
  ZW_CMD_ENCAPSULATION_2BYTE_FRAME                             ZW_CmdEncapsulation2byteFrame;\
  ZW_CMD_ENCAPSULATION_3BYTE_FRAME                             ZW_CmdEncapsulation3byteFrame;\
  ZW_CMD_ENCAPSULATION_4BYTE_FRAME                             ZW_CmdEncapsulation4byteFrame;\
/* Command class Prepayment */\
  ZW_PREPAYMENT_BALANCE_GET_FRAME                              ZW_PrepaymentBalanceGetFrame;\
  ZW_PREPAYMENT_BALANCE_REPORT_FRAME                           ZW_PrepaymentBalanceReportFrame;\
  ZW_PREPAYMENT_SUPPORTED_GET_FRAME                            ZW_PrepaymentSupportedGetFrame;\
  ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME                         ZW_PrepaymentSupportedReportFrame;\
/* Command class Proprietary */\
  ZW_PROPRIETARY_GET_1BYTE_FRAME                               ZW_ProprietaryGet1byteFrame;\
  ZW_PROPRIETARY_GET_2BYTE_FRAME                               ZW_ProprietaryGet2byteFrame;\
  ZW_PROPRIETARY_GET_3BYTE_FRAME                               ZW_ProprietaryGet3byteFrame;\
  ZW_PROPRIETARY_GET_4BYTE_FRAME                               ZW_ProprietaryGet4byteFrame;\
  ZW_PROPRIETARY_REPORT_1BYTE_FRAME                            ZW_ProprietaryReport1byteFrame;\
  ZW_PROPRIETARY_REPORT_2BYTE_FRAME                            ZW_ProprietaryReport2byteFrame;\
  ZW_PROPRIETARY_REPORT_3BYTE_FRAME                            ZW_ProprietaryReport3byteFrame;\
  ZW_PROPRIETARY_REPORT_4BYTE_FRAME                            ZW_ProprietaryReport4byteFrame;\
  ZW_PROPRIETARY_SET_1BYTE_FRAME                               ZW_ProprietarySet1byteFrame;\
  ZW_PROPRIETARY_SET_2BYTE_FRAME                               ZW_ProprietarySet2byteFrame;\
  ZW_PROPRIETARY_SET_3BYTE_FRAME                               ZW_ProprietarySet3byteFrame;\
  ZW_PROPRIETARY_SET_4BYTE_FRAME                               ZW_ProprietarySet4byteFrame;\
/* Command class Protection */\
  ZW_PROTECTION_GET_FRAME                                      ZW_ProtectionGetFrame;\
  ZW_PROTECTION_REPORT_FRAME                                   ZW_ProtectionReportFrame;\
  ZW_PROTECTION_SET_FRAME                                      ZW_ProtectionSetFrame;\
/* Command class Protection V2 */\
  ZW_PROTECTION_EC_GET_V2_FRAME                                ZW_ProtectionEcGetV2Frame;\
  ZW_PROTECTION_EC_REPORT_V2_FRAME                             ZW_ProtectionEcReportV2Frame;\
  ZW_PROTECTION_EC_SET_V2_FRAME                                ZW_ProtectionEcSetV2Frame;\
  ZW_PROTECTION_GET_V2_FRAME                                   ZW_ProtectionGetV2Frame;\
  ZW_PROTECTION_REPORT_V2_FRAME                                ZW_ProtectionReportV2Frame;\
  ZW_PROTECTION_SET_V2_FRAME                                   ZW_ProtectionSetV2Frame;\
  ZW_PROTECTION_SUPPORTED_GET_V2_FRAME                         ZW_ProtectionSupportedGetV2Frame;\
  ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME                      ZW_ProtectionSupportedReportV2Frame;\
  ZW_PROTECTION_TIMEOUT_GET_V2_FRAME                           ZW_ProtectionTimeoutGetV2Frame;\
  ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME                        ZW_ProtectionTimeoutReportV2Frame;\
  ZW_PROTECTION_TIMEOUT_SET_V2_FRAME                           ZW_ProtectionTimeoutSetV2Frame;\
/* Command class Rate Tbl Config */\
  ZW_RATE_TBL_REMOVE_1BYTE_FRAME                               ZW_RateTblRemove1byteFrame;\
  ZW_RATE_TBL_REMOVE_2BYTE_FRAME                               ZW_RateTblRemove2byteFrame;\
  ZW_RATE_TBL_REMOVE_3BYTE_FRAME                               ZW_RateTblRemove3byteFrame;\
  ZW_RATE_TBL_REMOVE_4BYTE_FRAME                               ZW_RateTblRemove4byteFrame;\
  ZW_RATE_TBL_SET_1BYTE_FRAME                                  ZW_RateTblSet1byteFrame;\
  ZW_RATE_TBL_SET_2BYTE_FRAME                                  ZW_RateTblSet2byteFrame;\
  ZW_RATE_TBL_SET_3BYTE_FRAME                                  ZW_RateTblSet3byteFrame;\
  ZW_RATE_TBL_SET_4BYTE_FRAME                                  ZW_RateTblSet4byteFrame;\
/* Command class Rate Tbl Monitor */\
  ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME                            ZW_RateTblActiveRateGetFrame;\
  ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME                         ZW_RateTblActiveRateReportFrame;\
  ZW_RATE_TBL_CURRENT_DATA_GET_FRAME                           ZW_RateTblCurrentDataGetFrame;\
  VG_RATE_TBL_CURRENT_DATA_REPORT_VG                           VG_RateTblCurrentDataReportVGroup;\
  ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME                  ZW_RateTblCurrentDataReport1byteFrame;\
  ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME                  ZW_RateTblCurrentDataReport2byteFrame;\
  ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME                  ZW_RateTblCurrentDataReport3byteFrame;\
  ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME                  ZW_RateTblCurrentDataReport4byteFrame;\
  ZW_RATE_TBL_GET_FRAME                                        ZW_RateTblGetFrame;\
  ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME                        ZW_RateTblHistoricalDataGetFrame;\
  VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG                        VG_RateTblHistoricalDataReportVGroup;\
  ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME               ZW_RateTblHistoricalDataReport1byteFrame;\
  ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME               ZW_RateTblHistoricalDataReport2byteFrame;\
  ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME               ZW_RateTblHistoricalDataReport3byteFrame;\
  ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME               ZW_RateTblHistoricalDataReport4byteFrame;\
  ZW_RATE_TBL_REPORT_1BYTE_FRAME                               ZW_RateTblReport1byteFrame;\
  ZW_RATE_TBL_REPORT_2BYTE_FRAME                               ZW_RateTblReport2byteFrame;\
  ZW_RATE_TBL_REPORT_3BYTE_FRAME                               ZW_RateTblReport3byteFrame;\
  ZW_RATE_TBL_REPORT_4BYTE_FRAME                               ZW_RateTblReport4byteFrame;\
  ZW_RATE_TBL_SUPPORTED_GET_FRAME                              ZW_RateTblSupportedGetFrame;\
  ZW_RATE_TBL_SUPPORTED_REPORT_FRAME                           ZW_RateTblSupportedReportFrame;\
/* Command class Remote Association Activate */\
  ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME                         ZW_RemoteAssociationActivateFrame;\
/* Command class Remote Association */\
  ZW_REMOTE_ASSOCIATION_CONFIGURATION_GET_FRAME                ZW_RemoteAssociationConfigurationGetFrame;\
  ZW_REMOTE_ASSOCIATION_CONFIGURATION_REPORT_FRAME             ZW_RemoteAssociationConfigurationReportFrame;\
  ZW_REMOTE_ASSOCIATION_CONFIGURATION_SET_FRAME                ZW_RemoteAssociationConfigurationSetFrame;\
/* Command class Scene Activation */\
  ZW_SCENE_ACTIVATION_SET_FRAME                                ZW_SceneActivationSetFrame;\
/* Command class Scene Actuator Conf */\
  ZW_SCENE_ACTUATOR_CONF_GET_FRAME                             ZW_SceneActuatorConfGetFrame;\
  ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME                          ZW_SceneActuatorConfReportFrame;\
  ZW_SCENE_ACTUATOR_CONF_SET_FRAME                             ZW_SceneActuatorConfSetFrame;\
/* Command class Scene Controller Conf */\
  ZW_SCENE_CONTROLLER_CONF_GET_FRAME                           ZW_SceneControllerConfGetFrame;\
  ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME                        ZW_SceneControllerConfReportFrame;\
  ZW_SCENE_CONTROLLER_CONF_SET_FRAME                           ZW_SceneControllerConfSetFrame;\
/* Command class Schedule Entry Lock */\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_FRAME                  ZW_ScheduleEntryLockEnableAllSetFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME                      ZW_ScheduleEntryLockEnableSetFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FRAME                    ZW_ScheduleEntryLockWeekDayGetFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_FRAME                 ZW_ScheduleEntryLockWeekDayReportFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FRAME                    ZW_ScheduleEntryLockWeekDaySetFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FRAME                    ZW_ScheduleEntryLockYearDayGetFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_FRAME                 ZW_ScheduleEntryLockYearDayReportFrame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FRAME                    ZW_ScheduleEntryLockYearDaySetFrame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_FRAME                   ZW_ScheduleEntryTypeSupportedGetFrame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_FRAME                ZW_ScheduleEntryTypeSupportedReportFrame;\
/* Command class Schedule Entry Lock V2 */\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2_FRAME               ZW_ScheduleEntryLockEnableAllSetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_FRAME                   ZW_ScheduleEntryLockEnableSetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2_FRAME              ZW_ScheduleEntryLockTimeOffsetGetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2_FRAME           ZW_ScheduleEntryLockTimeOffsetReportV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2_FRAME              ZW_ScheduleEntryLockTimeOffsetSetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2_FRAME                 ZW_ScheduleEntryLockWeekDayGetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2_FRAME              ZW_ScheduleEntryLockWeekDayReportV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2_FRAME                 ZW_ScheduleEntryLockWeekDaySetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2_FRAME                 ZW_ScheduleEntryLockYearDayGetV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2_FRAME              ZW_ScheduleEntryLockYearDayReportV2Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2_FRAME                 ZW_ScheduleEntryLockYearDaySetV2Frame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2_FRAME                ZW_ScheduleEntryTypeSupportedGetV2Frame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2_FRAME             ZW_ScheduleEntryTypeSupportedReportV2Frame;\
/* Command class Schedule Entry Lock V3 */\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3_FRAME               ZW_ScheduleEntryLockEnableAllSetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_FRAME                   ZW_ScheduleEntryLockEnableSetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3_FRAME              ZW_ScheduleEntryLockTimeOffsetGetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3_FRAME           ZW_ScheduleEntryLockTimeOffsetReportV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3_FRAME              ZW_ScheduleEntryLockTimeOffsetSetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3_FRAME                 ZW_ScheduleEntryLockWeekDayGetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3_FRAME              ZW_ScheduleEntryLockWeekDayReportV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3_FRAME                 ZW_ScheduleEntryLockWeekDaySetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3_FRAME                 ZW_ScheduleEntryLockYearDayGetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3_FRAME              ZW_ScheduleEntryLockYearDayReportV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3_FRAME                 ZW_ScheduleEntryLockYearDaySetV3Frame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3_FRAME                ZW_ScheduleEntryTypeSupportedGetV3Frame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3_FRAME             ZW_ScheduleEntryTypeSupportedReportV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3_FRAME          ZW_ScheduleEntryLockDailyRepeatingGetV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3_FRAME       ZW_ScheduleEntryLockDailyRepeatingReportV3Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3_FRAME          ZW_ScheduleEntryLockDailyRepeatingSetV3Frame;\
/* Command class Schedule Entry Lock V4 */\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V4_FRAME               ZW_ScheduleEntryLockEnableAllSetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4_FRAME                   ZW_ScheduleEntryLockEnableSetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V4_FRAME              ZW_ScheduleEntryLockTimeOffsetGetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V4_FRAME           ZW_ScheduleEntryLockTimeOffsetReportV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V4_FRAME              ZW_ScheduleEntryLockTimeOffsetSetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V4_FRAME                 ZW_ScheduleEntryLockWeekDayGetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V4_FRAME              ZW_ScheduleEntryLockWeekDayReportV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V4_FRAME                 ZW_ScheduleEntryLockWeekDaySetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V4_FRAME                 ZW_ScheduleEntryLockYearDayGetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V4_FRAME              ZW_ScheduleEntryLockYearDayReportV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V4_FRAME                 ZW_ScheduleEntryLockYearDaySetV4Frame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V4_FRAME                ZW_ScheduleEntryTypeSupportedGetV4Frame;\
  ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V4_FRAME             ZW_ScheduleEntryTypeSupportedReportV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4_FRAME          ZW_ScheduleEntryLockDailyRepeatingGetV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4_FRAME       ZW_ScheduleEntryLockDailyRepeatingReportV4Frame;\
  ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4_FRAME          ZW_ScheduleEntryLockDailyRepeatingSetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4_FRAME          ZW_ExtendedScheduleEntryLockEnableSetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_SET_V4_FRAME ZW_ExtendedScheduleEntryLockWeekDayScheduleSetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_GET_V4_FRAME ZW_ExtendedScheduleEntryLockWeekDayScheduleGetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_REPORT_V4_FRAME ZW_ExtendedScheduleEntryLockWeekDayScheduleReportV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_SET_V4_FRAME ZW_ExtendedScheduleEntryLockYearDayScheduleSetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_GET_V4_FRAME ZW_ExtendedScheduleEntryLockYearDayScheduleGetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_REPORT_V4_FRAME ZW_ExtendedScheduleEntryLockYearDayScheduleReportV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4_FRAME ZW_ExtendedScheduleEntryLockDailyRepeatingSetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4_FRAME ZW_ExtendedScheduleEntryLockDailyRepeatingGetV4Frame;\
  ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4_FRAME ZW_ExtendedScheduleEntryLockDailyRepeatingReportV4Frame;\
/* Command class Screen Attributes */\
  ZW_SCREEN_ATTRIBUTES_GET_FRAME                               ZW_ScreenAttributesGetFrame;\
  ZW_SCREEN_ATTRIBUTES_REPORT_FRAME                            ZW_ScreenAttributesReportFrame;\
/* Command class Screen Attributes V2 */\
  ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME                            ZW_ScreenAttributesGetV2Frame;\
  ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME                         ZW_ScreenAttributesReportV2Frame;\
  ZW_SCREEN_ATTRIBUTES_REPORT_LEGACY_V2_FRAME                  ZW_ScreenAttributesReportLegacyV2Frame;\
/* Command class Screen Md */\
  ZW_SCREEN_MD_GET_FRAME                                       ZW_ScreenMdGetFrame;\
  VG_SCREEN_MD_REPORT_1BYTE_VG                                 VG_ScreenMdReport1byteVGroup;\
  VG_SCREEN_MD_REPORT_2BYTE_VG                                 VG_ScreenMdReport2byteVGroup;\
  VG_SCREEN_MD_REPORT_3BYTE_VG                                 VG_ScreenMdReport3byteVGroup;\
  VG_SCREEN_MD_REPORT_4BYTE_VG                                 VG_ScreenMdReport4byteVGroup;\
  ZW_SCREEN_MD_REPORT_1BYTE_FRAME                              ZW_ScreenMdReport1byteFrame;\
  ZW_SCREEN_MD_REPORT_2BYTE_FRAME                              ZW_ScreenMdReport2byteFrame;\
  ZW_SCREEN_MD_REPORT_3BYTE_FRAME                              ZW_ScreenMdReport3byteFrame;\
  ZW_SCREEN_MD_REPORT_4BYTE_FRAME                              ZW_ScreenMdReport4byteFrame;\
/* Command class Screen Md V2 */\
  ZW_SCREEN_MD_GET_V2_FRAME                                    ZW_ScreenMdGetV2Frame;\
  VG_SCREEN_MD_REPORT_1BYTE_V2_VG                              VG_ScreenMdReport1byteV2VGroup;\
  VG_SCREEN_MD_REPORT_2BYTE_V2_VG                              VG_ScreenMdReport2byteV2VGroup;\
  VG_SCREEN_MD_REPORT_3BYTE_V2_VG                              VG_ScreenMdReport3byteV2VGroup;\
  VG_SCREEN_MD_REPORT_4BYTE_V2_VG                              VG_ScreenMdReport4byteV2VGroup;\
  ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME                           ZW_ScreenMdReport1byteV2Frame;\
  ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME                           ZW_ScreenMdReport2byteV2Frame;\
  ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME                           ZW_ScreenMdReport3byteV2Frame;\
  ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME                           ZW_ScreenMdReport4byteV2Frame;\
  VG_SCREEN_MD_REPORT_LEGACY_1BYTE_V2_VG                       VG_ScreenMdReportLegacy1byteV2VGroup;\
  VG_SCREEN_MD_REPORT_LEGACY_2BYTE_V2_VG                       VG_ScreenMdReportLegacy2byteV2VGroup;\
  VG_SCREEN_MD_REPORT_LEGACY_3BYTE_V2_VG                       VG_ScreenMdReportLegacy3byteV2VGroup;\
  VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG                       VG_ScreenMdReportLegacy4byteV2VGroup;\
  ZW_SCREEN_MD_REPORT_LEGACY_1BYTE_V2_FRAME                    ZW_ScreenMdReportLegacy1byteV2Frame;\
  ZW_SCREEN_MD_REPORT_LEGACY_2BYTE_V2_FRAME                    ZW_ScreenMdReportLegacy2byteV2Frame;\
  ZW_SCREEN_MD_REPORT_LEGACY_3BYTE_V2_FRAME                    ZW_ScreenMdReportLegacy3byteV2Frame;\
  ZW_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_FRAME                    ZW_ScreenMdReportLegacy4byteV2Frame;\
/* Command class Security Panel Mode */\
  ZW_SECURITY_PANEL_MODE_GET_FRAME                             ZW_SecurityPanelModeGetFrame;\
  ZW_SECURITY_PANEL_MODE_REPORT_FRAME                          ZW_SecurityPanelModeReportFrame;\
  ZW_SECURITY_PANEL_MODE_SET_FRAME                             ZW_SecurityPanelModeSetFrame;\
  ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_FRAME                   ZW_SecurityPanelModeSupportedGetFrame;\
  ZW_SECURITY_PANEL_MODE_SUPPORTED_REPORT_FRAME                ZW_SecurityPanelModeSupportedReportFrame;\
/* Command class Security Panel Zone Sensor */\
  ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT_FRAME         ZW_CommandClassSecurityPanelZoneSensorInstalledReportFrame;\
  ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET_FRAME                 ZW_SecurityPanelZoneSensorTypeGetFrame;\
  ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT_FRAME              ZW_SecurityPanelZoneSensorTypeReportFrame;\
  ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET_FRAME            ZW_SecurityPanelZoneSensorInstalledGetFrame;\
  ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GET_FRAME                ZW_SecurityPanelZoneSensorStateGetFrame;\
  ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT_FRAME             ZW_SecurityPanelZoneSensorStateReportFrame;\
/* Command class Security Panel Zone */\
  ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET_FRAME            ZW_SecurityPanelZoneNumberSupportedGetFrame;\
  ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME                       ZW_SecurityPanelZoneStateGetFrame;\
  ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FRAME                    ZW_SecurityPanelZoneStateReportFrame;\
  ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPORT_FRAME                ZW_SecurityPanelZoneSupportedReportFrame;\
  ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME                        ZW_SecurityPanelZoneTypeGetFrame;\
  ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAME                     ZW_SecurityPanelZoneTypeReportFrame;\
/* Command class Security */\
  ZW_NETWORK_KEY_SET_1BYTE_FRAME                               ZW_NetworkKeySet1byteFrame;\
  ZW_NETWORK_KEY_SET_2BYTE_FRAME                               ZW_NetworkKeySet2byteFrame;\
  ZW_NETWORK_KEY_SET_3BYTE_FRAME                               ZW_NetworkKeySet3byteFrame;\
  ZW_NETWORK_KEY_SET_4BYTE_FRAME                               ZW_NetworkKeySet4byteFrame;\
  ZW_NETWORK_KEY_VERIFY_FRAME                                  ZW_NetworkKeyVerifyFrame;\
  ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAME                     ZW_SecurityCommandsSupportedGetFrame;\
  ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME            ZW_SecurityCommandsSupportedReport1byteFrame;\
  ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME            ZW_SecurityCommandsSupportedReport2byteFrame;\
  ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME            ZW_SecurityCommandsSupportedReport3byteFrame;\
  ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME            ZW_SecurityCommandsSupportedReport4byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYTE_FRAME                ZW_SecurityMessageEncapsulation1byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYTE_FRAME                ZW_SecurityMessageEncapsulation2byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYTE_FRAME                ZW_SecurityMessageEncapsulation3byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYTE_FRAME                ZW_SecurityMessageEncapsulation4byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_1BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet1byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_2BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet2byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_3BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet3byteFrame;\
  ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_4BYTE_FRAME      ZW_SecurityMessageEncapsulationNonceGet4byteFrame;\
  ZW_SECURITY_NONCE_GET_FRAME                                  ZW_SecurityNonceGetFrame;\
  ZW_SECURITY_NONCE_REPORT_FRAME                               ZW_SecurityNonceReportFrame;\
  ZW_SECURITY_SCHEME_GET_FRAME                                 ZW_SecuritySchemeGetFrame;\
  ZW_SECURITY_SCHEME_INHERIT_FRAME                             ZW_SecuritySchemeInheritFrame;\
  ZW_SECURITY_SCHEME_REPORT_FRAME                              ZW_SecuritySchemeReportFrame;\
/* Command class Sensor Alarm */\
  ZW_SENSOR_ALARM_GET_FRAME                                    ZW_SensorAlarmGetFrame;\
  ZW_SENSOR_ALARM_REPORT_FRAME                                 ZW_SensorAlarmReportFrame;\
  ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME                          ZW_SensorAlarmSupportedGetFrame;\
  ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE_FRAME                 ZW_SensorAlarmSupportedReport1byteFrame;\
  ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE_FRAME                 ZW_SensorAlarmSupportedReport2byteFrame;\
  ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE_FRAME                 ZW_SensorAlarmSupportedReport3byteFrame;\
  ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE_FRAME                 ZW_SensorAlarmSupportedReport4byteFrame;\
/* Command class Sensor Binary */\
  ZW_SENSOR_BINARY_GET_FRAME                                   ZW_SensorBinaryGetFrame;\
  ZW_SENSOR_BINARY_REPORT_FRAME                                ZW_SensorBinaryReportFrame;\
/* Command class Sensor Binary V2 */\
  ZW_SENSOR_BINARY_GET_V2_FRAME                                ZW_SensorBinaryGetV2Frame;\
  ZW_SENSOR_BINARY_REPORT_V2_FRAME                             ZW_SensorBinaryReportV2Frame;\
  ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2_FRAME               ZW_SensorBinarySupportedGetSensorV2Frame;\
  ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_1BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport1byteV2Frame;\
  ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_2BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport2byteV2Frame;\
  ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_3BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport3byteV2Frame;\
  ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_4BYTE_V2_FRAME      ZW_SensorBinarySupportedSensorReport4byteV2Frame;\

#define ZW_FRAME_COLLECTION_MACRO4\
/* Command class Sensor Configuration */\
  ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME                            ZW_SensorTriggerLevelGetFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_FRAME                   ZW_SensorTriggerLevelReport1byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_FRAME                   ZW_SensorTriggerLevelReport2byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_FRAME                   ZW_SensorTriggerLevelReport3byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_FRAME                   ZW_SensorTriggerLevelReport4byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME                      ZW_SensorTriggerLevelSet1byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME                      ZW_SensorTriggerLevelSet2byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME                      ZW_SensorTriggerLevelSet3byteFrame;\
  ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME                      ZW_SensorTriggerLevelSet4byteFrame;\
/* Command class Sensor Multilevel */\
  ZW_SENSOR_MULTILEVEL_GET_FRAME                               ZW_SensorMultilevelGetFrame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME                      ZW_SensorMultilevelReport1byteFrame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME                      ZW_SensorMultilevelReport2byteFrame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME                      ZW_SensorMultilevelReport3byteFrame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME                      ZW_SensorMultilevelReport4byteFrame;\
/* Command class Sensor Multilevel V2 */\
  ZW_SENSOR_MULTILEVEL_GET_V2_FRAME                            ZW_SensorMultilevelGetV2Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_FRAME                   ZW_SensorMultilevelReport1byteV2Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_FRAME                   ZW_SensorMultilevelReport2byteV2Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_FRAME                   ZW_SensorMultilevelReport3byteV2Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_FRAME                   ZW_SensorMultilevelReport4byteV2Frame;\
/* Command class Sensor Multilevel V3 */\
  ZW_SENSOR_MULTILEVEL_GET_V3_FRAME                            ZW_SensorMultilevelGetV3Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_FRAME                   ZW_SensorMultilevelReport1byteV3Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_FRAME                   ZW_SensorMultilevelReport2byteV3Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_FRAME                   ZW_SensorMultilevelReport3byteV3Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_FRAME                   ZW_SensorMultilevelReport4byteV3Frame;\
/* Command class Sensor Multilevel V4 */\
  ZW_SENSOR_MULTILEVEL_GET_V4_FRAME                            ZW_SensorMultilevelGetV4Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_FRAME                   ZW_SensorMultilevelReport1byteV4Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_FRAME                   ZW_SensorMultilevelReport2byteV4Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_FRAME                   ZW_SensorMultilevelReport3byteV4Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_FRAME                   ZW_SensorMultilevelReport4byteV4Frame;\
/* Command class Sensor Multilevel V5 */\
  ZW_SENSOR_MULTILEVEL_GET_V5_FRAME                            ZW_SensorMultilevelGetV5Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_FRAME                   ZW_SensorMultilevelReport1byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_FRAME                   ZW_SensorMultilevelReport2byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_FRAME                   ZW_SensorMultilevelReport3byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_FRAME                   ZW_SensorMultilevelReport4byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5_FRAME           ZW_SensorMultilevelSupportedGetSensorV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport1byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport2byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport3byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V5_FRAME  ZW_SensorMultilevelSupportedSensorReport4byteV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5_FRAME            ZW_SensorMultilevelSupportedGetScaleV5Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5_FRAME         ZW_SensorMultilevelSupportedScaleReportV5Frame;\
/* Command class Sensor Multilevel V6 */\
  ZW_SENSOR_MULTILEVEL_GET_V6_FRAME                            ZW_SensorMultilevelGetV6Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_FRAME                   ZW_SensorMultilevelReport1byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_FRAME                   ZW_SensorMultilevelReport2byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_FRAME                   ZW_SensorMultilevelReport3byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_FRAME                   ZW_SensorMultilevelReport4byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6_FRAME           ZW_SensorMultilevelSupportedGetSensorV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport1byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport2byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport3byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V6_FRAME  ZW_SensorMultilevelSupportedSensorReport4byteV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6_FRAME            ZW_SensorMultilevelSupportedGetScaleV6Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6_FRAME         ZW_SensorMultilevelSupportedScaleReportV6Frame;\
/* Command class Sensor Multilevel V7 */\
  ZW_SENSOR_MULTILEVEL_GET_V7_FRAME                            ZW_SensorMultilevelGetV7Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V7_FRAME                   ZW_SensorMultilevelReport1byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V7_FRAME                   ZW_SensorMultilevelReport2byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V7_FRAME                   ZW_SensorMultilevelReport3byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V7_FRAME                   ZW_SensorMultilevelReport4byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V7_FRAME           ZW_SensorMultilevelSupportedGetSensorV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V7_FRAME  ZW_SensorMultilevelSupportedSensorReport1byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V7_FRAME  ZW_SensorMultilevelSupportedSensorReport2byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V7_FRAME  ZW_SensorMultilevelSupportedSensorReport3byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V7_FRAME  ZW_SensorMultilevelSupportedSensorReport4byteV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V7_FRAME            ZW_SensorMultilevelSupportedGetScaleV7Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V7_FRAME         ZW_SensorMultilevelSupportedScaleReportV7Frame;\
/* Command class Sensor Multilevel V8 */\
  ZW_SENSOR_MULTILEVEL_GET_V8_FRAME                            ZW_SensorMultilevelGetV8Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V8_FRAME                   ZW_SensorMultilevelReport1byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V8_FRAME                   ZW_SensorMultilevelReport2byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V8_FRAME                   ZW_SensorMultilevelReport3byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V8_FRAME                   ZW_SensorMultilevelReport4byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V8_FRAME           ZW_SensorMultilevelSupportedGetSensorV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V8_FRAME  ZW_SensorMultilevelSupportedSensorReport1byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V8_FRAME  ZW_SensorMultilevelSupportedSensorReport2byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V8_FRAME  ZW_SensorMultilevelSupportedSensorReport3byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V8_FRAME  ZW_SensorMultilevelSupportedSensorReport4byteV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V8_FRAME            ZW_SensorMultilevelSupportedGetScaleV8Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V8_FRAME         ZW_SensorMultilevelSupportedScaleReportV8Frame;\
/* Command class Sensor Multilevel V9 */\
  ZW_SENSOR_MULTILEVEL_GET_V9_FRAME                            ZW_SensorMultilevelGetV9Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V9_FRAME                   ZW_SensorMultilevelReport1byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V9_FRAME                   ZW_SensorMultilevelReport2byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V9_FRAME                   ZW_SensorMultilevelReport3byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V9_FRAME                   ZW_SensorMultilevelReport4byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V9_FRAME           ZW_SensorMultilevelSupportedGetSensorV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V9_FRAME  ZW_SensorMultilevelSupportedSensorReport1byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V9_FRAME  ZW_SensorMultilevelSupportedSensorReport2byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V9_FRAME  ZW_SensorMultilevelSupportedSensorReport3byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V9_FRAME  ZW_SensorMultilevelSupportedSensorReport4byteV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V9_FRAME            ZW_SensorMultilevelSupportedGetScaleV9Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V9_FRAME         ZW_SensorMultilevelSupportedScaleReportV9Frame;\
/* Command class Sensor Multilevel V10 */\
  ZW_SENSOR_MULTILEVEL_GET_V10_FRAME                           ZW_SensorMultilevelGetV10Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V10_FRAME                  ZW_SensorMultilevelReport1byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V10_FRAME                  ZW_SensorMultilevelReport2byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V10_FRAME                  ZW_SensorMultilevelReport3byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V10_FRAME                  ZW_SensorMultilevelReport4byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V10_FRAME          ZW_SensorMultilevelSupportedGetSensorV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V10_FRAME ZW_SensorMultilevelSupportedSensorReport1byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V10_FRAME ZW_SensorMultilevelSupportedSensorReport2byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V10_FRAME ZW_SensorMultilevelSupportedSensorReport3byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V10_FRAME ZW_SensorMultilevelSupportedSensorReport4byteV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V10_FRAME           ZW_SensorMultilevelSupportedGetScaleV10Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V10_FRAME        ZW_SensorMultilevelSupportedScaleReportV10Frame;\
/* Command class Sensor Multilevel V11 */\
  ZW_SENSOR_MULTILEVEL_GET_V11_FRAME                           ZW_SensorMultilevelGetV11Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V11_FRAME                  ZW_SensorMultilevelReport1byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V11_FRAME                  ZW_SensorMultilevelReport2byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V11_FRAME                  ZW_SensorMultilevelReport3byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V11_FRAME                  ZW_SensorMultilevelReport4byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V11_FRAME          ZW_SensorMultilevelSupportedGetSensorV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V11_FRAME ZW_SensorMultilevelSupportedSensorReport1byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V11_FRAME ZW_SensorMultilevelSupportedSensorReport2byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V11_FRAME ZW_SensorMultilevelSupportedSensorReport3byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V11_FRAME ZW_SensorMultilevelSupportedSensorReport4byteV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V11_FRAME           ZW_SensorMultilevelSupportedGetScaleV11Frame;\
  ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V11_FRAME        ZW_SensorMultilevelSupportedScaleReportV11Frame;\
/* Command class Silence Alarm */\
  ZW_SENSOR_ALARM_SET_1BYTE_FRAME                              ZW_SensorAlarmSet1byteFrame;\
  ZW_SENSOR_ALARM_SET_2BYTE_FRAME                              ZW_SensorAlarmSet2byteFrame;\
  ZW_SENSOR_ALARM_SET_3BYTE_FRAME                              ZW_SensorAlarmSet3byteFrame;\
  ZW_SENSOR_ALARM_SET_4BYTE_FRAME                              ZW_SensorAlarmSet4byteFrame;\
/* Command class Simple Av Control */\
  ZW_SIMPLE_AV_CONTROL_GET_FRAME                               ZW_SimpleAvControlGetFrame;\
  ZW_SIMPLE_AV_CONTROL_REPORT_FRAME                            ZW_SimpleAvControlReportFrame;\
  VG_SIMPLE_AV_CONTROL_SET_VG                                  VG_SimpleAvControlSetVGroup;\
  ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME                         ZW_SimpleAvControlSet1byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME                         ZW_SimpleAvControlSet2byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME                         ZW_SimpleAvControlSet3byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME                         ZW_SimpleAvControlSet4byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAME                     ZW_SimpleAvControlSupportedGetFrame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_FRAME            ZW_SimpleAvControlSupportedReport1byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_FRAME            ZW_SimpleAvControlSupportedReport2byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_FRAME            ZW_SimpleAvControlSupportedReport3byteFrame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_FRAME            ZW_SimpleAvControlSupportedReport4byteFrame;\
/* Command class Simple Av Control V2 */\
  ZW_SIMPLE_AV_CONTROL_GET_V2_FRAME                            ZW_SimpleAvControlGetV2Frame;\
  ZW_SIMPLE_AV_CONTROL_REPORT_V2_FRAME                         ZW_SimpleAvControlReportV2Frame;\
  VG_SIMPLE_AV_CONTROL_SET_V2_VG                               VG_SimpleAvControlSetV2VGroup;\
  ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V2_FRAME                      ZW_SimpleAvControlSet1byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V2_FRAME                      ZW_SimpleAvControlSet2byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V2_FRAME                      ZW_SimpleAvControlSet3byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V2_FRAME                      ZW_SimpleAvControlSet4byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V2_FRAME                  ZW_SimpleAvControlSupportedGetV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V2_FRAME         ZW_SimpleAvControlSupportedReport1byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V2_FRAME         ZW_SimpleAvControlSupportedReport2byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V2_FRAME         ZW_SimpleAvControlSupportedReport3byteV2Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V2_FRAME         ZW_SimpleAvControlSupportedReport4byteV2Frame;\
/* Command class Simple Av Control V3 */\
  ZW_SIMPLE_AV_CONTROL_GET_V3_FRAME                            ZW_SimpleAvControlGetV3Frame;\
  ZW_SIMPLE_AV_CONTROL_REPORT_V3_FRAME                         ZW_SimpleAvControlReportV3Frame;\
  VG_SIMPLE_AV_CONTROL_SET_V3_VG                               VG_SimpleAvControlSetV3VGroup;\
  ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V3_FRAME                      ZW_SimpleAvControlSet1byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V3_FRAME                      ZW_SimpleAvControlSet2byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V3_FRAME                      ZW_SimpleAvControlSet3byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V3_FRAME                      ZW_SimpleAvControlSet4byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V3_FRAME                  ZW_SimpleAvControlSupportedGetV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V3_FRAME         ZW_SimpleAvControlSupportedReport1byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V3_FRAME         ZW_SimpleAvControlSupportedReport2byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V3_FRAME         ZW_SimpleAvControlSupportedReport3byteV3Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V3_FRAME         ZW_SimpleAvControlSupportedReport4byteV3Frame;\
/* Command class Simple Av Control V4 */\
  ZW_SIMPLE_AV_CONTROL_GET_V4_FRAME                            ZW_SimpleAvControlGetV4Frame;\
  ZW_SIMPLE_AV_CONTROL_REPORT_V4_FRAME                         ZW_SimpleAvControlReportV4Frame;\
  VG_SIMPLE_AV_CONTROL_SET_V4_VG                               VG_SimpleAvControlSetV4VGroup;\
  ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V4_FRAME                      ZW_SimpleAvControlSet1byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V4_FRAME                      ZW_SimpleAvControlSet2byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V4_FRAME                      ZW_SimpleAvControlSet3byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V4_FRAME                      ZW_SimpleAvControlSet4byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V4_FRAME                  ZW_SimpleAvControlSupportedGetV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V4_FRAME         ZW_SimpleAvControlSupportedReport1byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V4_FRAME         ZW_SimpleAvControlSupportedReport2byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V4_FRAME         ZW_SimpleAvControlSupportedReport3byteV4Frame;\
  ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V4_FRAME         ZW_SimpleAvControlSupportedReport4byteV4Frame;\
/* Command class Switch All */\
  ZW_SWITCH_ALL_GET_FRAME                                      ZW_SwitchAllGetFrame;\
  ZW_SWITCH_ALL_OFF_FRAME                                      ZW_SwitchAllOffFrame;\
  ZW_SWITCH_ALL_ON_FRAME                                       ZW_SwitchAllOnFrame;\
  ZW_SWITCH_ALL_REPORT_FRAME                                   ZW_SwitchAllReportFrame;\
  ZW_SWITCH_ALL_SET_FRAME                                      ZW_SwitchAllSetFrame;\
/* Command class Switch Binary */\
  ZW_SWITCH_BINARY_GET_FRAME                                   ZW_SwitchBinaryGetFrame;\
  ZW_SWITCH_BINARY_REPORT_FRAME                                ZW_SwitchBinaryReportFrame;\
  ZW_SWITCH_BINARY_SET_FRAME                                   ZW_SwitchBinarySetFrame;\
/* Command class Switch Binary V2 */\
  ZW_SWITCH_BINARY_GET_V2_FRAME                                ZW_SwitchBinaryGetV2Frame;\
  ZW_SWITCH_BINARY_REPORT_V2_FRAME                             ZW_SwitchBinaryReportV2Frame;\
  ZW_SWITCH_BINARY_SET_V2_FRAME                                ZW_SwitchBinarySetV2Frame;\
/* Command class Switch Multilevel */\
  ZW_SWITCH_MULTILEVEL_GET_FRAME                               ZW_SwitchMultilevelGetFrame;\
  ZW_SWITCH_MULTILEVEL_REPORT_FRAME                            ZW_SwitchMultilevelReportFrame;\
  ZW_SWITCH_MULTILEVEL_SET_FRAME                               ZW_SwitchMultilevelSetFrame;\
  ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_FRAME                ZW_SwitchMultilevelStartLevelChangeFrame;\
  ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME                 ZW_SwitchMultilevelStopLevelChangeFrame;\
/* Command class Switch Multilevel V2 */\
  ZW_SWITCH_MULTILEVEL_GET_V2_FRAME                            ZW_SwitchMultilevelGetV2Frame;\
  ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME                         ZW_SwitchMultilevelReportV2Frame;\
  ZW_SWITCH_MULTILEVEL_SET_V2_FRAME                            ZW_SwitchMultilevelSetV2Frame;\
  ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2_FRAME             ZW_SwitchMultilevelStartLevelChangeV2Frame;\
  ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2_FRAME              ZW_SwitchMultilevelStopLevelChangeV2Frame;\
/* Command class Switch Multilevel V3 */\
  ZW_SWITCH_MULTILEVEL_GET_V3_FRAME                            ZW_SwitchMultilevelGetV3Frame;\
  ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME                         ZW_SwitchMultilevelReportV3Frame;\
  ZW_SWITCH_MULTILEVEL_SET_V3_FRAME                            ZW_SwitchMultilevelSetV3Frame;\
  ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3_FRAME             ZW_SwitchMultilevelStartLevelChangeV3Frame;\
  ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3_FRAME              ZW_SwitchMultilevelStopLevelChangeV3Frame;\
  ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_FRAME                  ZW_SwitchMultilevelSupportedGetV3Frame;\
  ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3_FRAME               ZW_SwitchMultilevelSupportedReportV3Frame;\
/* Command class Switch Multilevel V4 */\
  ZW_SWITCH_MULTILEVEL_GET_V4_FRAME                            ZW_SwitchMultilevelGetV4Frame;\
  ZW_SWITCH_MULTILEVEL_REPORT_V4_FRAME                         ZW_SwitchMultilevelReportV4Frame;\
  ZW_SWITCH_MULTILEVEL_SET_V4_FRAME                            ZW_SwitchMultilevelSetV4Frame;\
  ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V4_FRAME             ZW_SwitchMultilevelStartLevelChangeV4Frame;\
  ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V4_FRAME              ZW_SwitchMultilevelStopLevelChangeV4Frame;\
  ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V4_FRAME                  ZW_SwitchMultilevelSupportedGetV4Frame;\
  ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V4_FRAME               ZW_SwitchMultilevelSupportedReportV4Frame;\
/* Command class Switch Toggle Binary */\
  ZW_SWITCH_TOGGLE_BINARY_SET_FRAME                            ZW_SwitchToggleBinarySetFrame;\
  ZW_SWITCH_TOGGLE_BINARY_GET_FRAME                            ZW_SwitchToggleBinaryGetFrame;\
  ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME                         ZW_SwitchToggleBinaryReportFrame;\
/* Command class Switch Toggle Multilevel */\
  ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME                        ZW_SwitchToggleMultilevelSetFrame;\
  ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME                        ZW_SwitchToggleMultilevelGetFrame;\
  ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAME                     ZW_SwitchToggleMultilevelReportFrame;\
  ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_FRAME         ZW_SwitchToggleMultilevelStartLevelChangeFrame;\
  ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME          ZW_SwitchToggleMultilevelStopLevelChangeFrame;\
/* Command class Tariff Config */\
  ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME                             ZW_TariffTblRemove1byteFrame;\
  ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME                             ZW_TariffTblRemove2byteFrame;\
  ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME                             ZW_TariffTblRemove3byteFrame;\
  ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME                             ZW_TariffTblRemove4byteFrame;\
  ZW_TARIFF_TBL_SET_FRAME                                      ZW_TariffTblSetFrame;\
  ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME                       ZW_TariffTblSupplierSet1byteFrame;\
  ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME                       ZW_TariffTblSupplierSet2byteFrame;\
  ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME                       ZW_TariffTblSupplierSet3byteFrame;\
  ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME                       ZW_TariffTblSupplierSet4byteFrame;\
/* Command class Tariff Tbl Monitor */\
  ZW_TARIFF_TBL_COST_GET_FRAME                                 ZW_TariffTblCostGetFrame;\
  ZW_TARIFF_TBL_COST_REPORT_FRAME                              ZW_TariffTblCostReportFrame;\
  ZW_TARIFF_TBL_GET_FRAME                                      ZW_TariffTblGetFrame;\
  ZW_TARIFF_TBL_REPORT_FRAME                                   ZW_TariffTblReportFrame;\
  ZW_TARIFF_TBL_SUPPLIER_GET_FRAME                             ZW_TariffTblSupplierGetFrame;\
  ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FRAME                    ZW_TariffTblSupplierReport1byteFrame;\
  ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FRAME                    ZW_TariffTblSupplierReport2byteFrame;\
  ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FRAME                    ZW_TariffTblSupplierReport3byteFrame;\
  ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FRAME                    ZW_TariffTblSupplierReport4byteFrame;\
/* Command class Thermostat Fan Mode */\
  ZW_THERMOSTAT_FAN_MODE_GET_FRAME                             ZW_ThermostatFanModeGetFrame;\
  ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME                          ZW_ThermostatFanModeReportFrame;\
  ZW_THERMOSTAT_FAN_MODE_SET_FRAME                             ZW_ThermostatFanModeSetFrame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_FRAME                   ZW_ThermostatFanModeSupportedGetFrame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_FRAME          ZW_ThermostatFanModeSupportedReport1byteFrame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_FRAME          ZW_ThermostatFanModeSupportedReport2byteFrame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_FRAME          ZW_ThermostatFanModeSupportedReport3byteFrame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_FRAME          ZW_ThermostatFanModeSupportedReport4byteFrame;\
/* Command class Thermostat Fan Mode V2 */\
  ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME                          ZW_ThermostatFanModeGetV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME                       ZW_ThermostatFanModeReportV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME                          ZW_ThermostatFanModeSetV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2_FRAME                ZW_ThermostatFanModeSupportedGetV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport1byteV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport2byteV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport3byteV2Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME       ZW_ThermostatFanModeSupportedReport4byteV2Frame;\
/* Command class Thermostat Fan Mode V3 */\
  ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME                          ZW_ThermostatFanModeGetV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME                       ZW_ThermostatFanModeReportV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME                          ZW_ThermostatFanModeSetV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3_FRAME                ZW_ThermostatFanModeSupportedGetV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport1byteV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport2byteV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport3byteV3Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME       ZW_ThermostatFanModeSupportedReport4byteV3Frame;\
/* Command class Thermostat Fan Mode V4 */\
  ZW_THERMOSTAT_FAN_MODE_GET_V4_FRAME                          ZW_ThermostatFanModeGetV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_REPORT_V4_FRAME                       ZW_ThermostatFanModeReportV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_SET_V4_FRAME                          ZW_ThermostatFanModeSetV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V4_FRAME                ZW_ThermostatFanModeSupportedGetV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V4_FRAME       ZW_ThermostatFanModeSupportedReport1byteV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V4_FRAME       ZW_ThermostatFanModeSupportedReport2byteV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V4_FRAME       ZW_ThermostatFanModeSupportedReport3byteV4Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V4_FRAME       ZW_ThermostatFanModeSupportedReport4byteV4Frame;\
/* Command class Thermostat Fan Mode V5 */\
  ZW_THERMOSTAT_FAN_MODE_GET_V5_FRAME                          ZW_ThermostatFanModeGetV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_REPORT_V5_FRAME                       ZW_ThermostatFanModeReportV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_SET_V5_FRAME                          ZW_ThermostatFanModeSetV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V5_FRAME                ZW_ThermostatFanModeSupportedGetV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V5_FRAME       ZW_ThermostatFanModeSupportedReport1byteV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V5_FRAME       ZW_ThermostatFanModeSupportedReport2byteV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V5_FRAME       ZW_ThermostatFanModeSupportedReport3byteV5Frame;\
  ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V5_FRAME       ZW_ThermostatFanModeSupportedReport4byteV5Frame;\
/* Command class Thermostat Fan State */\
  ZW_THERMOSTAT_FAN_STATE_GET_FRAME                            ZW_ThermostatFanStateGetFrame;\
  ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME                         ZW_ThermostatFanStateReportFrame;\
/* Command class Thermostat Fan State V2 */\
  ZW_THERMOSTAT_FAN_STATE_GET_V2_FRAME                         ZW_ThermostatFanStateGetV2Frame;\
  ZW_THERMOSTAT_FAN_STATE_REPORT_V2_FRAME                      ZW_ThermostatFanStateReportV2Frame;\
/* Command class Thermostat Heating */\
  ZW_THERMOSTAT_HEATING_STATUS_REPORT_FRAME                    ZW_ThermostatHeatingStatusReportFrame;\
  ZW_THERMOSTAT_HEATING_MODE_GET_FRAME                         ZW_ThermostatHeatingModeGetFrame;\
  ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME                      ZW_ThermostatHeatingModeReportFrame;\
  ZW_THERMOSTAT_HEATING_MODE_SET_FRAME                         ZW_ThermostatHeatingModeSetFrame;\
  ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET_FRAME                 ZW_ThermostatHeatingRelayStatusGetFrame;\
  ZW_THERMOSTAT_HEATING_RELAY_STATUS_REPORT_FRAME              ZW_ThermostatHeatingRelayStatusReportFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAME                     ZW_ThermostatHeatingSetpointGetFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_1BYTE_FRAME            ZW_ThermostatHeatingSetpointReport1byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_2BYTE_FRAME            ZW_ThermostatHeatingSetpointReport2byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_3BYTE_FRAME            ZW_ThermostatHeatingSetpointReport3byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_4BYTE_FRAME            ZW_ThermostatHeatingSetpointReport4byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BYTE_FRAME               ZW_ThermostatHeatingSetpointSet1byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BYTE_FRAME               ZW_ThermostatHeatingSetpointSet2byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BYTE_FRAME               ZW_ThermostatHeatingSetpointSet3byteFrame;\
  ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BYTE_FRAME               ZW_ThermostatHeatingSetpointSet4byteFrame;\
  ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME                       ZW_ThermostatHeatingStatusGetFrame;\
  ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME                       ZW_ThermostatHeatingStatusSetFrame;\
  ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FRAME                    ZW_ThermostatHeatingTimedOffSetFrame;\
/* Command class Thermostat Mode */\
  ZW_THERMOSTAT_MODE_GET_FRAME                                 ZW_ThermostatModeGetFrame;\
  ZW_THERMOSTAT_MODE_REPORT_FRAME                              ZW_ThermostatModeReportFrame;\
  ZW_THERMOSTAT_MODE_SET_FRAME                                 ZW_ThermostatModeSetFrame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME                       ZW_ThermostatModeSupportedGetFrame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_FRAME              ZW_ThermostatModeSupportedReport1byteFrame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_FRAME              ZW_ThermostatModeSupportedReport2byteFrame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_FRAME              ZW_ThermostatModeSupportedReport3byteFrame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_FRAME              ZW_ThermostatModeSupportedReport4byteFrame;\
/* Command class Thermostat Mode V2 */\
  ZW_THERMOSTAT_MODE_GET_V2_FRAME                              ZW_ThermostatModeGetV2Frame;\
  ZW_THERMOSTAT_MODE_REPORT_V2_FRAME                           ZW_ThermostatModeReportV2Frame;\
  ZW_THERMOSTAT_MODE_SET_V2_FRAME                              ZW_ThermostatModeSetV2Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FRAME                    ZW_ThermostatModeSupportedGetV2Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport1byteV2Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport2byteV2Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport3byteV2Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME           ZW_ThermostatModeSupportedReport4byteV2Frame;\
/* Command class Thermostat Mode V3 */\
  ZW_THERMOSTAT_MODE_GET_V3_FRAME                              ZW_ThermostatModeGetV3Frame;\
  ZW_THERMOSTAT_MODE_REPORT_1BYTE_V3_FRAME                     ZW_ThermostatModeReport1byteV3Frame;\
  ZW_THERMOSTAT_MODE_REPORT_2BYTE_V3_FRAME                     ZW_ThermostatModeReport2byteV3Frame;\
  ZW_THERMOSTAT_MODE_REPORT_3BYTE_V3_FRAME                     ZW_ThermostatModeReport3byteV3Frame;\
  ZW_THERMOSTAT_MODE_REPORT_4BYTE_V3_FRAME                     ZW_ThermostatModeReport4byteV3Frame;\
  ZW_THERMOSTAT_MODE_SET_1BYTE_V3_FRAME                        ZW_ThermostatModeSet1byteV3Frame;\
  ZW_THERMOSTAT_MODE_SET_2BYTE_V3_FRAME                        ZW_ThermostatModeSet2byteV3Frame;\
  ZW_THERMOSTAT_MODE_SET_3BYTE_V3_FRAME                        ZW_ThermostatModeSet3byteV3Frame;\
  ZW_THERMOSTAT_MODE_SET_4BYTE_V3_FRAME                        ZW_ThermostatModeSet4byteV3Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_GET_V3_FRAME                    ZW_ThermostatModeSupportedGetV3Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME           ZW_ThermostatModeSupportedReport1byteV3Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME           ZW_ThermostatModeSupportedReport2byteV3Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME           ZW_ThermostatModeSupportedReport3byteV3Frame;\
  ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME           ZW_ThermostatModeSupportedReport4byteV3Frame;\
/* Command class Thermostat Operating State */\
  ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME                      ZW_ThermostatOperatingStateGetFrame;\
  ZW_THERMOSTAT_OPERATING_STATE_REPORT_FRAME                   ZW_ThermostatOperatingStateReportFrame;\
/* Command class Thermostat Operating State V2 */\
  ZW_THERMOSTAT_OPERATING_STATE_GET_V2_FRAME                   ZW_ThermostatOperatingStateGetV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_REPORT_V2_FRAME                ZW_ThermostatOperatingStateReportV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2_FRAME ZW_ThermostatOperatingStateLoggingSupportedGetV2Frame;\
  ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_1BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedReport1byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_2BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedReport2byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_3BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedReport3byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_4BYTE_V2_FRAME ZW_ThermostatOperatingLoggingSupportedReport4byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_1BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet1byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_2BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet2byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_3BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet3byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_4BYTE_V2_FRAME     ZW_ThermostatOperatingStateLoggingGet4byteV2Frame;\
  VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG           VG_ThermostatOperatingStateLoggingReportV2VGroup;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_1BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport1byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_2BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport2byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_3BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport3byteV2Frame;\
  ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_4BYTE_V2_FRAME  ZW_ThermostatOperatingStateLoggingReport4byteV2Frame;\
/* Command class Thermostat Setback */\
  ZW_THERMOSTAT_SETBACK_GET_FRAME                              ZW_ThermostatSetbackGetFrame;\
  ZW_THERMOSTAT_SETBACK_REPORT_FRAME                           ZW_ThermostatSetbackReportFrame;\
  ZW_THERMOSTAT_SETBACK_SET_FRAME                              ZW_ThermostatSetbackSetFrame;\
/* Command class Thermostat Setpoint */\
  ZW_THERMOSTAT_SETPOINT_GET_FRAME                             ZW_ThermostatSetpointGetFrame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FRAME                    ZW_ThermostatSetpointReport1byteFrame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FRAME                    ZW_ThermostatSetpointReport2byteFrame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FRAME                    ZW_ThermostatSetpointReport3byteFrame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FRAME                    ZW_ThermostatSetpointReport4byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME                       ZW_ThermostatSetpointSet1byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME                       ZW_ThermostatSetpointSet2byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME                       ZW_ThermostatSetpointSet3byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME                       ZW_ThermostatSetpointSet4byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_FRAME                   ZW_ThermostatSetpointSupportedGetFrame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_FRAME          ZW_ThermostatSetpointSupportedReport1byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_FRAME          ZW_ThermostatSetpointSupportedReport2byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_FRAME          ZW_ThermostatSetpointSupportedReport3byteFrame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_FRAME          ZW_ThermostatSetpointSupportedReport4byteFrame;\
/* Command class Thermostat Setpoint V2 */\
  ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME                          ZW_ThermostatSetpointGetV2Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2_FRAME                 ZW_ThermostatSetpointReport1byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2_FRAME                 ZW_ThermostatSetpointReport2byteV2Frame;\

#define ZW_FRAME_COLLECTION_MACRO5\
  ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2_FRAME                 ZW_ThermostatSetpointReport3byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2_FRAME                 ZW_ThermostatSetpointReport4byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FRAME                    ZW_ThermostatSetpointSet1byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FRAME                    ZW_ThermostatSetpointSet2byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FRAME                    ZW_ThermostatSetpointSet3byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FRAME                    ZW_ThermostatSetpointSet4byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V2_FRAME                ZW_ThermostatSetpointSupportedGetV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport1byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport2byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport3byteV2Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V2_FRAME       ZW_ThermostatSetpointSupportedReport4byteV2Frame;\
/* Command class Thermostat Setpoint V3 */\
  ZW_THERMOSTAT_SETPOINT_GET_V3_FRAME                          ZW_ThermostatSetpointGetV3Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V3_FRAME                 ZW_ThermostatSetpointReport1byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V3_FRAME                 ZW_ThermostatSetpointReport2byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V3_FRAME                 ZW_ThermostatSetpointReport3byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V3_FRAME                 ZW_ThermostatSetpointReport4byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V3_FRAME                    ZW_ThermostatSetpointSet1byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V3_FRAME                    ZW_ThermostatSetpointSet2byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V3_FRAME                    ZW_ThermostatSetpointSet3byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V3_FRAME                    ZW_ThermostatSetpointSet4byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V3_FRAME                ZW_ThermostatSetpointSupportedGetV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V3_FRAME       ZW_ThermostatSetpointSupportedReport1byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V3_FRAME       ZW_ThermostatSetpointSupportedReport2byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V3_FRAME       ZW_ThermostatSetpointSupportedReport3byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V3_FRAME       ZW_ThermostatSetpointSupportedReport4byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_CAPABILITIES_GET_V3_FRAME             ZW_ThermostatSetpointCapabilitiesGetV3Frame;\
  ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_1BYTE_V3_FRAME    ZW_ThermostatSetpointCapabilitiesReport1byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_2BYTE_V3_FRAME    ZW_ThermostatSetpointCapabilitiesReport2byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_3BYTE_V3_FRAME    ZW_ThermostatSetpointCapabilitiesReport3byteV3Frame;\
  ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_4BYTE_V3_FRAME    ZW_ThermostatSetpointCapabilitiesReport4byteV3Frame;\
/* Command class Time Parameters */\
  ZW_TIME_PARAMETERS_GET_FRAME                                 ZW_TimeParametersGetFrame;\
  ZW_TIME_PARAMETERS_REPORT_FRAME                              ZW_TimeParametersReportFrame;\
  ZW_TIME_PARAMETERS_SET_FRAME                                 ZW_TimeParametersSetFrame;\
/* Command class Time */\
  ZW_DATE_GET_FRAME                                            ZW_DateGetFrame;\
  ZW_DATE_REPORT_FRAME                                         ZW_DateReportFrame;\
  ZW_TIME_GET_FRAME                                            ZW_TimeGetFrame;\
  ZW_TIME_REPORT_FRAME                                         ZW_TimeReportFrame;\
/* Command class Time V2 */\
  ZW_DATE_GET_V2_FRAME                                         ZW_DateGetV2Frame;\
  ZW_DATE_REPORT_V2_FRAME                                      ZW_DateReportV2Frame;\
  ZW_TIME_GET_V2_FRAME                                         ZW_TimeGetV2Frame;\
  ZW_TIME_OFFSET_GET_V2_FRAME                                  ZW_TimeOffsetGetV2Frame;\
  ZW_TIME_OFFSET_REPORT_V2_FRAME                               ZW_TimeOffsetReportV2Frame;\
  ZW_TIME_OFFSET_SET_V2_FRAME                                  ZW_TimeOffsetSetV2Frame;\
  ZW_TIME_REPORT_V2_FRAME                                      ZW_TimeReportV2Frame;\
/* Command class Transport Service V2 */\
  ZW_COMMAND_FIRST_SEGMENT_1BYTE_V2_FRAME                      ZW_CommandFirstSegment1byteV2Frame;\
  ZW_COMMAND_FIRST_SEGMENT_2BYTE_V2_FRAME                      ZW_CommandFirstSegment2byteV2Frame;\
  ZW_COMMAND_FIRST_SEGMENT_3BYTE_V2_FRAME                      ZW_CommandFirstSegment3byteV2Frame;\
  ZW_COMMAND_FIRST_SEGMENT_4BYTE_V2_FRAME                      ZW_CommandFirstSegment4byteV2Frame;\
  ZW_COMMAND_SEGMENT_COMPLETE_V2_FRAME                         ZW_CommandSegmentCompleteV2Frame;\
  ZW_COMMAND_SEGMENT_REQUEST_V2_FRAME                          ZW_CommandSegmentRequestV2Frame;\
  ZW_COMMAND_SEGMENT_WAIT_V2_FRAME                             ZW_CommandSegmentWaitV2Frame;\
  ZW_COMMAND_SUBSEQUENT_SEGMENT_1BYTE_V2_FRAME                 ZW_CommandSubsequentSegment1byteV2Frame;\
  ZW_COMMAND_SUBSEQUENT_SEGMENT_2BYTE_V2_FRAME                 ZW_CommandSubsequentSegment2byteV2Frame;\
  ZW_COMMAND_SUBSEQUENT_SEGMENT_3BYTE_V2_FRAME                 ZW_CommandSubsequentSegment3byteV2Frame;\
  ZW_COMMAND_SUBSEQUENT_SEGMENT_4BYTE_V2_FRAME                 ZW_CommandSubsequentSegment4byteV2Frame;\
/* Command class Transport Service */\
  ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME                        ZW_CommandFirstFragment1byteFrame;\
  ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME                        ZW_CommandFirstFragment2byteFrame;\
  ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME                        ZW_CommandFirstFragment3byteFrame;\
  ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME                        ZW_CommandFirstFragment4byteFrame;\
  ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME                   ZW_CommandSubsequentFragment1byteFrame;\
  ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_FRAME                   ZW_CommandSubsequentFragment2byteFrame;\
  ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_FRAME                   ZW_CommandSubsequentFragment3byteFrame;\
  ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_FRAME                   ZW_CommandSubsequentFragment4byteFrame;\
/* Command class User Code */\
  ZW_USER_CODE_GET_FRAME                                       ZW_UserCodeGetFrame;\
  ZW_USER_CODE_REPORT_1BYTE_FRAME                              ZW_UserCodeReport1byteFrame;\
  ZW_USER_CODE_REPORT_2BYTE_FRAME                              ZW_UserCodeReport2byteFrame;\
  ZW_USER_CODE_REPORT_3BYTE_FRAME                              ZW_UserCodeReport3byteFrame;\
  ZW_USER_CODE_REPORT_4BYTE_FRAME                              ZW_UserCodeReport4byteFrame;\
  ZW_USER_CODE_SET_1BYTE_FRAME                                 ZW_UserCodeSet1byteFrame;\
  ZW_USER_CODE_SET_2BYTE_FRAME                                 ZW_UserCodeSet2byteFrame;\
  ZW_USER_CODE_SET_3BYTE_FRAME                                 ZW_UserCodeSet3byteFrame;\
  ZW_USER_CODE_SET_4BYTE_FRAME                                 ZW_UserCodeSet4byteFrame;\
  ZW_USERS_NUMBER_GET_FRAME                                    ZW_UsersNumberGetFrame;\
  ZW_USERS_NUMBER_REPORT_FRAME                                 ZW_UsersNumberReportFrame;\
/* Command class User Code V2 */\
  ZW_USER_CODE_GET_V2_FRAME                                    ZW_UserCodeGetV2Frame;\
  ZW_USER_CODE_REPORT_1BYTE_V2_FRAME                           ZW_UserCodeReport1byteV2Frame;\
  ZW_USER_CODE_REPORT_2BYTE_V2_FRAME                           ZW_UserCodeReport2byteV2Frame;\
  ZW_USER_CODE_REPORT_3BYTE_V2_FRAME                           ZW_UserCodeReport3byteV2Frame;\
  ZW_USER_CODE_REPORT_4BYTE_V2_FRAME                           ZW_UserCodeReport4byteV2Frame;\
  ZW_USER_CODE_SET_1BYTE_V2_FRAME                              ZW_UserCodeSet1byteV2Frame;\
  ZW_USER_CODE_SET_2BYTE_V2_FRAME                              ZW_UserCodeSet2byteV2Frame;\
  ZW_USER_CODE_SET_3BYTE_V2_FRAME                              ZW_UserCodeSet3byteV2Frame;\
  ZW_USER_CODE_SET_4BYTE_V2_FRAME                              ZW_UserCodeSet4byteV2Frame;\
  ZW_USERS_NUMBER_GET_V2_FRAME                                 ZW_UsersNumberGetV2Frame;\
  ZW_USERS_NUMBER_REPORT_V2_FRAME                              ZW_UsersNumberReportV2Frame;\
  VG_EXTENDED_USER_CODE_SET_1BYTE_V2_VG                        VG_ExtendedUserCodeSet1byteV2VGroup;\
  VG_EXTENDED_USER_CODE_SET_2BYTE_V2_VG                        VG_ExtendedUserCodeSet2byteV2VGroup;\
  VG_EXTENDED_USER_CODE_SET_3BYTE_V2_VG                        VG_ExtendedUserCodeSet3byteV2VGroup;\
  VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG                        VG_ExtendedUserCodeSet4byteV2VGroup;\
  ZW_EXTENDED_USER_CODE_SET_1BYTE_V2_FRAME                     ZW_ExtendedUserCodeSet1byteV2Frame;\
  ZW_EXTENDED_USER_CODE_SET_2BYTE_V2_FRAME                     ZW_ExtendedUserCodeSet2byteV2Frame;\
  ZW_EXTENDED_USER_CODE_SET_3BYTE_V2_FRAME                     ZW_ExtendedUserCodeSet3byteV2Frame;\
  ZW_EXTENDED_USER_CODE_SET_4BYTE_V2_FRAME                     ZW_ExtendedUserCodeSet4byteV2Frame;\
  ZW_EXTENDED_USER_CODE_GET_V2_FRAME                           ZW_ExtendedUserCodeGetV2Frame;\
  VG_EXTENDED_USER_CODE_REPORT_1BYTE_V2_VG                     VG_ExtendedUserCodeReport1byteV2VGroup;\
  VG_EXTENDED_USER_CODE_REPORT_2BYTE_V2_VG                     VG_ExtendedUserCodeReport2byteV2VGroup;\
  VG_EXTENDED_USER_CODE_REPORT_3BYTE_V2_VG                     VG_ExtendedUserCodeReport3byteV2VGroup;\
  VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG                     VG_ExtendedUserCodeReport4byteV2VGroup;\
  ZW_EXTENDED_USER_CODE_REPORT_1BYTE_V2_FRAME                  ZW_ExtendedUserCodeReport1byteV2Frame;\
  ZW_EXTENDED_USER_CODE_REPORT_2BYTE_V2_FRAME                  ZW_ExtendedUserCodeReport2byteV2Frame;\
  ZW_EXTENDED_USER_CODE_REPORT_3BYTE_V2_FRAME                  ZW_ExtendedUserCodeReport3byteV2Frame;\
  ZW_EXTENDED_USER_CODE_REPORT_4BYTE_V2_FRAME                  ZW_ExtendedUserCodeReport4byteV2Frame;\
  ZW_USER_CODE_CAPABILITIES_GET_V2_FRAME                       ZW_UserCodeCapabilitiesGetV2Frame;\
  ZW_USER_CODE_CAPABILITIES_REPORT_1BYTE_V2_FRAME              ZW_UserCodeCapabilitiesReport1byteV2Frame;\
  ZW_USER_CODE_CAPABILITIES_REPORT_2BYTE_V2_FRAME              ZW_UserCodeCapabilitiesReport2byteV2Frame;\
  ZW_USER_CODE_CAPABILITIES_REPORT_3BYTE_V2_FRAME              ZW_UserCodeCapabilitiesReport3byteV2Frame;\
  ZW_USER_CODE_CAPABILITIES_REPORT_4BYTE_V2_FRAME              ZW_UserCodeCapabilitiesReport4byteV2Frame;\
  ZW_USER_CODE_KEYPAD_MODE_SET_V2_FRAME                        ZW_UserCodeKeypadModeSetV2Frame;\
  ZW_USER_CODE_KEYPAD_MODE_GET_V2_FRAME                        ZW_UserCodeKeypadModeGetV2Frame;\
  ZW_USER_CODE_KEYPAD_MODE_REPORT_V2_FRAME                     ZW_UserCodeKeypadModeReportV2Frame;\
  ZW_ADMIN_CODE_SET_1BYTE_V2_FRAME                             ZW_AdminCodeSet1byteV2Frame;\
  ZW_ADMIN_CODE_SET_2BYTE_V2_FRAME                             ZW_AdminCodeSet2byteV2Frame;\
  ZW_ADMIN_CODE_SET_3BYTE_V2_FRAME                             ZW_AdminCodeSet3byteV2Frame;\
  ZW_ADMIN_CODE_SET_4BYTE_V2_FRAME                             ZW_AdminCodeSet4byteV2Frame;\
  ZW_ADMIN_CODE_GET_V2_FRAME                                   ZW_AdminCodeGetV2Frame;\
  ZW_ADMIN_CODE_REPORT_1BYTE_V2_FRAME                          ZW_AdminCodeReport1byteV2Frame;\
  ZW_ADMIN_CODE_REPORT_2BYTE_V2_FRAME                          ZW_AdminCodeReport2byteV2Frame;\
  ZW_ADMIN_CODE_REPORT_3BYTE_V2_FRAME                          ZW_AdminCodeReport3byteV2Frame;\
  ZW_ADMIN_CODE_REPORT_4BYTE_V2_FRAME                          ZW_AdminCodeReport4byteV2Frame;\
  ZW_USER_CODE_CHECKSUM_GET_V2_FRAME                           ZW_UserCodeChecksumGetV2Frame;\
  ZW_USER_CODE_CHECKSUM_REPORT_V2_FRAME                        ZW_UserCodeChecksumReportV2Frame;\
/* Command class Version */\
  ZW_VERSION_COMMAND_CLASS_GET_FRAME                           ZW_VersionCommandClassGetFrame;\
  ZW_VERSION_COMMAND_CLASS_REPORT_FRAME                        ZW_VersionCommandClassReportFrame;\
  ZW_VERSION_GET_FRAME                                         ZW_VersionGetFrame;\
  ZW_VERSION_REPORT_FRAME                                      ZW_VersionReportFrame;\
/* Command class Version V2 */\
  ZW_VERSION_COMMAND_CLASS_GET_V2_FRAME                        ZW_VersionCommandClassGetV2Frame;\
  ZW_VERSION_COMMAND_CLASS_REPORT_V2_FRAME                     ZW_VersionCommandClassReportV2Frame;\
  ZW_VERSION_GET_V2_FRAME                                      ZW_VersionGetV2Frame;\
  VG_VERSION_REPORT_V2_VG                                      VG_VersionReportV2VGroup;\
  ZW_VERSION_REPORT_1BYTE_V2_FRAME                             ZW_VersionReport1byteV2Frame;\
  ZW_VERSION_REPORT_2BYTE_V2_FRAME                             ZW_VersionReport2byteV2Frame;\
  ZW_VERSION_REPORT_3BYTE_V2_FRAME                             ZW_VersionReport3byteV2Frame;\
  ZW_VERSION_REPORT_4BYTE_V2_FRAME                             ZW_VersionReport4byteV2Frame;\
/* Command class Version V3 */\
  ZW_VERSION_COMMAND_CLASS_GET_V3_FRAME                        ZW_VersionCommandClassGetV3Frame;\
  ZW_VERSION_COMMAND_CLASS_REPORT_V3_FRAME                     ZW_VersionCommandClassReportV3Frame;\
  ZW_VERSION_GET_V3_FRAME                                      ZW_VersionGetV3Frame;\
  VG_VERSION_REPORT_V3_VG                                      VG_VersionReportV3VGroup;\
  ZW_VERSION_REPORT_1BYTE_V3_FRAME                             ZW_VersionReport1byteV3Frame;\
  ZW_VERSION_REPORT_2BYTE_V3_FRAME                             ZW_VersionReport2byteV3Frame;\
  ZW_VERSION_REPORT_3BYTE_V3_FRAME                             ZW_VersionReport3byteV3Frame;\
  ZW_VERSION_REPORT_4BYTE_V3_FRAME                             ZW_VersionReport4byteV3Frame;\
  ZW_VERSION_CAPABILITIES_GET_V3_FRAME                         ZW_VersionCapabilitiesGetV3Frame;\
  ZW_VERSION_CAPABILITIES_REPORT_V3_FRAME                      ZW_VersionCapabilitiesReportV3Frame;\
  ZW_VERSION_ZWAVE_SOFTWARE_GET_V3_FRAME                       ZW_VersionZwaveSoftwareGetV3Frame;\
  ZW_VERSION_ZWAVE_SOFTWARE_REPORT_V3_FRAME                    ZW_VersionZwaveSoftwareReportV3Frame;\
/* Command class Wake Up */\
  ZW_WAKE_UP_INTERVAL_GET_FRAME                                ZW_WakeUpIntervalGetFrame;\
  ZW_WAKE_UP_INTERVAL_REPORT_FRAME                             ZW_WakeUpIntervalReportFrame;\
  ZW_WAKE_UP_INTERVAL_SET_FRAME                                ZW_WakeUpIntervalSetFrame;\
  ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME                         ZW_WakeUpNoMoreInformationFrame;\
  ZW_WAKE_UP_NOTIFICATION_FRAME                                ZW_WakeUpNotificationFrame;\
/* Command class Wake Up V2 */\
  ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V2_FRAME                ZW_WakeUpIntervalCapabilitiesGetV2Frame;\
  ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2_FRAME             ZW_WakeUpIntervalCapabilitiesReportV2Frame;\
  ZW_WAKE_UP_INTERVAL_GET_V2_FRAME                             ZW_WakeUpIntervalGetV2Frame;\
  ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME                          ZW_WakeUpIntervalReportV2Frame;\
  ZW_WAKE_UP_INTERVAL_SET_V2_FRAME                             ZW_WakeUpIntervalSetV2Frame;\
  ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME                      ZW_WakeUpNoMoreInformationV2Frame;\
  ZW_WAKE_UP_NOTIFICATION_V2_FRAME                             ZW_WakeUpNotificationV2Frame;\
/* Command class Wake Up V3 */\
  ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V3_FRAME                ZW_WakeUpIntervalCapabilitiesGetV3Frame;\
  ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V3_FRAME             ZW_WakeUpIntervalCapabilitiesReportV3Frame;\
  ZW_WAKE_UP_INTERVAL_GET_V3_FRAME                             ZW_WakeUpIntervalGetV3Frame;\
  ZW_WAKE_UP_INTERVAL_REPORT_V3_FRAME                          ZW_WakeUpIntervalReportV3Frame;\
  ZW_WAKE_UP_INTERVAL_SET_V3_FRAME                             ZW_WakeUpIntervalSetV3Frame;\
  ZW_WAKE_UP_NO_MORE_INFORMATION_V3_FRAME                      ZW_WakeUpNoMoreInformationV3Frame;\
  ZW_WAKE_UP_NOTIFICATION_V3_FRAME                             ZW_WakeUpNotificationV3Frame;\
/* Command class Zip 6lowpan */\
  ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME                         ZW_LowpanFirstFragment1byteFrame;\
  ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME                         ZW_LowpanFirstFragment2byteFrame;\
  ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME                         ZW_LowpanFirstFragment3byteFrame;\
  ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME                         ZW_LowpanFirstFragment4byteFrame;\
  ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FRAME                    ZW_LowpanSubsequentFragment1byteFrame;\
  ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FRAME                    ZW_LowpanSubsequentFragment2byteFrame;\
  ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FRAME                    ZW_LowpanSubsequentFragment3byteFrame;\
  ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FRAME                    ZW_LowpanSubsequentFragment4byteFrame;\
/* Command class Zip */\
  ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME                            ZW_CommandZipPacket1byteFrame;\
  ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME                            ZW_CommandZipPacket2byteFrame;\
  ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME                            ZW_CommandZipPacket3byteFrame;\
  ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME                            ZW_CommandZipPacket4byteFrame;\
/* Command class Zip V2 */\
  ZW_COMMAND_ZIP_PACKET_1BYTE_V2_FRAME                         ZW_CommandZipPacket1byteV2Frame;\
  ZW_COMMAND_ZIP_PACKET_2BYTE_V2_FRAME                         ZW_CommandZipPacket2byteV2Frame;\
  ZW_COMMAND_ZIP_PACKET_3BYTE_V2_FRAME                         ZW_CommandZipPacket3byteV2Frame;\
  ZW_COMMAND_ZIP_PACKET_4BYTE_V2_FRAME                         ZW_CommandZipPacket4byteV2Frame;\
/* Command class Zip V3 */\
  ZW_COMMAND_ZIP_PACKET_1BYTE_V3_FRAME                         ZW_CommandZipPacket1byteV3Frame;\
  ZW_COMMAND_ZIP_PACKET_2BYTE_V3_FRAME                         ZW_CommandZipPacket2byteV3Frame;\
  ZW_COMMAND_ZIP_PACKET_3BYTE_V3_FRAME                         ZW_CommandZipPacket3byteV3Frame;\
  ZW_COMMAND_ZIP_PACKET_4BYTE_V3_FRAME                         ZW_CommandZipPacket4byteV3Frame;\
/* Command class Zip V4 */\
  ZW_COMMAND_ZIP_PACKET_1BYTE_V4_FRAME                         ZW_CommandZipPacket1byteV4Frame;\
  ZW_COMMAND_ZIP_PACKET_2BYTE_V4_FRAME                         ZW_CommandZipPacket2byteV4Frame;\
  ZW_COMMAND_ZIP_PACKET_3BYTE_V4_FRAME                         ZW_CommandZipPacket3byteV4Frame;\
  ZW_COMMAND_ZIP_PACKET_4BYTE_V4_FRAME                         ZW_CommandZipPacket4byteV4Frame;\
  ZW_COMMAND_ZIP_KEEP_ALIVE_V4_FRAME                           ZW_CommandZipKeepAliveV4Frame;\
/* Command class Application Capability */\
  ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED_FRAME                 ZW_CommandCommandClassNotSupportedFrame;\
/* Command class Switch Color */\
  ZW_SWITCH_COLOR_SUPPORTED_GET_FRAME                          ZW_SwitchColorSupportedGetFrame;\
  ZW_SWITCH_COLOR_SUPPORTED_REPORT_FRAME                       ZW_SwitchColorSupportedReportFrame;\
  ZW_SWITCH_COLOR_GET_FRAME                                    ZW_SwitchColorGetFrame;\
  ZW_SWITCH_COLOR_REPORT_FRAME                                 ZW_SwitchColorReportFrame;\
  VG_SWITCH_COLOR_SET_VG                                       VG_SwitchColorSetVGroup;\
  ZW_SWITCH_COLOR_SET_1BYTE_FRAME                              ZW_SwitchColorSet1byteFrame;\
  ZW_SWITCH_COLOR_SET_2BYTE_FRAME                              ZW_SwitchColorSet2byteFrame;\
  ZW_SWITCH_COLOR_SET_3BYTE_FRAME                              ZW_SwitchColorSet3byteFrame;\
  ZW_SWITCH_COLOR_SET_4BYTE_FRAME                              ZW_SwitchColorSet4byteFrame;\
  ZW_SWITCH_COLOR_START_LEVEL_CHANGE_FRAME                     ZW_SwitchColorStartLevelChangeFrame;\
  ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_FRAME                      ZW_SwitchColorStopLevelChangeFrame;\
/* Command class Switch Color V2 */\
  ZW_SWITCH_COLOR_SUPPORTED_GET_V2_FRAME                       ZW_SwitchColorSupportedGetV2Frame;\
  ZW_SWITCH_COLOR_SUPPORTED_REPORT_V2_FRAME                    ZW_SwitchColorSupportedReportV2Frame;\
  ZW_SWITCH_COLOR_GET_V2_FRAME                                 ZW_SwitchColorGetV2Frame;\
  ZW_SWITCH_COLOR_REPORT_V2_FRAME                              ZW_SwitchColorReportV2Frame;\
  VG_SWITCH_COLOR_SET_V2_VG                                    VG_SwitchColorSetV2VGroup;\
  ZW_SWITCH_COLOR_SET_1BYTE_V2_FRAME                           ZW_SwitchColorSet1byteV2Frame;\
  ZW_SWITCH_COLOR_SET_2BYTE_V2_FRAME                           ZW_SwitchColorSet2byteV2Frame;\
  ZW_SWITCH_COLOR_SET_3BYTE_V2_FRAME                           ZW_SwitchColorSet3byteV2Frame;\
  ZW_SWITCH_COLOR_SET_4BYTE_V2_FRAME                           ZW_SwitchColorSet4byteV2Frame;\
  ZW_SWITCH_COLOR_START_LEVEL_CHANGE_V2_FRAME                  ZW_SwitchColorStartLevelChangeV2Frame;\
  ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_V2_FRAME                   ZW_SwitchColorStopLevelChangeV2Frame;\
/* Command class Switch Color V3 */\
  ZW_SWITCH_COLOR_SUPPORTED_GET_V3_FRAME                       ZW_SwitchColorSupportedGetV3Frame;\
  ZW_SWITCH_COLOR_SUPPORTED_REPORT_V3_FRAME                    ZW_SwitchColorSupportedReportV3Frame;\
  ZW_SWITCH_COLOR_GET_V3_FRAME                                 ZW_SwitchColorGetV3Frame;\
  ZW_SWITCH_COLOR_REPORT_V3_FRAME                              ZW_SwitchColorReportV3Frame;\
  VG_SWITCH_COLOR_SET_V3_VG                                    VG_SwitchColorSetV3VGroup;\
  ZW_SWITCH_COLOR_SET_1BYTE_V3_FRAME                           ZW_SwitchColorSet1byteV3Frame;\
  ZW_SWITCH_COLOR_SET_2BYTE_V3_FRAME                           ZW_SwitchColorSet2byteV3Frame;\
  ZW_SWITCH_COLOR_SET_3BYTE_V3_FRAME                           ZW_SwitchColorSet3byteV3Frame;\
  ZW_SWITCH_COLOR_SET_4BYTE_V3_FRAME                           ZW_SwitchColorSet4byteV3Frame;\
  ZW_SWITCH_COLOR_START_LEVEL_CHANGE_V3_FRAME                  ZW_SwitchColorStartLevelChangeV3Frame;\
  ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_V3_FRAME                   ZW_SwitchColorStopLevelChangeV3Frame;\
/* Command class Schedule */\
  ZW_SCHEDULE_SUPPORTED_GET_FRAME                              ZW_ScheduleSupportedGetFrame;\
  VG_SCHEDULE_SUPPORTED_REPORT_VG                              VG_ScheduleSupportedReportVGroup;\
  ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAME                     ZW_ScheduleSupportedReport1byteFrame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAME                     ZW_ScheduleSupportedReport2byteFrame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAME                     ZW_ScheduleSupportedReport3byteFrame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAME                     ZW_ScheduleSupportedReport4byteFrame;\
  VG_COMMAND_SCHEDULE_SET_1BYTE_VG                             VG_CommandScheduleSet1byteVGroup;\
  VG_COMMAND_SCHEDULE_SET_2BYTE_VG                             VG_CommandScheduleSet2byteVGroup;\
  VG_COMMAND_SCHEDULE_SET_3BYTE_VG                             VG_CommandScheduleSet3byteVGroup;\
  VG_COMMAND_SCHEDULE_SET_4BYTE_VG                             VG_CommandScheduleSet4byteVGroup;\
  ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME                          ZW_CommandScheduleSet1byteFrame;\
  ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME                          ZW_CommandScheduleSet2byteFrame;\
  ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME                          ZW_CommandScheduleSet3byteFrame;\
  ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME                          ZW_CommandScheduleSet4byteFrame;\
  ZW_COMMAND_SCHEDULE_GET_FRAME                                ZW_CommandScheduleGetFrame;\
  VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG                          VG_CommandScheduleReport1byteVGroup;\
  VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG                          VG_CommandScheduleReport2byteVGroup;\
  VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG                          VG_CommandScheduleReport3byteVGroup;\
  VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG                          VG_CommandScheduleReport4byteVGroup;\
  ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME                       ZW_CommandScheduleReport1byteFrame;\
  ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME                       ZW_CommandScheduleReport2byteFrame;\
  ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME                       ZW_CommandScheduleReport3byteFrame;\
  ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME                       ZW_CommandScheduleReport4byteFrame;\
  ZW_SCHEDULE_REMOVE_FRAME                                     ZW_ScheduleRemoveFrame;\
  ZW_SCHEDULE_STATE_SET_FRAME                                  ZW_ScheduleStateSetFrame;\
  ZW_SCHEDULE_STATE_GET_FRAME                                  ZW_ScheduleStateGetFrame;\
  VG_SCHEDULE_STATE_REPORT_VG                                  VG_ScheduleStateReportVGroup;\
  ZW_SCHEDULE_STATE_REPORT_1BYTE_FRAME                         ZW_ScheduleStateReport1byteFrame;\
  ZW_SCHEDULE_STATE_REPORT_2BYTE_FRAME                         ZW_ScheduleStateReport2byteFrame;\
  ZW_SCHEDULE_STATE_REPORT_3BYTE_FRAME                         ZW_ScheduleStateReport3byteFrame;\
  ZW_SCHEDULE_STATE_REPORT_4BYTE_FRAME                         ZW_ScheduleStateReport4byteFrame;\
/* Command class Schedule V2 */\
  ZW_SCHEDULE_SUPPORTED_GET_V2_FRAME                           ZW_ScheduleSupportedGetV2Frame;\
  VG_SCHEDULE_SUPPORTED_REPORT_V2_VG                           VG_ScheduleSupportedReportV2VGroup;\
  ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V2_FRAME                  ZW_ScheduleSupportedReport1byteV2Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V2_FRAME                  ZW_ScheduleSupportedReport2byteV2Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V2_FRAME                  ZW_ScheduleSupportedReport3byteV2Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V2_FRAME                  ZW_ScheduleSupportedReport4byteV2Frame;\
  VG_COMMAND_SCHEDULE_SET_1BYTE_V2_VG                          VG_CommandScheduleSet1byteV2VGroup;\
  VG_COMMAND_SCHEDULE_SET_2BYTE_V2_VG                          VG_CommandScheduleSet2byteV2VGroup;\
  VG_COMMAND_SCHEDULE_SET_3BYTE_V2_VG                          VG_CommandScheduleSet3byteV2VGroup;\
  VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG                          VG_CommandScheduleSet4byteV2VGroup;\
  ZW_COMMAND_SCHEDULE_SET_1BYTE_V2_FRAME                       ZW_CommandScheduleSet1byteV2Frame;\
  ZW_COMMAND_SCHEDULE_SET_2BYTE_V2_FRAME                       ZW_CommandScheduleSet2byteV2Frame;\
  ZW_COMMAND_SCHEDULE_SET_3BYTE_V2_FRAME                       ZW_CommandScheduleSet3byteV2Frame;\
  ZW_COMMAND_SCHEDULE_SET_4BYTE_V2_FRAME                       ZW_CommandScheduleSet4byteV2Frame;\
  ZW_COMMAND_SCHEDULE_GET_V2_FRAME                             ZW_CommandScheduleGetV2Frame;\
  VG_COMMAND_SCHEDULE_REPORT_1BYTE_V2_VG                       VG_CommandScheduleReport1byteV2VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_2BYTE_V2_VG                       VG_CommandScheduleReport2byteV2VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_3BYTE_V2_VG                       VG_CommandScheduleReport3byteV2VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG                       VG_CommandScheduleReport4byteV2VGroup;\
  ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V2_FRAME                    ZW_CommandScheduleReport1byteV2Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V2_FRAME                    ZW_CommandScheduleReport2byteV2Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V2_FRAME                    ZW_CommandScheduleReport3byteV2Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V2_FRAME                    ZW_CommandScheduleReport4byteV2Frame;\
  ZW_SCHEDULE_REMOVE_V2_FRAME                                  ZW_ScheduleRemoveV2Frame;\
  ZW_SCHEDULE_STATE_SET_V2_FRAME                               ZW_ScheduleStateSetV2Frame;\
  ZW_SCHEDULE_STATE_GET_V2_FRAME                               ZW_ScheduleStateGetV2Frame;\
  VG_SCHEDULE_STATE_REPORT_V2_VG                               VG_ScheduleStateReportV2VGroup;\
  ZW_SCHEDULE_STATE_REPORT_1BYTE_V2_FRAME                      ZW_ScheduleStateReport1byteV2Frame;\
  ZW_SCHEDULE_STATE_REPORT_2BYTE_V2_FRAME                      ZW_ScheduleStateReport2byteV2Frame;\
  ZW_SCHEDULE_STATE_REPORT_3BYTE_V2_FRAME                      ZW_ScheduleStateReport3byteV2Frame;\
  ZW_SCHEDULE_STATE_REPORT_4BYTE_V2_FRAME                      ZW_ScheduleStateReport4byteV2Frame;\
/* Command class Schedule V3 */\
  ZW_SCHEDULE_SUPPORTED_GET_V3_FRAME                           ZW_ScheduleSupportedGetV3Frame;\
  VG_SCHEDULE_SUPPORTED_REPORT_V3_VG                           VG_ScheduleSupportedReportV3VGroup;\
  ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V3_FRAME                  ZW_ScheduleSupportedReport1byteV3Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V3_FRAME                  ZW_ScheduleSupportedReport2byteV3Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V3_FRAME                  ZW_ScheduleSupportedReport3byteV3Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V3_FRAME                  ZW_ScheduleSupportedReport4byteV3Frame;\
  VG_COMMAND_SCHEDULE_SET_1BYTE_V3_VG                          VG_CommandScheduleSet1byteV3VGroup;\
  VG_COMMAND_SCHEDULE_SET_2BYTE_V3_VG                          VG_CommandScheduleSet2byteV3VGroup;\
  VG_COMMAND_SCHEDULE_SET_3BYTE_V3_VG                          VG_CommandScheduleSet3byteV3VGroup;\
  VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG                          VG_CommandScheduleSet4byteV3VGroup;\
  ZW_COMMAND_SCHEDULE_SET_1BYTE_V3_FRAME                       ZW_CommandScheduleSet1byteV3Frame;\
  ZW_COMMAND_SCHEDULE_SET_2BYTE_V3_FRAME                       ZW_CommandScheduleSet2byteV3Frame;\
  ZW_COMMAND_SCHEDULE_SET_3BYTE_V3_FRAME                       ZW_CommandScheduleSet3byteV3Frame;\
  ZW_COMMAND_SCHEDULE_SET_4BYTE_V3_FRAME                       ZW_CommandScheduleSet4byteV3Frame;\
  ZW_COMMAND_SCHEDULE_GET_V3_FRAME                             ZW_CommandScheduleGetV3Frame;\
  VG_COMMAND_SCHEDULE_REPORT_1BYTE_V3_VG                       VG_CommandScheduleReport1byteV3VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_2BYTE_V3_VG                       VG_CommandScheduleReport2byteV3VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_3BYTE_V3_VG                       VG_CommandScheduleReport3byteV3VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG                       VG_CommandScheduleReport4byteV3VGroup;\
  ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V3_FRAME                    ZW_CommandScheduleReport1byteV3Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V3_FRAME                    ZW_CommandScheduleReport2byteV3Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V3_FRAME                    ZW_CommandScheduleReport3byteV3Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V3_FRAME                    ZW_CommandScheduleReport4byteV3Frame;\
  ZW_SCHEDULE_REMOVE_V3_FRAME                                  ZW_ScheduleRemoveV3Frame;\
  ZW_SCHEDULE_STATE_SET_V3_FRAME                               ZW_ScheduleStateSetV3Frame;\
  ZW_SCHEDULE_STATE_GET_V3_FRAME                               ZW_ScheduleStateGetV3Frame;\
  VG_SCHEDULE_STATE_REPORT_V3_VG                               VG_ScheduleStateReportV3VGroup;\
  ZW_SCHEDULE_STATE_REPORT_1BYTE_V3_FRAME                      ZW_ScheduleStateReport1byteV3Frame;\
  ZW_SCHEDULE_STATE_REPORT_2BYTE_V3_FRAME                      ZW_ScheduleStateReport2byteV3Frame;\
  ZW_SCHEDULE_STATE_REPORT_3BYTE_V3_FRAME                      ZW_ScheduleStateReport3byteV3Frame;\
  ZW_SCHEDULE_STATE_REPORT_4BYTE_V3_FRAME                      ZW_ScheduleStateReport4byteV3Frame;\
/* Command class Schedule V4 */\
  ZW_SCHEDULE_SUPPORTED_GET_V4_FRAME                           ZW_ScheduleSupportedGetV4Frame;\
  VG_SCHEDULE_SUPPORTED_REPORT_V4_VG                           VG_ScheduleSupportedReportV4VGroup;\
  ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V4_FRAME                  ZW_ScheduleSupportedReport1byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V4_FRAME                  ZW_ScheduleSupportedReport2byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V4_FRAME                  ZW_ScheduleSupportedReport3byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V4_FRAME                  ZW_ScheduleSupportedReport4byteV4Frame;\
  VG_COMMAND_SCHEDULE_SET_1BYTE_V4_VG                          VG_CommandScheduleSet1byteV4VGroup;\
  VG_COMMAND_SCHEDULE_SET_2BYTE_V4_VG                          VG_CommandScheduleSet2byteV4VGroup;\
  VG_COMMAND_SCHEDULE_SET_3BYTE_V4_VG                          VG_CommandScheduleSet3byteV4VGroup;\
  VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG                          VG_CommandScheduleSet4byteV4VGroup;\
  ZW_COMMAND_SCHEDULE_SET_1BYTE_V4_FRAME                       ZW_CommandScheduleSet1byteV4Frame;\
  ZW_COMMAND_SCHEDULE_SET_2BYTE_V4_FRAME                       ZW_CommandScheduleSet2byteV4Frame;\
  ZW_COMMAND_SCHEDULE_SET_3BYTE_V4_FRAME                       ZW_CommandScheduleSet3byteV4Frame;\
  ZW_COMMAND_SCHEDULE_SET_4BYTE_V4_FRAME                       ZW_CommandScheduleSet4byteV4Frame;\
  ZW_COMMAND_SCHEDULE_GET_V4_FRAME                             ZW_CommandScheduleGetV4Frame;\
  VG_COMMAND_SCHEDULE_REPORT_1BYTE_V4_VG                       VG_CommandScheduleReport1byteV4VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_2BYTE_V4_VG                       VG_CommandScheduleReport2byteV4VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_3BYTE_V4_VG                       VG_CommandScheduleReport3byteV4VGroup;\
  VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG                       VG_CommandScheduleReport4byteV4VGroup;\
  ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V4_FRAME                    ZW_CommandScheduleReport1byteV4Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V4_FRAME                    ZW_CommandScheduleReport2byteV4Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V4_FRAME                    ZW_CommandScheduleReport3byteV4Frame;\
  ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V4_FRAME                    ZW_CommandScheduleReport4byteV4Frame;\
  ZW_SCHEDULE_REMOVE_V4_FRAME                                  ZW_ScheduleRemoveV4Frame;\
  ZW_SCHEDULE_STATE_SET_V4_FRAME                               ZW_ScheduleStateSetV4Frame;\
  ZW_SCHEDULE_STATE_GET_V4_FRAME                               ZW_ScheduleStateGetV4Frame;\
  VG_SCHEDULE_STATE_REPORT_V4_VG                               VG_ScheduleStateReportV4VGroup;\
  ZW_SCHEDULE_STATE_REPORT_1BYTE_V4_FRAME                      ZW_ScheduleStateReport1byteV4Frame;\
  ZW_SCHEDULE_STATE_REPORT_2BYTE_V4_FRAME                      ZW_ScheduleStateReport2byteV4Frame;\
  ZW_SCHEDULE_STATE_REPORT_3BYTE_V4_FRAME                      ZW_ScheduleStateReport3byteV4Frame;\
  ZW_SCHEDULE_STATE_REPORT_4BYTE_V4_FRAME                      ZW_ScheduleStateReport4byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_COMMANDS_GET_V4_FRAME                  ZW_ScheduleSupportedCommandsGetV4Frame;\
  VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_1BYTE_V4_VG            VG_ScheduleSupportedCommandsReport1byteV4VGroup;\
  VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_2BYTE_V4_VG            VG_ScheduleSupportedCommandsReport2byteV4VGroup;\
  VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_3BYTE_V4_VG            VG_ScheduleSupportedCommandsReport3byteV4VGroup;\
  VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG            VG_ScheduleSupportedCommandsReport4byteV4VGroup;\
  ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_1BYTE_V4_FRAME         ZW_ScheduleSupportedCommandsReport1byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_2BYTE_V4_FRAME         ZW_ScheduleSupportedCommandsReport2byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_3BYTE_V4_FRAME         ZW_ScheduleSupportedCommandsReport3byteV4Frame;\
  ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_FRAME         ZW_ScheduleSupportedCommandsReport4byteV4Frame;\
/* Command class Network Management Primary */\
  ZW_CONTROLLER_CHANGE_FRAME                                   ZW_ControllerChangeFrame;\
  ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME                      ZW_ControllerChangeStatus1byteFrame;\
  ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME                      ZW_ControllerChangeStatus2byteFrame;\
  ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME                      ZW_ControllerChangeStatus3byteFrame;\
  ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME                      ZW_ControllerChangeStatus4byteFrame;\
/* Command class Zip Nd */\
  ZW_ZIP_NODE_SOLICITATION_FRAME                               ZW_ZipNodeSolicitationFrame;\
  ZW_ZIP_INV_NODE_SOLICITATION_FRAME                           ZW_ZipInvNodeSolicitationFrame;\
  ZW_ZIP_NODE_ADVERTISEMENT_FRAME                              ZW_ZipNodeAdvertisementFrame;\
/* Command class Zip Nd V2 */\
  ZW_ZIP_NODE_SOLICITATION_V2_FRAME                            ZW_ZipNodeSolicitationV2Frame;\
  ZW_ZIP_INV_NODE_SOLICITATION_V2_FRAME                        ZW_ZipInvNodeSolicitationV2Frame;\
  ZW_ZIP_NODE_ADVERTISEMENT_V2_FRAME                           ZW_ZipNodeAdvertisementV2Frame;\
/* Command class Association Grp Info */\
  ZW_ASSOCIATION_GROUP_NAME_GET_FRAME                          ZW_AssociationGroupNameGetFrame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_FRAME                 ZW_AssociationGroupNameReport1byteFrame;\

#define ZW_FRAME_COLLECTION_MACRO6\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_FRAME                 ZW_AssociationGroupNameReport2byteFrame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_FRAME                 ZW_AssociationGroupNameReport3byteFrame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_FRAME                 ZW_AssociationGroupNameReport4byteFrame;\
  ZW_ASSOCIATION_GROUP_INFO_GET_FRAME                          ZW_AssociationGroupInfoGetFrame;\
  VG_ASSOCIATION_GROUP_INFO_REPORT_VG                          VG_AssociationGroupInfoReportVGroup;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_FRAME                 ZW_AssociationGroupInfoReport1byteFrame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_FRAME                 ZW_AssociationGroupInfoReport2byteFrame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_FRAME                 ZW_AssociationGroupInfoReport3byteFrame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_FRAME                 ZW_AssociationGroupInfoReport4byteFrame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_FRAME                  ZW_AssociationGroupCommandListGetFrame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_FRAME         ZW_AssociationGroupCommandListReport1byteFrame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_FRAME         ZW_AssociationGroupCommandListReport2byteFrame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_FRAME         ZW_AssociationGroupCommandListReport3byteFrame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_FRAME         ZW_AssociationGroupCommandListReport4byteFrame;\
/* Command class Association Grp Info V2 */\
  ZW_ASSOCIATION_GROUP_NAME_GET_V2_FRAME                       ZW_AssociationGroupNameGetV2Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_V2_FRAME              ZW_AssociationGroupNameReport1byteV2Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_V2_FRAME              ZW_AssociationGroupNameReport2byteV2Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_V2_FRAME              ZW_AssociationGroupNameReport3byteV2Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_V2_FRAME              ZW_AssociationGroupNameReport4byteV2Frame;\
  ZW_ASSOCIATION_GROUP_INFO_GET_V2_FRAME                       ZW_AssociationGroupInfoGetV2Frame;\
  VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG                       VG_AssociationGroupInfoReportV2VGroup;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_V2_FRAME              ZW_AssociationGroupInfoReport1byteV2Frame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_V2_FRAME              ZW_AssociationGroupInfoReport2byteV2Frame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_V2_FRAME              ZW_AssociationGroupInfoReport3byteV2Frame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_V2_FRAME              ZW_AssociationGroupInfoReport4byteV2Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_V2_FRAME               ZW_AssociationGroupCommandListGetV2Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_V2_FRAME      ZW_AssociationGroupCommandListReport1byteV2Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_V2_FRAME      ZW_AssociationGroupCommandListReport2byteV2Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_V2_FRAME      ZW_AssociationGroupCommandListReport3byteV2Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_V2_FRAME      ZW_AssociationGroupCommandListReport4byteV2Frame;\
/* Command class Association Grp Info V3 */\
  ZW_ASSOCIATION_GROUP_NAME_GET_V3_FRAME                       ZW_AssociationGroupNameGetV3Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_V3_FRAME              ZW_AssociationGroupNameReport1byteV3Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_V3_FRAME              ZW_AssociationGroupNameReport2byteV3Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_V3_FRAME              ZW_AssociationGroupNameReport3byteV3Frame;\
  ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_V3_FRAME              ZW_AssociationGroupNameReport4byteV3Frame;\
  ZW_ASSOCIATION_GROUP_INFO_GET_V3_FRAME                       ZW_AssociationGroupInfoGetV3Frame;\
  VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG                       VG_AssociationGroupInfoReportV3VGroup;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_V3_FRAME              ZW_AssociationGroupInfoReport1byteV3Frame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_V3_FRAME              ZW_AssociationGroupInfoReport2byteV3Frame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_V3_FRAME              ZW_AssociationGroupInfoReport3byteV3Frame;\
  ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_V3_FRAME              ZW_AssociationGroupInfoReport4byteV3Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_V3_FRAME               ZW_AssociationGroupCommandListGetV3Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_V3_FRAME      ZW_AssociationGroupCommandListReport1byteV3Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_V3_FRAME      ZW_AssociationGroupCommandListReport2byteV3Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_V3_FRAME      ZW_AssociationGroupCommandListReport3byteV3Frame;\
  ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_V3_FRAME      ZW_AssociationGroupCommandListReport4byteV3Frame;\
/* Command class Device Reset Locally */\
  ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_FRAME                   ZW_DeviceResetLocallyNotificationFrame;\
/* Command class Central Scene */\
  ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME                         ZW_CentralSceneSupportedGetFrame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME                      ZW_CentralSceneSupportedReportFrame;\
  ZW_CENTRAL_SCENE_NOTIFICATION_FRAME                          ZW_CentralSceneNotificationFrame;\
/* Command class Central Scene V2 */\
  ZW_CENTRAL_SCENE_SUPPORTED_GET_V2_FRAME                      ZW_CentralSceneSupportedGetV2Frame;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V2_VG                VG_CentralSceneSupportedReport1byteV2VGroup;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V2_VG                VG_CentralSceneSupportedReport2byteV2VGroup;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V2_VG                VG_CentralSceneSupportedReport3byteV2VGroup;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG                VG_CentralSceneSupportedReport4byteV2VGroup;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V2_FRAME             ZW_CentralSceneSupportedReport1byteV2Frame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V2_FRAME             ZW_CentralSceneSupportedReport2byteV2Frame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V2_FRAME             ZW_CentralSceneSupportedReport3byteV2Frame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_FRAME             ZW_CentralSceneSupportedReport4byteV2Frame;\
  ZW_CENTRAL_SCENE_NOTIFICATION_V2_FRAME                       ZW_CentralSceneNotificationV2Frame;\
/* Command class Central Scene V3 */\
  ZW_CENTRAL_SCENE_SUPPORTED_GET_V3_FRAME                      ZW_CentralSceneSupportedGetV3Frame;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V3_VG                VG_CentralSceneSupportedReport1byteV3VGroup;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V3_VG                VG_CentralSceneSupportedReport2byteV3VGroup;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V3_VG                VG_CentralSceneSupportedReport3byteV3VGroup;\
  VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG                VG_CentralSceneSupportedReport4byteV3VGroup;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V3_FRAME             ZW_CentralSceneSupportedReport1byteV3Frame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V3_FRAME             ZW_CentralSceneSupportedReport2byteV3Frame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V3_FRAME             ZW_CentralSceneSupportedReport3byteV3Frame;\
  ZW_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_FRAME             ZW_CentralSceneSupportedReport4byteV3Frame;\
  ZW_CENTRAL_SCENE_NOTIFICATION_V3_FRAME                       ZW_CentralSceneNotificationV3Frame;\
  ZW_CENTRAL_SCENE_CONFIGURATION_SET_V3_FRAME                  ZW_CentralSceneConfigurationSetV3Frame;\
  ZW_CENTRAL_SCENE_CONFIGURATION_GET_V3_FRAME                  ZW_CentralSceneConfigurationGetV3Frame;\
  ZW_CENTRAL_SCENE_CONFIGURATION_REPORT_V3_FRAME               ZW_CentralSceneConfigurationReportV3Frame;\
/* Command class Ip Association */\
  ZW_IP_ASSOCIATION_SET_FRAME                                  ZW_IpAssociationSetFrame;\
  ZW_IP_ASSOCIATION_GET_FRAME                                  ZW_IpAssociationGetFrame;\
  ZW_IP_ASSOCIATION_REPORT_FRAME                               ZW_IpAssociationReportFrame;\
  ZW_IP_ASSOCIATION_REMOVE_FRAME                               ZW_IpAssociationRemoveFrame;\
/* Command class Antitheft */\
  ZW_ANTITHEFT_SET_1BYTE_FRAME                                 ZW_AntitheftSet1byteFrame;\
  ZW_ANTITHEFT_SET_2BYTE_FRAME                                 ZW_AntitheftSet2byteFrame;\
  ZW_ANTITHEFT_SET_3BYTE_FRAME                                 ZW_AntitheftSet3byteFrame;\
  ZW_ANTITHEFT_SET_4BYTE_FRAME                                 ZW_AntitheftSet4byteFrame;\
  ZW_ANTITHEFT_GET_FRAME                                       ZW_AntitheftGetFrame;\
  ZW_ANTITHEFT_REPORT_1BYTE_FRAME                              ZW_AntitheftReport1byteFrame;\
  ZW_ANTITHEFT_REPORT_2BYTE_FRAME                              ZW_AntitheftReport2byteFrame;\
  ZW_ANTITHEFT_REPORT_3BYTE_FRAME                              ZW_AntitheftReport3byteFrame;\
  ZW_ANTITHEFT_REPORT_4BYTE_FRAME                              ZW_AntitheftReport4byteFrame;\
/* Command class Antitheft V2 */\
  ZW_ANTITHEFT_SET_1BYTE_V2_FRAME                              ZW_AntitheftSet1byteV2Frame;\
  ZW_ANTITHEFT_SET_2BYTE_V2_FRAME                              ZW_AntitheftSet2byteV2Frame;\
  ZW_ANTITHEFT_SET_3BYTE_V2_FRAME                              ZW_AntitheftSet3byteV2Frame;\
  ZW_ANTITHEFT_SET_4BYTE_V2_FRAME                              ZW_AntitheftSet4byteV2Frame;\
  ZW_ANTITHEFT_GET_V2_FRAME                                    ZW_AntitheftGetV2Frame;\
  ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME                           ZW_AntitheftReport1byteV2Frame;\
  ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME                           ZW_AntitheftReport2byteV2Frame;\
  ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME                           ZW_AntitheftReport3byteV2Frame;\
  ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME                           ZW_AntitheftReport4byteV2Frame;\
/* Command class Antitheft V3 */\
  ZW_ANTITHEFT_SET_1BYTE_V3_FRAME                              ZW_AntitheftSet1byteV3Frame;\
  ZW_ANTITHEFT_SET_2BYTE_V3_FRAME                              ZW_AntitheftSet2byteV3Frame;\
  ZW_ANTITHEFT_SET_3BYTE_V3_FRAME                              ZW_AntitheftSet3byteV3Frame;\
  ZW_ANTITHEFT_SET_4BYTE_V3_FRAME                              ZW_AntitheftSet4byteV3Frame;\
  ZW_ANTITHEFT_GET_V3_FRAME                                    ZW_AntitheftGetV3Frame;\
  ZW_ANTITHEFT_REPORT_1BYTE_V3_FRAME                           ZW_AntitheftReport1byteV3Frame;\
  ZW_ANTITHEFT_REPORT_2BYTE_V3_FRAME                           ZW_AntitheftReport2byteV3Frame;\
  ZW_ANTITHEFT_REPORT_3BYTE_V3_FRAME                           ZW_AntitheftReport3byteV3Frame;\
  ZW_ANTITHEFT_REPORT_4BYTE_V3_FRAME                           ZW_AntitheftReport4byteV3Frame;\
/* Command class Zwaveplus Info */\
  ZW_ZWAVEPLUS_INFO_GET_FRAME                                  ZW_ZwaveplusInfoGetFrame;\
  ZW_ZWAVEPLUS_INFO_REPORT_FRAME                               ZW_ZwaveplusInfoReportFrame;\
/* Command class Zwaveplus Info V2 */\
  ZW_ZWAVEPLUS_INFO_GET_V2_FRAME                               ZW_ZwaveplusInfoGetV2Frame;\
  ZW_ZWAVEPLUS_INFO_REPORT_V2_FRAME                            ZW_ZwaveplusInfoReportV2Frame;\
/* Command class Zip Gateway */\
  ZW_GATEWAY_MODE_SET_FRAME                                    ZW_GatewayModeSetFrame;\
  ZW_GATEWAY_MODE_GET_FRAME                                    ZW_GatewayModeGetFrame;\
  ZW_GATEWAY_MODE_REPORT_FRAME                                 ZW_GatewayModeReportFrame;\
  ZW_GATEWAY_PEER_SET_1BYTE_FRAME                              ZW_GatewayPeerSet1byteFrame;\
  ZW_GATEWAY_PEER_SET_2BYTE_FRAME                              ZW_GatewayPeerSet2byteFrame;\
  ZW_GATEWAY_PEER_SET_3BYTE_FRAME                              ZW_GatewayPeerSet3byteFrame;\
  ZW_GATEWAY_PEER_SET_4BYTE_FRAME                              ZW_GatewayPeerSet4byteFrame;\
  ZW_GATEWAY_PEER_GET_FRAME                                    ZW_GatewayPeerGetFrame;\
  ZW_GATEWAY_PEER_REPORT_1BYTE_FRAME                           ZW_GatewayPeerReport1byteFrame;\
  ZW_GATEWAY_PEER_REPORT_2BYTE_FRAME                           ZW_GatewayPeerReport2byteFrame;\
  ZW_GATEWAY_PEER_REPORT_3BYTE_FRAME                           ZW_GatewayPeerReport3byteFrame;\
  ZW_GATEWAY_PEER_REPORT_4BYTE_FRAME                           ZW_GatewayPeerReport4byteFrame;\
  ZW_GATEWAY_LOCK_SET_FRAME                                    ZW_GatewayLockSetFrame;\
  ZW_UNSOLICITED_DESTINATION_SET_FRAME                         ZW_UnsolicitedDestinationSetFrame;\
  ZW_UNSOLICITED_DESTINATION_GET_FRAME                         ZW_UnsolicitedDestinationGetFrame;\
  ZW_UNSOLICITED_DESTINATION_REPORT_FRAME                      ZW_UnsolicitedDestinationReportFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_SET_1BYTE_FRAME             ZW_CommandApplicationNodeInfoSet1byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_SET_2BYTE_FRAME             ZW_CommandApplicationNodeInfoSet2byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_SET_3BYTE_FRAME             ZW_CommandApplicationNodeInfoSet3byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_SET_4BYTE_FRAME             ZW_CommandApplicationNodeInfoSet4byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_GET_FRAME                   ZW_CommandApplicationNodeInfoGetFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_1BYTE_FRAME          ZW_CommandApplicationNodeInfoReport1byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_2BYTE_FRAME          ZW_CommandApplicationNodeInfoReport2byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_3BYTE_FRAME          ZW_CommandApplicationNodeInfoReport3byteFrame;\
  ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_4BYTE_FRAME          ZW_CommandApplicationNodeInfoReport4byteFrame;\
/* Command class Zip Portal */\
  ZW_GATEWAY_CONFIGURATION_SET_FRAME                           ZW_GatewayConfigurationSetFrame;\
  ZW_GATEWAY_CONFIGURATION_STATUS_FRAME                        ZW_GatewayConfigurationStatusFrame;\
  ZW_GATEWAY_CONFIGURATION_GET_FRAME                           ZW_GatewayConfigurationGetFrame;\
  ZW_GATEWAY_CONFIGURATION_REPORT_FRAME                        ZW_GatewayConfigurationReportFrame;\
  ZW_GATEWAY_UNREGISTER_FRAME                                  ZW_GatewayUnregisterFrame;\
/* Command class Dmx */\
  ZW_DMX_ADDRESS_SET_FRAME                                     ZW_DmxAddressSetFrame;\
  ZW_DMX_ADDRESS_GET_FRAME                                     ZW_DmxAddressGetFrame;\
  ZW_DMX_ADDRESS_REPORT_FRAME                                  ZW_DmxAddressReportFrame;\
  ZW_DMX_CAPABILITY_GET_FRAME                                  ZW_DmxCapabilityGetFrame;\
  ZW_DMX_CAPABILITY_REPORT_FRAME                               ZW_DmxCapabilityReportFrame;\
  ZW_DMX_DATA_1BYTE_FRAME                                      ZW_DmxData1byteFrame;\
  ZW_DMX_DATA_2BYTE_FRAME                                      ZW_DmxData2byteFrame;\
  ZW_DMX_DATA_3BYTE_FRAME                                      ZW_DmxData3byteFrame;\
  ZW_DMX_DATA_4BYTE_FRAME                                      ZW_DmxData4byteFrame;\
/* Command class Barrier Operator */\
  ZW_BARRIER_OPERATOR_SET_FRAME                                ZW_BarrierOperatorSetFrame;\
  ZW_BARRIER_OPERATOR_GET_FRAME                                ZW_BarrierOperatorGetFrame;\
  ZW_BARRIER_OPERATOR_REPORT_FRAME                             ZW_BarrierOperatorReportFrame;\
  ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_GET_FRAME               ZW_BarrierOperatorSignalSupportedGetFrame;\
  ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_1BYTE_FRAME      ZW_BarrierOperatorSignalSupportedReport1byteFrame;\
  ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_2BYTE_FRAME      ZW_BarrierOperatorSignalSupportedReport2byteFrame;\
  ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_3BYTE_FRAME      ZW_BarrierOperatorSignalSupportedReport3byteFrame;\
  ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_4BYTE_FRAME      ZW_BarrierOperatorSignalSupportedReport4byteFrame;\
  ZW_BARRIER_OPERATOR_EVENT_SIGNAL_SET_FRAME                   ZW_BarrierOperatorEventSignalSetFrame;\
  ZW_BARRIER_OPERATOR_EVENT_SIGNALING_GET_FRAME                ZW_BarrierOperatorEventSignalingGetFrame;\
  ZW_BARRIER_OPERATOR_EVENT_SIGNALING_REPORT_FRAME             ZW_BarrierOperatorEventSignalingReportFrame;\
/* Command class Network Management Installation Maintenance */\
  ZW_PRIORITY_ROUTE_SET_FRAME                                  ZW_PriorityRouteSetFrame;\
  ZW_PRIORITY_ROUTE_GET_FRAME                                  ZW_PriorityRouteGetFrame;\
  ZW_PRIORITY_ROUTE_REPORT_FRAME                               ZW_PriorityRouteReportFrame;\
  ZW_STATISTICS_GET_FRAME                                      ZW_StatisticsGetFrame;\
  VG_STATISTICS_REPORT_1BYTE_VG                                VG_StatisticsReport1byteVGroup;\
  VG_STATISTICS_REPORT_2BYTE_VG                                VG_StatisticsReport2byteVGroup;\
  VG_STATISTICS_REPORT_3BYTE_VG                                VG_StatisticsReport3byteVGroup;\
  VG_STATISTICS_REPORT_4BYTE_VG                                VG_StatisticsReport4byteVGroup;\
  ZW_STATISTICS_REPORT_1BYTE_FRAME                             ZW_StatisticsReport1byteFrame;\
  ZW_STATISTICS_REPORT_2BYTE_FRAME                             ZW_StatisticsReport2byteFrame;\
  ZW_STATISTICS_REPORT_3BYTE_FRAME                             ZW_StatisticsReport3byteFrame;\
  ZW_STATISTICS_REPORT_4BYTE_FRAME                             ZW_StatisticsReport4byteFrame;\
  ZW_STATISTICS_CLEAR_FRAME                                    ZW_StatisticsClearFrame;\
/* Command class Network Management Installation Maintenance V2 */\
  ZW_PRIORITY_ROUTE_SET_V2_FRAME                               ZW_PriorityRouteSetV2Frame;\
  ZW_PRIORITY_ROUTE_GET_V2_FRAME                               ZW_PriorityRouteGetV2Frame;\
  ZW_PRIORITY_ROUTE_REPORT_V2_FRAME                            ZW_PriorityRouteReportV2Frame;\
  ZW_STATISTICS_GET_V2_FRAME                                   ZW_StatisticsGetV2Frame;\
  VG_STATISTICS_REPORT_1BYTE_V2_VG                             VG_StatisticsReport1byteV2VGroup;\
  VG_STATISTICS_REPORT_2BYTE_V2_VG                             VG_StatisticsReport2byteV2VGroup;\
  VG_STATISTICS_REPORT_3BYTE_V2_VG                             VG_StatisticsReport3byteV2VGroup;\
  VG_STATISTICS_REPORT_4BYTE_V2_VG                             VG_StatisticsReport4byteV2VGroup;\
  ZW_STATISTICS_REPORT_1BYTE_V2_FRAME                          ZW_StatisticsReport1byteV2Frame;\
  ZW_STATISTICS_REPORT_2BYTE_V2_FRAME                          ZW_StatisticsReport2byteV2Frame;\
  ZW_STATISTICS_REPORT_3BYTE_V2_FRAME                          ZW_StatisticsReport3byteV2Frame;\
  ZW_STATISTICS_REPORT_4BYTE_V2_FRAME                          ZW_StatisticsReport4byteV2Frame;\
  ZW_STATISTICS_CLEAR_V2_FRAME                                 ZW_StatisticsClearV2Frame;\
  ZW_RSSI_GET_V2_FRAME                                         ZW_RssiGetV2Frame;\
  ZW_RSSI_REPORT_V2_FRAME                                      ZW_RssiReportV2Frame;\
/* Command class Network Management Installation Maintenance V3 */\
  ZW_PRIORITY_ROUTE_SET_V3_FRAME                               ZW_PriorityRouteSetV3Frame;\
  ZW_PRIORITY_ROUTE_GET_V3_FRAME                               ZW_PriorityRouteGetV3Frame;\
  ZW_PRIORITY_ROUTE_REPORT_V3_FRAME                            ZW_PriorityRouteReportV3Frame;\
  ZW_STATISTICS_GET_V3_FRAME                                   ZW_StatisticsGetV3Frame;\
  VG_STATISTICS_REPORT_1BYTE_V3_VG                             VG_StatisticsReport1byteV3VGroup;\
  VG_STATISTICS_REPORT_2BYTE_V3_VG                             VG_StatisticsReport2byteV3VGroup;\
  VG_STATISTICS_REPORT_3BYTE_V3_VG                             VG_StatisticsReport3byteV3VGroup;\
  VG_STATISTICS_REPORT_4BYTE_V3_VG                             VG_StatisticsReport4byteV3VGroup;\
  ZW_STATISTICS_REPORT_1BYTE_V3_FRAME                          ZW_StatisticsReport1byteV3Frame;\
  ZW_STATISTICS_REPORT_2BYTE_V3_FRAME                          ZW_StatisticsReport2byteV3Frame;\
  ZW_STATISTICS_REPORT_3BYTE_V3_FRAME                          ZW_StatisticsReport3byteV3Frame;\
  ZW_STATISTICS_REPORT_4BYTE_V3_FRAME                          ZW_StatisticsReport4byteV3Frame;\
  ZW_STATISTICS_CLEAR_V3_FRAME                                 ZW_StatisticsClearV3Frame;\
  ZW_RSSI_GET_V3_FRAME                                         ZW_RssiGetV3Frame;\
  ZW_RSSI_REPORT_V3_FRAME                                      ZW_RssiReportV3Frame;\
  ZW_S2_RESYNCHRONIZATION_EVENT_V3_FRAME                       ZW_S2ResynchronizationEventV3Frame;\
  ZW_EXTENDED_STATISTICS_GET_V3_FRAME                          ZW_ExtendedStatisticsGetV3Frame;\
  VG_EXTENDED_STATISTICS_REPORT_1BYTE_V3_VG                    VG_ExtendedStatisticsReport1byteV3VGroup;\
  VG_EXTENDED_STATISTICS_REPORT_2BYTE_V3_VG                    VG_ExtendedStatisticsReport2byteV3VGroup;\
  VG_EXTENDED_STATISTICS_REPORT_3BYTE_V3_VG                    VG_ExtendedStatisticsReport3byteV3VGroup;\
  VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG                    VG_ExtendedStatisticsReport4byteV3VGroup;\
  ZW_EXTENDED_STATISTICS_REPORT_1BYTE_V3_FRAME                 ZW_ExtendedStatisticsReport1byteV3Frame;\
  ZW_EXTENDED_STATISTICS_REPORT_2BYTE_V3_FRAME                 ZW_ExtendedStatisticsReport2byteV3Frame;\
  ZW_EXTENDED_STATISTICS_REPORT_3BYTE_V3_FRAME                 ZW_ExtendedStatisticsReport3byteV3Frame;\
  ZW_EXTENDED_STATISTICS_REPORT_4BYTE_V3_FRAME                 ZW_ExtendedStatisticsReport4byteV3Frame;\
/* Command class Network Management Installation Maintenance V4 */\
  ZW_PRIORITY_ROUTE_SET_V4_FRAME                               ZW_PriorityRouteSetV4Frame;\
  ZW_PRIORITY_ROUTE_GET_V4_FRAME                               ZW_PriorityRouteGetV4Frame;\
  ZW_PRIORITY_ROUTE_REPORT_V4_FRAME                            ZW_PriorityRouteReportV4Frame;\
  ZW_STATISTICS_GET_V4_FRAME                                   ZW_StatisticsGetV4Frame;\
  VG_STATISTICS_REPORT_1BYTE_V4_VG                             VG_StatisticsReport1byteV4VGroup;\
  VG_STATISTICS_REPORT_2BYTE_V4_VG                             VG_StatisticsReport2byteV4VGroup;\
  VG_STATISTICS_REPORT_3BYTE_V4_VG                             VG_StatisticsReport3byteV4VGroup;\
  VG_STATISTICS_REPORT_4BYTE_V4_VG                             VG_StatisticsReport4byteV4VGroup;\
  ZW_STATISTICS_REPORT_1BYTE_V4_FRAME                          ZW_StatisticsReport1byteV4Frame;\
  ZW_STATISTICS_REPORT_2BYTE_V4_FRAME                          ZW_StatisticsReport2byteV4Frame;\
  ZW_STATISTICS_REPORT_3BYTE_V4_FRAME                          ZW_StatisticsReport3byteV4Frame;\
  ZW_STATISTICS_REPORT_4BYTE_V4_FRAME                          ZW_StatisticsReport4byteV4Frame;\
  ZW_STATISTICS_CLEAR_V4_FRAME                                 ZW_StatisticsClearV4Frame;\
  ZW_RSSI_GET_V4_FRAME                                         ZW_RssiGetV4Frame;\
  ZW_RSSI_REPORT_V4_FRAME                                      ZW_RssiReportV4Frame;\
  ZW_S2_RESYNCHRONIZATION_EVENT_V4_FRAME                       ZW_S2ResynchronizationEventV4Frame;\
  ZW_EXTENDED_STATISTICS_GET_V4_FRAME                          ZW_ExtendedStatisticsGetV4Frame;\
  VG_EXTENDED_STATISTICS_REPORT_1BYTE_V4_VG                    VG_ExtendedStatisticsReport1byteV4VGroup;\
  VG_EXTENDED_STATISTICS_REPORT_2BYTE_V4_VG                    VG_ExtendedStatisticsReport2byteV4VGroup;\
  VG_EXTENDED_STATISTICS_REPORT_3BYTE_V4_VG                    VG_ExtendedStatisticsReport3byteV4VGroup;\
  VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG                    VG_ExtendedStatisticsReport4byteV4VGroup;\
  ZW_EXTENDED_STATISTICS_REPORT_1BYTE_V4_FRAME                 ZW_ExtendedStatisticsReport1byteV4Frame;\
  ZW_EXTENDED_STATISTICS_REPORT_2BYTE_V4_FRAME                 ZW_ExtendedStatisticsReport2byteV4Frame;\
  ZW_EXTENDED_STATISTICS_REPORT_3BYTE_V4_FRAME                 ZW_ExtendedStatisticsReport3byteV4Frame;\
  ZW_EXTENDED_STATISTICS_REPORT_4BYTE_V4_FRAME                 ZW_ExtendedStatisticsReport4byteV4Frame;\
  ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_SET_V4_FRAME               ZW_ZwaveLrChannelConfigurationSetV4Frame;\
  ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_GET_V4_FRAME               ZW_ZwaveLrChannelConfigurationGetV4Frame;\
  ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_REPORT_V4_FRAME            ZW_ZwaveLrChannelConfigurationReportV4Frame;\
/* Command class Zip Naming */\
  ZW_ZIP_NAMING_NAME_SET_1BYTE_FRAME                           ZW_ZipNamingNameSet1byteFrame;\
  ZW_ZIP_NAMING_NAME_SET_2BYTE_FRAME                           ZW_ZipNamingNameSet2byteFrame;\
  ZW_ZIP_NAMING_NAME_SET_3BYTE_FRAME                           ZW_ZipNamingNameSet3byteFrame;\
  ZW_ZIP_NAMING_NAME_SET_4BYTE_FRAME                           ZW_ZipNamingNameSet4byteFrame;\
  ZW_ZIP_NAMING_NAME_GET_FRAME                                 ZW_ZipNamingNameGetFrame;\
  ZW_ZIP_NAMING_NAME_REPORT_1BYTE_FRAME                        ZW_ZipNamingNameReport1byteFrame;\
  ZW_ZIP_NAMING_NAME_REPORT_2BYTE_FRAME                        ZW_ZipNamingNameReport2byteFrame;\
  ZW_ZIP_NAMING_NAME_REPORT_3BYTE_FRAME                        ZW_ZipNamingNameReport3byteFrame;\
  ZW_ZIP_NAMING_NAME_REPORT_4BYTE_FRAME                        ZW_ZipNamingNameReport4byteFrame;\
  ZW_ZIP_NAMING_LOCATION_SET_1BYTE_FRAME                       ZW_ZipNamingLocationSet1byteFrame;\
  ZW_ZIP_NAMING_LOCATION_SET_2BYTE_FRAME                       ZW_ZipNamingLocationSet2byteFrame;\
  ZW_ZIP_NAMING_LOCATION_SET_3BYTE_FRAME                       ZW_ZipNamingLocationSet3byteFrame;\
  ZW_ZIP_NAMING_LOCATION_SET_4BYTE_FRAME                       ZW_ZipNamingLocationSet4byteFrame;\
  ZW_ZIP_NAMING_LOCATION_GET_FRAME                             ZW_ZipNamingLocationGetFrame;\
  ZW_ZIP_NAMING_LOCATION_REPORT_1BYTE_FRAME                    ZW_ZipNamingLocationReport1byteFrame;\
  ZW_ZIP_NAMING_LOCATION_REPORT_2BYTE_FRAME                    ZW_ZipNamingLocationReport2byteFrame;\
  ZW_ZIP_NAMING_LOCATION_REPORT_3BYTE_FRAME                    ZW_ZipNamingLocationReport3byteFrame;\
  ZW_ZIP_NAMING_LOCATION_REPORT_4BYTE_FRAME                    ZW_ZipNamingLocationReport4byteFrame;\
/* Command class Mailbox */\
  ZW_MAILBOX_CONFIGURATION_GET_FRAME                           ZW_MailboxConfigurationGetFrame;\
  ZW_MAILBOX_CONFIGURATION_SET_FRAME                           ZW_MailboxConfigurationSetFrame;\
  ZW_MAILBOX_CONFIGURATION_REPORT_FRAME                        ZW_MailboxConfigurationReportFrame;\
  ZW_MAILBOX_QUEUE_1BYTE_FRAME                                 ZW_MailboxQueue1byteFrame;\
  ZW_MAILBOX_QUEUE_2BYTE_FRAME                                 ZW_MailboxQueue2byteFrame;\
  ZW_MAILBOX_QUEUE_3BYTE_FRAME                                 ZW_MailboxQueue3byteFrame;\
  ZW_MAILBOX_QUEUE_4BYTE_FRAME                                 ZW_MailboxQueue4byteFrame;\
  ZW_MAILBOX_WAKEUP_NOTIFICATION_FRAME                         ZW_MailboxWakeupNotificationFrame;\
  ZW_MAILBOX_NODE_FAILING_FRAME                                ZW_MailboxNodeFailingFrame;\
/* Command class Mailbox V2 */\
  ZW_MAILBOX_CONFIGURATION_GET_V2_FRAME                        ZW_MailboxConfigurationGetV2Frame;\
  ZW_MAILBOX_CONFIGURATION_SET_V2_FRAME                        ZW_MailboxConfigurationSetV2Frame;\
  ZW_MAILBOX_CONFIGURATION_REPORT_V2_FRAME                     ZW_MailboxConfigurationReportV2Frame;\
  ZW_MAILBOX_QUEUE_1BYTE_V2_FRAME                              ZW_MailboxQueue1byteV2Frame;\
  ZW_MAILBOX_QUEUE_2BYTE_V2_FRAME                              ZW_MailboxQueue2byteV2Frame;\
  ZW_MAILBOX_QUEUE_3BYTE_V2_FRAME                              ZW_MailboxQueue3byteV2Frame;\
  ZW_MAILBOX_QUEUE_4BYTE_V2_FRAME                              ZW_MailboxQueue4byteV2Frame;\
  ZW_MAILBOX_WAKEUP_NOTIFICATION_V2_FRAME                      ZW_MailboxWakeupNotificationV2Frame;\
  ZW_MAILBOX_NODE_FAILING_V2_FRAME                             ZW_MailboxNodeFailingV2Frame;\
/* Command class Window Covering */\
  ZW_WINDOW_COVERING_SUPPORTED_GET_FRAME                       ZW_WindowCoveringSupportedGetFrame;\
  ZW_WINDOW_COVERING_SUPPORTED_REPORT_1BYTE_FRAME              ZW_WindowCoveringSupportedReport1byteFrame;\
  ZW_WINDOW_COVERING_SUPPORTED_REPORT_2BYTE_FRAME              ZW_WindowCoveringSupportedReport2byteFrame;\
  ZW_WINDOW_COVERING_SUPPORTED_REPORT_3BYTE_FRAME              ZW_WindowCoveringSupportedReport3byteFrame;\
  ZW_WINDOW_COVERING_SUPPORTED_REPORT_4BYTE_FRAME              ZW_WindowCoveringSupportedReport4byteFrame;\
  ZW_WINDOW_COVERING_GET_FRAME                                 ZW_WindowCoveringGetFrame;\
  ZW_WINDOW_COVERING_REPORT_FRAME                              ZW_WindowCoveringReportFrame;\
  VG_WINDOW_COVERING_SET_VG                                    VG_WindowCoveringSetVGroup;\
  ZW_WINDOW_COVERING_SET_1BYTE_FRAME                           ZW_WindowCoveringSet1byteFrame;\
  ZW_WINDOW_COVERING_SET_2BYTE_FRAME                           ZW_WindowCoveringSet2byteFrame;\
  ZW_WINDOW_COVERING_SET_3BYTE_FRAME                           ZW_WindowCoveringSet3byteFrame;\
  ZW_WINDOW_COVERING_SET_4BYTE_FRAME                           ZW_WindowCoveringSet4byteFrame;\
  ZW_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME                  ZW_WindowCoveringStartLevelChangeFrame;\
  ZW_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME                   ZW_WindowCoveringStopLevelChangeFrame;\
/* Command class Security 2 */\
  ZW_SECURITY_2_NONCE_GET_FRAME                                ZW_Security2NonceGetFrame;\
  ZW_SECURITY_2_NONCE_REPORT_FRAME                             ZW_Security2NonceReportFrame;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_VG                 VG_Security2MessageEncapsulation1byteVGroup;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_VG                 VG_Security2MessageEncapsulation2byteVGroup;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_VG                 VG_Security2MessageEncapsulation3byteVGroup;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG                 VG_Security2MessageEncapsulation4byteVGroup;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_FRAME              ZW_Security2MessageEncapsulation1byteFrame;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_FRAME              ZW_Security2MessageEncapsulation2byteFrame;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_FRAME              ZW_Security2MessageEncapsulation3byteFrame;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_FRAME              ZW_Security2MessageEncapsulation4byteFrame;\
  ZW_KEX_GET_FRAME                                             ZW_KexGetFrame;\
  ZW_KEX_REPORT_FRAME                                          ZW_KexReportFrame;\
  ZW_KEX_SET_FRAME                                             ZW_KexSetFrame;\
  ZW_KEX_FAIL_FRAME                                            ZW_KexFailFrame;\
  ZW_PUBLIC_KEY_REPORT_1BYTE_FRAME                             ZW_PublicKeyReport1byteFrame;\
  ZW_PUBLIC_KEY_REPORT_2BYTE_FRAME                             ZW_PublicKeyReport2byteFrame;\
  ZW_PUBLIC_KEY_REPORT_3BYTE_FRAME                             ZW_PublicKeyReport3byteFrame;\
  ZW_PUBLIC_KEY_REPORT_4BYTE_FRAME                             ZW_PublicKeyReport4byteFrame;\
  ZW_SECURITY_2_NETWORK_KEY_GET_FRAME                          ZW_Security2NetworkKeyGetFrame;\
  ZW_SECURITY_2_NETWORK_KEY_REPORT_FRAME                       ZW_Security2NetworkKeyReportFrame;\
  ZW_SECURITY_2_NETWORK_KEY_VERIFY_FRAME                       ZW_Security2NetworkKeyVerifyFrame;\
  ZW_SECURITY_2_TRANSFER_END_FRAME                             ZW_Security2TransferEndFrame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_GET_FRAME                   ZW_Security2CommandsSupportedGetFrame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME          ZW_Security2CommandsSupportedReport1byteFrame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME          ZW_Security2CommandsSupportedReport2byteFrame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME          ZW_Security2CommandsSupportedReport3byteFrame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME          ZW_Security2CommandsSupportedReport4byteFrame;\
/* Command class Security 2 V2 */\
  ZW_SECURITY_2_NONCE_GET_V2_FRAME                             ZW_Security2NonceGetV2Frame;\
  ZW_SECURITY_2_NONCE_REPORT_V2_FRAME                          ZW_Security2NonceReportV2Frame;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_V2_VG              VG_Security2MessageEncapsulation1byteV2VGroup;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_V2_VG              VG_Security2MessageEncapsulation2byteV2VGroup;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_V2_VG              VG_Security2MessageEncapsulation3byteV2VGroup;\
  VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG              VG_Security2MessageEncapsulation4byteV2VGroup;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_V2_FRAME           ZW_Security2MessageEncapsulation1byteV2Frame;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_V2_FRAME           ZW_Security2MessageEncapsulation2byteV2Frame;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_V2_FRAME           ZW_Security2MessageEncapsulation3byteV2Frame;\
  ZW_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_FRAME           ZW_Security2MessageEncapsulation4byteV2Frame;\
  ZW_KEX_GET_V2_FRAME                                          ZW_KexGetV2Frame;\
  ZW_KEX_REPORT_V2_FRAME                                       ZW_KexReportV2Frame;\
  ZW_KEX_SET_V2_FRAME                                          ZW_KexSetV2Frame;\
  ZW_KEX_FAIL_V2_FRAME                                         ZW_KexFailV2Frame;\
  ZW_PUBLIC_KEY_REPORT_1BYTE_V2_FRAME                          ZW_PublicKeyReport1byteV2Frame;\
  ZW_PUBLIC_KEY_REPORT_2BYTE_V2_FRAME                          ZW_PublicKeyReport2byteV2Frame;\
  ZW_PUBLIC_KEY_REPORT_3BYTE_V2_FRAME                          ZW_PublicKeyReport3byteV2Frame;\
  ZW_PUBLIC_KEY_REPORT_4BYTE_V2_FRAME                          ZW_PublicKeyReport4byteV2Frame;\
  ZW_SECURITY_2_NETWORK_KEY_GET_V2_FRAME                       ZW_Security2NetworkKeyGetV2Frame;\
  ZW_SECURITY_2_NETWORK_KEY_REPORT_V2_FRAME                    ZW_Security2NetworkKeyReportV2Frame;\
  ZW_SECURITY_2_NETWORK_KEY_VERIFY_V2_FRAME                    ZW_Security2NetworkKeyVerifyV2Frame;\
  ZW_SECURITY_2_TRANSFER_END_V2_FRAME                          ZW_Security2TransferEndV2Frame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_GET_V2_FRAME                ZW_Security2CommandsSupportedGetV2Frame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_1BYTE_V2_FRAME       ZW_Security2CommandsSupportedReport1byteV2Frame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_2BYTE_V2_FRAME       ZW_Security2CommandsSupportedReport2byteV2Frame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_3BYTE_V2_FRAME       ZW_Security2CommandsSupportedReport3byteV2Frame;\
  ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_4BYTE_V2_FRAME       ZW_Security2CommandsSupportedReport4byteV2Frame;\
  ZW_NLS_NODE_LIST_GET_V2_FRAME                                ZW_NlsNodeListGetV2Frame;\
  ZW_NLS_NODE_LIST_REPORT_V2_FRAME                             ZW_NlsNodeListReportV2Frame;\
  ZW_NLS_STATE_GET_V2_FRAME                                    ZW_NlsStateGetV2Frame;\
  ZW_NLS_STATE_REPORT_V2_FRAME                                 ZW_NlsStateReportV2Frame;\
  ZW_NLS_STATE_SET_V2_FRAME                                    ZW_NlsStateSetV2Frame;\
/* Command class Irrigation */\
  ZW_IRRIGATION_SYSTEM_INFO_GET_FRAME                          ZW_IrrigationSystemInfoGetFrame;\
  ZW_IRRIGATION_SYSTEM_INFO_REPORT_FRAME                       ZW_IrrigationSystemInfoReportFrame;\
  ZW_IRRIGATION_SYSTEM_STATUS_GET_FRAME                        ZW_IrrigationSystemStatusGetFrame;\
  ZW_IRRIGATION_SYSTEM_STATUS_REPORT_1BYTE_FRAME               ZW_IrrigationSystemStatusReport1byteFrame;\
  ZW_IRRIGATION_SYSTEM_STATUS_REPORT_2BYTE_FRAME               ZW_IrrigationSystemStatusReport2byteFrame;\
  ZW_IRRIGATION_SYSTEM_STATUS_REPORT_3BYTE_FRAME               ZW_IrrigationSystemStatusReport3byteFrame;\
  ZW_IRRIGATION_SYSTEM_STATUS_REPORT_4BYTE_FRAME               ZW_IrrigationSystemStatusReport4byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_SET_1BYTE_FRAME                  ZW_IrrigationSystemConfigSet1byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_SET_2BYTE_FRAME                  ZW_IrrigationSystemConfigSet2byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_SET_3BYTE_FRAME                  ZW_IrrigationSystemConfigSet3byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_SET_4BYTE_FRAME                  ZW_IrrigationSystemConfigSet4byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_GET_FRAME                        ZW_IrrigationSystemConfigGetFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_1BYTE_FRAME               ZW_IrrigationSystemConfigReport1byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_2BYTE_FRAME               ZW_IrrigationSystemConfigReport2byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_3BYTE_FRAME               ZW_IrrigationSystemConfigReport3byteFrame;\
  ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_4BYTE_FRAME               ZW_IrrigationSystemConfigReport4byteFrame;\
  ZW_IRRIGATION_VALVE_INFO_GET_FRAME                           ZW_IrrigationValveInfoGetFrame;\
  ZW_IRRIGATION_VALVE_INFO_REPORT_FRAME                        ZW_IrrigationValveInfoReportFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_SET_1BYTE_FRAME                   ZW_IrrigationValveConfigSet1byteFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_SET_2BYTE_FRAME                   ZW_IrrigationValveConfigSet2byteFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_SET_3BYTE_FRAME                   ZW_IrrigationValveConfigSet3byteFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_SET_4BYTE_FRAME                   ZW_IrrigationValveConfigSet4byteFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_GET_FRAME                         ZW_IrrigationValveConfigGetFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_REPORT_1BYTE_FRAME                ZW_IrrigationValveConfigReport1byteFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_REPORT_2BYTE_FRAME                ZW_IrrigationValveConfigReport2byteFrame;\

#define ZW_FRAME_COLLECTION_MACRO7\
  ZW_IRRIGATION_VALVE_CONFIG_REPORT_3BYTE_FRAME                ZW_IrrigationValveConfigReport3byteFrame;\
  ZW_IRRIGATION_VALVE_CONFIG_REPORT_4BYTE_FRAME                ZW_IrrigationValveConfigReport4byteFrame;\
  ZW_IRRIGATION_VALVE_RUN_FRAME                                ZW_IrrigationValveRunFrame;\
  VG_IRRIGATION_VALVE_TABLE_SET_VG                             VG_IrrigationValveTableSetVGroup;\
  ZW_IRRIGATION_VALVE_TABLE_SET_1BYTE_FRAME                    ZW_IrrigationValveTableSet1byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_SET_2BYTE_FRAME                    ZW_IrrigationValveTableSet2byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_SET_3BYTE_FRAME                    ZW_IrrigationValveTableSet3byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_SET_4BYTE_FRAME                    ZW_IrrigationValveTableSet4byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_GET_FRAME                          ZW_IrrigationValveTableGetFrame;\
  VG_IRRIGATION_VALVE_TABLE_REPORT_VG                          VG_IrrigationValveTableReportVGroup;\
  ZW_IRRIGATION_VALVE_TABLE_REPORT_1BYTE_FRAME                 ZW_IrrigationValveTableReport1byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_REPORT_2BYTE_FRAME                 ZW_IrrigationValveTableReport2byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_REPORT_3BYTE_FRAME                 ZW_IrrigationValveTableReport3byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_REPORT_4BYTE_FRAME                 ZW_IrrigationValveTableReport4byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_RUN_1BYTE_FRAME                    ZW_IrrigationValveTableRun1byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_RUN_2BYTE_FRAME                    ZW_IrrigationValveTableRun2byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_RUN_3BYTE_FRAME                    ZW_IrrigationValveTableRun3byteFrame;\
  ZW_IRRIGATION_VALVE_TABLE_RUN_4BYTE_FRAME                    ZW_IrrigationValveTableRun4byteFrame;\
  ZW_IRRIGATION_SYSTEM_SHUTOFF_FRAME                           ZW_IrrigationSystemShutoffFrame;\
/* Command class Supervision */\
  ZW_SUPERVISION_GET_FRAME                                     ZW_SupervisionGetFrame;\
  ZW_SUPERVISION_REPORT_FRAME                                  ZW_SupervisionReportFrame;\
/* Command class Supervision V2 */\
  ZW_SUPERVISION_GET_V2_FRAME                                  ZW_SupervisionGetV2Frame;\
  ZW_SUPERVISION_REPORT_V2_FRAME                               ZW_SupervisionReportV2Frame;\
/* Command class Humidity Control Setpoint */\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_1BYTE_FRAME                 ZW_HumidityControlSetpointSet1byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_2BYTE_FRAME                 ZW_HumidityControlSetpointSet2byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_3BYTE_FRAME                 ZW_HumidityControlSetpointSet3byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_4BYTE_FRAME                 ZW_HumidityControlSetpointSet4byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_GET_FRAME                       ZW_HumidityControlSetpointGetFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_1BYTE_FRAME              ZW_HumidityControlSetpointReport1byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_2BYTE_FRAME              ZW_HumidityControlSetpointReport2byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_3BYTE_FRAME              ZW_HumidityControlSetpointReport3byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_4BYTE_FRAME              ZW_HumidityControlSetpointReport4byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_FRAME             ZW_HumidityControlSetpointSupportedGetFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_FRAME          ZW_HumidityControlSetpointSupportedReportFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_FRAME       ZW_HumidityControlSetpointScaleSupportedGetFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_FRAME    ZW_HumidityControlSetpointScaleSupportedReportFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_FRAME          ZW_HumidityControlSetpointCapabilitiesGetFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_1BYTE_FRAME ZW_HumidityControlSetpointCapabilitiesReport1byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_2BYTE_FRAME ZW_HumidityControlSetpointCapabilitiesReport2byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_3BYTE_FRAME ZW_HumidityControlSetpointCapabilitiesReport3byteFrame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_4BYTE_FRAME ZW_HumidityControlSetpointCapabilitiesReport4byteFrame;\
/* Command class Humidity Control Setpoint V2 */\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_1BYTE_V2_FRAME              ZW_HumidityControlSetpointSet1byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_2BYTE_V2_FRAME              ZW_HumidityControlSetpointSet2byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_3BYTE_V2_FRAME              ZW_HumidityControlSetpointSet3byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SET_4BYTE_V2_FRAME              ZW_HumidityControlSetpointSet4byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_GET_V2_FRAME                    ZW_HumidityControlSetpointGetV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_1BYTE_V2_FRAME           ZW_HumidityControlSetpointReport1byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_2BYTE_V2_FRAME           ZW_HumidityControlSetpointReport2byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_3BYTE_V2_FRAME           ZW_HumidityControlSetpointReport3byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_4BYTE_V2_FRAME           ZW_HumidityControlSetpointReport4byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_V2_FRAME          ZW_HumidityControlSetpointSupportedGetV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_V2_FRAME       ZW_HumidityControlSetpointSupportedReportV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_V2_FRAME    ZW_HumidityControlSetpointScaleSupportedGetV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_V2_FRAME ZW_HumidityControlSetpointScaleSupportedReportV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_V2_FRAME       ZW_HumidityControlSetpointCapabilitiesGetV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_1BYTE_V2_FRAME ZW_HumidityControlSetpointCapabilitiesReport1byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_2BYTE_V2_FRAME ZW_HumidityControlSetpointCapabilitiesReport2byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_3BYTE_V2_FRAME ZW_HumidityControlSetpointCapabilitiesReport3byteV2Frame;\
  ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_4BYTE_V2_FRAME ZW_HumidityControlSetpointCapabilitiesReport4byteV2Frame;\
/* Command class Humidity Control Mode */\
  ZW_HUMIDITY_CONTROL_MODE_SET_FRAME                           ZW_HumidityControlModeSetFrame;\
  ZW_HUMIDITY_CONTROL_MODE_GET_FRAME                           ZW_HumidityControlModeGetFrame;\
  ZW_HUMIDITY_CONTROL_MODE_REPORT_FRAME                        ZW_HumidityControlModeReportFrame;\
  ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_GET_FRAME                 ZW_HumidityControlModeSupportedGetFrame;\
  ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_FRAME              ZW_HumidityControlModeSupportedReportFrame;\
/* Command class Humidity Control Mode V2 */\
  ZW_HUMIDITY_CONTROL_MODE_SET_V2_FRAME                        ZW_HumidityControlModeSetV2Frame;\
  ZW_HUMIDITY_CONTROL_MODE_GET_V2_FRAME                        ZW_HumidityControlModeGetV2Frame;\
  ZW_HUMIDITY_CONTROL_MODE_REPORT_V2_FRAME                     ZW_HumidityControlModeReportV2Frame;\
  ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_GET_V2_FRAME              ZW_HumidityControlModeSupportedGetV2Frame;\
  ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_V2_FRAME           ZW_HumidityControlModeSupportedReportV2Frame;\
/* Command class Humidity Control Operating State */\
  ZW_HUMIDITY_CONTROL_OPERATING_STATE_GET_FRAME                ZW_HumidityControlOperatingStateGetFrame;\
  ZW_HUMIDITY_CONTROL_OPERATING_STATE_REPORT_FRAME             ZW_HumidityControlOperatingStateReportFrame;\
/* Command class Entry Control */\
  ZW_ENTRY_CONTROL_NOTIFICATION_1BYTE_FRAME                    ZW_EntryControlNotification1byteFrame;\
  ZW_ENTRY_CONTROL_NOTIFICATION_2BYTE_FRAME                    ZW_EntryControlNotification2byteFrame;\
  ZW_ENTRY_CONTROL_NOTIFICATION_3BYTE_FRAME                    ZW_EntryControlNotification3byteFrame;\
  ZW_ENTRY_CONTROL_NOTIFICATION_4BYTE_FRAME                    ZW_EntryControlNotification4byteFrame;\
  ZW_ENTRY_CONTROL_KEY_SUPPORTED_GET_FRAME                     ZW_EntryControlKeySupportedGetFrame;\
  ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_1BYTE_FRAME            ZW_EntryControlKeySupportedReport1byteFrame;\
  ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_2BYTE_FRAME            ZW_EntryControlKeySupportedReport2byteFrame;\
  ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_3BYTE_FRAME            ZW_EntryControlKeySupportedReport3byteFrame;\
  ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_4BYTE_FRAME            ZW_EntryControlKeySupportedReport4byteFrame;\
  ZW_ENTRY_CONTROL_EVENT_SUPPORTED_GET_FRAME                   ZW_EntryControlEventSupportedGetFrame;\
  ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_1BYTE_FRAME          ZW_EntryControlEventSupportedReport1byteFrame;\
  ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_2BYTE_FRAME          ZW_EntryControlEventSupportedReport2byteFrame;\
  ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_3BYTE_FRAME          ZW_EntryControlEventSupportedReport3byteFrame;\
  ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_4BYTE_FRAME          ZW_EntryControlEventSupportedReport4byteFrame;\
  ZW_ENTRY_CONTROL_CONFIGURATION_SET_FRAME                     ZW_EntryControlConfigurationSetFrame;\
  ZW_ENTRY_CONTROL_CONFIGURATION_GET_FRAME                     ZW_EntryControlConfigurationGetFrame;\
  ZW_ENTRY_CONTROL_CONFIGURATION_REPORT_FRAME                  ZW_EntryControlConfigurationReportFrame;\
/* Command class Inclusion Controller */\
  ZW_INITIATE_FRAME                                            ZW_InitiateFrame;\
  ZW_COMPLETE_FRAME                                            ZW_CompleteFrame;\
/* Command class Node Provisioning */\
  ZW_NODE_PROVISIONING_SET_1BYTE_FRAME                         ZW_NodeProvisioningSet1byteFrame;\
  ZW_NODE_PROVISIONING_SET_2BYTE_FRAME                         ZW_NodeProvisioningSet2byteFrame;\
  ZW_NODE_PROVISIONING_SET_3BYTE_FRAME                         ZW_NodeProvisioningSet3byteFrame;\
  ZW_NODE_PROVISIONING_SET_4BYTE_FRAME                         ZW_NodeProvisioningSet4byteFrame;\
  ZW_NODE_PROVISIONING_DELETE_1BYTE_FRAME                      ZW_NodeProvisioningDelete1byteFrame;\
  ZW_NODE_PROVISIONING_DELETE_2BYTE_FRAME                      ZW_NodeProvisioningDelete2byteFrame;\
  ZW_NODE_PROVISIONING_DELETE_3BYTE_FRAME                      ZW_NodeProvisioningDelete3byteFrame;\
  ZW_NODE_PROVISIONING_DELETE_4BYTE_FRAME                      ZW_NodeProvisioningDelete4byteFrame;\
  ZW_NODE_PROVISIONING_LIST_ITERATION_GET_FRAME                ZW_NodeProvisioningListIterationGetFrame;\
  ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_1BYTE_FRAME       ZW_NodeProvisioningListIterationReport1byteFrame;\
  ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_2BYTE_FRAME       ZW_NodeProvisioningListIterationReport2byteFrame;\
  ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_3BYTE_FRAME       ZW_NodeProvisioningListIterationReport3byteFrame;\
  ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_FRAME       ZW_NodeProvisioningListIterationReport4byteFrame;\
  ZW_NODE_PROVISIONING_GET_1BYTE_FRAME                         ZW_NodeProvisioningGet1byteFrame;\
  ZW_NODE_PROVISIONING_GET_2BYTE_FRAME                         ZW_NodeProvisioningGet2byteFrame;\
  ZW_NODE_PROVISIONING_GET_3BYTE_FRAME                         ZW_NodeProvisioningGet3byteFrame;\
  ZW_NODE_PROVISIONING_GET_4BYTE_FRAME                         ZW_NodeProvisioningGet4byteFrame;\
  ZW_NODE_PROVISIONING_REPORT_1BYTE_FRAME                      ZW_NodeProvisioningReport1byteFrame;\
  ZW_NODE_PROVISIONING_REPORT_2BYTE_FRAME                      ZW_NodeProvisioningReport2byteFrame;\
  ZW_NODE_PROVISIONING_REPORT_3BYTE_FRAME                      ZW_NodeProvisioningReport3byteFrame;\
  ZW_NODE_PROVISIONING_REPORT_4BYTE_FRAME                      ZW_NodeProvisioningReport4byteFrame;\
/* Command class Sound Switch */\
  ZW_SOUND_SWITCH_TONES_NUMBER_GET_FRAME                       ZW_SoundSwitchTonesNumberGetFrame;\
  ZW_SOUND_SWITCH_TONES_NUMBER_REPORT_FRAME                    ZW_SoundSwitchTonesNumberReportFrame;\
  ZW_SOUND_SWITCH_TONE_INFO_GET_FRAME                          ZW_SoundSwitchToneInfoGetFrame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_1BYTE_FRAME                 ZW_SoundSwitchToneInfoReport1byteFrame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_2BYTE_FRAME                 ZW_SoundSwitchToneInfoReport2byteFrame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_3BYTE_FRAME                 ZW_SoundSwitchToneInfoReport3byteFrame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_4BYTE_FRAME                 ZW_SoundSwitchToneInfoReport4byteFrame;\
  ZW_SOUND_SWITCH_CONFIGURATION_SET_FRAME                      ZW_SoundSwitchConfigurationSetFrame;\
  ZW_SOUND_SWITCH_CONFIGURATION_GET_FRAME                      ZW_SoundSwitchConfigurationGetFrame;\
  ZW_SOUND_SWITCH_CONFIGURATION_REPORT_FRAME                   ZW_SoundSwitchConfigurationReportFrame;\
  ZW_SOUND_SWITCH_TONE_PLAY_SET_FRAME                          ZW_SoundSwitchTonePlaySetFrame;\
  ZW_SOUND_SWITCH_TONE_PLAY_GET_FRAME                          ZW_SoundSwitchTonePlayGetFrame;\
  ZW_SOUND_SWITCH_TONE_PLAY_REPORT_FRAME                       ZW_SoundSwitchTonePlayReportFrame;\
/* Command class Sound Switch V2 */\
  ZW_SOUND_SWITCH_TONES_NUMBER_GET_V2_FRAME                    ZW_SoundSwitchTonesNumberGetV2Frame;\
  ZW_SOUND_SWITCH_TONES_NUMBER_REPORT_V2_FRAME                 ZW_SoundSwitchTonesNumberReportV2Frame;\
  ZW_SOUND_SWITCH_TONE_INFO_GET_V2_FRAME                       ZW_SoundSwitchToneInfoGetV2Frame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_1BYTE_V2_FRAME              ZW_SoundSwitchToneInfoReport1byteV2Frame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_2BYTE_V2_FRAME              ZW_SoundSwitchToneInfoReport2byteV2Frame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_3BYTE_V2_FRAME              ZW_SoundSwitchToneInfoReport3byteV2Frame;\
  ZW_SOUND_SWITCH_TONE_INFO_REPORT_4BYTE_V2_FRAME              ZW_SoundSwitchToneInfoReport4byteV2Frame;\
  ZW_SOUND_SWITCH_CONFIGURATION_SET_V2_FRAME                   ZW_SoundSwitchConfigurationSetV2Frame;\
  ZW_SOUND_SWITCH_CONFIGURATION_GET_V2_FRAME                   ZW_SoundSwitchConfigurationGetV2Frame;\
  ZW_SOUND_SWITCH_CONFIGURATION_REPORT_V2_FRAME                ZW_SoundSwitchConfigurationReportV2Frame;\
  ZW_SOUND_SWITCH_TONE_PLAY_SET_V2_FRAME                       ZW_SoundSwitchTonePlaySetV2Frame;\
  ZW_SOUND_SWITCH_TONE_PLAY_GET_V2_FRAME                       ZW_SoundSwitchTonePlayGetV2Frame;\
  ZW_SOUND_SWITCH_TONE_PLAY_REPORT_V2_FRAME                    ZW_SoundSwitchTonePlayReportV2Frame;\
/* Command class Ir Repeater */\
  ZW_IR_REPEATER_CAPABILITIES_GET_FRAME                        ZW_IrRepeaterCapabilitiesGetFrame;\
  ZW_IR_REPEATER_CAPABILITIES_REPORT_FRAME                     ZW_IrRepeaterCapabilitiesReportFrame;\
  ZW_IR_REPEATER_IR_CODE_LEARNING_START_FRAME                  ZW_IrRepeaterIrCodeLearningStartFrame;\
  ZW_IR_REPEATER_IR_CODE_LEARNING_STOP_FRAME                   ZW_IrRepeaterIrCodeLearningStopFrame;\
  ZW_IR_REPEATER_IR_CODE_LEARNING_STATUS_FRAME                 ZW_IrRepeaterIrCodeLearningStatusFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_REMOVE_FRAME                   ZW_IrRepeaterLearntIrCodeRemoveFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_GET_FRAME                      ZW_IrRepeaterLearntIrCodeGetFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_1BYTE_FRAME             ZW_IrRepeaterLearntIrCodeReport1byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_2BYTE_FRAME             ZW_IrRepeaterLearntIrCodeReport2byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_3BYTE_FRAME             ZW_IrRepeaterLearntIrCodeReport3byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_4BYTE_FRAME             ZW_IrRepeaterLearntIrCodeReport4byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_GET_FRAME             ZW_IrRepeaterLearntIrCodeReadbackGetFrame;\
  VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_1BYTE_VG       VG_IrRepeaterLearntIrCodeReadbackReport1byteVGroup;\
  VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_2BYTE_VG       VG_IrRepeaterLearntIrCodeReadbackReport2byteVGroup;\
  VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_3BYTE_VG       VG_IrRepeaterLearntIrCodeReadbackReport3byteVGroup;\
  VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG       VG_IrRepeaterLearntIrCodeReadbackReport4byteVGroup;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_1BYTE_FRAME    ZW_IrRepeaterLearntIrCodeReadbackReport1byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_2BYTE_FRAME    ZW_IrRepeaterLearntIrCodeReadbackReport2byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_3BYTE_FRAME    ZW_IrRepeaterLearntIrCodeReadbackReport3byteFrame;\
  ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_FRAME    ZW_IrRepeaterLearntIrCodeReadbackReport4byteFrame;\
  VG_IR_REPEATER_CONFIGURATION_SET_1BYTE_VG                    VG_IrRepeaterConfigurationSet1byteVGroup;\
  VG_IR_REPEATER_CONFIGURATION_SET_2BYTE_VG                    VG_IrRepeaterConfigurationSet2byteVGroup;\
  VG_IR_REPEATER_CONFIGURATION_SET_3BYTE_VG                    VG_IrRepeaterConfigurationSet3byteVGroup;\
  VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG                    VG_IrRepeaterConfigurationSet4byteVGroup;\
  ZW_IR_REPEATER_CONFIGURATION_SET_1BYTE_FRAME                 ZW_IrRepeaterConfigurationSet1byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_SET_2BYTE_FRAME                 ZW_IrRepeaterConfigurationSet2byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_SET_3BYTE_FRAME                 ZW_IrRepeaterConfigurationSet3byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_SET_4BYTE_FRAME                 ZW_IrRepeaterConfigurationSet4byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_GET_FRAME                       ZW_IrRepeaterConfigurationGetFrame;\
  VG_IR_REPEATER_CONFIGURATION_REPORT_1BYTE_VG                 VG_IrRepeaterConfigurationReport1byteVGroup;\
  VG_IR_REPEATER_CONFIGURATION_REPORT_2BYTE_VG                 VG_IrRepeaterConfigurationReport2byteVGroup;\
  VG_IR_REPEATER_CONFIGURATION_REPORT_3BYTE_VG                 VG_IrRepeaterConfigurationReport3byteVGroup;\
  VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG                 VG_IrRepeaterConfigurationReport4byteVGroup;\
  ZW_IR_REPEATER_CONFIGURATION_REPORT_1BYTE_FRAME              ZW_IrRepeaterConfigurationReport1byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_REPORT_2BYTE_FRAME              ZW_IrRepeaterConfigurationReport2byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_REPORT_3BYTE_FRAME              ZW_IrRepeaterConfigurationReport3byteFrame;\
  ZW_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_FRAME              ZW_IrRepeaterConfigurationReport4byteFrame;\
  ZW_IR_REPEATER_REPEAT_LEARNT_CODE_FRAME                      ZW_IrRepeaterRepeatLearntCodeFrame;\
  VG_IR_REPEATER_REPEAT_1BYTE_VG                               VG_IrRepeaterRepeat1byteVGroup;\
  VG_IR_REPEATER_REPEAT_2BYTE_VG                               VG_IrRepeaterRepeat2byteVGroup;\
  VG_IR_REPEATER_REPEAT_3BYTE_VG                               VG_IrRepeaterRepeat3byteVGroup;\
  VG_IR_REPEATER_REPEAT_4BYTE_VG                               VG_IrRepeaterRepeat4byteVGroup;\
  ZW_IR_REPEATER_REPEAT_1BYTE_FRAME                            ZW_IrRepeaterRepeat1byteFrame;\
  ZW_IR_REPEATER_REPEAT_2BYTE_FRAME                            ZW_IrRepeaterRepeat2byteFrame;\
  ZW_IR_REPEATER_REPEAT_3BYTE_FRAME                            ZW_IrRepeaterRepeat3byteFrame;\
  ZW_IR_REPEATER_REPEAT_4BYTE_FRAME                            ZW_IrRepeaterRepeat4byteFrame;\
/* Command class Authentication */\
  ZW_AUTHENTICATION_CAPABILITY_GET_FRAME                       ZW_AuthenticationCapabilityGetFrame;\
  ZW_AUTHENTICATION_CAPABILITY_REPORT_1BYTE_FRAME              ZW_AuthenticationCapabilityReport1byteFrame;\
  ZW_AUTHENTICATION_CAPABILITY_REPORT_2BYTE_FRAME              ZW_AuthenticationCapabilityReport2byteFrame;\
  ZW_AUTHENTICATION_CAPABILITY_REPORT_3BYTE_FRAME              ZW_AuthenticationCapabilityReport3byteFrame;\
  ZW_AUTHENTICATION_CAPABILITY_REPORT_4BYTE_FRAME              ZW_AuthenticationCapabilityReport4byteFrame;\
  ZW_AUTHENTICATION_DATA_SET_1BYTE_FRAME                       ZW_AuthenticationDataSet1byteFrame;\
  ZW_AUTHENTICATION_DATA_SET_2BYTE_FRAME                       ZW_AuthenticationDataSet2byteFrame;\
  ZW_AUTHENTICATION_DATA_SET_3BYTE_FRAME                       ZW_AuthenticationDataSet3byteFrame;\
  ZW_AUTHENTICATION_DATA_SET_4BYTE_FRAME                       ZW_AuthenticationDataSet4byteFrame;\
  ZW_AUTHENTICATION_DATA_GET_FRAME                             ZW_AuthenticationDataGetFrame;\
  VG_AUTHENTICATION_DATA_REPORT_1BYTE_VG                       VG_AuthenticationDataReport1byteVGroup;\
  VG_AUTHENTICATION_DATA_REPORT_2BYTE_VG                       VG_AuthenticationDataReport2byteVGroup;\
  VG_AUTHENTICATION_DATA_REPORT_3BYTE_VG                       VG_AuthenticationDataReport3byteVGroup;\
  VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG                       VG_AuthenticationDataReport4byteVGroup;\
  ZW_AUTHENTICATION_DATA_REPORT_1BYTE_FRAME                    ZW_AuthenticationDataReport1byteFrame;\
  ZW_AUTHENTICATION_DATA_REPORT_2BYTE_FRAME                    ZW_AuthenticationDataReport2byteFrame;\
  ZW_AUTHENTICATION_DATA_REPORT_3BYTE_FRAME                    ZW_AuthenticationDataReport3byteFrame;\
  ZW_AUTHENTICATION_DATA_REPORT_4BYTE_FRAME                    ZW_AuthenticationDataReport4byteFrame;\
  VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG            VG_AuthenticationTechnologiesCombinationSetVGroup;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_1BYTE_FRAME   ZW_AuthenticationTechnologiesCombinationSet1byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_2BYTE_FRAME   ZW_AuthenticationTechnologiesCombinationSet2byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_3BYTE_FRAME   ZW_AuthenticationTechnologiesCombinationSet3byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_4BYTE_FRAME   ZW_AuthenticationTechnologiesCombinationSet4byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET_FRAME         ZW_AuthenticationTechnologiesCombinationGetFrame;\
  VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_1BYTE_VG   VG_AuthenticationTechnologiesCombinationReport1byteVGroup;\
  VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_2BYTE_VG   VG_AuthenticationTechnologiesCombinationReport2byteVGroup;\
  VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_3BYTE_VG   VG_AuthenticationTechnologiesCombinationReport3byteVGroup;\
  VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG   VG_AuthenticationTechnologiesCombinationReport4byteVGroup;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_1BYTE_FRAME ZW_AuthenticationTechnologiesCombinationReport1byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_2BYTE_FRAME ZW_AuthenticationTechnologiesCombinationReport2byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_3BYTE_FRAME ZW_AuthenticationTechnologiesCombinationReport3byteFrame;\
  ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_FRAME ZW_AuthenticationTechnologiesCombinationReport4byteFrame;\
  ZW_AUTHENTICATION_CHECKSUM_GET_FRAME                         ZW_AuthenticationChecksumGetFrame;\
  ZW_AUTHENTICATION_CHECKSUM_REPORT_FRAME                      ZW_AuthenticationChecksumReportFrame;\
/* Command class Authentication Media Write */\
  ZW_AUTHENTICATION_MEDIA_CAPABILITY_GET_FRAME                 ZW_AuthenticationMediaCapabilityGetFrame;\
  ZW_AUTHENTICATION_MEDIA_CAPABILITY_REPORT_FRAME              ZW_AuthenticationMediaCapabilityReportFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_START_1BYTE_FRAME              ZW_AuthenticationMediaWriteStart1byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_START_2BYTE_FRAME              ZW_AuthenticationMediaWriteStart2byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_START_3BYTE_FRAME              ZW_AuthenticationMediaWriteStart3byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_START_4BYTE_FRAME              ZW_AuthenticationMediaWriteStart4byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_STOP_FRAME                     ZW_AuthenticationMediaWriteStopFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_1BYTE_FRAME             ZW_AuthenticationMediaWriteStatus1byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_2BYTE_FRAME             ZW_AuthenticationMediaWriteStatus2byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_3BYTE_FRAME             ZW_AuthenticationMediaWriteStatus3byteFrame;\
  ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_4BYTE_FRAME             ZW_AuthenticationMediaWriteStatus4byteFrame;\
/* Command class Generic Schedule */\
  ZW_GENERIC_SCHEDULE_CAPABILITIES_GET_FRAME                   ZW_GenericScheduleCapabilitiesGetFrame;\
  ZW_GENERIC_SCHEDULE_CAPABILITIES_REPORT_FRAME                ZW_GenericScheduleCapabilitiesReportFrame;\
  ZW_GENERIC_SCHEDULE_TIME_RANGE_SET_FRAME                     ZW_GenericScheduleTimeRangeSetFrame;\
  ZW_GENERIC_SCHEDULE_TIME_RANGE_GET_FRAME                     ZW_GenericScheduleTimeRangeGetFrame;\
  ZW_GENERIC_SCHEDULE_TIME_RANGE_REPORT_FRAME                  ZW_GenericScheduleTimeRangeReportFrame;\
  VG_GENERIC_SCHEDULE_SET_VG                                   VG_GenericScheduleSetVGroup;\
  ZW_GENERIC_SCHEDULE_SET_1BYTE_FRAME                          ZW_GenericScheduleSet1byteFrame;\
  ZW_GENERIC_SCHEDULE_SET_2BYTE_FRAME                          ZW_GenericScheduleSet2byteFrame;\
  ZW_GENERIC_SCHEDULE_SET_3BYTE_FRAME                          ZW_GenericScheduleSet3byteFrame;\
  ZW_GENERIC_SCHEDULE_SET_4BYTE_FRAME                          ZW_GenericScheduleSet4byteFrame;\
  ZW_GENERIC_SCHEDULE_GET_FRAME                                ZW_GenericScheduleGetFrame;\
  VG_GENERIC_SCHEDULE_REPORT_VG                                VG_GenericScheduleReportVGroup;\
  ZW_GENERIC_SCHEDULE_REPORT_1BYTE_FRAME                       ZW_GenericScheduleReport1byteFrame;\
  ZW_GENERIC_SCHEDULE_REPORT_2BYTE_FRAME                       ZW_GenericScheduleReport2byteFrame;\
  ZW_GENERIC_SCHEDULE_REPORT_3BYTE_FRAME                       ZW_GenericScheduleReport3byteFrame;\
  ZW_GENERIC_SCHEDULE_REPORT_4BYTE_FRAME                       ZW_GenericScheduleReport4byteFrame;\
/* Command class Antitheft Unlock */\
  ZW_ANTITHEFT_UNLOCK_STATE_GET_FRAME                          ZW_AntitheftUnlockStateGetFrame;\
  ZW_ANTITHEFT_UNLOCK_STATE_REPORT_1BYTE_FRAME                 ZW_AntitheftUnlockStateReport1byteFrame;\
  ZW_ANTITHEFT_UNLOCK_STATE_REPORT_2BYTE_FRAME                 ZW_AntitheftUnlockStateReport2byteFrame;\
  ZW_ANTITHEFT_UNLOCK_STATE_REPORT_3BYTE_FRAME                 ZW_AntitheftUnlockStateReport3byteFrame;\
  ZW_ANTITHEFT_UNLOCK_STATE_REPORT_4BYTE_FRAME                 ZW_AntitheftUnlockStateReport4byteFrame;\
  ZW_ANTITHEFT_UNLOCK_SET_1BYTE_FRAME                          ZW_AntitheftUnlockSet1byteFrame;\
  ZW_ANTITHEFT_UNLOCK_SET_2BYTE_FRAME                          ZW_AntitheftUnlockSet2byteFrame;\
  ZW_ANTITHEFT_UNLOCK_SET_3BYTE_FRAME                          ZW_AntitheftUnlockSet3byteFrame;\
  ZW_ANTITHEFT_UNLOCK_SET_4BYTE_FRAME                          ZW_AntitheftUnlockSet4byteFrame;\
/* Command class User Credential */\
  ZW_USER_CAPABILITIES_GET_FRAME                               ZW_UserCapabilitiesGetFrame;\
  VG_USER_CAPABILITIES_REPORT_VG                               VG_UserCapabilitiesReportVGroup;\
  ZW_USER_CAPABILITIES_REPORT_1BYTE_FRAME                      ZW_UserCapabilitiesReport1byteFrame;\
  ZW_USER_CAPABILITIES_REPORT_2BYTE_FRAME                      ZW_UserCapabilitiesReport2byteFrame;\
  ZW_USER_CAPABILITIES_REPORT_3BYTE_FRAME                      ZW_UserCapabilitiesReport3byteFrame;\
  ZW_USER_CAPABILITIES_REPORT_4BYTE_FRAME                      ZW_UserCapabilitiesReport4byteFrame;\
  ZW_CREDENTIAL_CAPABILITIES_GET_FRAME                         ZW_CredentialCapabilitiesGetFrame;\
  VG_CREDENTIAL_CAPABILITIES_REPORT_VG                         VG_CredentialCapabilitiesReportVGroup;\
  ZW_CREDENTIAL_CAPABILITIES_REPORT_1BYTE_FRAME                ZW_CredentialCapabilitiesReport1byteFrame;\
  ZW_CREDENTIAL_CAPABILITIES_REPORT_2BYTE_FRAME                ZW_CredentialCapabilitiesReport2byteFrame;\
  ZW_CREDENTIAL_CAPABILITIES_REPORT_3BYTE_FRAME                ZW_CredentialCapabilitiesReport3byteFrame;\
  ZW_CREDENTIAL_CAPABILITIES_REPORT_4BYTE_FRAME                ZW_CredentialCapabilitiesReport4byteFrame;\
  ZW_USER_SET_1BYTE_FRAME                                      ZW_UserSet1byteFrame;\
  ZW_USER_SET_2BYTE_FRAME                                      ZW_UserSet2byteFrame;\
  ZW_USER_SET_3BYTE_FRAME                                      ZW_UserSet3byteFrame;\
  ZW_USER_SET_4BYTE_FRAME                                      ZW_UserSet4byteFrame;\
  ZW_USER_GET_FRAME                                            ZW_UserGetFrame;\
  ZW_USER_REPORT_1BYTE_FRAME                                   ZW_UserReport1byteFrame;\
  ZW_USER_REPORT_2BYTE_FRAME                                   ZW_UserReport2byteFrame;\
  ZW_USER_REPORT_3BYTE_FRAME                                   ZW_UserReport3byteFrame;\
  ZW_USER_REPORT_4BYTE_FRAME                                   ZW_UserReport4byteFrame;\
  ZW_CREDENTIAL_SET_1BYTE_FRAME                                ZW_CredentialSet1byteFrame;\
  ZW_CREDENTIAL_SET_2BYTE_FRAME                                ZW_CredentialSet2byteFrame;\
  ZW_CREDENTIAL_SET_3BYTE_FRAME                                ZW_CredentialSet3byteFrame;\
  ZW_CREDENTIAL_SET_4BYTE_FRAME                                ZW_CredentialSet4byteFrame;\
  ZW_CREDENTIAL_GET_FRAME                                      ZW_CredentialGetFrame;\
  ZW_CREDENTIAL_REPORT_1BYTE_FRAME                             ZW_CredentialReport1byteFrame;\
  ZW_CREDENTIAL_REPORT_2BYTE_FRAME                             ZW_CredentialReport2byteFrame;\
  ZW_CREDENTIAL_REPORT_3BYTE_FRAME                             ZW_CredentialReport3byteFrame;\
  ZW_CREDENTIAL_REPORT_4BYTE_FRAME                             ZW_CredentialReport4byteFrame;\
  ZW_CREDENTIAL_LEARN_START_FRAME                              ZW_CredentialLearnStartFrame;\
  ZW_CREDENTIAL_LEARN_CANCEL_FRAME                             ZW_CredentialLearnCancelFrame;\
  ZW_CREDENTIAL_LEARN_REPORT_FRAME                             ZW_CredentialLearnReportFrame;\
  ZW_USER_CREDENTIAL_ASSOCIATION_SET_FRAME                     ZW_UserCredentialAssociationSetFrame;\
  ZW_USER_CREDENTIAL_ASSOCIATION_REPORT_FRAME                  ZW_UserCredentialAssociationReportFrame;\
  ZW_ALL_USERS_CHECKSUM_GET_FRAME                              ZW_AllUsersChecksumGetFrame;\
  ZW_ALL_USERS_CHECKSUM_REPORT_FRAME                           ZW_AllUsersChecksumReportFrame;\
  ZW_USER_CHECKSUM_GET_FRAME                                   ZW_UserChecksumGetFrame;\
  ZW_USER_CHECKSUM_REPORT_FRAME                                ZW_UserChecksumReportFrame;\
  ZW_CREDENTIAL_CHECKSUM_GET_FRAME                             ZW_CredentialChecksumGetFrame;\
  ZW_CREDENTIAL_CHECKSUM_REPORT_FRAME                          ZW_CredentialChecksumReportFrame;\
  ZW_ADMIN_PIN_CODE_SET_1BYTE_FRAME                            ZW_AdminPinCodeSet1byteFrame;\
  ZW_ADMIN_PIN_CODE_SET_2BYTE_FRAME                            ZW_AdminPinCodeSet2byteFrame;\
  ZW_ADMIN_PIN_CODE_SET_3BYTE_FRAME                            ZW_AdminPinCodeSet3byteFrame;\
  ZW_ADMIN_PIN_CODE_SET_4BYTE_FRAME                            ZW_AdminPinCodeSet4byteFrame;\
  ZW_ADMIN_PIN_CODE_GET_FRAME                                  ZW_AdminPinCodeGetFrame;\
  ZW_ADMIN_PIN_CODE_REPORT_1BYTE_FRAME                         ZW_AdminPinCodeReport1byteFrame;\
  ZW_ADMIN_PIN_CODE_REPORT_2BYTE_FRAME                         ZW_AdminPinCodeReport2byteFrame;\
  ZW_ADMIN_PIN_CODE_REPORT_3BYTE_FRAME                         ZW_AdminPinCodeReport3byteFrame;\
  ZW_ADMIN_PIN_CODE_REPORT_4BYTE_FRAME                         ZW_AdminPinCodeReport4byteFrame;\


/************ Basic Device Class identifiers **************/
#define BASIC_TYPE_CONTROLLER                                                            0x01 /*Node is a portable controller*/
#define BASIC_TYPE_ROUTING_END_NODE                                                      0x04 /*Node is an End Node with routing capabilities*/
#define BASIC_TYPE_END_NODE                                                              0x03 /*Node is an End Node*/
#define BASIC_TYPE_STATIC_CONTROLLER                                                     0x02 /*Node is a static controller*/


/***** Generic and Specific Device Class identifiers ******/
/* Device class Av Control Point */
#define GENERIC_TYPE_AV_CONTROL_POINT                                                    0x03 /*AV Control Point*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_DOORBELL                                                           0x12
#define SPECIFIC_TYPE_SATELLITE_RECEIVER                                                 0x04 /*Satellite Receiver*/
#define SPECIFIC_TYPE_SATELLITE_RECEIVER_V2                                              0x11 /*Satellite Receiver V2*/
#define SPECIFIC_TYPE_SOUND_SWITCH                                                       0x01

/* Device class Display */
#define GENERIC_TYPE_DISPLAY                                                             0x04
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SIMPLE_DISPLAY                                                     0x01 /*Display (simple) Device Type*/

/* Device class Entry Control */
#define GENERIC_TYPE_ENTRY_CONTROL                                                       0x40 /*Entry Control*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_DOOR_LOCK                                                          0x01 /*Door Lock*/
#define SPECIFIC_TYPE_ADVANCED_DOOR_LOCK                                                 0x02 /*Advanced Door Lock*/
#define SPECIFIC_TYPE_SECURE_KEYPAD_DOOR_LOCK                                            0x03 /*Door Lock (keypad -lever) Device Type*/
#define SPECIFIC_TYPE_SECURE_KEYPAD_DOOR_LOCK_DEADBOLT                                   0x04 /*Door Lock (keypad - deadbolt) Device Type*/
#define SPECIFIC_TYPE_SECURE_DOOR                                                        0x05 /*Barrier Operator Specific Device Class*/
#define SPECIFIC_TYPE_SECURE_GATE                                                        0x06 /*Barrier Operator Specific Device Class*/
#define SPECIFIC_TYPE_SECURE_BARRIER_ADDON                                               0x07 /*Barrier Operator Specific Device Class*/
#define SPECIFIC_TYPE_SECURE_BARRIER_OPEN_ONLY                                           0x08 /*Barrier Operator Specific Device Class*/
#define SPECIFIC_TYPE_SECURE_BARRIER_CLOSE_ONLY                                          0x09 /*Barrier Operator Specific Device Class*/
#define SPECIFIC_TYPE_SECURE_LOCKBOX                                                     0x0A /*SDS12724*/
#define SPECIFIC_TYPE_SECURE_KEYPAD                                                      0x0B

/* Device class Generic Controller */
#define GENERIC_TYPE_GENERIC_CONTROLLER                                                  0x01 /*Remote Controller*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_PORTABLE_REMOTE_CONTROLLER                                         0x01 /*Remote Control (Multi Purpose) Device Type*/
#define SPECIFIC_TYPE_PORTABLE_SCENE_CONTROLLER                                          0x02 /*Portable Scene Controller*/
#define SPECIFIC_TYPE_PORTABLE_INSTALLER_TOOL                                            0x03
#define SPECIFIC_TYPE_REMOTE_CONTROL_AV                                                  0x04 /*Remote Control (AV) Device Type*/
#define SPECIFIC_TYPE_REMOTE_CONTROL_SIMPLE                                              0x06 /*Remote Control (Simple) Device Type*/

/* Device class Meter */
#define GENERIC_TYPE_METER                                                               0x31 /*Meter*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SIMPLE_METER                                                       0x01 /*Sub Energy Meter Device Type*/
#define SPECIFIC_TYPE_ADV_ENERGY_CONTROL                                                 0x02 /*Whole Home Energy Meter (Advanced) Device Type*/
#define SPECIFIC_TYPE_WHOLE_HOME_METER_SIMPLE                                            0x03 /*Whole Home Meter (Simple) Device Type*/

/* Device class Meter Pulse */
#define GENERIC_TYPE_METER_PULSE                                                         0x30 /*Pulse Meter*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/

/* Device class Non Interoperable */
#define GENERIC_TYPE_NON_INTEROPERABLE                                                   0xFF /*Non interoperable*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/

/* Device class Repeater End Node */
#define GENERIC_TYPE_REPEATER_END_NODE                                                   0x0F /*Repeater End Node*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_REPEATER_END_NODE                                                  0x01 /*Basic Repeater End Node*/
#define SPECIFIC_TYPE_VIRTUAL_NODE                                                       0x02
#define SPECIFIC_TYPE_IR_REPEATER                                                        0x03

/* Device class Security Panel */
#define GENERIC_TYPE_SECURITY_PANEL                                                      0x17
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_ZONED_SECURITY_PANEL                                               0x01

/* Device class Semi Interoperable */
#define GENERIC_TYPE_SEMI_INTEROPERABLE                                                  0x50 /*Semi Interoperable*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_ENERGY_PRODUCTION                                                  0x01 /*Energy Production*/

/* Device class Sensor Alarm */
#define GENERIC_TYPE_SENSOR_ALARM                                                        0xA1
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_ADV_ZENSOR_NET_ALARM_SENSOR                                        0x05
#define SPECIFIC_TYPE_ADV_ZENSOR_NET_SMOKE_SENSOR                                        0x0A
#define SPECIFIC_TYPE_BASIC_ROUTING_ALARM_SENSOR                                         0x01
#define SPECIFIC_TYPE_BASIC_ROUTING_SMOKE_SENSOR                                         0x06
#define SPECIFIC_TYPE_BASIC_ZENSOR_NET_ALARM_SENSOR                                      0x03
#define SPECIFIC_TYPE_BASIC_ZENSOR_NET_SMOKE_SENSOR                                      0x08
#define SPECIFIC_TYPE_ROUTING_ALARM_SENSOR                                               0x02
#define SPECIFIC_TYPE_ROUTING_SMOKE_SENSOR                                               0x07
#define SPECIFIC_TYPE_ZENSOR_NET_ALARM_SENSOR                                            0x04
#define SPECIFIC_TYPE_ZENSOR_NET_SMOKE_SENSOR                                            0x09
#define SPECIFIC_TYPE_ALARM_SENSOR                                                       0x0B /*Sensor (Alarm) Device Type*/

/* Device class Sensor Binary */
#define GENERIC_TYPE_SENSOR_BINARY                                                       0x20 /*Binary Sensor*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_ROUTING_SENSOR_BINARY                                              0x01 /*Routing Binary Sensor*/

/* Device class Sensor Multilevel */
#define GENERIC_TYPE_SENSOR_MULTILEVEL                                                   0x21 /*Multilevel Sensor*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_ROUTING_SENSOR_MULTILEVEL                                          0x01 /*Sensor (Multilevel) Device Type*/
#define SPECIFIC_TYPE_CHIMNEY_FAN                                                        0x02

/* Device class Static Controller */
#define GENERIC_TYPE_STATIC_CONTROLLER                                                   0x02 /*Static Controller*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_PC_CONTROLLER                                                      0x01 /*Central Controller Device Type*/
#define SPECIFIC_TYPE_SCENE_CONTROLLER                                                   0x02 /*Scene Controller*/
#define SPECIFIC_TYPE_STATIC_INSTALLER_TOOL                                              0x03
#define SPECIFIC_TYPE_SET_TOP_BOX                                                        0x04 /*Set Top Box Device Type*/
#define SPECIFIC_TYPE_SUB_SYSTEM_CONTROLLER                                              0x05 /*Sub System Controller Device Type*/
#define SPECIFIC_TYPE_TV                                                                 0x06 /*TV Device Type*/
#define SPECIFIC_TYPE_GATEWAY                                                            0x07 /*Gateway Device Type*/

/* Device class Switch Binary */
#define GENERIC_TYPE_SWITCH_BINARY                                                       0x10 /*Binary Switch*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_POWER_SWITCH_BINARY                                                0x01 /*On/Off Power Switch Device Type*/
#define SPECIFIC_TYPE_SCENE_SWITCH_BINARY                                                0x03 /*Binary Scene Switch*/
#define SPECIFIC_TYPE_POWER_STRIP                                                        0x04 /*Power Strip Device Type*/
#define SPECIFIC_TYPE_SIREN                                                              0x05 /*Siren Device Type*/
#define SPECIFIC_TYPE_VALVE_OPEN_CLOSE                                                   0x06 /*Valve (open/close) Device Type*/
#define SPECIFIC_TYPE_COLOR_TUNABLE_BINARY                                               0x02
#define SPECIFIC_TYPE_IRRIGATION_CONTROLLER                                              0x07

/* Device class Switch Multilevel */
#define GENERIC_TYPE_SWITCH_MULTILEVEL                                                   0x11 /*Multilevel Switch*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_CLASS_A_MOTOR_CONTROL                                              0x05 /*Window Covering No Position/Endpoint Device Type*/
#define SPECIFIC_TYPE_CLASS_B_MOTOR_CONTROL                                              0x06 /*Window Covering Endpoint Aware Device Type*/
#define SPECIFIC_TYPE_CLASS_C_MOTOR_CONTROL                                              0x07 /*Window Covering Position/Endpoint Aware Device Type*/
#define SPECIFIC_TYPE_MOTOR_MULTIPOSITION                                                0x03 /*Multiposition Motor*/
#define SPECIFIC_TYPE_POWER_SWITCH_MULTILEVEL                                            0x01 /*Light Dimmer Switch Device Type*/
#define SPECIFIC_TYPE_SCENE_SWITCH_MULTILEVEL                                            0x04 /*Multilevel Scene Switch*/
#define SPECIFIC_TYPE_FAN_SWITCH                                                         0x08 /*Fan Switch Device Type*/
#define SPECIFIC_TYPE_COLOR_TUNABLE_MULTILEVEL                                           0x02

/* Device class Switch Remote */
#define GENERIC_TYPE_SWITCH_REMOTE                                                       0x12 /*Remote Switch*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SWITCH_REMOTE_BINARY                                               0x01 /*Binary Remote Switch*/
#define SPECIFIC_TYPE_SWITCH_REMOTE_MULTILEVEL                                           0x02 /*Multilevel Remote Switch*/
#define SPECIFIC_TYPE_SWITCH_REMOTE_TOGGLE_BINARY                                        0x03 /*Binary Toggle Remote Switch*/
#define SPECIFIC_TYPE_SWITCH_REMOTE_TOGGLE_MULTILEVEL                                    0x04 /*Multilevel Toggle Remote Switch*/

/* Device class Switch Toggle */
#define GENERIC_TYPE_SWITCH_TOGGLE                                                       0x13 /*Toggle Switch*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SWITCH_TOGGLE_BINARY                                               0x01 /*Binary Toggle Switch*/
#define SPECIFIC_TYPE_SWITCH_TOGGLE_MULTILEVEL                                           0x02 /*Multilevel Toggle Switch*/

/* Device class Thermostat */
#define GENERIC_TYPE_THERMOSTAT                                                          0x08 /*Thermostat*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SETBACK_SCHEDULE_THERMOSTAT                                        0x03 /*Setback Schedule Thermostat*/
#define SPECIFIC_TYPE_SETBACK_THERMOSTAT                                                 0x05 /*Thermostat (Setback) Device Type*/
#define SPECIFIC_TYPE_SETPOINT_THERMOSTAT                                                0x04
#define SPECIFIC_TYPE_THERMOSTAT_GENERAL                                                 0x02 /*Thermostat General*/
#define SPECIFIC_TYPE_THERMOSTAT_GENERAL_V2                                              0x06 /*Thermostat (HVAC) Device Type*/
#define SPECIFIC_TYPE_THERMOSTAT_HEATING                                                 0x01 /*Thermostat Heating*/

/* Device class Ventilation */
#define GENERIC_TYPE_VENTILATION                                                         0x16
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_RESIDENTIAL_HRV                                                    0x01

/* Device class Window Covering */
#define GENERIC_TYPE_WINDOW_COVERING                                                     0x09 /*Window Covering*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SIMPLE_WINDOW_COVERING                                             0x01 /*Simple Window Covering Control*/

/* Device class Zip Node */
#define GENERIC_TYPE_ZIP_NODE                                                            0x15
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_ZIP_ADV_NODE                                                       0x02
#define SPECIFIC_TYPE_ZIP_TUN_NODE                                                       0x01

/* Device class Wall Controller */
#define GENERIC_TYPE_WALL_CONTROLLER                                                     0x18
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_BASIC_WALL_CONTROLLER                                              0x01 /*Wall Controller Device Type*/

/* Device class Network Extender */
#define GENERIC_TYPE_NETWORK_EXTENDER                                                    0x05 /*Network Extender Generic Device Class*/
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_SECURE_EXTENDER                                                    0x01 /*Specific Device Secure Extender*/

/* Device class Appliance */
#define GENERIC_TYPE_APPLIANCE                                                           0x06
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class Not Used*/
#define SPECIFIC_TYPE_GENERAL_APPLIANCE                                                  0x01
#define SPECIFIC_TYPE_KITCHEN_APPLIANCE                                                  0x02
#define SPECIFIC_TYPE_LAUNDRY_APPLIANCE                                                  0x03

/* Device class Sensor Notification */
#define GENERIC_TYPE_SENSOR_NOTIFICATION                                                 0x07
#define SPECIFIC_TYPE_NOT_USED                                                           0x00 /*Specific Device Class not used*/
#define SPECIFIC_TYPE_NOTIFICATION_SENSOR                                                0x01



/************* Z-Wave+ Role Type identifiers **************/
#define ROLE_TYPE_CONTROLLER_CENTRAL_STATIC                                              0x00
#define ROLE_TYPE_CONTROLLER_SUB_STATIC                                                  0x01
#define ROLE_TYPE_CONTROLLER_PORTABLE                                                    0x02
#define ROLE_TYPE_CONTROLLER_PORTABLE_REPORTING                                          0x03
#define ROLE_TYPE_SLAVE_PORTABLE                                                         0x04
#define ROLE_TYPE_SLAVE_ALWAYS_ON                                                        0x05
#define ROLE_TYPE_SLAVE_SLEEPING_REPORTING                                               0x06
#define ROLE_TYPE_SLAVE_SLEEPING_LISTENING                                               0x07
#define ROLE_TYPE_SLAVE_NETWORK_AWARE                                                    0x08


/************* Z-Wave+ Icon Type identifiers **************/
/* The Z-Wave+ Icon Types defined in this section is the  */
/* work of the Z-Wave Alliance.                           */
/* The most current list of Z-Wave+ Icon Types may be     */
/* found at Z-Wave Alliance web site along with           */
/* sample icons.                                          */
/* New Z-Wave+ Icon Types may be requested from the       */
/* Z-Wave Alliance.                                       */
/**********************************************************/
#define ICON_TYPE_UNASSIGNED                                                 0x0000   //MUST NOT be used by any product
                                                                           
#define ICON_TYPE_GENERIC_CENTRAL_CONTROLLER                                 0x0100   //Central Controller Device Type
                                                                           
#define ICON_TYPE_GENERIC_DISPLAY_SIMPLE                                     0x0200   //Display Simple Device Type
                                                                           
#define ICON_TYPE_GENERIC_DOOR_LOCK_KEYPAD                                   0x0300   //Door Lock Keypad  Device Type
                                                                           
#define ICON_TYPE_GENERIC_FAN_SWITCH                                         0x0400   //Fan Switch  Device Type
                                                                           
#define ICON_TYPE_GENERIC_GATEWAY                                            0x0500   //Gateway  Device Type
                                                                           
#define ICON_TYPE_GENERIC_LIGHT_DIMMER_SWITCH                                0x0600   //Light Dimmer Switch  Device Type
#define ICON_TYPE_SPECIFIC_LIGHT_DIMMER_SWITCH_PLUGIN                        0x0601	  //Light Dimmer, implemented as a plugin device 
#define ICON_TYPE_SPECIFIC_LIGHT_DIMMER_SWITCH_WALL_OUTLET	                 0x0602	  //Light Dimmer, implemented as a wall outlet
#define ICON_TYPE_SPECIFIC_LIGHT_DIMMER_SWITCH_CEILING_OUTLET	             0x0603	  //Light Dimmer, implemented as a ceiling outlet
#define ICON_TYPE_SPECIFIC_LIGHT_DIMMER_SWITCH_WALL_LAMP     	             0x0604	  //Relay device, implemented as a wall mounted lamp
#define ICON_TYPE_SPECIFIC_LIGHT_DIMMER_SWITCH_LAMP_POST_HIGH	             0x0605	  //Relay device, implemented as a ceiling outlet
#define ICON_TYPE_SPECIFIC_LIGHT_DIMMER_SWITCH_LAMP_POST_LOW	             0x0606	  //Relay device, implemented as a ceiling outlet
                                                                           
#define ICON_TYPE_GENERIC_ON_OFF_POWER_SWITCH                                0x0700   //On/Off Power Switch  Device Type
#define ICON_TYPE_SPECIFIC_ON_OFF_POWER_SWITCH_PLUGIN	                     0x0701	  //Relay device, implemented as a plugin device
#define ICON_TYPE_SPECIFIC_ON_OFF_POWER_SWITCH_WALL_OUTLET	                 0x0702	  //Relay device, implemented as a wall outlet
#define ICON_TYPE_SPECIFIC_ON_OFF_POWER_SWITCH_CEILING_OUTLET	             0x0703	  //Relay device, implemented as a ceiling outlet
#define ICON_TYPE_SPECIFIC_ON_OFF_POWER_SWITCH_WALL_LAMP	                 0x0704	  //Relay device, implemented as a wall mounted lamp
#define ICON_TYPE_SPECIFIC_ON_OFF_POWER_SWITCH_LAMP_POST_HIGH	             0x0705	  //Relay device, implemented as a ceiling outlet
#define ICON_TYPE_SPECIFIC_ON_OFF_POWER_SWITCH_LAMP_POST_LOW	             0x0706	  //Relay device, implemented as a ceiling outlet
                                                                           
#define ICON_TYPE_GENERIC_POWER_STRIP                                        0x0800   //Power Strip  Device Type
#define ICON_TYPE_SPECIFIC_POWER_STRIP_INDIVIDUAL_OUTLET	                 0x08FF	  //Individual outlet of a power strip for showing outlets in exploded view
                                                                           
#define ICON_TYPE_GENERIC_REMOTE_CONTROL_AV                                  0x0900   //Remote Control AV  Device Type
                                                                           
#define ICON_TYPE_GENERIC_REMOTE_CONTROL_MULTI_PURPOSE                       0x0A00   //Remote Control Multi Purpose Device Type
                                                                           
#define ICON_TYPE_GENERIC_REMOTE_CONTROL_SIMPLE                              0x0B00   //Remote Control Simple Device Type
#define ICON_TYPE_SPECIFIC_REMOTE_CONTROL_SIMPLE_KEYFOB                      0x0B01   //Remote Control Simple Device Type (Key fob)
                                                                           
#define ICON_TYPE_GENERIC_SENSOR_NOTIFICATION                                0x0C00   //Sensor Notification Device Type
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_SMOKE_ALARM                   0x0C01   //Sensor Notification Device Type (Notification type Smoke Alarm)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_CO_ALARM                      0x0C02   //Sensor Notification Device Type (Notification type CO Alarm)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_CO2_ALARM                     0x0C03   //Sensor Notification Device Type (Notification type CO2 Alarm)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_HEAT_ALARM                    0x0C04   //Sensor Notification Device Type (Notification type Heat Alarm)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_WATER_ALARM                   0x0C05   //Sensor Notification Device Type (Notification type Water Alarm)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_ACCESS_CONTROL                0x0C06   //Sensor Notification Device Type (Notification type Access Control)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_HOME_SECURITY                 0x0C07   //Sensor Notification Device Type (Notification type Home Security)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_POWER_MANAGEMENT              0x0C08   //Sensor Notification Device Type (Notification type Power Management)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_SYSTEM                        0x0C09   //Sensor Notification Device Type (Notification type System)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_EMERGENCY_ALARM               0x0C0A   //Sensor Notification Device Type (Notification type Emergency Alarm)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_CLOCK                         0x0C0B   //Sensor Notification Device Type (Notification type Clock)
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_APPLIANCE                     0x0C0C
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_HOME_HEALTH                   0x0C0D
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_SIREN                         0x0C0E
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_WATER_VALVE                   0x0C0F
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_WEATHER_ALARM                 0x0C10
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_IRRIGATION                    0x0C11
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_GAS_ALARM                     0x0C12
#define ICON_TYPE_SPECIFIC_SENSOR_NOTIFICATION_MULTIDEVICE                   0x0CFF   //Sensor Notification Device Type (Bundled Notification functions)
                                                                           
#define ICON_TYPE_GENERIC_SENSOR_MULTILEVEL                                  0x0D00   //Sensor Multilevel Device Type
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_AIR_TEMPERATURE                 0x0D01   //Sensor Multilevel Device Type (Sensor type Air Temperature)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_GENERAL_PURPOSE_VALUE           0x0D02   //Sensor Multilevel Device Type (Sensor type General Purpose Value)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_LUMINANCE                       0x0D03   //Sensor Multilevel Device Type (Sensor type Luminance)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_POWER                           0x0D04   //Sensor Multilevel Device Type (Sensor type Power)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_HUMIDITY                        0x0D05   //Sensor Multilevel Device Type (Sensor type Humidity)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_VELOCITY                        0x0D06   //Sensor Multilevel Device Type (Sensor type Velocity)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_DIRECTION                       0x0D07   //Sensor Multilevel Device Type (Sensor type Direction)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_ATMOSPHERIC_PRESSURE            0x0D08   //Sensor Multilevel Device Type (Sensor type Atmospheric Pressure)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_BAROMETRIC_PRESSURE             0x0D09   //Sensor Multilevel Device Type (Sensor type Barometric Pressure)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_SOLOR_RADIATION                 0x0D0A   //Sensor Multilevel Device Type (Sensor type Solar Radiation)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_DEW_POINT                       0x0D0B   //Sensor Multilevel Device Type (Sensor type Dew Point)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_RAIN_RATE                       0x0D0C   //Sensor Multilevel Device Type (Sensor type Rain Rate)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_TIDE_LEVEL                      0x0D0D   //Sensor Multilevel Device Type (Sensor type Tide Level)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_WEIGHT                          0x0D0E   //Sensor Multilevel Device Type (Sensor type Weight)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_VOLTAGE                         0x0D0F   //Sensor Multilevel Device Type (Sensor type Voltage)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_CURRENT                         0x0D10   //Sensor Multilevel Device Type (Sensor type Current)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_CO2_LEVEL                       0x0D11   //Sensor Multilevel Device Type (Sensor type CO2 Level)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_AIR_FLOW                        0x0D12   //Sensor Multilevel Device Type (Sensor type Air Flow)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_TANK_CAPACITY                   0x0D13   //Sensor Multilevel Device Type (Sensor type Tank Capacity)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_DISTANCE                        0x0D14   //Sensor Multilevel Device Type (Sensor type Distance)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_ANGLE_POSITION                  0x0D15   //Sensor Multilevel Device Type (Sensor type Angle Position)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_ROTATION                        0x0D16   //Sensor Multilevel Device Type (Sensor type Rotation)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_WATER_TEMPERATURE               0x0D17   //Sensor Multilevel Device Type (Sensor type Water Temperature)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_SOIL_TEMPERATURE                0x0D18   //Sensor Multilevel Device Type (Sensor type Soil Temperature)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_SEISMIC_INTENSITY               0x0D19   //Sensor Multilevel Device Type (Sensor type Seismic Intensity)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_SEISMIC_MAGNITUDE               0x0D1A   //Sensor Multilevel Device Type (Sensor type Seismic Magnitude)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_ULTRAVIOLET                     0x0D1B   //Sensor Multilevel Device Type (Sensor type Ultraviolet)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_ELECTRICAL_RESISTIVITY          0x0D1C   //Sensor Multilevel Device Type (Sensor type Electrical Resistivity)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_ELECTRICAL_CONDUCTIVITY         0x0D1D   //Sensor Multilevel Device Type (Sensor type Electrical Conductivity)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_LOUDNESS                        0x0D1E   //Sensor Multilevel Device Type (Sensor type Loudness)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_MOISTURE                        0x0D1F   //Sensor Multilevel Device Type (Sensor type Moisture)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_FREQUENCY                       0x0D20   //Sensor Multilevel Device Type (Sensor type Frequency)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_TIME                            0x0D21   //Sensor Multilevel Device Type (Sensor type Time )
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_TARGET_TEMPERATURE              0x0D22   //Sensor Multilevel Device Type (Sensor type Target Temperature)
#define ICON_TYPE_SPECIFIC_SENSOR_MULTILEVEL_MULTIDEVICE                     0x0DFF   //Sensor Multilevel Device Type (Bundled Sensor functions)
                                                                           
#define ICON_TYPE_GENERIC_SET_TOP_BOX                                        0x0E00   //Set Top Box Device Type
                                                                           
#define ICON_TYPE_GENERIC_SIREN                                              0x0F00   //Siren Device Type
                                                                           
#define ICON_TYPE_GENERIC_SUB_ENERGY_METER                                   0x1000   //Sub Energy Meter Device Type
                                                                           
#define ICON_TYPE_GENERIC_SUB_SYSTEM_CONTROLLER                              0x1100   //Sub System Controller Device Type
                                                                           
#define ICON_TYPE_GENERIC_THERMOSTAT                                         0x1200   //Thermostat Device Type
#define ICON_TYPE_SPECIFIC_THERMOSTAT_LINE_VOLTAGE                           0x1201   //Thermostat Line Voltage Device Type
#define ICON_TYPE_SPECIFIC_THERMOSTAT_SETBACK                                0x1202   //Thermostat Setback Device Type
                                                                           
#define ICON_TYPE_GENERIC_THERMOSTAT_SETBACK_OBSOLETED                       0x1300   //Thermostat Setback [Obsoleted] Device Type
                                                                           
#define ICON_TYPE_GENERIC_TV                                                 0x1400   //TV Device Type
                                                                           
#define ICON_TYPE_GENERIC_VALVE_OPEN_CLOSE                                   0x1500   //Valve Open/Close Device Type
                                                                           
#define ICON_TYPE_GENERIC_WALL_CONTROLLER                                    0x1600   //Wall Controller Device Type
                                                                           
#define ICON_TYPE_GENERIC_WHOLE_HOME_METER_SIMPLE                            0x1700   //Whole Home Meter Simple Device Type
                                                                           
#define ICON_TYPE_GENERIC_WINDOW_COVERING_NO_POSITION_ENDPOINT               0x1800   //Window Covering No Position/Endpoint  Device Type
                                                                           
#define ICON_TYPE_GENERIC_WINDOW_COVERING_ENDPOINT_AWARE                     0x1900   //Window Covering Endpoint Aware Device Type
                                                                           
#define ICON_TYPE_GENERIC_WINDOW_COVERING_POSITION_ENDPOINT_AWARE            0x1A00   //Window Covering Position/Endpoint Aware Device Type

#define ICON_TYPE_GENERIC_REPEATER                                           0x1B00   //Repeater Device Type 

#define ICON_TYPE_GENERIC_DIMMER_WALL_SWITCH	                             0x1C00	  //Wall Switch
#define ICON_TYPE_SPECIFIC_DIMMER_WALL_SWITCH_ONE_BUTTON	                 0x1C01	  //Wall Switch, 1 button
#define ICON_TYPE_SPECIFIC_DIMMER_WALL_SWITCH_TWO_BUTTONS	                 0x1C02	  //Wall Switch, 2 buttons
#define ICON_TYPE_SPECIFIC_DIMMER_WALL_SWITCH_THREE_BUTTONS	                 0x1C03	  //Wall Switch, 3 buttons
#define ICON_TYPE_SPECIFIC_DIMMER_WALL_SWITCH_FOUR_BUTTONS	                 0x1C04	  //Wall Switch, 4 buttons
#define ICON_TYPE_SPECIFIC_DIMMER_WALL_SWITCH_ONE_ROTARY	                 0x1CF1	  //Wall Switch, 1 rotary knob

#define ICON_TYPE_GENERIC_ON_OFF_WALL_SWITCH	                             0x1D00	  //Wall Switch
#define ICON_TYPE_SPECIFIC_ON_OFF_WALL_SWITCH_ONE_BUTTON	                 0x1D01	  //Wall Switch, 1 button
#define ICON_TYPE_SPECIFIC_ON_OFF_WALL_SWITCH_TWO_BUTTONS	                 0x1D02	  //Wall Switch, 2 buttons
#define ICON_TYPE_SPECIFIC_ON_OFF_WALL_SWITCH_THREE_BUTTONS	                 0x1D03	  //Wall Switch, 3 buttons
#define ICON_TYPE_SPECIFIC_ON_OFF_WALL_SWITCH_FOUR_BUTTONS	                 0x1D04	  //Wall Switch, 4 buttons
#define ICON_TYPE_SPECIFIC_ON_OFF_WALL_SWITCH_DOOR_BELL                      0x1DE1   //Door Bell (button)
#define ICON_TYPE_SPECIFIC_ON_OFF_WALL_SWITCH_ONE_ROTARY	                 0x1DF1	  //Wall Switch, 1 rotary knob

#define ICON_TYPE_GENERIC_BARRIER                                            0x1E00   //Barrier

#define ICON_TYPE_GENERIC_IRRIGATION                                         0x1F00   //Irrigation

#define ICON_TYPE_GENERIC_ENTRY_CONTROL                                      0x2000   //Entry Control
#define ICON_TYPE_SPECIFIC_ENTRY_CONTROL_KEYPAD_0_9                          0x2001   //Entry Control Keypad 0-9
#define ICON_TYPE_SPECIFIC_ENTRY_CONTROL_RFID_TAG_READER_NO_BUTTON           0x2002   //Entry Control RFID tag reader, no button


/************* Manufacturer ID identifiers **************/
#define MFG_ID_NOT_DEFINED                                         0xFFFF   //Not defined
#define MFG_ID_2B_ELECTRONICS                                      0x0028   //2B Electronics
#define MFG_ID_2GIG_TECHNOLOGIES_INC                               0x009B   //2gig Technologies Inc.
#define MFG_ID_3E_TECHNOLOGIES                                     0x002A   //3e Technologies
#define MFG_ID_A1_COMPONENTS                                       0x0022   //A-1 Components
#define MFG_ID_ABILIA                                              0x0117   //Abilia
#define MFG_ID_ACROCOMM_CORP                                       0x034A   //AcroComm Corp.
#define MFG_ID_ACT_ADVANCED_CONTROL_TECHNOLOGIES                   0x0001   //ACT - Advanced Control Technologies
#define MFG_ID_ADMOBILIZE_LLC                                      0x0297   //AdMobilize, LLC
#define MFG_ID_ADOX_INC                                            0x0101   //ADOX, Inc.
#define MFG_ID_ADTRUSTMEDIA_LLC_DBA_EZLO                           0x025B   //AdTrustMedia LLC  dba: eZLO
#define MFG_ID_ADVANCED_OPTRONIC_DEVICES_CO_LTD                    0x016C   //Advanced Optronic Devices Co.,Ltd
#define MFG_ID_ADVENTURE_INTERACTIVE                               0x009E   //Adventure Interactive
#define MFG_ID_AEINNOVATION_AEI                                    0x035B   //Aeinnovation (AEI)
#define MFG_ID_AENSYS_INFORMATICS_LTD                              0x0350   //AENSys Informatics Ltd.
#define MFG_ID_AEON_LABS                                           0x0086   //AEON Labs
#define MFG_ID_AEOTEC_LIMITED                                      0x0371   //Aeotec Limited
#define MFG_ID_AIRVENT_SAM_SPA                                     0x0088   //Airvent SAM S.p.A.
#define MFG_ID_ALARMCOM                                            0x0094   //Alarm.com
#define MFG_ID_ALERTME                                             0x0126   //Alertme
#define MFG_ID_ALLEATO                                             0x0372   //ALLEATO
#define MFG_ID_ALLEGION                                            0x003B   //Allegion
#define MFG_ID_ALPHANETWORKS                                       0x028E   //Alphanetworks
#define MFG_ID_ALPHONSUS_TECH                                      0x0230   //Alphonsus Tech
#define MFG_ID_AMADAS_CO_LTD                                       0x029F   //AMADAS Co., LTD 
#define MFG_ID_AMDOCS                                              0x019C   //Amdocs
#define MFG_ID_AMERICAN_GRID_INC                                   0x005A   //American Grid, Inc.
#define MFG_ID_AMETA_INTERNATIONAL_CO_LTD                          0x0384   //Ameta International Co. Ltd.
#define MFG_ID_ANCHOR_TECH                                         0x032B   //Anchor Tech 
#define MFG_ID_ANIMUS_HOME_AB                                      0x0392   //Animus Home AB
#define MFG_ID_ANTIK_TECHNOLOGY_LTD                                0x026D   //Antik Technology Ltd.
#define MFG_ID_ANYCOMM_CORPORATION                                 0x0078   //anyCOMM Corporation
#define MFG_ID_APPLIED_MICRO_ELECTRONICS_AME_BV                    0x0144   //Applied Micro Electronics "AME" BV
#define MFG_ID_ARKEA                                               0x0291   //Arkea
#define MFG_ID_ASIA_HEADING                                        0x0029   //Asia Heading
#define MFG_ID_ASITEQ                                              0x0231   //ASITEQ
#define MFG_ID_ASKEY_COMPUTER_CORP                                 0x028A   //Askey Computer Corp.
#define MFG_ID_ASSA_ABLOY                                          0x0129   //ASSA ABLOY
#define MFG_ID_ASTRALINK                                           0x013B   //AstraLink
#define MFG_ID_ATT                                                 0x0134   //AT&T
#define MFG_ID_ATECH                                               0x002B   //Atech
#define MFG_ID_ATHOM_BV                                            0x0244   //Athom BV
#define MFG_ID_AUCEAN_TECHNOLOGY_INC                               0x032A   //AUCEAN TECHNOLOGY. INC
#define MFG_ID_AVADESIGN_TECHNOLOGY_CO_                            0x025D   //Avadesign Technology Co.,
#define MFG_ID_AVADESIGN_TECHNOLOGY_CO_LTD                         0x0155   //Avadesign Technology Co., Ltd.
#define MFG_ID_AXESSTEL_INC                                        0x0146   //Axesstel Inc
#define MFG_ID_BALBOA_INSTRUMENTS                                  0x0018   //Balboa Instruments
#define MFG_ID_BANDI_COMM_TECH_INC                                 0x0236   //Bandi Comm Tech Inc.
#define MFG_ID_BEIJING_SINOAMERICAN_BOYI_SOFTWARE_DEVELOPMENT_CO_L 0x0204   //Beijing Sino-American Boyi Software Development Co., Ltd
#define MFG_ID_BEIJING_UNIVERSAL_ENERGY_HUAXIA_TECHNOLOGY_CO_LTD   0x0251   //Beijing Universal Energy Huaxia Technology Co.,Ltd
#define MFG_ID_BELLATRIX_SYSTEMS_INC                               0x0196   //Bellatrix Systems, Inc.
#define MFG_ID_BENETEK                                             0x032D   //Benetek
#define MFG_ID_BENEXT                                              0x008A   //BeNext
#define MFG_ID_BESAFER                                             0x002C   //BeSafer
#define MFG_ID_BFT_SPA                                             0x014B   //BFT S.p.A.
#define MFG_ID_BIT7_INC                                            0x0052   //Bit7 Inc.
#define MFG_ID_BLAZE_AUTOMATION                                    0x0311   //Blaze Automation
#define MFG_ID_BMS_EVLER_LTD                                       0x0213   //BMS Evler LTD
#define MFG_ID_BOCA_DEVICES                                        0x0023   //Boca Devices
#define MFG_ID_BONIG_UND_KALLENBACH_OHG                            0x0169   //Bönig und Kallenbach oHG
#define MFG_ID_BOSCH_SECURITY_SYSTEMS_INC                          0x015C   //Bosch Security Systems, Inc
#define MFG_ID_BRK_BRANDS_INC                                      0x0138   //BRK Brands, Inc.
#define MFG_ID_BROADBAND_ENERGY_NETWORKS_INC                       0x002D   //Broadband Energy Networks Inc.
#define MFG_ID_BTSTAR_HK_TECHNOLOGY_COMPANY_LIMITED                0x024A   //BTSTAR(HK) TECHNOLOGY COMPANY LIMITED
#define MFG_ID_BUFFALO_INC                                         0x0145   //Buffalo Inc.
#define MFG_ID_BUILDING_36_TECHNOLOGIES                            0x0190   //Building 36 Technologies
#define MFG_ID_BULCRAFT_CONTROL                                    0x0396   //Bulcraft Control
#define MFG_ID_BULOGICS                                            0x0026   //BuLogics
#define MFG_ID_BONIG_UND_KALLENBACH_OHG                            0x0169   //Bönig und Kallenbach oHG
#define MFG_ID_CALIX                                               0x0398   //Calix
#define MFG_ID_CAMEO_COMMUNICATIONS_INC                            0x009C   //Cameo Communications Inc.
#define MFG_ID_CARRIER                                             0x002E   //Carrier
#define MFG_ID_CASAWORKS                                           0x000B   //CasaWorks
#define MFG_ID_CASENIO_AG                                          0x0243   //casenio AG
#define MFG_ID_CBCC_DOMOTIQUE_SAS                                  0x0166   //CBCC Domotique SAS
#define MFG_ID_CENTRALITE_SYSTEMS_INC                              0x0246   //CentraLite Systems, Inc
#define MFG_ID_CENTURYLINK                                         0x033C   //Centurylink
#define MFG_ID_CHAMBERLAIN_GROUP                                   0x0359   //Chamberlain Group
#define MFG_ID_CHECKIT_SOLUTIONS_INC                               0x014E   //Check-It Solutions Inc.
#define MFG_ID_CHENGPUTECH                                         0x038F   //CHENGPUTECH
#define MFG_ID_CHINA_SECURITY_FIRE_IOT_SENSING_CO_LTD              0x0320   //China Security & Fire IOT Sensing CO., LTD 
#define MFG_ID_CHROMAGIC_TECHNOLOGIES_CORPORATION                  0x0116   //Chromagic Technologies Corporation
#define MFG_ID_CHUANGO_SECURITY_TECHNOLOGY_CORPORATION             0x0280   //Chuango Security Technology Corporation
#define MFG_ID_CISCO_CONSUMER_BUSINESS_GROUP                       0x0082   //Cisco Consumer Business Group
#define MFG_ID_CLARE_CONTROLS                                      0x0194   //Clare Controls
#define MFG_ID_CLIMAX_TECHNOLOGY_LTD                               0x018E   //Climax Technology, Ltd.
#define MFG_ID_CLOUD_MEDIA                                         0x0200   //Cloud Media
#define MFG_ID_COLOR_KINETICS_INCORPORATED                         0x002F   //Color Kinetics Incorporated
#define MFG_ID_COMAP                                               0x0329   //COMAP
#define MFG_ID_COMFORTABILITY                                      0x0309   //Comfortability
#define MFG_ID_COMPUTIME                                           0x0140   //Computime
#define MFG_ID_CONNECTED_OBJECT                                    0x011B   //Connected Object
#define MFG_ID_CONNECTHOME                                         0x0179   //ConnectHome
#define MFG_ID_CONNECTION_TECHNOLOGY_SYSTEMS                       0x0285   //CONNECTION TECHNOLOGY SYSTEMS 
#define MFG_ID_CONTEC_INTELLIGENT_HOUSING                          0x025D   //Contec intelligent housing 
#define MFG_ID_CONTROL4_CORPORATION                                0x023F   //Control4 Corporation
#define MFG_ID_CONTROLTHINK_LC                                     0x0019   //ControlThink LC
#define MFG_ID_CONVERGEX_LTD                                       0x000F   //ConvergeX Ltd.
#define MFG_ID_COOLGUARD                                           0x007D   //CoolGuard
#define MFG_ID_COOPER_LIGHTING                                     0x0079   //Cooper Lighting
#define MFG_ID_COOPER_WIRING_DEVICES                               0x001A   //Cooper Wiring Devices
#define MFG_ID_COVENTIVE_TECHNOLOGIES_INC                          0x009D   //Coventive Technologies Inc.
#define MFG_ID_CPRO                                                0x0379   //CPRO
#define MFG_ID_CRIBOS                                              0x0383   //CribOS
#define MFG_ID_CVNET                                               0x0328   //Cvnet
#define MFG_ID_CYBERHOUSE                                          0x0014   //Cyberhouse
#define MFG_ID_CYBERTAN_TECHNOLOGY_INC                             0x0067   //CyberTAN Technology, Inc.
#define MFG_ID_CYTECH_TECHNOLOGY_PRE_LTD                           0x0030   //Cytech Technology Pre Ltd.
#define MFG_ID_D3_TECHNOLOGY_CO_LTD                                0x0294   //D-3 Technology Co. Ltd
#define MFG_ID_DANFOSS                                             0x0002   //Danfoss
#define MFG_ID_DAWON_DNS                                           0x018C   //Dawon DNS
#define MFG_ID_DECORIS_INTELLIGENT_SYSTEM_LIMITED                  0x020A   //Decoris Intelligent System Limited
#define MFG_ID_DEFACONTROLS_BV                                     0x013F   //Defacontrols BV
#define MFG_ID_DEFARO                                              0x032E   //DEFARO
#define MFG_ID_DESTINY_NETWORKS                                    0x0031   //Destiny Networks
#define MFG_ID_DEVOLO                                              0x0175   //Devolo
#define MFG_ID_DIEHL_AKO                                           0x0103   //Diehl AKO
#define MFG_ID_DIGITAL_5_INC                                       0x0032   //Digital 5, Inc.
#define MFG_ID_DIGITAL_WATCHDOG                                    0x035D   //Digital Watchdog
#define MFG_ID_DIGITALZONE                                         0x0228   //DigitalZone
#define MFG_ID_DLINK                                               0x0108   //D-Link
#define MFG_ID_DMP_DIGITAL_MONITORING_PRODUCTS                     0x0127   //DMP (Digital Monitoring Products)
#define MFG_ID_DOMINO_SISTEMI_DOO                                  0x0177   //Domino sistemi d.o.o.
#define MFG_ID_DOMITECH_PRODUCTS_LLC                               0x020E   //Domitech Products, LLC
#define MFG_ID_DONGGUAN_ZHOU_DA_ELECTRONICS_CO_LTD                 0x020C   //Dongguan Zhou Da Electronics Co.,Ltd
#define MFG_ID_DRACOR_INC                                          0x017D   //DRACOR Inc.
#define MFG_ID_DRAGON_TECH_INDUSTRIAL_LTD                          0x0184   //Dragon Tech Industrial, Ltd.
#define MFG_ID_DTV_RESEARCH_UNIPESSOAL_LDA                         0x0223   //DTV Research Unipessoal, Lda
#define MFG_ID_DUNEHD                                              0x0272   //Dune-HD
#define MFG_ID_DUSUN_ELECTRON_LTD                                  0x0334   //Dusun Electron Ltd.
#define MFG_ID_DVACO_GROUP                                         0x031B   //DVACO GROUP
#define MFG_ID_DYNAQUIP_CONTROLS                                   0x0132   //DynaQuip Controls
#define MFG_ID_EASY_SAVER_CO_INC                                   0x0247   //EASY SAVER Co., Inc
#define MFG_ID_EATON                                               0x001A   //Eaton
#define MFG_ID_EBV                                                 0x017C   //EbV
#define MFG_ID_ECHOSTAR                                            0x016B   //Echostar
#define MFG_ID_ECO_AUTOMATION                                      0x028F   //Eco Automation
#define MFG_ID_ECO_LIFE_ENGINEERING_CO_LTD                         0x037C   //Eco Life Engineering Co., Ltd.
#define MFG_ID_ECOLINK                                             0x014A   //Ecolink
#define MFG_ID_ECONET_CONTROLS                                     0x0157   //EcoNet Controls
#define MFG_ID_ECS                                                 0x039D   //ECS
#define MFG_ID_EELECTRON_SPA                                       0x031F   //Eelectron SpA
#define MFG_ID_EHOME_AUTOMATION                                    0x010D   //e-Home AUTOMATION
#define MFG_ID_EI_ELECTRONICS                                      0x026B   //Ei Electronics 
#define MFG_ID_EKA_SYSTEMS                                         0x0087   //Eka Systems
#define MFG_ID_ELEAR_SOLUTIONS_TECH_PVT_LTD                        0x0389   //Elear Solutions Tech Pvt. Ltd.
#define MFG_ID_ELECTRONIC_SOLUTIONS                                0x0033   //Electronic Solutions
#define MFG_ID_ELEXA_CONSUMER_PRODUCTS_INC                         0x021F   //Elexa Consumer Products Inc.
#define MFG_ID_ELGEV_ELECTRONICS_LTD                               0x0034   //El-Gev Electronics LTD
#define MFG_ID_ELK_PRODUCTS_INC                                    0x001B   //ELK Products, Inc.
#define MFG_ID_EMBEDDED_DATA_SYSTEMS                               0x0393   //Embedded Data Systems
#define MFG_ID_EMBEDDED_SYSTEM_DESIGN_LIMITED                      0x020B   //Embedded System Design Limited
#define MFG_ID_EMBEDIT_AS                                          0x0035   //Embedit A/S
#define MFG_ID_EMPERS_TECH_CO_LTD                                  0x0284   //Empers Tech Co., Ltd.
#define MFG_ID_EMT_CONTROLS                                        0x0336   //EMT Controls
#define MFG_ID_ENBLINK_CO_LTD                                      0x014D   //Enblink Co. Ltd
#define MFG_ID_ENWOX_TECHNOLOGIES_SRO                              0x0219   //Enwox Technologies s.r.o.
#define MFG_ID_ERONE                                               0x006F   //Erone
#define MFG_ID_ESSENCE_SECURITY                                    0x0160   //Essence Security
#define MFG_ID_ESSENTIAL_TECHNOLOGIES_INC                          0x029B   //ESSENTIAL TECHNOLOGIES INC.
#define MFG_ID_EUROTRONICS                                         0x0148   //Eurotronics
#define MFG_ID_EVERSPRING                                          0x0060   //Everspring
#define MFG_ID_EVOLVE                                              0x0113   //Evolve
#define MFG_ID_EVOLVERE_SPA                                        0x036F   //Evolvere SpA 
#define MFG_ID_EXCEPTIONAL_INNOVATIONS                             0x0036   //Exceptional Innovations
#define MFG_ID_EXHAUSTO                                            0x0004   //Exhausto
#define MFG_ID_EXIGENT_SENSORS                                     0x009F   //Exigent Sensors
#define MFG_ID_EXPRESS_CONTROLS                                    0x001E   //Express Controls
#define MFG_ID_EZEX_CORPORATION                                    0x0233   //eZEX Corporation
#define MFG_ID_FAKRO                                               0x0085   //Fakro
#define MFG_ID_FANTEM                                              0x016A   //Fantem
#define MFG_ID_FIBARGROUP                                          0x010F   //Fibargroup
#define MFG_ID_FIFTHPLAY_NV                                        0x0295   //fifthplay nv
#define MFG_ID_FLEX_AUTOMATION                                     0x002C   //Flex Automation
#define MFG_ID_FLEX_AUTOMATION_2                                   0x004F   //Flex Automation
#define MFG_ID_FLEXTRONICS                                         0x018D   //Flextronics
#define MFG_ID_FLUE_SENTINEL                                       0x0024   //Flue Sentinel
#define MFG_ID_FOARD_SYSTEMS                                       0x0037   //Foard Systems
#define MFG_ID_FOCAL_POINT_LIMITED                                 0x018F   //Focal Point Limited
#define MFG_ID_FOLLOWGOOD_TECHNOLOGY_COMPANY_LTD                   0x0137   //FollowGood Technology Company Ltd.
#define MFG_ID_FOREST_GROUP_NEDERLAND_BV                           0x0207   //Forest Group Nederland B.V
#define MFG_ID_FORTREZZ_LLC                                        0x0084   //FortrezZ LLC
#define MFG_ID_FOXCONN                                             0x011D   //Foxconn
#define MFG_ID_FOXCONN_INDUSTRIAL_INTERNET                         0x039C   //Foxconn Industrial Internet
#define MFG_ID_FROSTDALE                                           0x0110   //Frostdale
#define MFG_ID_FUTURE_HOME_AS                                      0x0305   //Future Home AS
#define MFG_ID_GE                                                  0x033E   //GE
#define MFG_ID_GES                                                 0x025A   //GES
#define MFG_ID_GKB_SECURITY_CORPORATION                            0x022B   //GKB Security Corporation
#define MFG_ID_GLOBALCHINATECH                                     0x018A   //Globalchina-Tech
#define MFG_ID_GOAP                                                0x0159   //Goap
#define MFG_ID_GOGGIN_RESEARCH                                     0x0076   //Goggin Research
#define MFG_ID_GOOD_WAY_TECHNOLOGY_CO_LTD                          0x0068   //Good Way Technology Co., Ltd
#define MFG_ID_GREENWAVE_REALITY_INC                               0x0099   //GreenWave Reality Inc.
#define MFG_ID_GRIB                                                0x018B   //Grib
#define MFG_ID_GUANGDONG_PHNIX_ECOENERGY_SOLUTION_LTD              0x0391   //GUANGDONG PHNIX ECO-ENERGY SOLUTION LTD.
#define MFG_ID_GUANGZHOU_RUIXIANG_ME_CO_LTD                        0x016D   //Guangzhou Ruixiang M&E Co., Ltd
#define MFG_ID_GUANGZHOU_ZEEWAVE_INFORMATION_TECHNOLOGY_CO_LTD     0x0158   //GuangZhou Zeewave Information Technology Co., Ltd.
#define MFG_ID_GUANGZHOU_SIMT_LIMITED                              0x0395   //Guangzhou_SIMT  Limited
#define MFG_ID_GUARDTEC_INC                                        0x037B   //Guardtec Inc.
#define MFG_ID_HAB_HOME_INTELLIGENCE_LLC                           0x0287   //HAB Home Intelligence, LLC
#define MFG_ID_HAMPOO                                              0x030D   //Hampoo
#define MFG_ID_HANGZHOU_IMAGIC_TECHNOLOGY_CO_LTD                   0x0387   //HangZhou iMagic Technology Co., Ltd
#define MFG_ID_HANK_ELECTRONICS_LTD                                0x0208   //HANK Electronics Ltd
#define MFG_ID_HANKOOK_GAS_KIKI_CO_LTD                             0x024C   //Hankook Gas Kiki CO.,LTD. 
#define MFG_ID_HAUPPAUGE                                           0x025C   //Hauppauge
#define MFG_ID_HAWKING_TECHNOLOGIES_INC                            0x0073   //Hawking Technologies Inc.
#define MFG_ID_HELTUN                                              0x0344   //HELTUN
#define MFG_ID_HERALD_DATANETICS_LIMITED                           0x020F   //Herald Datanetics Limited
#define MFG_ID_HITECH_AUTOMATION                                   0x0017   //HiTech Automation
#define MFG_ID_HOLION_ELECTRONIC_ENGINEERING_CO_LTD                0x0181   //Holion Electronic Engineering Co., Ltd
#define MFG_ID_HOLTEC_ELECTRONICS_BV                               0x013E   //Holtec Electronics BV
#define MFG_ID_HOME_AUTOMATED_LIVING                               0x000D   //Home Automated Living
#define MFG_ID_HOME_AUTOMATION_EUROPE                              0x009A   //Home Automation Europe
#define MFG_ID_HOME_AUTOMATION_INC                                 0x005B   //Home Automation Inc.
#define MFG_ID_HOME_CONTROLS                                       0x0293   //Home controls
#define MFG_ID_HOME_DIRECTOR                                       0x0038   //Home Director
#define MFG_ID_HOMEMANAGEABLES_INC                                 0x0070   //Homemanageables, Inc.
#define MFG_ID_HOMEPRO                                             0x0050   //Homepro
#define MFG_ID_HOMESCENARIO                                        0x0162   //HomeScenario
#define MFG_ID_HOMESEER_TECHNOLOGIES                               0x000C   //HomeSeer Technologies
#define MFG_ID_HONEST_TECHNOLOGY                                   0x0275   //Honest Technology
#define MFG_ID_HONEST_TECHNOLOGY_CO_LTD                            0x023D   //Honest Technology Co., Ltd.
#define MFG_ID_HONEYWELL                                           0x0039   //Honeywell
#define MFG_ID_HOPPE                                               0x0313   //Hoppe
#define MFG_ID_HORNBACH_BAUMARKT_AG                                0x0377   //HORNBACH Baumarkt AG
#define MFG_ID_HORUS_SMART_CONTROL                                 0x0298   //Horus Smart Control
#define MFG_ID_HOSEOTELNET                                         0x0221   //HOSEOTELNET
#define MFG_ID_HUAPIN_INFORMATION_TECHNOLOGY_CO_LTD                0x0180   //Huapin Information Technology Co.,Ltd
#define MFG_ID_HUAWEI_DEVICE_CO_LTD                                0x025F   //Huawei Device Co., Ltd. 
#define MFG_ID_HUAWEI_TECHNOLOGIES_CO_LTD                          0x024B   //Huawei Technologies Co., Ltd.
#define MFG_ID_HUNTER_DOUGLAS                                      0x007C   //Hunter Douglas
#define MFG_ID_HYUNDAI_TELECOM                                     0x0374   //Hyundai Telecom
#define MFG_ID_IAMSMART                                            0x038A   //iamsmart
#define MFG_ID_IAUTOMADE_PTE_LTD                                   0x0218   //iAutomade Pte Ltd
#define MFG_ID_ICOM_TECHNOLOGY_BV                                  0x0011   //iCOM Technology b.v.
#define MFG_ID_ICONTROL                                            0x0106   //iControl
#define MFG_ID_ICONTROL_NETWORKS                                   0x0106   //Icontrol Networks
#define MFG_ID_ID_LOCK_AS                                          0x0373   //ID Lock AS
#define MFG_ID_IDRF                                                0x0165   //ID-RF
#define MFG_ID_IEXERGY_GMBH                                        0x019E   //iEXERGY GmbH
#define MFG_ID_ILEVIA_SRL                                          0x031C   //Ilevia srl
#define MFG_ID_IMPACT_TECHNOLOGIES_AND_PRODUCTS                    0x0056   //Impact Technologies and Products
#define MFG_ID_IMPACT_TECHNOLOGIES_BV                              0x0061   //Impact Technologies BV
#define MFG_ID_INERGY_SYSTEMS_LLC                                  0x0385   //Inergy Systems LLC
#define MFG_ID_INFUSION_DEVELOPMENT                                0x012B   //Infusion Development
#define MFG_ID_INGERSOLL_RAND_SCHLAGE                              0x006C   //Ingersoll Rand (Schlage)
#define MFG_ID_INGERSOLL_RAND_ECOLINK                              0x011F   //Ingersoll Rand (was Ecolink)
#define MFG_ID_INKEL_CORP                                          0x0256   //Inkel Corp.
#define MFG_ID_INLON_SRL                                           0x003A   //Inlon Srl
#define MFG_ID_INNOBAND_TECHNOLOGIES_INC                           0x0141   //Innoband Technologies, Inc
#define MFG_ID_INNOPIA_TECHNOLOGIES_INC                            0x0382   //INNOPIA Technologies, Inc.
#define MFG_ID_INNOVUS                                             0x0077   //INNOVUS
#define MFG_ID_INOVELLI                                            0x031E   //Inovelli
#define MFG_ID_INSIGNIA                                            0x0100   //Insignia
#define MFG_ID_INTEL                                               0x0006   //Intel
#define MFG_ID_INTELLICON                                          0x001C   //IntelliCon
#define MFG_ID_INTERACTIVE_ELECTRONICS_SYSTEMS_IES                 0x0072   //Interactive Electronics Systems (IES)
#define MFG_ID_INTERMATIC                                          0x0005   //Intermatic
#define MFG_ID_INTERNATIONAL_INTEGRATED_SYSTEMS_INC_IISI           0x0338   //International Integrated Systems, Inc. (IISI)
#define MFG_ID_INTERNET_DOM                                        0x0013   //Internet Dom
#define MFG_ID_INTERSOFT                                           0x0288   //INTERSOFT
#define MFG_ID_INVALANCE                                           0x039E   //Invalance
#define MFG_ID_INVENTEC                                            0x0278   //Inventec
#define MFG_ID_IOOOTA                                              0x0368   //IOOOTA
#define MFG_ID_IQGROUP                                             0x005F   //IQ-Group
#define MFG_ID_IREVO                                               0x0212   //iRevo
#define MFG_ID_IUNGONL_BV                                          0x0253   //iungo.nl B.V.
#define MFG_ID_IWATSU                                              0x0123   //IWATSU
#define MFG_ID_JASCO_PRODUCTS                                      0x0063   //Jasco Products
#define MFG_ID_JIN_TAO_BAO                                         0x015A   //Jin Tao Bao
#define MFG_ID_JLABS_CORPORATION                                   0x039F   //JLabs Corporation
#define MFG_ID_JSW_PACIFIC_CORPORATION                             0x0164   //JSW Pacific Corporation
#define MFG_ID_KAIPULE_TECHNOLOGY_CO_LTD                           0x0214   //Kaipule Technology Co., Ltd.
#define MFG_ID_KAMSTRUP_AS                                         0x0091   //Kamstrup A/S
#define MFG_ID_KELLENDONK_ELEKTRONIK                               0x006A   //Kellendonk Elektronik
#define MFG_ID_KICHLER                                             0x0114   //Kichler
#define MFG_ID_KIWILAB                                             0x035F   //KIWILAB
#define MFG_ID_KLICKH_PVT_LTD                                      0x0139   //KlickH Pvt Ltd.
#define MFG_ID_KOOL_KONCEPTS                                       0x0261   //KOOL KONCEPTS
#define MFG_ID_KOPERA_DEVELOPMENT_INC                              0x0174   //Kopera Development Inc.
#define MFG_ID_KUMHO_ELECTRIC_INC                                  0x023A   //KUMHO ELECTRIC, INC
#define MFG_ID_LAGOTEK_CORPORATION                                 0x0051   //Lagotek Corporation
#define MFG_ID_LEAK_INTELLIGENCE_LLC                               0x0173   //Leak Intelligence, LLC
#define MFG_ID_LEEDARSON_LIGHTING_CO_LTD                           0x0300   //LEEDARSON LIGHTING CO., LTD.
#define MFG_ID_LEVION_TECHNOLOGIES_GMBH                            0x0187   //LEVION Technologies GmbH
#define MFG_ID_LEVITON                                             0x001D   //Leviton
#define MFG_ID_LEXEL                                               0x0015   //Lexel
#define MFG_ID_LG_ELECTRONICS                                      0x015B   //LG Electronics
#define MFG_ID_LIAONING_YOUWANG_LIGHTING_AND_ELECTRONIC_TECHNOLOGY 0x0362   //Liaoning Youwang Lighting and Electronic Technology Pty Ltd
#define MFG_ID_LIFESHIELD_LLC                                      0x0224   //LifeShield, LLC
#define MFG_ID_LIFESTYLE_NETWORKS                                  0x003C   //Lifestyle Networks
#define MFG_ID_LIGHT_ENGINE_LIMITED                                0x0210   //Light Engine Limited
#define MFG_ID_LIMEI                                               0x0342   //LIMEI
#define MFG_ID_LINK_ELECTRONICS_CO_LTD                             0x035C   //LINK ELECTRONICS Co., Ltd.
#define MFG_ID_LITE_AUTOMATION                                     0x0316   //Lite Automation
#define MFG_ID_LIVEGUARD_LTD                                       0x017A   //Liveguard Ltd.
#define MFG_ID_LIVING_STYLE_ENTERPRISES_LTD                        0x013A   //Living Style Enterprises, Ltd.
#define MFG_ID_LOCSTAR_TECHNOLOGY_CO_LTD                           0x015E   //Locstar Technology Co., Ltd
#define MFG_ID_LOGIC_GROUP                                         0x0234   //Logic Group
#define MFG_ID_LOGITECH                                            0x007F   //Logitech
#define MFG_ID_LOUDWATER_TECHNOLOGIES_LLC                          0x0025   //Loudwater Technologies, LLC
#define MFG_ID_LOWES                                               0x038C   //Lowes
#define MFG_ID_LS_CONTROL                                          0x0071   //LS Control
#define MFG_ID_LUFFANET_CO_LTE                                     0x036D   //Luffanet Co. Lte. 
#define MFG_ID_LUXEASY_TECHNOLOGY_COMPANY_LTD                      0x025E   //LUXEASY technology company LTD.
#define MFG_ID_LVI_PRODUKTER_AB                                    0x0062   //LVI Produkter AB
#define MFG_ID_M2M_SOLUTION                                        0x0192   //m2m Solution
#define MFG_ID_M2M_SOLUTION_2                                      0x0195   //M2M Solution
#define MFG_ID_MANODO_KTC                                          0x006E   //Manodo / KTC
#define MFG_ID_MARMITEK_BV                                         0x003D   //Marmitek BV
#define MFG_ID_MARTEC_ACCESS_PRODUCTS                              0x003E   //Martec Access Products
#define MFG_ID_MARTIN_RENZ_GMBH                                    0x0092   //Martin Renz GmbH
#define MFG_ID_MB_TURN_KEY_DESIGN                                  0x008F   //MB Turn Key Design
#define MFG_ID_MCOHOME_TECHNOLOGY_CO_LTD                           0x015F   //McoHome Technology Co., Ltd
#define MFG_ID_MCT_CO_LTD                                          0x0222   //MCT CO., LTD
#define MFG_ID_MEEDIO_LLC                                          0x0027   //Meedio, LLC
#define MFG_ID_MEGACHIPS                                           0x0107   //MegaChips
#define MFG_ID_MERCURY_CORPORATION                                 0x022D   //Mercury Corporation
#define MFG_ID_MERTEN                                              0x007A   //Merten
#define MFG_ID_MILANITY_INC                                        0x0238   //Milanity, Inc.
#define MFG_ID_MITSUMI                                             0x0112   //MITSUMI
#define MFG_ID_MOBILUS_MOTOR_SPOLKA_Z_OO                           0x019D   //MOBILUS MOTOR Spólka z o.o. 
#define MFG_ID_MODACOM_CO_LTD                                      0x0232   //MODACOM CO., LTD.
#define MFG_ID_MODSTROM                                            0x008D   //Modstrøm
#define MFG_ID_MOHITO_NETWORKS                                     0x000E   //Mohito Networks
#define MFG_ID_MONOPRICE                                           0x0202   //Monoprice
#define MFG_ID_MONSTER_CABLE                                       0x007E   //Monster Cable
#define MFG_ID_MOTION_CONTROL_SYSTEMS                              0x0125   //Motion Control Systems
#define MFG_ID_MOTOROLA                                            0x003F   //Motorola
#define MFG_ID_MSK_MIYAKAWA_SEISAKUSHO                             0x0122   //MSK - Miyakawa Seisakusho
#define MFG_ID_MTC_MAINTRONIC_GERMANY                              0x0083   //MTC Maintronic Germany
#define MFG_ID_MYSTROM                                             0x0143   //myStrom
#define MFG_ID_NANJING_EASTHOUSE_ELECTRICAL_CO_LTD                 0x016E   //Nanjing Easthouse Electrical Co., Ltd.
#define MFG_ID_NAPCO_SECURITY_TECHNOLOGIES_INC                     0x0121   //Napco Security Technologies, Inc.
#define MFG_ID_NCUBE                                               0x038D   //nCube
#define MFG_ID_NEC_PLATFORMS_LTD                                   0x036B   //NEC Platforms Ltd
#define MFG_ID_NEEO_AG                                             0x0241   //NEEO AG
#define MFG_ID_NEFIT                                               0x006D   //Nefit
#define MFG_ID_NEOCONTROL_US_LLC                                   0x0351   //NEOCONTROL US LLC
#define MFG_ID_NESS_CORPORATION_PTY_LTD                            0x0189   //Ness Corporation Pty Ltd
#define MFG_ID_NETGEAR                                             0x0133   //Netgear
#define MFG_ID_NEUSTA_NEXT_GMBH_CO_KG                              0x0248   //neusta next GmbH & Co. KG
#define MFG_ID_NEWLAND_COMMUNICATION_SCIENCE_TECHNOLOGY_CO_LTD     0x0203   //Newland Communication Science Technology Co., Ltd.
#define MFG_ID_NEXA_TRADING_AB                                     0x0268   //Nexa Trading AB
#define MFG_ID_NEXIA_HOME_INTELLIGENCE                             0x0178   //Nexia Home Intelligence
#define MFG_ID_NEXTENERGY                                          0x0075   //NextEnergy
#define MFG_ID_NHN_ENTERTAINMENT                                   0x0361   //NHN Entertainment
#define MFG_ID_NIE_TECHNOLOGY_CO_LTD                               0x0312   //NIE Technology Co., Ltd
#define MFG_ID_NINGBO_SENTEK_ELECTRONICS_CO_LTD                    0x0185   //Ningbo Sentek Electronics Co., Ltd
#define MFG_ID_NORTEK_SECURITY_CONTROL_LLC                         0x014F   //Nortek Security & Control LLC 
#define MFG_ID_NORTH_CHINA_UNIVERSITY_OF_TECHNOLOGY                0x0252   //North China University of Technology
#define MFG_ID_NORTHQ                                              0x0096   //NorthQ
#define MFG_ID_NOVAR_ELECTRICAL_DEVICES_AND_SYSTEMS_EDS            0x0040   //Novar Electrical Devices and Systems (EDS)
#define MFG_ID_NOVATEQNI_HK_LTD                                    0x020D   //Novateqni HK Ltd
#define MFG_ID_OBLO_LIVING_LLC                                     0x0296   //OBLO LIVING LLC
#define MFG_ID_OMNIMA_LIMITED                                      0x0119   //Omnima Limited
#define MFG_ID_ONSITE_PRO                                          0x014C   //OnSite Pro
#define MFG_ID_OPENPEAK_INC                                        0x0041   //OpenPeak Inc.
#define MFG_ID_OREGON_AUTOMATION                                   0x027D   //Oregon Automation 
#define MFG_ID_PANASONIC_ELECTRIC_WORKS_CO_LTD                     0x0104   //Panasonic Electric Works Co., Ltd.
#define MFG_ID_PANASONIC_ES_SHIN_DONGA_CO_LTD                      0x031A   //Panasonic ES Shin Dong-A Co., Ltd
#define MFG_ID_PANODIC_ELECTRIC_SHENZHEN_LIMITED                   0x028D   //Panodic Electric (Shenzhen) Limited
#define MFG_ID_PARATECH                                            0x0257   //PARATECH
#define MFG_ID_PASSIVSYSTEMS_LIMITED                               0x0172   //PassivSystems Limited
#define MFG_ID_PAXTON_ACCESS_LTD                                   0x0322   //Paxton Access Ltd
#define MFG_ID_PC_PARTNER                                          0x0281   //PC Partner
#define MFG_ID_PELLA                                               0x013D   //Pella
#define MFG_ID_PERMUNDO_GMBH                                       0x0245   //permundo GmbH
#define MFG_ID_PHILIA_TECHNOLOGY_CO_LTD                            0x0366   //PHILIA TECHNOLOGY Co., Ltd.
#define MFG_ID_PHILIO_TECHNOLOGY_CORP                              0x013C   //Philio Technology Corp
#define MFG_ID_PIXELA_CORPORATION                                  0x0277   //Pixela Corporation 
#define MFG_ID_POLYCONTROL                                         0x010E   //Poly-control
#define MFG_ID_POPP_CO                                             0x0154   //Popp & Co
#define MFG_ID_POWERHOUSE_DYNAMICS                                 0x0170   //Powerhouse Dynamics
#define MFG_ID_POWERLINX                                           0x0074   //PowerLinx
#define MFG_ID_POWERLYNX                                           0x0016   //PowerLynx
#define MFG_ID_PRAGMATIC_CONSULTING_INC                            0x0042   //Pragmatic Consulting Inc.
#define MFG_ID_PRODEA                                              0x0341   //Prodea
#define MFG_ID_PRODRIVE_TECHNOLOGIES                               0x0128   //Prodrive Technologies
#define MFG_ID_PROMIXIS_LLC                                        0x0161   //Promixis, LLC
#define MFG_ID_PULSE_TECHNOLOGIES_ASPALIS                          0x005D   //Pulse Technologies (Aspalis)
#define MFG_ID_PYTRONIC_AB                                         0x0376   //Pytronic AB 
#define MFG_ID_QEES                                                0x0095   //Qees
#define MFG_ID_QINGDAO_HONGYU_CLES_AIR_CONDITIONING_CO_LTD         0x0355   //Qingdao hongyu cles air conditioning co.,ltd.
#define MFG_ID_QOLSYS                                              0x012A   //Qolsys
#define MFG_ID_QUBY                                                0x0130   //Quby
#define MFG_ID_QUEENLOCK_IND_CO_LTD                                0x0163   //Queenlock Ind. Co., Ltd.
#define MFG_ID_RADEMACHER_GERATEELEKTRONIK_GMBH_CO_KG              0x0142   //Rademacher Geräte-Elektronik GmbH & Co. KG
#define MFG_ID_RADIO_THERMOSTAT_COMPANY_OF_AMERICA_RTC             0x0098   //Radio Thermostat Company of America (RTC)
#define MFG_ID_RAONIX_CO_LTD                                       0x0314   //Raonix Co., Ltd.
#define MFG_ID_RARITAN                                             0x008E   //Raritan
#define MFG_ID_RAYLIOS                                             0x0370   //Raylios
#define MFG_ID_RED_BEE_CO_LTD                                      0x021E   //Red Bee Co. Ltd
#define MFG_ID_REITZGROUPDE                                        0x0064   //Reitz-Group.de
#define MFG_ID_REMOTE_SOLUTION                                     0x022C   //Remote Solution
#define MFG_ID_REMOTE_TECHNOLOGIES_INCORPORATED                    0x0255   //Remote Technologies Incorporated
#define MFG_ID_REMOTEC                                             0x5254   //Remotec
#define MFG_ID_REPLY_SPA                                           0x039B   //Reply S.p.A.
#define MFG_ID_RESIDENTIAL_CONTROL_SYSTEMS_INC_RCS                 0x0010   //Residential Control Systems, Inc. (RCS)
#define MFG_ID_RET_NANJING_INTELLIGENCE_SYSTEM_CO_LTD              0x0216   //RET Nanjing Intelligence System CO.,Ltd
#define MFG_ID_REVOLV_INC                                          0x0153   //Revolv Inc
#define MFG_ID_RIMPORT_LTD                                         0x0147   //R-import Ltd.
#define MFG_ID_RISCO_GROUP                                         0x035E   //RISCO Group
#define MFG_ID_ROCCONNECT_INC                                      0x023B   //ROC-Connect, Inc.
#define MFG_ID_RPE_AJAX_LLC_DBS_SECUR_LTD                          0x0197   //RPE Ajax LLC (dbs Secur Ltd)
#define MFG_ID_RS_SCENE_AUTOMATION                                 0x0065   //RS Scene Automation
#define MFG_ID_RUBETEK                                             0x029D   //Rubetek
#define MFG_ID_S1                                                  0x0290   //S1
#define MFG_ID_SAFETECH_PRODUCTS                                   0x023C   //SafeTech Products
#define MFG_ID_SAMSUNG_ELECTRONICS_CO_LTD                          0x0201   //Samsung Electronics Co., Ltd.
#define MFG_ID_SAMSUNG_SDS                                         0x022E   //Samsung SDS
#define MFG_ID_SAN_SHIH_ELECTRICAL_ENTERPRISE_CO_LTD               0x0093   //San Shih Electrical Enterprise Co., Ltd.
#define MFG_ID_SANAV                                               0x012C   //SANAV
#define MFG_ID_SATCO_PRODUCTS_INC                                  0x0307   //SATCO Products, Inc. 
#define MFG_ID_SBCK_CORP                                           0x0318   //SBCK Corp. 
#define MFG_ID_SCIENTIA_TECHNOLOGIES_INC                           0x001F   //Scientia Technologies, Inc.
#define MFG_ID_SCOUT_ALARM                                         0x029A   //Scout Alarm
#define MFG_ID_SECURE_METERS_UK_LTD                                0x0059   //Secure Meters (UK) Ltd
#define MFG_ID_SECURE_WIRELESS                                     0x011E   //Secure Wireless
#define MFG_ID_SECURENET_TECHNOLOGIES                              0x0167   //SecureNet Technologies
#define MFG_ID_SECURIFI_LTD                                        0x0182   //Securifi Ltd.
#define MFG_ID_SELUXIT                                             0x0069   //Seluxit
#define MFG_ID_SENMATIC_AS                                         0x0043   //Senmatic A/S
#define MFG_ID_SENSATIVE_AB                                        0x019A   //Sensative AB
#define MFG_ID_SEQUOIA_TECHNOLOGY_LTD                              0x0044   //Sequoia Technology LTD
#define MFG_ID_SERCOMM_CORP                                        0x0151   //Sercomm Corp
#define MFG_ID_SHANDONG_BITTEL_INTELLIGENT_TECHNOLOGY_CO_LTD       0x0378   //Shandong Bittel Intelligent Technology Co., Ltd
#define MFG_ID_SHANDONG_SMART_LIFE_DATA_SYSTEM_CO_LTD              0x030B   //Shandong Smart Life Data System Co .LTD
#define MFG_ID_SHANGDONG_SMART_LIFE_DATA_SYSTEM_CO_LTD             0x0215   //Shangdong Smart Life Data System Co.,Ltd
#define MFG_ID_SHANGHAI_DORLINK_INTELLIGENT_TECHNOLOGIES_CO_LTD    0x023E   //Shanghai Dorlink Intelligent Technologies Co.,Ltd
#define MFG_ID_SHANGHAI_LONGCHUANG_ECOENERGY_SYSTEMS_CO_LTD        0x0205   //Shanghai Longchuang Eco-energy Systems Co., Ltd
#define MFG_ID_SHARP                                               0x010B   //Sharp
#define MFG_ID_SHENZHEN_3NOD_ACOUSTICLINK_CO_LTD                   0x0357   //Shenzhen 3nod Acousticlink Co., LTD
#define MFG_ID_SHENZHEN_AOYA_INDUSTRY_CO_LTD                       0x021A   //SHENZHEN AOYA INDUSTRY CO. LTD
#define MFG_ID_SHENZHEN_EASYHOME_TECHNOLOGY_CO_LTD                 0x0286   //Shenzhen Easyhome Technology Co., Ltd.
#define MFG_ID_SHENZHEN_ISURPASS_TECHNOLOGY_CO_LTD                 0x021C   //Shenzhen iSurpass Technology Co. ,Ltd
#define MFG_ID_SHENZHEN_JBT_SMART_LIGHTING_CO_LTD                  0x037A   //Shenzhen JBT Smart Lighting Co., Ltd
#define MFG_ID_SHENZHEN_KAADAS_INTELLIGENT_TECHNOLOGY_CO_LTD       0x021D   //Shenzhen Kaadas Intelligent Technology Co., Ltd
#define MFG_ID_SHENZHEN_LIAO_WANG_TONG_DA_TECHNOLOGY_LTD           0x0211   //Shenzhen Liao Wang Tong Da Technology Ltd
#define MFG_ID_SHENZHEN_NEO_ELECTRONICS_CO_LTD                     0x0258   //Shenzhen Neo Electronics Co., Ltd
#define MFG_ID_SHENZHEN_SEN5_TECHNOLOGY_CO_LTD                     0x036C   //Shenzhen Sen5 Technology Co., Ltd.
#define MFG_ID_SHENZHEN_THINGSVIEW_TECH                            0x0381   //Shenzhen Thingsview Tech
#define MFG_ID_SHENZHEN_TRIPATH_DIGITAL_AUDIO_EQUIPMENT_CO_LTD     0x0250   //Shenzhen Tripath Digital Audio Equipment Co.,Ltd
#define MFG_ID_SHENZHEN_ZHIQU_TECHNOLOGY_LIMITED                   0x0356   //Shenzhen ZHIQU Technology Limited
#define MFG_ID_SHENZHEN_HEIMAN_TECHNOLOGY_CO_LTD                   0x0260   //Shenzhen Heiman Technology Co., Ltd
#define MFG_ID_SHENZHEN_SAYKEY_TECHNOLOGY_CO_LTD                   0x032C   //Shenzhen Saykey Technology Co., Ltd 
#define MFG_ID_SIEGENIAAUBI_KG                                     0x0081   //SIEGENIA-AUBI KG
#define MFG_ID_ZWAVE                                               0x0000   //Z-Wave
#define MFG_ID_SIMONTECH_SLU                                       0x0267   //SimonTech S.L.U
#define MFG_ID_SINE_WIRELESS                                       0x0045   //Sine Wireless
#define MFG_ID_SITERWELL_TECHNOLOGY_HK_CO_LTD                      0x0266   //Siterwell Technology HK Co., LTD 
#define MFG_ID_SMART_ELECTRONIC_INDUSTRIAL_DONGGUAN_CO_LIMITED     0x0282   //Smart Electronic Industrial (Dongguan) Co., Limited
#define MFG_ID_SMART_PRODUCTS_INC                                  0x0046   //Smart Products, Inc.
#define MFG_ID_SMARTALL_INC                                        0x026A   //SmartAll Inc.
#define MFG_ID_SMARTHOME_PARTNER_GMBH                              0x0323   //SmartHome Partner GmbH
#define MFG_ID_SMARTLY_AS                                          0x024F   //Smartly AS
#define MFG_ID_SMARTTHINGS_INC                                     0x0150   //SmartThings, Inc.
#define MFG_ID_SMK_MANUFACTURING_INC                               0x0102   //SMK Manufacturing Inc.
#define MFG_ID_SOFTATHOME                                          0x029C   //SoftAtHome
#define MFG_ID_SOMFY                                               0x0047   //Somfy
#define MFG_ID_SONG_JIANG_YUNAN_TECHNOLOGY_CO_LTD                  0x0394   //SONG JIANG YUN-AN TECHNOLOGY CO., LTD.
#define MFG_ID_SOOSAN_HOMETECH                                     0x0274   //Soosan Hometech
#define MFG_ID_SOREL_GMBH                                          0x035A   //SOREL GmbH 
#define MFG_ID_SPECTRUM_BRANDS                                     0x0090   //Spectrum Brands
#define MFG_ID_SPRINGS_WINDOW_FASHIONS                             0x026E   //Springs Window Fashions
#define MFG_ID_SPRUE_SAFETY_PRODUCTS_LTD                           0x026F   //Sprue Safety Products Ltd
#define MFG_ID_SQUARE_CONNECT                                      0x0124   //Square Connect
#define MFG_ID_STT_ELECTRIC_CORPORATION                            0x021B   //ST&T Electric Corporation
#define MFG_ID_STAR_AUTOMATION                                     0x0358   //Star Automation
#define MFG_ID_STARKOFF                                            0x0259   //Starkoff
#define MFG_ID_STARVEDIA                                           0x0265   //StarVedia
#define MFG_ID_STEINEL_GMBH                                        0x0271   //STEINEL GmbH 
#define MFG_ID_STELPRO                                             0x0239   //Stelpro
#define MFG_ID_STRATTEC_ADVANCED_LOGIC_LLC                         0x0217   //Strattec Advanced Logic,LLC
#define MFG_ID_STRATTEC_SECURITY_CORPORATION                       0x0168   //STRATTEC Security Corporation
#define MFG_ID_SUMITOMO                                            0x0105   //Sumitomo
#define MFG_ID_SUNJET_COMPONENTS_CORP                              0x028B   //Sunjet Components Corp.
#define MFG_ID_SUPERNA                                             0x0054   //Superna
#define MFG_ID_SWANN_COMMUNICATIONS_PTY_LTD                        0x0191   //Swann Communications Pty Ltd
#define MFG_ID_SWYCS                                               0x0339   //SWYCS
#define MFG_ID_SYLVANIA                                            0x0009   //Sylvania
#define MFG_ID_SYSTECH_CORPORATION                                 0x0136   //Systech Corporation
#define MFG_ID_SYSTEMAIR_SVERIGE_AB                                0x0276   //Systemair Sverige AB
#define MFG_ID_TW_SHENZHEN_GONGJIN_ELECTRONICS_CO_LTD              0x0375   //T&W(SHENZHEN GONGJIN ELECTRONICS CO.,LTD)
#define MFG_ID_TAEWON_LIGHTING_CO_LTD                              0x0235   //TAEWON Lighting Co., Ltd.
#define MFG_ID_TAIWAN_FU_HSING_INDUSTRIAL_CO_LTD                   0x0262   //Taiwan Fu Hsing Industrial Co., Ltd.
#define MFG_ID_TAIWAN_ICATCH_INC                                   0x0264   //Taiwan iCATCH Inc.
#define MFG_ID_TEAM_DIGITAL_LIMITED                                0x0186   //Team Digital Limited
#define MFG_ID_TEAM_PRECISION_PCL                                  0x0089   //Team Precision PCL
#define MFG_ID_TECHNICOLOR                                         0x0240   //Technicolor
#define MFG_ID_TECHNIKU                                            0x000A   //Techniku
#define MFG_ID_TECOM_CO_LTD                                        0x012F   //Tecom Co., Ltd.
#define MFG_ID_TELL_IT_ONLINE                                      0x0012   //Tell It Online
#define MFG_ID_TELLDUS_TECHNOLOGIES_AB                             0x0176   //Telldus Technologies AB
#define MFG_ID_TELSEY                                              0x0048   //Telsey
#define MFG_ID_TELULAR                                             0x017E   //Telular
#define MFG_ID_TEPTRON_AB                                          0x0397   //Teptron AB 
#define MFG_ID_TERRA_OPTIMA_BV_PRIMAIR_SERVICES                    0x005C   //Terra Optima B.V. (tidligere Primair Services)
#define MFG_ID_THERE_CORPORATION                                   0x010C   //There Corporation
#define MFG_ID_THERMOFLOOR                                         0x019B   //ThermoFloor
#define MFG_ID_THINK_SIMPLE_SRL                                    0x0317   //Think Simple srl
#define MFG_ID_TIMEVALVE_INC                                       0x022A   //TIMEVALVE, Inc.
#define MFG_ID_TINGCORE_AB_INFO24_AB                               0x033B   //Tingcore AB  (Info24 AB)
#define MFG_ID_TKB_HOME                                            0x0118   //TKB Home
#define MFG_ID_TKH_GROUP_EMINENT                                   0x011C   //TKH Group / Eminent
#define MFG_ID_TMC_TECHNOLOGY_LTD                                  0x0327   //TMC Technology Ltd.
#define MFG_ID_TOLEDO_CO_INC                                       0x0319   //Toledo & Co., Inc.
#define MFG_ID_TONG_LUNG_METAL_INDUSTRY_CO_LTD                     0x034F   //TONG LUNG METAL INDUSTRY CO., LTD.
#define MFG_ID_TOSHIBA_VISUAL_SOLUTION                             0x0333   //Toshiba Visual Solution
#define MFG_ID_TPLINK_TECHNOLOGIES_CO_LTD                          0x0283   //TP-Link Technologies Co., Ltd.
#define MFG_ID_TRANE_CORPORATION                                   0x008B   //Trane Corporation
#define MFG_ID_TRICKLESTAR                                         0x0066   //TrickleStar
#define MFG_ID_TRICKLESTAR_LTD_EMPOWER_CONTROLS_LTD                0x006B   //Tricklestar Ltd. (former Empower Controls Ltd.)
#define MFG_ID_TRIDIUM                                             0x0055   //Tridium
#define MFG_ID_TRONICO_TECHNOLOGY_CO_LTD                           0x0111   //Tronico Technology Co. Ltd.
#define MFG_ID_TWISTHINK                                           0x0049   //Twisthink
#define MFG_ID_UBITECH                                             0x0270   //Ubitech
#define MFG_ID_UFAIRY_GR_TECH                                      0x0152   //UFairy G.R. Tech
#define MFG_ID_UNIVERSAL_DEVICES_INC                               0x0193   //Universal Devices, Inc
#define MFG_ID_UNIVERSAL_ELECTRONICS_INC                           0x0020   //Universal Electronics Inc.
#define MFG_ID_UNIVERSE_FUTURE                                     0x0183   //Universe Future
#define MFG_ID_UTC_FIRE_AND_SECURITY_AMERICAS_CORP                 0x0209   //UTC Fire and Security Americas Corp
#define MFG_ID_VATES                                               0x0388   //Vates
#define MFG_ID_VDA                                                 0x010A   //VDA
#define MFG_ID_VEMMIO                                              0x030F   //Vemmio
#define MFG_ID_VENSTAR_INC                                         0x0198   //Venstar Inc.
#define MFG_ID_VERA_CONTROL                                        0x008C   //Vera Control
#define MFG_ID_VERO_DUCO                                           0x0080   //Vero Duco
#define MFG_ID_VESTEL_ELEKTRONIK_TICARET_VE_SANAYI_AS              0x0237   //Vestel Elektronik Ticaret ve Sanayi A.S. 
#define MFG_ID_VIEWSONIC                                           0x0053   //Viewsonic
#define MFG_ID_VIEWSONIC_CORPORATION                               0x005E   //ViewSonic Corporation
#define MFG_ID_VIMAR_CRS                                           0x0007   //Vimar CRS
#define MFG_ID_VIPASTAR                                            0x0188   //Vipa-Star
#define MFG_ID_VISION_SECURITY                                     0x0109   //Vision Security
#define MFG_ID_VISUALIZE                                           0x004A   //Visualize
#define MFG_ID_VITELEC                                             0x0058   //Vitelec
#define MFG_ID_VIVA_LABS_AS                                        0x0263   //Viva Labs AS
#define MFG_ID_VIVINT                                              0x0156   //Vivint
#define MFG_ID_VSSAFETY_AS                                         0x017B   //Vs-Safety AS
#define MFG_ID_WATT_STOPPER                                        0x004B   //Watt Stopper
#define MFG_ID_WAYNE_DALTON                                        0x0008   //Wayne Dalton
#define MFG_ID_WEBEE_LIFE                                          0x019F   //Webee Life
#define MFG_ID_WEBEHOME_AB                                         0x0171   //WeBeHome AB
#define MFG_ID_WENZHOU_MTLC_ELECTRIC_APPLIANCES_CO_LTD             0x011A   //Wenzhou MTLC Electric Appliances Co.,Ltd.
#define MFG_ID_WESTCONTROL_AS                                      0x026C   //Westcontrol AS
#define MFG_ID_WHIRLPOOL                                           0x0057   //Whirlpool
#define MFG_ID_WHITE_RABBIT                                        0x027B   //White Rabbit
#define MFG_ID_WIDOM                                               0x0149   //wiDom
#define MFG_ID_WILLIS_ELECTRIC_CO_LTD                              0x015D   //Willis Electric Co., Ltd.
#define MFG_ID_WILSHINE_HOLDING_CO_LTD                             0x012D   //Wilshine Holding Co., Ltd
#define MFG_ID_WINK_INC                                            0x017F   //Wink Inc.
#define MFG_ID_WINTOP                                              0x0097   //Wintop
#define MFG_ID_WINYTECHNOLOGY                                      0x0242   //Winytechnology
#define MFG_ID_WIRELESS_MAINGATE_AB                                0x0199   //Wireless Maingate AB
#define MFG_ID_WOODWARD_LABS                                       0x004C   //Woodward Labs
#define MFG_ID_WOOREE_LIGHTING_CO_LTD                              0x0269   //WOOREE Lighting Co.,Ltd.
#define MFG_ID_WRAP                                                0x0003   //Wr@p
#define MFG_ID_WRT_INTELLIGENT_TECHNOLOGY_CO_LTD                   0x022F   //WRT Intelligent Technology CO., LTD.
#define MFG_ID_WUHAN_NWD_TECHNOLOGY_CO_LTD                         0x012E   //Wuhan NWD Technology Co., Ltd.
#define MFG_ID_XANBOO                                              0x004D   //Xanboo
#define MFG_ID_XIAMEN_ACTEC_ELECTRONICS_CO_LTD                     0x037D   //Xiamen AcTEC Electronics Co., Ltd.
#define MFG_ID_ZCONNECT                                            0x024E   //zConnect
#define MFG_ID_ZDATA_LLC                                           0x004E   //Zdata, LLC.
#define MFG_ID_ZHEJIANG_JIUXING_ELECTRIC_CO_LTD                    0x016F   //Zhejiang Jiuxing Electric Co Ltd
#define MFG_ID_ZINNO                                               0x036E   //Zinno
#define MFG_ID_ZIPATO                                              0x0131   //Zipato
#define MFG_ID_ZONOFF                                              0x0120   //Zonoff
#define MFG_ID_ZOOZ                                                0x027A   //Zooz
#define MFG_ID_ZWAVE_ALLIANCE                                      0x031D   //Z-Wave Alliance
#define MFG_ID_ZWAVE_TECHNOLOGIA                                   0x004F   //Z-Wave Technologia
#define MFG_ID_ZWAVEME                                             0x0115   //Z-Wave.Me
#define MFG_ID_ZWAVEPRODUCTSCOM                                    0x0315   //zwaveproducts.com
#define MFG_ID_ZWORKS_INC                                          0x024D   //Z-works Inc.
#define MFG_ID_ZYKRONIX                                            0x0021   //Zykronix
#define MFG_ID_ZYXEL                                               0x0135   //ZyXEL


/*************** command class identifiers ****************/
#define COMMAND_CLASS_ALARM                                                              0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_ALARM_V2                                                           0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_NOTIFICATION_V3                                                    0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_NOTIFICATION_V4                                                    0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_NOTIFICATION_V5                                                    0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_NOTIFICATION_V6                                                    0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_NOTIFICATION_V7                                                    0x71 /*[DEPRECATED]*/
#define COMMAND_CLASS_NOTIFICATION_V8                                                    0x71
#define COMMAND_CLASS_NOTIFICATION_V9                                                    0x71
#define COMMAND_CLASS_APPLICATION_STATUS                                                 0x22
#define COMMAND_CLASS_ASSOCIATION_COMMAND_CONFIGURATION                                  0x9B
#define COMMAND_CLASS_ASSOCIATION                                                        0x85 /*[OBSOLETED]*/
#define COMMAND_CLASS_ASSOCIATION_V2                                                     0x85
#define COMMAND_CLASS_ASSOCIATION_V3                                                     0x85
#define COMMAND_CLASS_ASSOCIATION_V4                                                     0x85
#define COMMAND_CLASS_AV_CONTENT_DIRECTORY_MD                                            0x95
#define COMMAND_CLASS_AV_CONTENT_SEARCH_MD                                               0x97
#define COMMAND_CLASS_AV_RENDERER_STATUS                                                 0x96
#define COMMAND_CLASS_AV_TAGGING_MD                                                      0x99
#define COMMAND_CLASS_BASIC_TARIFF_INFO                                                  0x36
#define COMMAND_CLASS_BASIC_WINDOW_COVERING                                              0x50 /*[OBSOLETED]*/
#define COMMAND_CLASS_BASIC                                                              0x20
#define COMMAND_CLASS_BASIC_V2                                                           0x20
#define COMMAND_CLASS_BATTERY                                                            0x80
#define COMMAND_CLASS_BATTERY_V2                                                         0x80
#define COMMAND_CLASS_BATTERY_V3                                                         0x80
#define COMMAND_CLASS_CHIMNEY_FAN                                                        0x2A
#define COMMAND_CLASS_CLIMATE_CONTROL_SCHEDULE                                           0x46 /*[DEPRECATED]*/
#define COMMAND_CLASS_CLOCK                                                              0x81
#define COMMAND_CLASS_CONFIGURATION                                                      0x70
#define COMMAND_CLASS_CONFIGURATION_V2                                                   0x70
#define COMMAND_CLASS_CONFIGURATION_V3                                                   0x70
#define COMMAND_CLASS_CONFIGURATION_V4                                                   0x70
#define COMMAND_CLASS_CONTROLLER_REPLICATION                                             0x21
#define COMMAND_CLASS_CRC_16_ENCAP                                                       0x56
#define COMMAND_CLASS_DCP_CONFIG                                                         0x3A
#define COMMAND_CLASS_DCP_MONITOR                                                        0x3B
#define COMMAND_CLASS_DOOR_LOCK_LOGGING                                                  0x4C
#define COMMAND_CLASS_DOOR_LOCK                                                          0x62
#define COMMAND_CLASS_DOOR_LOCK_V2                                                       0x62
#define COMMAND_CLASS_DOOR_LOCK_V3                                                       0x62
#define COMMAND_CLASS_DOOR_LOCK_V4                                                       0x62
#define COMMAND_CLASS_ENERGY_PRODUCTION                                                  0x90
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD                                                 0x7A /*[DEPRECATED]*/
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V2                                              0x7A
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V3                                              0x7A
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V4                                              0x7A
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V5                                              0x7A
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V6                                              0x7A
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V7                                              0x7A
#define COMMAND_CLASS_FIRMWARE_UPDATE_MD_V8                                              0x7A
#define COMMAND_CLASS_GEOGRAPHIC_LOCATION                                                0x8C
#define COMMAND_CLASS_GROUPING_NAME                                                      0x7B /*[DEPRECATED]*/
#define COMMAND_CLASS_HAIL                                                               0x82 /*[OBSOLETED]*/
#define COMMAND_CLASS_HRV_CONTROL                                                        0x39
#define COMMAND_CLASS_HRV_STATUS                                                         0x37
#define COMMAND_CLASS_INDICATOR                                                          0x87
#define COMMAND_CLASS_INDICATOR_V2                                                       0x87
#define COMMAND_CLASS_INDICATOR_V3                                                       0x87
#define COMMAND_CLASS_INDICATOR_V4                                                       0x87
#define COMMAND_CLASS_IP_CONFIGURATION                                                   0x9A /*[OBSOLETED]*/
#define COMMAND_CLASS_LANGUAGE                                                           0x89
#define COMMAND_CLASS_MANUFACTURER_PROPRIETARY                                           0x91
#define COMMAND_CLASS_MANUFACTURER_SPECIFIC                                              0x72
#define COMMAND_CLASS_MANUFACTURER_SPECIFIC_V2                                           0x72
#define COMMAND_CLASS_MARK                                                               0xEF
#define COMMAND_CLASS_METER_PULSE                                                        0x35 /*[DEPRECATED]*/
#define COMMAND_CLASS_METER_TBL_CONFIG                                                   0x3C
#define COMMAND_CLASS_METER_TBL_MONITOR                                                  0x3D
#define COMMAND_CLASS_METER_TBL_MONITOR_V2                                               0x3D
#define COMMAND_CLASS_METER_TBL_MONITOR_V3                                               0x3D
#define COMMAND_CLASS_METER_TBL_PUSH                                                     0x3E
#define COMMAND_CLASS_METER                                                              0x32
#define COMMAND_CLASS_METER_V2                                                           0x32
#define COMMAND_CLASS_METER_V3                                                           0x32
#define COMMAND_CLASS_METER_V4                                                           0x32
#define COMMAND_CLASS_METER_V5                                                           0x32
#define COMMAND_CLASS_METER_V6                                                           0x32
#define COMMAND_CLASS_MTP_WINDOW_COVERING                                                0x51 /*[OBSOLETED]*/
#define COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_V2                                       0x8E /*[OBSOLETED]*/
#define COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_V3                                       0x8E
#define COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_V4                                       0x8E
#define COMMAND_CLASS_MULTI_CHANNEL_ASSOCIATION_V5                                       0x8E
#define COMMAND_CLASS_MULTI_CHANNEL_V2                                                   0x60 /*[OBSOLETED]*/
#define COMMAND_CLASS_MULTI_CHANNEL_V3                                                   0x60 /*[OBSOLETED]*/
#define COMMAND_CLASS_MULTI_CHANNEL_V4                                                   0x60
#define COMMAND_CLASS_MULTI_CMD                                                          0x8F
#define COMMAND_CLASS_MULTI_INSTANCE_ASSOCIATION                                         0x8E /*[OBSOLETED]*/
#define COMMAND_CLASS_MULTI_INSTANCE                                                     0x60 /*[OBSOLETED]*/
#define COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY                                           0x52
#define COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY_V2                                        0x52
#define COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY_V3                                        0x52
#define COMMAND_CLASS_NETWORK_MANAGEMENT_PROXY_V4                                        0x52
#define COMMAND_CLASS_NETWORK_MANAGEMENT_BASIC                                           0x4D
#define COMMAND_CLASS_NETWORK_MANAGEMENT_BASIC_V2                                        0x4D
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION                                       0x34
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION_V2                                    0x34
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION_V3                                    0x34
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INCLUSION_V4                                    0x34
#define COMMAND_CLASS_NO_OPERATION                                                       0x00
#define COMMAND_CLASS_NODE_NAMING                                                        0x77
#define COMMAND_CLASS_NON_INTEROPERABLE                                                  0xF0
#define COMMAND_CLASS_POWERLEVEL                                                         0x73
#define COMMAND_CLASS_PREPAYMENT_ENCAPSULATION                                           0x41
#define COMMAND_CLASS_PREPAYMENT                                                         0x3F
#define COMMAND_CLASS_PROPRIETARY                                                        0x88 /*[OBSOLETED]*/
#define COMMAND_CLASS_PROTECTION                                                         0x75
#define COMMAND_CLASS_PROTECTION_V2                                                      0x75
#define COMMAND_CLASS_RATE_TBL_CONFIG                                                    0x48
#define COMMAND_CLASS_RATE_TBL_MONITOR                                                   0x49
#define COMMAND_CLASS_REMOTE_ASSOCIATION_ACTIVATE                                        0x7C /*[OBSOLETED]*/
#define COMMAND_CLASS_REMOTE_ASSOCIATION                                                 0x7D /*[OBSOLETED]*/
#define COMMAND_CLASS_SCENE_ACTIVATION                                                   0x2B
#define COMMAND_CLASS_SCENE_ACTUATOR_CONF                                                0x2C
#define COMMAND_CLASS_SCENE_CONTROLLER_CONF                                              0x2D
#define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK                                                0x4E /*[DEPRECATED]*/
#define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_V2                                             0x4E /*[DEPRECATED]*/
#define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_V3                                             0x4E /*[DEPRECATED]*/
#define COMMAND_CLASS_SCHEDULE_ENTRY_LOCK_V4                                             0x4E /*Never certified.*/
#define COMMAND_CLASS_SCREEN_ATTRIBUTES                                                  0x93
#define COMMAND_CLASS_SCREEN_ATTRIBUTES_V2                                               0x93
#define COMMAND_CLASS_SCREEN_MD                                                          0x92
#define COMMAND_CLASS_SCREEN_MD_V2                                                       0x92
#define COMMAND_CLASS_SECURITY_PANEL_MODE                                                0x24
#define COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR                                         0x2F
#define COMMAND_CLASS_SECURITY_PANEL_ZONE                                                0x2E
#define COMMAND_CLASS_SECURITY                                                           0x98
#define COMMAND_CLASS_SENSOR_ALARM                                                       0x9C /*SDS10963-4 The Sensor Alarm command class can be used to realize Sensor Alarms.*/
#define COMMAND_CLASS_SENSOR_BINARY                                                      0x30 /*[DEPRECATED]*/
#define COMMAND_CLASS_SENSOR_BINARY_V2                                                   0x30 /*[DEPRECATED]*/
#define COMMAND_CLASS_SENSOR_CONFIGURATION                                               0x9E /*[OBSOLETED]*/
#define COMMAND_CLASS_SENSOR_MULTILEVEL                                                  0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V2                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V3                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V4                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V5                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V6                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V7                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V8                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V9                                               0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V10                                              0x31
#define COMMAND_CLASS_SENSOR_MULTILEVEL_V11                                              0x31
#define COMMAND_CLASS_SILENCE_ALARM                                                      0x9D /*SDS10963-4 The Alarm Silence command class can be used to nuisance silence to temporarily disable the sounding*/
#define COMMAND_CLASS_SIMPLE_AV_CONTROL                                                  0x94
#define COMMAND_CLASS_SIMPLE_AV_CONTROL_V2                                               0x94
#define COMMAND_CLASS_SIMPLE_AV_CONTROL_V3                                               0x94
#define COMMAND_CLASS_SIMPLE_AV_CONTROL_V4                                               0x94
#define COMMAND_CLASS_SWITCH_ALL                                                         0x27
#define COMMAND_CLASS_SWITCH_BINARY                                                      0x25
#define COMMAND_CLASS_SWITCH_BINARY_V2                                                   0x25
#define COMMAND_CLASS_SWITCH_MULTILEVEL                                                  0x26
#define COMMAND_CLASS_SWITCH_MULTILEVEL_V2                                               0x26
#define COMMAND_CLASS_SWITCH_MULTILEVEL_V3                                               0x26
#define COMMAND_CLASS_SWITCH_MULTILEVEL_V4                                               0x26
#define COMMAND_CLASS_SWITCH_TOGGLE_BINARY                                               0x28 /*[DEPRECATED]*/
#define COMMAND_CLASS_SWITCH_TOGGLE_MULTILEVEL                                           0x29 /*[DEPRECATED]*/
#define COMMAND_CLASS_TARIFF_CONFIG                                                      0x4A
#define COMMAND_CLASS_TARIFF_TBL_MONITOR                                                 0x4B
#define COMMAND_CLASS_THERMOSTAT_FAN_MODE                                                0x44
#define COMMAND_CLASS_THERMOSTAT_FAN_MODE_V2                                             0x44
#define COMMAND_CLASS_THERMOSTAT_FAN_MODE_V3                                             0x44
#define COMMAND_CLASS_THERMOSTAT_FAN_MODE_V4                                             0x44
#define COMMAND_CLASS_THERMOSTAT_FAN_MODE_V5                                             0x44
#define COMMAND_CLASS_THERMOSTAT_FAN_STATE                                               0x45
#define COMMAND_CLASS_THERMOSTAT_FAN_STATE_V2                                            0x45
#define COMMAND_CLASS_THERMOSTAT_HEATING                                                 0x38
#define COMMAND_CLASS_THERMOSTAT_MODE                                                    0x40
#define COMMAND_CLASS_THERMOSTAT_MODE_V2                                                 0x40
#define COMMAND_CLASS_THERMOSTAT_MODE_V3                                                 0x40
#define COMMAND_CLASS_THERMOSTAT_OPERATING_STATE                                         0x42
#define COMMAND_CLASS_THERMOSTAT_OPERATING_STATE_V2                                      0x42
#define COMMAND_CLASS_THERMOSTAT_SETBACK                                                 0x47
#define COMMAND_CLASS_THERMOSTAT_SETPOINT                                                0x43
#define COMMAND_CLASS_THERMOSTAT_SETPOINT_V2                                             0x43
#define COMMAND_CLASS_THERMOSTAT_SETPOINT_V3                                             0x43
#define COMMAND_CLASS_TIME_PARAMETERS                                                    0x8B
#define COMMAND_CLASS_TIME                                                               0x8A
#define COMMAND_CLASS_TIME_V2                                                            0x8A
#define COMMAND_CLASS_TRANSPORT_SERVICE_V2                                               0x55
#define COMMAND_CLASS_TRANSPORT_SERVICE                                                  0x55 /*[OBSOLETED]*/
#define COMMAND_CLASS_USER_CODE                                                          0x63
#define COMMAND_CLASS_USER_CODE_V2                                                       0x63
#define COMMAND_CLASS_VERSION                                                            0x86 /*[OBSOLETED]*/
#define COMMAND_CLASS_VERSION_V2                                                         0x86
#define COMMAND_CLASS_VERSION_V3                                                         0x86
#define COMMAND_CLASS_WAKE_UP                                                            0x84
#define COMMAND_CLASS_WAKE_UP_V2                                                         0x84
#define COMMAND_CLASS_WAKE_UP_V3                                                         0x84
#define COMMAND_CLASS_ZIP_6LOWPAN                                                        0x4F
#define COMMAND_CLASS_ZIP                                                                0x23 /*[OBSOLETED]*/
#define COMMAND_CLASS_ZIP_V2                                                             0x23
#define COMMAND_CLASS_ZIP_V3                                                             0x23
#define COMMAND_CLASS_ZIP_V4                                                             0x23
#define COMMAND_CLASS_APPLICATION_CAPABILITY                                             0x57 /*[OBSOLETED]*/
#define COMMAND_CLASS_SWITCH_COLOR                                                       0x33
#define COMMAND_CLASS_SWITCH_COLOR_V2                                                    0x33
#define COMMAND_CLASS_SWITCH_COLOR_V3                                                    0x33
#define COMMAND_CLASS_SCHEDULE                                                           0x53
#define COMMAND_CLASS_SCHEDULE_V2                                                        0x53
#define COMMAND_CLASS_SCHEDULE_V3                                                        0x53
#define COMMAND_CLASS_SCHEDULE_V4                                                        0x53
#define COMMAND_CLASS_NETWORK_MANAGEMENT_PRIMARY                                         0x54
#define COMMAND_CLASS_ZIP_ND                                                             0x58
#define COMMAND_CLASS_ZIP_ND_V2                                                          0x58
#define COMMAND_CLASS_ASSOCIATION_GRP_INFO                                               0x59
#define COMMAND_CLASS_ASSOCIATION_GRP_INFO_V2                                            0x59
#define COMMAND_CLASS_ASSOCIATION_GRP_INFO_V3                                            0x59
#define COMMAND_CLASS_DEVICE_RESET_LOCALLY                                               0x5A
#define COMMAND_CLASS_CENTRAL_SCENE                                                      0x5B /*[OBSOLETED]*/
#define COMMAND_CLASS_CENTRAL_SCENE_V2                                                   0x5B /*[OBSOLETED]*/
#define COMMAND_CLASS_CENTRAL_SCENE_V3                                                   0x5B
#define COMMAND_CLASS_IP_ASSOCIATION                                                     0x5C
#define COMMAND_CLASS_ANTITHEFT                                                          0x5D /*[OBSOLETED]*/
#define COMMAND_CLASS_ANTITHEFT_V2                                                       0x5D /*[DEPRECATED]*/
#define COMMAND_CLASS_ANTITHEFT_V3                                                       0x5D /*[DEPRECATED]*/
#define COMMAND_CLASS_ZWAVEPLUS_INFO                                                     0x5E /*[OBSOLETED]*/
#define COMMAND_CLASS_ZWAVEPLUS_INFO_V2                                                  0x5E /*SDS11907-3*/
#define COMMAND_CLASS_ZIP_GATEWAY                                                        0x5F
#define COMMAND_CLASS_ZIP_PORTAL                                                         0x61
#define COMMAND_CLASS_DMX                                                                0x65
#define COMMAND_CLASS_BARRIER_OPERATOR                                                   0x66
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE                        0x67
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_V2                     0x67
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_V3                     0x67
#define COMMAND_CLASS_NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_V4                     0x67
#define COMMAND_CLASS_ZIP_NAMING                                                         0x68
#define COMMAND_CLASS_MAILBOX                                                            0x69
#define COMMAND_CLASS_MAILBOX_V2                                                         0x69
#define COMMAND_CLASS_WINDOW_COVERING                                                    0x6A
#define COMMAND_CLASS_SECURITY_2                                                         0x9F
#define COMMAND_CLASS_SECURITY_2_V2                                                      0x9F
#define COMMAND_CLASS_IRRIGATION                                                         0x6B
#define COMMAND_CLASS_SUPERVISION                                                        0x6C
#define COMMAND_CLASS_SUPERVISION_V2                                                     0x6C
#define COMMAND_CLASS_HUMIDITY_CONTROL_SETPOINT                                          0x64
#define COMMAND_CLASS_HUMIDITY_CONTROL_SETPOINT_V2                                       0x64
#define COMMAND_CLASS_HUMIDITY_CONTROL_MODE                                              0x6D
#define COMMAND_CLASS_HUMIDITY_CONTROL_MODE_V2                                           0x6D
#define COMMAND_CLASS_HUMIDITY_CONTROL_OPERATING_STATE                                   0x6E
#define COMMAND_CLASS_ENTRY_CONTROL                                                      0x6F
#define COMMAND_CLASS_INCLUSION_CONTROLLER                                               0x74
#define COMMAND_CLASS_NODE_PROVISIONING                                                  0x78
#define COMMAND_CLASS_SOUND_SWITCH                                                       0x79
#define COMMAND_CLASS_SOUND_SWITCH_V2                                                    0x79
#define COMMAND_CLASS_IR_REPEATER                                                        0xA0
#define COMMAND_CLASS_AUTHENTICATION                                                     0xA1
#define COMMAND_CLASS_AUTHENTICATION_MEDIA_WRITE                                         0xA2
#define COMMAND_CLASS_GENERIC_SCHEDULE                                                   0xA3
#define COMMAND_CLASS_ANTITHEFT_UNLOCK                                                   0x7E
#define COMMAND_CLASS_USER_CREDENTIAL                                                    0x83

/*************** command class extended identifiers ****************/
#define COMMAND_CLASS_SECURITY_SCHEME0_MARK                                              0xF100

/* Unknown command class commands */
#define UNKNOWN_VERSION                                                                  0x00

/* Alarm command class commands */
#define ALARM_VERSION                                                                    0x01
#define ALARM_GET                                                                        0x04
#define ALARM_REPORT                                                                     0x05

/* Alarm command class commands */
#define ALARM_VERSION_V2                                                                 0x02
#define ALARM_GET_V2                                                                     0x04
#define ALARM_REPORT_V2                                                                  0x05
#define ALARM_SET_V2                                                                     0x06
#define ALARM_TYPE_SUPPORTED_GET_V2                                                      0x07
#define ALARM_TYPE_SUPPORTED_REPORT_V2                                                   0x08
/* Values used for Alarm Get command */
#define ALARM_GET_RESERVED_V2                                                            0x00
#define ALARM_GET_SMOKE_V2                                                               0x01
#define ALARM_GET_CO_V2                                                                  0x02
#define ALARM_GET_CO2_V2                                                                 0x03
#define ALARM_GET_HEAT_V2                                                                0x04
#define ALARM_GET_WATER_V2                                                               0x05
#define ALARM_GET_ACCESS_CONTROL_V2                                                      0x06
#define ALARM_GET_BURGLAR_V2                                                             0x07
#define ALARM_GET_POWER_MANAGEMENT_V2                                                    0x08
#define ALARM_GET_SYSTEM_V2                                                              0x09
#define ALARM_GET_EMERGENCY_V2                                                           0x0A
#define ALARM_GET_CLOCK_V2                                                               0x0B
#define ALARM_GET_FIRST_V2                                                               0xFF
/* Values used for Alarm Report command */
#define ALARM_REPORT_RESERVED_V2                                                         0x00
#define ALARM_REPORT_SMOKE_V2                                                            0x01
#define ALARM_REPORT_CO_V2                                                               0x02
#define ALARM_REPORT_CO2_V2                                                              0x03
#define ALARM_REPORT_HEAT_V2                                                             0x04
#define ALARM_REPORT_WATER_V2                                                            0x05
#define ALARM_REPORT_ACCESS_CONTROL_V2                                                   0x06
#define ALARM_REPORT_BURGLAR_V2                                                          0x07
#define ALARM_REPORT_POWER_MANAGEMENT_V2                                                 0x08
#define ALARM_REPORT_SYSTEM_V2                                                           0x09
#define ALARM_REPORT_EMERGENCY_V2                                                        0x0A
#define ALARM_REPORT_CLOCK_V2                                                            0x0B
#define ALARM_REPORT_FIRST_V2                                                            0xFF
/* Values used for Alarm Set command */
#define ALARM_SET_RESERVED_V2                                                            0x00
#define ALARM_SET_SMOKE_V2                                                               0x01
#define ALARM_SET_CO_V2                                                                  0x02
#define ALARM_SET_CO2_V2                                                                 0x03
#define ALARM_SET_HEAT_V2                                                                0x04
#define ALARM_SET_WATER_V2                                                               0x05
#define ALARM_SET_ACCESS_CONTROL_V2                                                      0x06
#define ALARM_SET_BURGLAR_V2                                                             0x07
#define ALARM_SET_POWER_MANAGEMENT_V2                                                    0x08
#define ALARM_SET_SYSTEM_V2                                                              0x09
#define ALARM_SET_EMERGENCY_V2                                                           0x0A
#define ALARM_SET_CLOCK_V2                                                               0x0B
#define ALARM_SET_FIRST_V2                                                               0xFF
/* Values used for Alarm Type Supported Report command */
#define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V2              0x1F
#define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V2                         0x60
#define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                        0x05
#define ALARM_TYPE_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V2                     0x80

/* Notification command class commands */
#define NOTIFICATION_VERSION_V3                                                          0x03
#define NOTIFICATION_GET_V3                                                              0x04
#define NOTIFICATION_REPORT_V3                                                           0x05
#define NOTIFICATION_SET_V3                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V3                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V3                                                 0x08
#define EVENT_SUPPORTED_GET_V3                                                           0x01
#define EVENT_SUPPORTED_REPORT_V3                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V3                                                     0x00
#define NOTIFICATION_GET_SMOKE_V3                                                        0x01
#define NOTIFICATION_GET_CO_V3                                                           0x02
#define NOTIFICATION_GET_CO2_V3                                                          0x03
#define NOTIFICATION_GET_HEAT_V3                                                         0x04
#define NOTIFICATION_GET_WATER_V3                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V3                                               0x06
#define NOTIFICATION_GET_BURGLAR_V3                                                      0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V3                                             0x08
#define NOTIFICATION_GET_SYSTEM_V3                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V3                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V3                                                        0x0B
#define NOTIFICATION_GET_FIRST_V3                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_RESERVED_V3                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V3                                                     0x01
#define NOTIFICATION_REPORT_CO_V3                                                        0x02
#define NOTIFICATION_REPORT_CO2_V3                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V3                                                      0x04
#define NOTIFICATION_REPORT_WATER_V3                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V3                                            0x06
#define NOTIFICATION_REPORT_BURGLAR_V3                                                   0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V3                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V3                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V3                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V3                                                     0x0B
#define NOTIFICATION_REPORT_FIRST_V3                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V3                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V3                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V3                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V3                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V3                                                     0x00
#define NOTIFICATION_SET_SMOKE_V3                                                        0x01
#define NOTIFICATION_SET_CO_V3                                                           0x02
#define NOTIFICATION_SET_CO2_V3                                                          0x03
#define NOTIFICATION_SET_HEAT_V3                                                         0x04
#define NOTIFICATION_SET_WATER_V3                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V3                                               0x06
#define NOTIFICATION_SET_BURGLAR_V3                                                      0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V3                                             0x08
#define NOTIFICATION_SET_SYSTEM_V3                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V3                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V3                                                        0x0B
#define NOTIFICATION_SET_FIRST_V3                                                        0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V3            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V3                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V3                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V3                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V3                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V3                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V3                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V3                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V3                                            0x06
#define EVENT_SUPPORTED_GET_BURGLAR_V3                                                   0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V3                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V3                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V3                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V3                                                     0x0B
#define EVENT_SUPPORTED_GET_FIRST_V3                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V3                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V3                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V3                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V3                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V3                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V3                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V3                                         0x06
#define EVENT_SUPPORTED_REPORT_BURGLAR_V3                                                0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V3                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V3                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V3                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V3                                                  0x0B
#define EVENT_SUPPORTED_REPORT_FIRST_V3                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V3                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                             0x05

/* Notification command class commands */
#define NOTIFICATION_VERSION_V4                                                          0x04
#define NOTIFICATION_GET_V4                                                              0x04
#define NOTIFICATION_REPORT_V4                                                           0x05
#define NOTIFICATION_SET_V4                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V4                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V4                                                 0x08
#define EVENT_SUPPORTED_GET_V4                                                           0x01
#define EVENT_SUPPORTED_REPORT_V4                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V4                                                     0x00
#define NOTIFICATION_GET_SMOKE_V4                                                        0x01
#define NOTIFICATION_GET_CO_V4                                                           0x02
#define NOTIFICATION_GET_CO2_V4                                                          0x03
#define NOTIFICATION_GET_HEAT_V4                                                         0x04
#define NOTIFICATION_GET_WATER_V4                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V4                                               0x06
#define NOTIFICATION_GET_HOME_SECURITY_V4                                                0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V4                                             0x08
#define NOTIFICATION_GET_SYSTEM_V4                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V4                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V4                                                        0x0B
#define NOTIFICATION_GET_APPLIANCE_V4                                                    0x0C
#define NOTIFICATION_GET_HOME_HEALTH_V4                                                  0x0D
#define NOTIFICATION_GET_FIRST_V4                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_OFF_V4                                                       0x00
#define NOTIFICATION_REPORT_NO_PENDING_NOTIFICATIONS_V4                                  0xFE
#define NOTIFICATION_REPORT_ON_V4                                                        0xFF
#define NOTIFICATION_REPORT_RESERVED_V4                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V4                                                     0x01
#define NOTIFICATION_REPORT_CO_V4                                                        0x02
#define NOTIFICATION_REPORT_CO2_V4                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V4                                                      0x04
#define NOTIFICATION_REPORT_WATER_V4                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V4                                            0x06
#define NOTIFICATION_REPORT_HOME_SECURITY_V4                                             0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V4                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V4                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V4                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V4                                                     0x0B
#define NOTIFICATION_REPORT_APPLIANCE_V4                                                 0x0C
#define NOTIFICATION_REPORT_HOME_HEALTH_V4                                               0x0D
#define NOTIFICATION_REPORT_FIRST_V4                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V4                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V4                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V4                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V4                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V4                                                     0x00
#define NOTIFICATION_SET_SMOKE_V4                                                        0x01
#define NOTIFICATION_SET_CO_V4                                                           0x02
#define NOTIFICATION_SET_CO2_V4                                                          0x03
#define NOTIFICATION_SET_HEAT_V4                                                         0x04
#define NOTIFICATION_SET_WATER_V4                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V4                                               0x06
#define NOTIFICATION_SET_HOME_SECURITY_V4                                                0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V4                                             0x08
#define NOTIFICATION_SET_SYSTEM_V4                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V4                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V4                                                        0x0B
#define NOTIFICATION_SET_APPLIANCE_V4                                                    0x0C
#define NOTIFICATION_SET_HOME_HEALTH_V4                                                  0x0D
#define NOTIFICATION_SET_FIRST_V4                                                        0xFF
#define NOTIFICATION_SET_OFF_V4                                                          0x00
#define NOTIFICATION_SET_NO_PENDING_NOTIFICATIONS_V4                                     0xFE
#define NOTIFICATION_SET_ON_V4                                                           0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V4            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V4                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V4                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V4                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V4                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V4                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V4                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V4                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V4                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V4                                            0x06
#define EVENT_SUPPORTED_GET_HOME_SECURITY_V4                                             0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V4                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V4                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V4                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V4                                                     0x0B
#define EVENT_SUPPORTED_GET_APPLIANCE_V4                                                 0x0C
#define EVENT_SUPPORTED_GET_HOME_HEALTH_V4                                               0x0D
#define EVENT_SUPPORTED_GET_FIRST_V4                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V4                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V4                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V4                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V4                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V4                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V4                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V4                                         0x06
#define EVENT_SUPPORTED_REPORT_HOME_SECURITY_V4                                          0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V4                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V4                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V4                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V4                                                  0x0B
#define EVENT_SUPPORTED_REPORT_APPLIANCE_V4                                              0x0C
#define EVENT_SUPPORTED_REPORT_HOME_HEALTH_V4                                            0x0D
#define EVENT_SUPPORTED_REPORT_FIRST_V4                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V4                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V4                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                             0x05

/* Notification command class commands */
#define NOTIFICATION_VERSION_V5                                                          0x05
#define NOTIFICATION_GET_V5                                                              0x04
#define NOTIFICATION_REPORT_V5                                                           0x05
#define NOTIFICATION_SET_V5                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V5                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V5                                                 0x08
#define EVENT_SUPPORTED_GET_V5                                                           0x01
#define EVENT_SUPPORTED_REPORT_V5                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V5                                                     0x00
#define NOTIFICATION_GET_SMOKE_V5                                                        0x01
#define NOTIFICATION_GET_CO_V5                                                           0x02
#define NOTIFICATION_GET_CO2_V5                                                          0x03
#define NOTIFICATION_GET_HEAT_V5                                                         0x04
#define NOTIFICATION_GET_WATER_V5                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V5                                               0x06
#define NOTIFICATION_GET_HOME_SECURITY_V5                                                0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V5                                             0x08
#define NOTIFICATION_GET_SYSTEM_V5                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V5                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V5                                                        0x0B
#define NOTIFICATION_GET_APPLIANCE_V5                                                    0x0C
#define NOTIFICATION_GET_HOME_HEALTH_V5                                                  0x0D
#define NOTIFICATION_GET_FIRST_V5                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_OFF_V5                                                       0x00
#define NOTIFICATION_REPORT_NO_PENDING_NOTIFICATIONS_V5                                  0xFE
#define NOTIFICATION_REPORT_ON_V5                                                        0xFF
#define NOTIFICATION_REPORT_RESERVED_V5                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V5                                                     0x01
#define NOTIFICATION_REPORT_CO_V5                                                        0x02
#define NOTIFICATION_REPORT_CO2_V5                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V5                                                      0x04
#define NOTIFICATION_REPORT_WATER_V5                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V5                                            0x06
#define NOTIFICATION_REPORT_HOME_SECURITY_V5                                             0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V5                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V5                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V5                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V5                                                     0x0B
#define NOTIFICATION_REPORT_APPLIANCE_V5                                                 0x0C
#define NOTIFICATION_REPORT_HOME_HEALTH_V5                                               0x0D
#define NOTIFICATION_REPORT_FIRST_V5                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V5                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V5                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V5                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V5                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V5                                                     0x00
#define NOTIFICATION_SET_SMOKE_V5                                                        0x01
#define NOTIFICATION_SET_CO_V5                                                           0x02
#define NOTIFICATION_SET_CO2_V5                                                          0x03
#define NOTIFICATION_SET_HEAT_V5                                                         0x04
#define NOTIFICATION_SET_WATER_V5                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V5                                               0x06
#define NOTIFICATION_SET_HOME_SECURITY_V5                                                0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V5                                             0x08
#define NOTIFICATION_SET_SYSTEM_V5                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V5                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V5                                                        0x0B
#define NOTIFICATION_SET_APPLIANCE_V5                                                    0x0C
#define NOTIFICATION_SET_HOME_HEALTH_V5                                                  0x0D
#define NOTIFICATION_SET_FIRST_V5                                                        0xFF
#define NOTIFICATION_SET_OFF_V5                                                          0x00
#define NOTIFICATION_SET_NO_PENDING_NOTIFICATIONS_V5                                     0xFE
#define NOTIFICATION_SET_ON_V5                                                           0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V5            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V5                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V5                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V5                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V5                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V5                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V5                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V5                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V5                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V5                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V5                                            0x06
#define EVENT_SUPPORTED_GET_HOME_SECURITY_V5                                             0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V5                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V5                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V5                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V5                                                     0x0B
#define EVENT_SUPPORTED_GET_APPLIANCE_V5                                                 0x0C
#define EVENT_SUPPORTED_GET_HOME_HEALTH_V5                                               0x0D
#define EVENT_SUPPORTED_GET_FIRST_V5                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V5                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V5                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V5                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V5                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V5                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V5                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V5                                         0x06
#define EVENT_SUPPORTED_REPORT_HOME_SECURITY_V5                                          0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V5                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V5                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V5                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V5                                                  0x0B
#define EVENT_SUPPORTED_REPORT_APPLIANCE_V5                                              0x0C
#define EVENT_SUPPORTED_REPORT_HOME_HEALTH_V5                                            0x0D
#define EVENT_SUPPORTED_REPORT_FIRST_V5                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V5                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V5                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V5                             0x05

/* Notification command class commands */
#define NOTIFICATION_VERSION_V6                                                          0x06
#define NOTIFICATION_GET_V6                                                              0x04
#define NOTIFICATION_REPORT_V6                                                           0x05
#define NOTIFICATION_SET_V6                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V6                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V6                                                 0x08
#define EVENT_SUPPORTED_GET_V6                                                           0x01
#define EVENT_SUPPORTED_REPORT_V6                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V6                                                     0x00
#define NOTIFICATION_GET_SMOKE_V6                                                        0x01
#define NOTIFICATION_GET_CO_V6                                                           0x02
#define NOTIFICATION_GET_CO2_V6                                                          0x03
#define NOTIFICATION_GET_HEAT_V6                                                         0x04
#define NOTIFICATION_GET_WATER_V6                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V6                                               0x06
#define NOTIFICATION_GET_HOME_SECURITY_V6                                                0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V6                                             0x08
#define NOTIFICATION_GET_SYSTEM_V6                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V6                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V6                                                        0x0B
#define NOTIFICATION_GET_APPLIANCE_V6                                                    0x0C
#define NOTIFICATION_GET_HOME_HEALTH_V6                                                  0x0D
#define NOTIFICATION_GET_SIREN_V6                                                        0x0E
#define NOTIFICATION_GET_FIRST_V6                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_OFF_V6                                                       0x00
#define NOTIFICATION_REPORT_NO_PENDING_NOTIFICATIONS_V6                                  0xFE
#define NOTIFICATION_REPORT_ON_V6                                                        0xFF
#define NOTIFICATION_REPORT_RESERVED_V6                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V6                                                     0x01
#define NOTIFICATION_REPORT_CO_V6                                                        0x02
#define NOTIFICATION_REPORT_CO2_V6                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V6                                                      0x04
#define NOTIFICATION_REPORT_WATER_V6                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V6                                            0x06
#define NOTIFICATION_REPORT_HOME_SECURITY_V6                                             0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V6                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V6                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V6                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V6                                                     0x0B
#define NOTIFICATION_REPORT_APPLIANCE_V6                                                 0x0C
#define NOTIFICATION_REPORT_HOME_HEALTH_V6                                               0x0D
#define NOTIFICATION_REPORT_SIREN_V6                                                     0x0E
#define NOTIFICATION_REPORT_FIRST_V6                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V6                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V6                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V6                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V6                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V6                                                     0x00
#define NOTIFICATION_SET_SMOKE_V6                                                        0x01
#define NOTIFICATION_SET_CO_V6                                                           0x02
#define NOTIFICATION_SET_CO2_V6                                                          0x03
#define NOTIFICATION_SET_HEAT_V6                                                         0x04
#define NOTIFICATION_SET_WATER_V6                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V6                                               0x06
#define NOTIFICATION_SET_HOME_SECURITY_V6                                                0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V6                                             0x08
#define NOTIFICATION_SET_SYSTEM_V6                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V6                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V6                                                        0x0B
#define NOTIFICATION_SET_APPLIANCE_V6                                                    0x0C
#define NOTIFICATION_SET_HOME_HEALTH_V6                                                  0x0D
#define NOTIFICATION_SET_SIREN_V6                                                        0x0E
#define NOTIFICATION_SET_FIRST_V6                                                        0xFF
#define NOTIFICATION_SET_OFF_V6                                                          0x00
#define NOTIFICATION_SET_NO_PENDING_NOTIFICATIONS_V6                                     0xFE
#define NOTIFICATION_SET_ON_V6                                                           0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V6            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V6                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V6                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V6                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V6                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V6                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V6                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V6                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V6                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V6                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V6                                            0x06
#define EVENT_SUPPORTED_GET_HOME_SECURITY_V6                                             0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V6                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V6                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V6                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V6                                                     0x0B
#define EVENT_SUPPORTED_GET_APPLIANCE_V6                                                 0x0C
#define EVENT_SUPPORTED_GET_HOME_HEALTH_V6                                               0x0D
#define EVENT_SUPPORTED_GET_SIREN_V6                                                     0x0E
#define EVENT_SUPPORTED_GET_FIRST_V6                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V6                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V6                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V6                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V6                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V6                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V6                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V6                                         0x06
#define EVENT_SUPPORTED_REPORT_HOME_SECURITY_V6                                          0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V6                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V6                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V6                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V6                                                  0x0B
#define EVENT_SUPPORTED_REPORT_APPLIANCE_V6                                              0x0C
#define EVENT_SUPPORTED_REPORT_HOME_HEALTH_V6                                            0x0D
#define EVENT_SUPPORTED_REPORT_SIREN_V6                                                  0x0E
#define EVENT_SUPPORTED_REPORT_FIRST_V6                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V6                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V6                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V6                             0x05

/* Notification command class commands */
#define NOTIFICATION_VERSION_V7                                                          0x07
#define NOTIFICATION_GET_V7                                                              0x04
#define NOTIFICATION_REPORT_V7                                                           0x05
#define NOTIFICATION_SET_V7                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V7                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V7                                                 0x08
#define EVENT_SUPPORTED_GET_V7                                                           0x01
#define EVENT_SUPPORTED_REPORT_V7                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V7                                                     0x00
#define NOTIFICATION_GET_SMOKE_V7                                                        0x01
#define NOTIFICATION_GET_CO_V7                                                           0x02
#define NOTIFICATION_GET_CO2_V7                                                          0x03
#define NOTIFICATION_GET_HEAT_V7                                                         0x04
#define NOTIFICATION_GET_WATER_V7                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V7                                               0x06
#define NOTIFICATION_GET_HOME_SECURITY_V7                                                0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V7                                             0x08
#define NOTIFICATION_GET_SYSTEM_V7                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V7                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V7                                                        0x0B
#define NOTIFICATION_GET_APPLIANCE_V7                                                    0x0C
#define NOTIFICATION_GET_HOME_HEALTH_V7                                                  0x0D
#define NOTIFICATION_GET_SIREN_V7                                                        0x0E
#define NOTIFICATION_GET_WATER_VALVE_V7                                                  0x0F
#define NOTIFICATION_GET_WEATHER_ALARM_V7                                                0x10
#define NOTIFICATION_GET_IRRIGATION_V7                                                   0x11
#define NOTIFICATION_GET_GAS_ALARM_V7                                                    0x12
#define NOTIFICATION_GET_FIRST_V7                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_OFF_V7                                                       0x00
#define NOTIFICATION_REPORT_NO_PENDING_NOTIFICATIONS_V7                                  0xFE
#define NOTIFICATION_REPORT_ON_V7                                                        0xFF
#define NOTIFICATION_REPORT_RESERVED_V7                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V7                                                     0x01
#define NOTIFICATION_REPORT_CO_V7                                                        0x02
#define NOTIFICATION_REPORT_CO2_V7                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V7                                                      0x04
#define NOTIFICATION_REPORT_WATER_V7                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V7                                            0x06
#define NOTIFICATION_REPORT_HOME_SECURITY_V7                                             0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V7                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V7                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V7                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V7                                                     0x0B
#define NOTIFICATION_REPORT_APPLIANCE_V7                                                 0x0C
#define NOTIFICATION_REPORT_HOME_HEALTH_V7                                               0x0D
#define NOTIFICATION_REPORT_SIREN_V7                                                     0x0E
#define NOTIFICATION_REPORT_WATER_VALVE_V7                                               0x0F
#define NOTIFICATION_REPORT_WEATHER_ALARM_V7                                             0x10
#define NOTIFICATION_REPORT_IRRIGATION_V7                                                0x11
#define NOTIFICATION_REPORT_GAS_ALARM_V7                                                 0x12
#define NOTIFICATION_REPORT_FIRST_V7                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V7                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V7                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V7                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V7                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V7                                                     0x00
#define NOTIFICATION_SET_SMOKE_V7                                                        0x01
#define NOTIFICATION_SET_CO_V7                                                           0x02
#define NOTIFICATION_SET_CO2_V7                                                          0x03
#define NOTIFICATION_SET_HEAT_V7                                                         0x04
#define NOTIFICATION_SET_WATER_V7                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V7                                               0x06
#define NOTIFICATION_SET_HOME_SECURITY_V7                                                0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V7                                             0x08
#define NOTIFICATION_SET_SYSTEM_V7                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V7                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V7                                                        0x0B
#define NOTIFICATION_SET_APPLIANCE_V7                                                    0x0C
#define NOTIFICATION_SET_HOME_HEALTH_V7                                                  0x0D
#define NOTIFICATION_SET_SIREN_V7                                                        0x0E
#define NOTIFICATION_SET_WATER_VALVE_V7                                                  0x0F
#define NOTIFICATION_SET_WEATHER_ALARM_V7                                                0x10
#define NOTIFICATION_SET_IRRIGATION_V7                                                   0x11
#define NOTIFICATION_SET_GAS_ALARM_V7                                                    0x12
#define NOTIFICATION_SET_FIRST_V7                                                        0xFF
#define NOTIFICATION_SET_OFF_V7                                                          0x00
#define NOTIFICATION_SET_NO_PENDING_NOTIFICATIONS_V7                                     0xFE
#define NOTIFICATION_SET_ON_V7                                                           0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V7            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V7                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V7                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V7                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V7                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V7                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V7                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V7                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V7                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V7                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V7                                            0x06
#define EVENT_SUPPORTED_GET_HOME_SECURITY_V7                                             0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V7                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V7                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V7                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V7                                                     0x0B
#define EVENT_SUPPORTED_GET_APPLIANCE_V7                                                 0x0C
#define EVENT_SUPPORTED_GET_HOME_HEALTH_V7                                               0x0D
#define EVENT_SUPPORTED_GET_SIREN_V7                                                     0x0E
#define EVENT_SUPPORTED_GET_WATER_VALVE_V7                                               0x0F
#define EVENT_SUPPORTED_GET_WEATHER_ALARM_V7                                             0x10
#define EVENT_SUPPORTED_GET_IRRIGATION_V7                                                0x11
#define EVENT_SUPPORTED_GET_GAS_ALARM_V7                                                 0x12
#define EVENT_SUPPORTED_GET_FIRST_V7                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V7                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V7                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V7                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V7                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V7                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V7                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V7                                         0x06
#define EVENT_SUPPORTED_REPORT_HOME_SECURITY_V7                                          0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V7                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V7                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V7                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V7                                                  0x0B
#define EVENT_SUPPORTED_REPORT_APPLIANCE_V7                                              0x0C
#define EVENT_SUPPORTED_REPORT_HOME_HEALTH_V7                                            0x0D
#define EVENT_SUPPORTED_REPORT_SIREN_V7                                                  0x0E
#define EVENT_SUPPORTED_REPORT_WATER_VALVE_V7                                            0x0F
#define EVENT_SUPPORTED_REPORT_WEATHER_ALARM_V7                                          0x10
#define EVENT_SUPPORTED_REPORT_IRRIGATION_V7                                             0x11
#define EVENT_SUPPORTED_REPORT_GAS_ALARM_V7                                              0x12
#define EVENT_SUPPORTED_REPORT_FIRST_V7                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V7                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V7                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V7                             0x05

/* Notification command class commands */
#define NOTIFICATION_VERSION_V8                                                          0x08
#define NOTIFICATION_GET_V8                                                              0x04
#define NOTIFICATION_REPORT_V8                                                           0x05
#define NOTIFICATION_SET_V8                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V8                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V8                                                 0x08
#define EVENT_SUPPORTED_GET_V8                                                           0x01
#define EVENT_SUPPORTED_REPORT_V8                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V8                                                     0x00
#define NOTIFICATION_GET_SMOKE_V8                                                        0x01
#define NOTIFICATION_GET_CO_V8                                                           0x02
#define NOTIFICATION_GET_CO2_V8                                                          0x03
#define NOTIFICATION_GET_HEAT_V8                                                         0x04
#define NOTIFICATION_GET_WATER_V8                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V8                                               0x06
#define NOTIFICATION_GET_HOME_SECURITY_V8                                                0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V8                                             0x08
#define NOTIFICATION_GET_SYSTEM_V8                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V8                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V8                                                        0x0B
#define NOTIFICATION_GET_APPLIANCE_V8                                                    0x0C
#define NOTIFICATION_GET_HOME_HEALTH_V8                                                  0x0D
#define NOTIFICATION_GET_SIREN_V8                                                        0x0E
#define NOTIFICATION_GET_WATER_VALVE_V8                                                  0x0F
#define NOTIFICATION_GET_WEATHER_ALARM_V8                                                0x10
#define NOTIFICATION_GET_IRRIGATION_V8                                                   0x11
#define NOTIFICATION_GET_GAS_ALARM_V8                                                    0x12
#define NOTIFICATION_GET_PEST_CONTROL_V8                                                 0x13
#define NOTIFICATION_GET_LIGHT_SENSOR_V8                                                 0x14
#define NOTIFICATION_GET_WATER_QUALITY_MONITORING_V8                                     0x15
#define NOTIFICATION_GET_HOME_MONITORING_V8                                              0x16
#define NOTIFICATION_GET_FIRST_V8                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_OFF_V8                                                       0x00
#define NOTIFICATION_REPORT_NO_PENDING_NOTIFICATIONS_V8                                  0xFE
#define NOTIFICATION_REPORT_ON_V8                                                        0xFF
#define NOTIFICATION_REPORT_RESERVED_V8                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V8                                                     0x01
#define NOTIFICATION_REPORT_CO_V8                                                        0x02
#define NOTIFICATION_REPORT_CO2_V8                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V8                                                      0x04
#define NOTIFICATION_REPORT_WATER_V8                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V8                                            0x06
#define NOTIFICATION_REPORT_HOME_SECURITY_V8                                             0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V8                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V8                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V8                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V8                                                     0x0B
#define NOTIFICATION_REPORT_APPLIANCE_V8                                                 0x0C
#define NOTIFICATION_REPORT_HOME_HEALTH_V8                                               0x0D
#define NOTIFICATION_REPORT_SIREN_V8                                                     0x0E
#define NOTIFICATION_REPORT_WATER_VALVE_V8                                               0x0F
#define NOTIFICATION_REPORT_WEATHER_ALARM_V8                                             0x10
#define NOTIFICATION_REPORT_IRRIGATION_V8                                                0x11
#define NOTIFICATION_REPORT_GAS_ALARM_V8                                                 0x12
#define NOTIFICATION_REPORT_PEST_CONTROL_V8                                              0x13
#define NOTIFICATION_REPORT_LIGHT_SENSOR_V8                                              0x14
#define NOTIFICATION_REPORT_WATER_QUALITY_MONITORING_V8                                  0x15
#define NOTIFICATION_REPORT_HOME_MONITORING_V8                                           0x16
#define NOTIFICATION_REPORT_FIRST_V8                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V8                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V8                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V8                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V8                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V8                                                     0x00
#define NOTIFICATION_SET_SMOKE_V8                                                        0x01
#define NOTIFICATION_SET_CO_V8                                                           0x02
#define NOTIFICATION_SET_CO2_V8                                                          0x03
#define NOTIFICATION_SET_HEAT_V8                                                         0x04
#define NOTIFICATION_SET_WATER_V8                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V8                                               0x06
#define NOTIFICATION_SET_HOME_SECURITY_V8                                                0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V8                                             0x08
#define NOTIFICATION_SET_SYSTEM_V8                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V8                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V8                                                        0x0B
#define NOTIFICATION_SET_APPLIANCE_V8                                                    0x0C
#define NOTIFICATION_SET_HOME_HEALTH_V8                                                  0x0D
#define NOTIFICATION_SET_SIREN_V8                                                        0x0E
#define NOTIFICATION_SET_WATER_VALVE_V8                                                  0x0F
#define NOTIFICATION_SET_WEATHER_ALARM_V8                                                0x10
#define NOTIFICATION_SET_IRRIGATION_V8                                                   0x11
#define NOTIFICATION_SET_GAS_ALARM_V8                                                    0x12
#define NOTIFICATION_SET_PEST_CONTROL_V8                                                 0x13
#define NOTIFICATION_SET_LIGHT_SENSOR_V8                                                 0x14
#define NOTIFICATION_SET_WATER_QUALITY_MONITORING_V8                                     0x15
#define NOTIFICATION_SET_HOME_MONITORING_V8                                              0x16
#define NOTIFICATION_SET_FIRST_V8                                                        0xFF
#define NOTIFICATION_SET_OFF_V8                                                          0x00
#define NOTIFICATION_SET_NO_PENDING_NOTIFICATIONS_V8                                     0xFE
#define NOTIFICATION_SET_ON_V8                                                           0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V8            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V8                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V8                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V8                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V8                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V8                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V8                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V8                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V8                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V8                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V8                                            0x06
#define EVENT_SUPPORTED_GET_HOME_SECURITY_V8                                             0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V8                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V8                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V8                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V8                                                     0x0B
#define EVENT_SUPPORTED_GET_APPLIANCE_V8                                                 0x0C
#define EVENT_SUPPORTED_GET_HOME_HEALTH_V8                                               0x0D
#define EVENT_SUPPORTED_GET_SIREN_V8                                                     0x0E
#define EVENT_SUPPORTED_GET_WATER_VALVE_V8                                               0x0F
#define EVENT_SUPPORTED_GET_WEATHER_ALARM_V8                                             0x10
#define EVENT_SUPPORTED_GET_IRRIGATION_V8                                                0x11
#define EVENT_SUPPORTED_GET_GAS_ALARM_V8                                                 0x12
#define EVENT_SUPPORTED_GET_PEST_CONTROL_V8                                              0x13
#define EVENT_SUPPORTED_GET_LIGHT_SENSOR_V8                                              0x14
#define EVENT_SUPPORTED_GET_WATER_QUALITY_MONITORING_V8                                  0x15
#define EVENT_SUPPORTED_GET_HOME_MONITORING_V8                                           0x16
#define EVENT_SUPPORTED_GET_FIRST_V8                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V8                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V8                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V8                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V8                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V8                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V8                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V8                                         0x06
#define EVENT_SUPPORTED_REPORT_HOME_SECURITY_V8                                          0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V8                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V8                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V8                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V8                                                  0x0B
#define EVENT_SUPPORTED_REPORT_APPLIANCE_V8                                              0x0C
#define EVENT_SUPPORTED_REPORT_HOME_HEALTH_V8                                            0x0D
#define EVENT_SUPPORTED_REPORT_SIREN_V8                                                  0x0E
#define EVENT_SUPPORTED_REPORT_WATER_VALVE_V8                                            0x0F
#define EVENT_SUPPORTED_REPORT_WEATHER_ALARM_V8                                          0x10
#define EVENT_SUPPORTED_REPORT_IRRIGATION_V8                                             0x11
#define EVENT_SUPPORTED_REPORT_GAS_ALARM_V8                                              0x12
#define EVENT_SUPPORTED_REPORT_PEST_CONTROL_V8                                           0x13
#define EVENT_SUPPORTED_REPORT_LIGHT_SENSOR_V8                                           0x14
#define EVENT_SUPPORTED_REPORT_WATER_QUALITY_MONITORING_V8                               0x15
#define EVENT_SUPPORTED_REPORT_HOME_MONITORING_V8                                        0x16
#define EVENT_SUPPORTED_REPORT_FIRST_V8                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V8                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V8                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V8                             0x05

/* Notification command class commands */
#define NOTIFICATION_VERSION_V9                                                          0x09
#define NOTIFICATION_GET_V9                                                              0x04
#define NOTIFICATION_REPORT_V9                                                           0x05
#define NOTIFICATION_SET_V9                                                              0x06
#define NOTIFICATION_SUPPORTED_GET_V9                                                    0x07
#define NOTIFICATION_SUPPORTED_REPORT_V9                                                 0x08
#define EVENT_SUPPORTED_GET_V9                                                           0x01
#define EVENT_SUPPORTED_REPORT_V9                                                        0x02
/* Values used for Notification Get command */
#define NOTIFICATION_GET_RESERVED_V9                                                     0x00
#define NOTIFICATION_GET_SMOKE_V9                                                        0x01
#define NOTIFICATION_GET_CO_V9                                                           0x02
#define NOTIFICATION_GET_CO2_V9                                                          0x03
#define NOTIFICATION_GET_HEAT_V9                                                         0x04
#define NOTIFICATION_GET_WATER_V9                                                        0x05
#define NOTIFICATION_GET_ACCESS_CONTROL_V9                                               0x06
#define NOTIFICATION_GET_HOME_SECURITY_V9                                                0x07
#define NOTIFICATION_GET_POWER_MANAGEMENT_V9                                             0x08
#define NOTIFICATION_GET_SYSTEM_V9                                                       0x09
#define NOTIFICATION_GET_EMERGENCY_V9                                                    0x0A
#define NOTIFICATION_GET_CLOCK_V9                                                        0x0B
#define NOTIFICATION_GET_APPLIANCE_V9                                                    0x0C
#define NOTIFICATION_GET_HOME_HEALTH_V9                                                  0x0D
#define NOTIFICATION_GET_SIREN_V9                                                        0x0E
#define NOTIFICATION_GET_WATER_VALVE_V9                                                  0x0F
#define NOTIFICATION_GET_WEATHER_ALARM_V9                                                0x10
#define NOTIFICATION_GET_IRRIGATION_V9                                                   0x11
#define NOTIFICATION_GET_GAS_ALARM_V9                                                    0x12
#define NOTIFICATION_GET_PEST_CONTROL_V9                                                 0x13
#define NOTIFICATION_GET_LIGHT_SENSOR_V9                                                 0x14
#define NOTIFICATION_GET_WATER_QUALITY_MONITORING_V9                                     0x15
#define NOTIFICATION_GET_HOME_MONITORING_V9                                              0x16
#define NOTIFICATION_GET_FIRST_V9                                                        0xFF
/* Values used for Notification Report command */
#define NOTIFICATION_REPORT_OFF_V9                                                       0x00
#define NOTIFICATION_REPORT_NO_PENDING_NOTIFICATIONS_V9                                  0xFE
#define NOTIFICATION_REPORT_ON_V9                                                        0xFF
#define NOTIFICATION_REPORT_RESERVED_V9                                                  0x00
#define NOTIFICATION_REPORT_SMOKE_V9                                                     0x01
#define NOTIFICATION_REPORT_CO_V9                                                        0x02
#define NOTIFICATION_REPORT_CO2_V9                                                       0x03
#define NOTIFICATION_REPORT_HEAT_V9                                                      0x04
#define NOTIFICATION_REPORT_WATER_V9                                                     0x05
#define NOTIFICATION_REPORT_ACCESS_CONTROL_V9                                            0x06
#define NOTIFICATION_REPORT_HOME_SECURITY_V9                                             0x07
#define NOTIFICATION_REPORT_POWER_MANAGEMENT_V9                                          0x08
#define NOTIFICATION_REPORT_SYSTEM_V9                                                    0x09
#define NOTIFICATION_REPORT_EMERGENCY_V9                                                 0x0A
#define NOTIFICATION_REPORT_CLOCK_V9                                                     0x0B
#define NOTIFICATION_REPORT_APPLIANCE_V9                                                 0x0C
#define NOTIFICATION_REPORT_HOME_HEALTH_V9                                               0x0D
#define NOTIFICATION_REPORT_SIREN_V9                                                     0x0E
#define NOTIFICATION_REPORT_WATER_VALVE_V9                                               0x0F
#define NOTIFICATION_REPORT_WEATHER_ALARM_V9                                             0x10
#define NOTIFICATION_REPORT_IRRIGATION_V9                                                0x11
#define NOTIFICATION_REPORT_GAS_ALARM_V9                                                 0x12
#define NOTIFICATION_REPORT_PEST_CONTROL_V9                                              0x13
#define NOTIFICATION_REPORT_LIGHT_SENSOR_V9                                              0x14
#define NOTIFICATION_REPORT_WATER_QUALITY_MONITORING_V9                                  0x15
#define NOTIFICATION_REPORT_HOME_MONITORING_V9                                           0x16
#define NOTIFICATION_REPORT_FIRST_V9                                                     0xFF
#define NOTIFICATION_REPORT_PROPERTIES1_EVENT_PARAMETERS_LENGTH_MASK_V9                  0x1F
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_MASK_V9                                0x60
#define NOTIFICATION_REPORT_PROPERTIES1_RESERVED2_SHIFT_V9                               0x05
#define NOTIFICATION_REPORT_PROPERTIES1_SEQUENCE_BIT_MASK_V9                             0x80
/* Values used for Notification Set command */
#define NOTIFICATION_SET_RESERVED_V9                                                     0x00
#define NOTIFICATION_SET_SMOKE_V9                                                        0x01
#define NOTIFICATION_SET_CO_V9                                                           0x02
#define NOTIFICATION_SET_CO2_V9                                                          0x03
#define NOTIFICATION_SET_HEAT_V9                                                         0x04
#define NOTIFICATION_SET_WATER_V9                                                        0x05
#define NOTIFICATION_SET_ACCESS_CONTROL_V9                                               0x06
#define NOTIFICATION_SET_HOME_SECURITY_V9                                                0x07
#define NOTIFICATION_SET_POWER_MANAGEMENT_V9                                             0x08
#define NOTIFICATION_SET_SYSTEM_V9                                                       0x09
#define NOTIFICATION_SET_EMERGENCY_V9                                                    0x0A
#define NOTIFICATION_SET_CLOCK_V9                                                        0x0B
#define NOTIFICATION_SET_APPLIANCE_V9                                                    0x0C
#define NOTIFICATION_SET_HOME_HEALTH_V9                                                  0x0D
#define NOTIFICATION_SET_SIREN_V9                                                        0x0E
#define NOTIFICATION_SET_WATER_VALVE_V9                                                  0x0F
#define NOTIFICATION_SET_WEATHER_ALARM_V9                                                0x10
#define NOTIFICATION_SET_IRRIGATION_V9                                                   0x11
#define NOTIFICATION_SET_GAS_ALARM_V9                                                    0x12
#define NOTIFICATION_SET_PEST_CONTROL_V9                                                 0x13
#define NOTIFICATION_SET_LIGHT_SENSOR_V9                                                 0x14
#define NOTIFICATION_SET_WATER_QUALITY_MONITORING_V9                                     0x15
#define NOTIFICATION_SET_HOME_MONITORING_V9                                              0x16
#define NOTIFICATION_SET_FIRST_V9                                                        0xFF
#define NOTIFICATION_SET_OFF_V9                                                          0x00
#define NOTIFICATION_SET_NO_PENDING_NOTIFICATIONS_V9                                     0xFE
#define NOTIFICATION_SET_ON_V9                                                           0xFF
/* Values used for Notification Supported Report command */
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V9            0x1F
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V9                       0x60
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V9                      0x05
#define NOTIFICATION_SUPPORTED_REPORT_PROPERTIES1_V1_ALARM_BIT_MASK_V9                   0x80
/* Values used for Event Supported Get command */
#define EVENT_SUPPORTED_GET_RESERVED_V9                                                  0x00
#define EVENT_SUPPORTED_GET_SMOKE_V9                                                     0x01
#define EVENT_SUPPORTED_GET_CO_V9                                                        0x02
#define EVENT_SUPPORTED_GET_CO2_V9                                                       0x03
#define EVENT_SUPPORTED_GET_HEAT_V9                                                      0x04
#define EVENT_SUPPORTED_GET_WATER_V9                                                     0x05
#define EVENT_SUPPORTED_GET_ACCESS_CONTROL_V9                                            0x06
#define EVENT_SUPPORTED_GET_HOME_SECURITY_V9                                             0x07
#define EVENT_SUPPORTED_GET_POWER_MANAGEMENT_V9                                          0x08
#define EVENT_SUPPORTED_GET_SYSTEM_V9                                                    0x09
#define EVENT_SUPPORTED_GET_EMERGENCY_V9                                                 0x0A
#define EVENT_SUPPORTED_GET_CLOCK_V9                                                     0x0B
#define EVENT_SUPPORTED_GET_APPLIANCE_V9                                                 0x0C
#define EVENT_SUPPORTED_GET_HOME_HEALTH_V9                                               0x0D
#define EVENT_SUPPORTED_GET_SIREN_V9                                                     0x0E
#define EVENT_SUPPORTED_GET_WATER_VALVE_V9                                               0x0F
#define EVENT_SUPPORTED_GET_WEATHER_ALARM_V9                                             0x10
#define EVENT_SUPPORTED_GET_IRRIGATION_V9                                                0x11
#define EVENT_SUPPORTED_GET_GAS_ALARM_V9                                                 0x12
#define EVENT_SUPPORTED_GET_PEST_CONTROL_V9                                              0x13
#define EVENT_SUPPORTED_GET_LIGHT_SENSOR_V9                                              0x14
#define EVENT_SUPPORTED_GET_WATER_QUALITY_MONITORING_V9                                  0x15
#define EVENT_SUPPORTED_GET_HOME_MONITORING_V9                                           0x16
#define EVENT_SUPPORTED_GET_FIRST_V9                                                     0xFF
/* Values used for Event Supported Report command */
#define EVENT_SUPPORTED_REPORT_RESERVED_V9                                               0x00
#define EVENT_SUPPORTED_REPORT_SMOKE_V9                                                  0x01
#define EVENT_SUPPORTED_REPORT_CO_V9                                                     0x02
#define EVENT_SUPPORTED_REPORT_CO2_V9                                                    0x03
#define EVENT_SUPPORTED_REPORT_HEAT_V9                                                   0x04
#define EVENT_SUPPORTED_REPORT_WATER_V9                                                  0x05
#define EVENT_SUPPORTED_REPORT_ACCESS_CONTROL_V9                                         0x06
#define EVENT_SUPPORTED_REPORT_HOME_SECURITY_V9                                          0x07
#define EVENT_SUPPORTED_REPORT_POWER_MANAGEMENT_V9                                       0x08
#define EVENT_SUPPORTED_REPORT_SYSTEM_V9                                                 0x09
#define EVENT_SUPPORTED_REPORT_EMERGENCY_V9                                              0x0A
#define EVENT_SUPPORTED_REPORT_CLOCK_V9                                                  0x0B
#define EVENT_SUPPORTED_REPORT_APPLIANCE_V9                                              0x0C
#define EVENT_SUPPORTED_REPORT_HOME_HEALTH_V9                                            0x0D
#define EVENT_SUPPORTED_REPORT_SIREN_V9                                                  0x0E
#define EVENT_SUPPORTED_REPORT_WATER_VALVE_V9                                            0x0F
#define EVENT_SUPPORTED_REPORT_WEATHER_ALARM_V9                                          0x10
#define EVENT_SUPPORTED_REPORT_IRRIGATION_V9                                             0x11
#define EVENT_SUPPORTED_REPORT_GAS_ALARM_V9                                              0x12
#define EVENT_SUPPORTED_REPORT_PEST_CONTROL_V9                                           0x13
#define EVENT_SUPPORTED_REPORT_LIGHT_SENSOR_V9                                           0x14
#define EVENT_SUPPORTED_REPORT_WATER_QUALITY_MONITORING_V9                               0x15
#define EVENT_SUPPORTED_REPORT_HOME_MONITORING_V9                                        0x16
#define EVENT_SUPPORTED_REPORT_FIRST_V9                                                  0xFF
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASKS_MASK_V9                   0x1F
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V9                              0xE0
#define EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V9                             0x05

/* Application Status command class commands */
#define APPLICATION_STATUS_VERSION                                                       0x01
#define APPLICATION_BUSY                                                                 0x01
#define APPLICATION_REJECTED_REQUEST                                                     0x02
/* Values used for Application Busy command */
#define APPLICATION_BUSY_TRY_AGAIN_LATER                                                 0x00
#define APPLICATION_BUSY_TRY_AGAIN_IN_WAIT_TIME_SECONDS                                  0x01
#define APPLICATION_BUSY_REQUEST_QUEUED_EXECUTED_LATER                                   0x02

/* Association Command Configuration command class commands */
#define ASSOCIATION_COMMAND_CONFIGURATION_VERSION                                        0x01
#define COMMAND_CONFIGURATION_GET                                                        0x04
#define COMMAND_CONFIGURATION_REPORT                                                     0x05
#define COMMAND_CONFIGURATION_SET                                                        0x03
#define COMMAND_RECORDS_SUPPORTED_GET                                                    0x01
#define COMMAND_RECORDS_SUPPORTED_REPORT                                                 0x02
/* Values used for Command Configuration Report command */
#define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK                  0x0F
#define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                           0x70
#define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                          0x04
#define COMMAND_CONFIGURATION_REPORT_PROPERTIES1_FIRST_BIT_MASK                          0x80
/* Values used for Command Records Supported Report command */
#define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_CONF_CMD_BIT_MASK                   0x01
#define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_V_C_BIT_MASK                        0x02
#define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_MAX_COMMAND_LENGTH_MASK             0xFC
#define COMMAND_RECORDS_SUPPORTED_REPORT_PROPERTIES1_MAX_COMMAND_LENGTH_SHIFT            0x02

/* Association command class commands */
#define ASSOCIATION_VERSION                                                              0x01
#define ASSOCIATION_GET                                                                  0x02
#define ASSOCIATION_GROUPINGS_GET                                                        0x05
#define ASSOCIATION_GROUPINGS_REPORT                                                     0x06
#define ASSOCIATION_REMOVE                                                               0x04
#define ASSOCIATION_REPORT                                                               0x03
#define ASSOCIATION_SET                                                                  0x01

/* Association command class commands */
#define ASSOCIATION_VERSION_V2                                                           0x02
#define ASSOCIATION_GET_V2                                                               0x02
#define ASSOCIATION_GROUPINGS_GET_V2                                                     0x05
#define ASSOCIATION_GROUPINGS_REPORT_V2                                                  0x06
#define ASSOCIATION_REMOVE_V2                                                            0x04
#define ASSOCIATION_REPORT_V2                                                            0x03
#define ASSOCIATION_SET_V2                                                               0x01
#define ASSOCIATION_SPECIFIC_GROUP_GET_V2                                                0x0B
#define ASSOCIATION_SPECIFIC_GROUP_REPORT_V2                                             0x0C

/* Association command class commands */
#define ASSOCIATION_VERSION_V3                                                           0x03
#define ASSOCIATION_GET_V3                                                               0x02
#define ASSOCIATION_GROUPINGS_GET_V3                                                     0x05
#define ASSOCIATION_GROUPINGS_REPORT_V3                                                  0x06
#define ASSOCIATION_REMOVE_V3                                                            0x04
#define ASSOCIATION_REPORT_V3                                                            0x03
#define ASSOCIATION_SET_V3                                                               0x01
#define ASSOCIATION_SPECIFIC_GROUP_GET_V3                                                0x0B
#define ASSOCIATION_SPECIFIC_GROUP_REPORT_V3                                             0x0C

/* Association command class commands */
#define ASSOCIATION_VERSION_V4                                                           0x04
#define ASSOCIATION_GET_V4                                                               0x02
#define ASSOCIATION_GROUPINGS_GET_V4                                                     0x05
#define ASSOCIATION_GROUPINGS_REPORT_V4                                                  0x06
#define ASSOCIATION_REMOVE_V4                                                            0x04
#define ASSOCIATION_REPORT_V4                                                            0x03
#define ASSOCIATION_SET_V4                                                               0x01
#define ASSOCIATION_SPECIFIC_GROUP_GET_V4                                                0x0B
#define ASSOCIATION_SPECIFIC_GROUP_REPORT_V4                                             0x0C

/* Av Content Directory Md command class commands */
#define AV_CONTENT_DIRECTORY_MD_VERSION                                                  0x01
#define AV_CONTENT_BROWSE_MD_BY_LETTER_GET                                               0x03
#define AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT                                            0x04
#define AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET                                             0x05
#define AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT                                          0x06
#define AV_CONTENT_BROWSE_MD_GET                                                         0x01
#define AV_CONTENT_BROWSE_MD_REPORT                                                      0x02
#define AV_MATCH_ITEM_TO_RENDERER_MD_GET                                                 0x07
#define AV_MATCH_ITEM_TO_RENDERER_MD_REPORT                                              0x08

/* Av Content Search Md command class commands */
#define AV_CONTENT_SEARCH_MD_VERSION                                                     0x01
#define AV_CONTENT_SEARCH_MD_GET                                                         0x01
#define AV_CONTENT_SEARCH_MD_REPORT                                                      0x02

/* Av Renderer Status command class commands */
#define AV_RENDERER_STATUS_VERSION                                                       0x01
#define AV_RENDERER_STATUS_GET                                                           0x01
#define AV_RENDERER_STATUS_REPORT                                                        0x02

/* Av Tagging Md command class commands */
#define AV_TAGGING_MD_VERSION                                                            0x01
#define AV_TAGGING_MD_GET                                                                0x01
#define AV_TAGGING_MD_REPORT                                                             0x02

/* Basic Tariff Info command class commands */
#define BASIC_TARIFF_INFO_VERSION                                                        0x01
#define BASIC_TARIFF_INFO_GET                                                            0x01
#define BASIC_TARIFF_INFO_REPORT                                                         0x02
/* Values used for Basic Tariff Info Report command */
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_TOTAL_NO_IMPORT_RATES_MASK                  0x0F
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_RESERVED1_MASK                              0x70
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_RESERVED1_SHIFT                             0x04
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES1_DUAL_BIT_MASK                               0x80
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES2_E1_CURRENT_RATE_IN_USE_MASK                 0x0F
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES2_RESERVED2_MASK                              0xF0
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES2_RESERVED2_SHIFT                             0x04
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES3_E2_CURRENT_RATE_IN_USE_MASK                 0x0F
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES3_RESERVED3_MASK                              0xF0
#define BASIC_TARIFF_INFO_REPORT_PROPERTIES3_RESERVED3_SHIFT                             0x04

/* Basic Window Covering command class commands */
#define BASIC_WINDOW_COVERING_VERSION                                                    0x01
#define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE                                         0x01
#define BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE                                          0x02
/* Values used for Basic Window Covering Start Level Change command */
#define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_LEVEL_RESERVED1_MASK                    0x3F
#define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_LEVEL_OPEN_CLOSE_BIT_MASK               0x40
#define BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_LEVEL_RESERVED2_BIT_MASK                0x80

/* Basic command class commands */
#define BASIC_VERSION                                                                    0x01
#define BASIC_GET                                                                        0x02
#define BASIC_REPORT                                                                     0x03
#define BASIC_SET                                                                        0x01

/* Basic command class commands */
#define BASIC_VERSION_V2                                                                 0x02
#define BASIC_GET_V2                                                                     0x02
#define BASIC_REPORT_V2                                                                  0x03
#define BASIC_SET_V2                                                                     0x01

/* Battery command class commands */
#define BATTERY_VERSION                                                                  0x01
#define BATTERY_GET                                                                      0x02
#define BATTERY_REPORT                                                                   0x03

/* Battery command class commands */
#define BATTERY_VERSION_V2                                                               0x02
#define BATTERY_GET_V2                                                                   0x02
#define BATTERY_REPORT_V2                                                                0x03
#define BATTERY_HEALTH_GET_V2                                                            0x04
#define BATTERY_HEALTH_REPORT_V2                                                         0x05
/* Values used for Battery Report command */
#define BATTERY_REPORT_PROPERTIES1_REPLACE_RECHARGE_MASK_V2                              0x03
#define BATTERY_REPORT_PROPERTIES1_LOW_FLUID_BIT_MASK_V2                                 0x04
#define BATTERY_REPORT_PROPERTIES1_OVERHEATING_BIT_MASK_V2                               0x08
#define BATTERY_REPORT_PROPERTIES1_BACKUP_BATTERY_BIT_MASK_V2                            0x10
#define BATTERY_REPORT_PROPERTIES1_RECHARGEABLE_BIT_MASK_V2                              0x20
#define BATTERY_REPORT_PROPERTIES1_CHARGING_STATUS_MASK_V2                               0xC0
#define BATTERY_REPORT_PROPERTIES1_CHARGING_STATUS_SHIFT_V2                              0x06
#define BATTERY_REPORT_CHARGING_STATUS_DISCHARGING_V2                                    0x00
#define BATTERY_REPORT_CHARGING_STATUS_CHARGING_V2                                       0x01
#define BATTERY_REPORT_CHARGING_STATUS_MAINTAINING_V2                                    0x02
#define BATTERY_REPORT_PROPERTIES2_DISCONNECTED_BIT_MASK_V2                              0x01
#define BATTERY_REPORT_PROPERTIES2_RESERVED1_MASK_V2                                     0xFE
#define BATTERY_REPORT_PROPERTIES2_RESERVED1_SHIFT_V2                                    0x01
/* Values used for Battery Health Report command */
#define BATTERY_HEALTH_REPORT_PROPERTIES1_SIZE_MASK_V2                                   0x07
#define BATTERY_HEALTH_REPORT_PROPERTIES1_SCALE_MASK_V2                                  0x18
#define BATTERY_HEALTH_REPORT_PROPERTIES1_SCALE_SHIFT_V2                                 0x03
#define BATTERY_HEALTH_REPORT_PROPERTIES1_PRECISION_MASK_V2                              0xE0
#define BATTERY_HEALTH_REPORT_PROPERTIES1_PRECISION_SHIFT_V2                             0x05

/* Battery command class commands */
#define BATTERY_VERSION_V3                                                               0x03
#define BATTERY_GET_V3                                                                   0x02
#define BATTERY_REPORT_V3                                                                0x03
#define BATTERY_HEALTH_GET_V3                                                            0x04
#define BATTERY_HEALTH_REPORT_V3                                                         0x05
/* Values used for Battery Report command */
#define BATTERY_REPORT_PROPERTIES1_REPLACE_RECHARGE_MASK_V3                              0x03
#define BATTERY_REPORT_PROPERTIES1_LOW_FLUID_BIT_MASK_V3                                 0x04
#define BATTERY_REPORT_PROPERTIES1_OVERHEATING_BIT_MASK_V3                               0x08
#define BATTERY_REPORT_PROPERTIES1_BACKUP_BATTERY_BIT_MASK_V3                            0x10
#define BATTERY_REPORT_PROPERTIES1_RECHARGEABLE_BIT_MASK_V3                              0x20
#define BATTERY_REPORT_PROPERTIES1_CHARGING_STATUS_MASK_V3                               0xC0
#define BATTERY_REPORT_PROPERTIES1_CHARGING_STATUS_SHIFT_V3                              0x06
#define BATTERY_REPORT_CHARGING_STATUS_DISCHARGING_V3                                    0x00
#define BATTERY_REPORT_CHARGING_STATUS_CHARGING_V3                                       0x01
#define BATTERY_REPORT_CHARGING_STATUS_MAINTAINING_V3                                    0x02
#define BATTERY_REPORT_PROPERTIES2_DISCONNECTED_BIT_MASK_V3                              0x01
#define BATTERY_REPORT_PROPERTIES2_LOW_TEMPERATURE_STATUS_BIT_MASK_V3                    0x02
#define BATTERY_REPORT_PROPERTIES2_RESERVED1_MASK_V3                                     0xFC
#define BATTERY_REPORT_PROPERTIES2_RESERVED1_SHIFT_V3                                    0x02
/* Values used for Battery Health Report command */
#define BATTERY_HEALTH_REPORT_PROPERTIES1_SIZE_MASK_V3                                   0x07
#define BATTERY_HEALTH_REPORT_PROPERTIES1_SCALE_MASK_V3                                  0x18
#define BATTERY_HEALTH_REPORT_PROPERTIES1_SCALE_SHIFT_V3                                 0x03
#define BATTERY_HEALTH_REPORT_PROPERTIES1_PRECISION_MASK_V3                              0xE0
#define BATTERY_HEALTH_REPORT_PROPERTIES1_PRECISION_SHIFT_V3                             0x05

/* Chimney Fan command class commands */
#define CHIMNEY_FAN_VERSION                                                              0x01
#define CHIMNEY_FAN_ALARM_LOG_GET                                                        0x20
#define CHIMNEY_FAN_ALARM_LOG_REPORT                                                     0x21
#define CHIMNEY_FAN_ALARM_LOG_SET                                                        0x1F
#define CHIMNEY_FAN_ALARM_STATUS_GET                                                     0x23
#define CHIMNEY_FAN_ALARM_STATUS_REPORT                                                  0x24
#define CHIMNEY_FAN_ALARM_STATUS_SET                                                     0x22
#define CHIMNEY_FAN_ALARM_TEMP_GET                                                       0x0E
#define CHIMNEY_FAN_ALARM_TEMP_REPORT                                                    0x0F
#define CHIMNEY_FAN_ALARM_TEMP_SET                                                       0x0D
#define CHIMNEY_FAN_BOOST_TIME_GET                                                       0x11
#define CHIMNEY_FAN_BOOST_TIME_REPORT                                                    0x12
#define CHIMNEY_FAN_BOOST_TIME_SET                                                       0x10
#define CHIMNEY_FAN_DEFAULT_SET                                                          0x28
#define CHIMNEY_FAN_MIN_SPEED_GET                                                        0x26
#define CHIMNEY_FAN_MIN_SPEED_REPORT                                                     0x27
#define CHIMNEY_FAN_MIN_SPEED_SET                                                        0x25
#define CHIMNEY_FAN_MODE_GET                                                             0x17
#define CHIMNEY_FAN_MODE_REPORT                                                          0x18
#define CHIMNEY_FAN_MODE_SET                                                             0x16
#define CHIMNEY_FAN_SETUP_GET                                                            0x1A
#define CHIMNEY_FAN_SETUP_REPORT                                                         0x1B
#define CHIMNEY_FAN_SETUP_SET                                                            0x19
#define CHIMNEY_FAN_SPEED_GET                                                            0x05
#define CHIMNEY_FAN_SPEED_REPORT                                                         0x06
#define CHIMNEY_FAN_SPEED_SET                                                            0x04
#define CHIMNEY_FAN_START_TEMP_GET                                                       0x08
#define CHIMNEY_FAN_START_TEMP_REPORT                                                    0x09
#define CHIMNEY_FAN_START_TEMP_SET                                                       0x07
#define CHIMNEY_FAN_STATE_GET                                                            0x02
#define CHIMNEY_FAN_STATE_REPORT                                                         0x03
#define CHIMNEY_FAN_STATE_SET                                                            0x01
#define CHIMNEY_FAN_STATUS_GET                                                           0x1D
#define CHIMNEY_FAN_STATUS_REPORT                                                        0x1E
#define CHIMNEY_FAN_STOP_TEMP_GET                                                        0x0B
#define CHIMNEY_FAN_STOP_TEMP_REPORT                                                     0x0C
#define CHIMNEY_FAN_STOP_TEMP_SET                                                        0x0A
#define CHIMNEY_FAN_STOP_TIME_GET                                                        0x14
#define CHIMNEY_FAN_STOP_TIME_REPORT                                                     0x15
#define CHIMNEY_FAN_STOP_TIME_SET                                                        0x13
/* Values used for Chimney Fan Alarm Log Report command */
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_RESERVED11_BIT_MASK                   0x01
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_EXTERNAL_ALARM_1_BIT_MASK             0x02
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_SENSOR_ERROR_1_BIT_MASK               0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_ALARM_TEMPERATURE_EXCEEDED_1_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_RESERVED12_MASK                       0x70
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_RESERVED12_SHIFT                      0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_1_ALARM_STILL_ACTIVE_1_BIT_MASK         0x80
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_RESERVED21_BIT_MASK                   0x01
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_EXTERNAL_ALARM_2_BIT_MASK             0x02
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_SENSOR_ERROR_2_BIT_MASK               0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_ALARM_TEMPERATURE_EXCEEDED_2_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_RESERVED22_MASK                       0x70
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_RESERVED22_SHIFT                      0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_2_ALARM_STILL_ACTIVE_2_BIT_MASK         0x80
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_RESERVED31_BIT_MASK                   0x01
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_EXTERNAL_ALARM_3_BIT_MASK             0x02
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_SENSOR_ERROR_3_BIT_MASK               0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_ALARM_TEMPERATURE_EXCEEDED_3_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_RESERVED32_MASK                       0x70
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_RESERVED32_SHIFT                      0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_3_ALARM_STILL_ACTIVE_3_BIT_MASK         0x80
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_RESERVED41_BIT_MASK                   0x01
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_EXTERNAL_ALARM_4_BIT_MASK             0x02
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_SENSOR_ERROR_4_BIT_MASK               0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_ALARM_TEMPERATURE_EXCEEDED_4_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_RESERVED42_MASK                       0x70
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_RESERVED42_SHIFT                      0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_4_ALARM_STILL_ACTIVE_4_BIT_MASK         0x80
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_RESERVED51_BIT_MASK                   0x01
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_EXTERNAL_ALARM_5_BIT_MASK             0x02
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_SENSOR_ERROR_5_BIT_MASK               0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_ALARM_TEMPERATURE_EXCEEDED_5_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_RESERVED52_MASK                       0x70
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_RESERVED52_SHIFT                      0x04
#define CHIMNEY_FAN_ALARM_LOG_REPORT_ALARM_EVENT_5_ALARM_STILL_ACTIVE_5_BIT_MASK         0x80
/* Values used for Chimney Fan Alarm Log Set command */
#define CHIMNEY_FAN_ALARM_LOG_SET_RESET_LOG                                              0x08
/* Values used for Chimney Fan Alarm Status Report command */
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_SERVICE_BIT_MASK                    0x01
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_EXTERNAL_ALARM_BIT_MASK             0x02
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_SENSOR_ERROR_BIT_MASK               0x04
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_ALARM_TEMPERATURE_EXCEEDED_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_NOT_USED_MASK                       0x30
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_NOT_USED_SHIFT                      0x04
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_SPEED_CHANGE_ENABLE_BIT_MASK        0x40
#define CHIMNEY_FAN_ALARM_STATUS_REPORT_ALARM_STATUS_START_TEMPERATURE_EXCEEDED_BIT_MASK 0x80
/* Values used for Chimney Fan Alarm Status Set command */
#define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_NOT_USED1_BIT_MASK                          0x01
#define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_ACKNOWLEDGE_EXTERNAL_ALARM_BIT_MASK         0x02
#define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_ACKNOWLEDGE_SENSOR_ERROR_BIT_MASK           0x04
#define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_ACKNOWLEDGE_ALARM_TEMPERATURE_EXCEEDED_BIT_MASK 0x08
#define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_NOT_USED2_MASK                              0xF0
#define CHIMNEY_FAN_ALARM_STATUS_SET_MESSAGE_NOT_USED2_SHIFT                             0x04
/* Values used for Chimney Fan Alarm Temp Report command */
#define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_SIZE_MASK                              0x07
#define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_SCALE_MASK                             0x18
#define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_SCALE_SHIFT                            0x03
#define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_PRECISION_MASK                         0xE0
#define CHIMNEY_FAN_ALARM_TEMP_REPORT_PROPERTIES1_PRECISION_SHIFT                        0x05
/* Values used for Chimney Fan Alarm Temp Set command */
#define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_SIZE_MASK                                 0x07
#define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_SCALE_MASK                                0x18
#define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_SCALE_SHIFT                               0x03
#define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_PRECISION_MASK                            0xE0
#define CHIMNEY_FAN_ALARM_TEMP_SET_PROPERTIES1_PRECISION_SHIFT                           0x05
/* Values used for Chimney Fan Mode Report command */
#define CHIMNEY_FAN_MODE_REPORT_OFF                                                      0x00
#define CHIMNEY_FAN_MODE_REPORT_ON                                                       0xFF
/* Values used for Chimney Fan Mode Set command */
#define CHIMNEY_FAN_MODE_SET_OFF                                                         0x00
#define CHIMNEY_FAN_MODE_SET_ON                                                          0xFF
/* Values used for Chimney Fan Setup Report command */
#define CHIMNEY_FAN_SETUP_REPORT_OFF                                                     0x00
#define CHIMNEY_FAN_SETUP_REPORT_ON                                                      0xFF
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_SIZE_1_MASK                                 0x07
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_SCALE_1_MASK                                0x18
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_SCALE_1_SHIFT                               0x03
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_PRECISION_1_MASK                            0xE0
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES1_PRECISION_1_SHIFT                           0x05
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_SIZE_2_MASK                                 0x07
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_SCALE_2_MASK                                0x18
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_SCALE_2_SHIFT                               0x03
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_PRECISION_2_MASK                            0xE0
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES2_PRECISION_2_SHIFT                           0x05
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_SIZE_3_MASK                                 0x07
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_SCALE_3_MASK                                0x18
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_SCALE_3_SHIFT                               0x03
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_PRECISION_3_MASK                            0xE0
#define CHIMNEY_FAN_SETUP_REPORT_PROPERTIES3_PRECISION_3_SHIFT                           0x05
/* Values used for Chimney Fan Setup Set command */
#define CHIMNEY_FAN_SETUP_SET_OFF                                                        0x00
#define CHIMNEY_FAN_SETUP_SET_ON                                                         0xFF
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_SIZE_1_MASK                                    0x07
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_SCALE_1_MASK                                   0x18
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_SCALE_1_SHIFT                                  0x03
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_PRECISION_1_MASK                               0xE0
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES1_PRECISION_1_SHIFT                              0x05
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_SIZE_2_MASK                                    0x07
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_SCALE_2_MASK                                   0x18
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_SCALE_2_SHIFT                                  0x03
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_PRECISION_2_MASK                               0xE0
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES2_PRECISION_2_SHIFT                              0x05
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_SIZE_3_MASK                                    0x07
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_SCALE_3_MASK                                   0x18
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_SCALE_3_SHIFT                                  0x03
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_PRECISION_3_MASK                               0xE0
#define CHIMNEY_FAN_SETUP_SET_PROPERTIES3_PRECISION_3_SHIFT                              0x05
/* Values used for Chimney Fan Start Temp Report command */
#define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_SIZE_MASK                              0x07
#define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_SCALE_MASK                             0x18
#define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_SCALE_SHIFT                            0x03
#define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_PRECISION_MASK                         0xE0
#define CHIMNEY_FAN_START_TEMP_REPORT_PROPERTIES1_PRECISION_SHIFT                        0x05
/* Values used for Chimney Fan Start Temp Set command */
#define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_SIZE_MASK                                 0x07
#define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_SCALE_MASK                                0x18
#define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_SCALE_SHIFT                               0x03
#define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_PRECISION_MASK                            0xE0
#define CHIMNEY_FAN_START_TEMP_SET_PROPERTIES1_PRECISION_SHIFT                           0x05
/* Values used for Chimney Fan State Report command */
#define CHIMNEY_FAN_STATE_REPORT_OFF                                                     0x00
#define CHIMNEY_FAN_STATE_REPORT_BOOST                                                   0x01
#define CHIMNEY_FAN_STATE_REPORT_EXHAUST                                                 0x02
#define CHIMNEY_FAN_STATE_REPORT_RELOAD                                                  0x03
#define CHIMNEY_FAN_STATE_REPORT_VENTING                                                 0x04
#define CHIMNEY_FAN_STATE_REPORT_STOP                                                    0x05
#define CHIMNEY_FAN_STATE_REPORT_VENTING_EX                                              0x06
#define CHIMNEY_FAN_STATE_REPORT_SERVICE                                                 0x07
#define CHIMNEY_FAN_STATE_REPORT_SENSOR_FAILURE                                          0x08
#define CHIMNEY_FAN_STATE_REPORT_CHIMNEY_FIRE                                            0x09
#define CHIMNEY_FAN_STATE_REPORT_EXTERNAL_ALARM                                          0x0A
/* Values used for Chimney Fan State Set command */
#define CHIMNEY_FAN_STATE_SET_NEXT_STATE                                                 0x01
/* Values used for Chimney Fan Status Report command */
#define CHIMNEY_FAN_STATUS_REPORT_OFF                                                    0x00
#define CHIMNEY_FAN_STATUS_REPORT_BOOST                                                  0x01
#define CHIMNEY_FAN_STATUS_REPORT_EXHAUST                                                0x02
#define CHIMNEY_FAN_STATUS_REPORT_RELOAD                                                 0x03
#define CHIMNEY_FAN_STATUS_REPORT_VENTING                                                0x04
#define CHIMNEY_FAN_STATUS_REPORT_STOP                                                   0x05
#define CHIMNEY_FAN_STATUS_REPORT_VENTING_EX                                             0x06
#define CHIMNEY_FAN_STATUS_REPORT_SERVICE                                                0x07
#define CHIMNEY_FAN_STATUS_REPORT_SENSOR_FAILURE                                         0x08
#define CHIMNEY_FAN_STATUS_REPORT_CHIMNEY_FIRE                                           0x09
#define CHIMNEY_FAN_STATUS_REPORT_EXTERNAL_ALARM                                         0x0A
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_SERVICE_BIT_MASK                          0x01
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_EXTERNAL_ALARM_BIT_MASK                   0x02
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_SENSOR_ERROR_BIT_MASK                     0x04
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_ALARM_TEMPERATURE_EXCEEDED_BIT_MASK       0x08
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_NOT_USED_MASK                             0x30
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_NOT_USED_SHIFT                            0x04
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_SPEED_CHANGE_ENABLE_BIT_MASK              0x40
#define CHIMNEY_FAN_STATUS_REPORT_ALARM_STATUS_START_TEMPERATURE_EXCEEDED_BIT_MASK       0x80
#define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_SIZE_MASK                                  0x07
#define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_SCALE_MASK                                 0x18
#define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_SCALE_SHIFT                                0x03
#define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_PRECISION_MASK                             0xE0
#define CHIMNEY_FAN_STATUS_REPORT_PROPERTIES1_PRECISION_SHIFT                            0x05
/* Values used for Chimney Fan Stop Temp Report command */
#define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_SIZE_MASK                               0x07
#define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_SCALE_MASK                              0x18
#define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_SCALE_SHIFT                             0x03
#define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_PRECISION_MASK                          0xE0
#define CHIMNEY_FAN_STOP_TEMP_REPORT_PROPERTIES1_PRECISION_SHIFT                         0x05
/* Values used for Chimney Fan Stop Temp Set command */
#define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_SIZE_MASK                                  0x07
#define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_SCALE_MASK                                 0x18
#define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_SCALE_SHIFT                                0x03
#define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_PRECISION_MASK                             0xE0
#define CHIMNEY_FAN_STOP_TEMP_SET_PROPERTIES1_PRECISION_SHIFT                            0x05

/* Climate Control Schedule command class commands */
#define CLIMATE_CONTROL_SCHEDULE_VERSION                                                 0x01
#define SCHEDULE_CHANGED_GET                                                             0x04
#define SCHEDULE_CHANGED_REPORT                                                          0x05
#define SCHEDULE_GET                                                                     0x02
#define SCHEDULE_OVERRIDE_GET                                                            0x07
#define SCHEDULE_OVERRIDE_REPORT                                                         0x08
#define SCHEDULE_OVERRIDE_SET                                                            0x06
#define SCHEDULE_REPORT                                                                  0x03
#define SCHEDULE_SET                                                                     0x01
/* Values used for Schedule Get command */
#define SCHEDULE_GET_PROPERTIES1_WEEKDAY_MASK                                            0x07
#define SCHEDULE_GET_PROPERTIES1_RESERVED_MASK                                           0xF8
#define SCHEDULE_GET_PROPERTIES1_RESERVED_SHIFT                                          0x03
/* Values used for Schedule Override Report command */
#define SCHEDULE_OVERRIDE_REPORT_PROPERTIES1_OVERRIDE_TYPE_MASK                          0x03
#define SCHEDULE_OVERRIDE_REPORT_OVERRIDE_TYPE_NO_OVERRIDE                               0x00
#define SCHEDULE_OVERRIDE_REPORT_OVERRIDE_TYPE_TEMPORARY_OVERRIDE                        0x01
#define SCHEDULE_OVERRIDE_REPORT_OVERRIDE_TYPE_PERMANENT_OVERRIDE                        0x02
#define SCHEDULE_OVERRIDE_REPORT_OVERRIDE_TYPE_RESERVED                                  0x03
#define SCHEDULE_OVERRIDE_REPORT_PROPERTIES1_RESERVED_MASK                               0xFC
#define SCHEDULE_OVERRIDE_REPORT_PROPERTIES1_RESERVED_SHIFT                              0x02
#define SCHEDULE_OVERRIDE_REPORT_FROST_PROTECTION                                        0x79
#define SCHEDULE_OVERRIDE_REPORT_ENERGY_SAVING_MODE                                      0x7A
#define SCHEDULE_OVERRIDE_REPORT_UNUSED_STATE                                            0x7F
/* Values used for Schedule Override Set command */
#define SCHEDULE_OVERRIDE_SET_PROPERTIES1_OVERRIDE_TYPE_MASK                             0x03
#define SCHEDULE_OVERRIDE_SET_OVERRIDE_TYPE_NO_OVERRIDE                                  0x00
#define SCHEDULE_OVERRIDE_SET_OVERRIDE_TYPE_TEMPORARY_OVERRIDE                           0x01
#define SCHEDULE_OVERRIDE_SET_OVERRIDE_TYPE_PERMANENT_OVERRIDE                           0x02
#define SCHEDULE_OVERRIDE_SET_OVERRIDE_TYPE_RESERVED                                     0x03
#define SCHEDULE_OVERRIDE_SET_PROPERTIES1_RESERVED_MASK                                  0xFC
#define SCHEDULE_OVERRIDE_SET_PROPERTIES1_RESERVED_SHIFT                                 0x02
#define SCHEDULE_OVERRIDE_SET_FROST_PROTECTION                                           0x79
#define SCHEDULE_OVERRIDE_SET_ENERGY_SAVING_MODE                                         0x7A
#define SCHEDULE_OVERRIDE_SET_UNUSED_STATE                                               0x7F
/* Values used for Schedule Report command */
#define SCHEDULE_REPORT_PROPERTIES1_WEEKDAY_MASK                                         0x07
#define SCHEDULE_REPORT_PROPERTIES1_RESERVED_MASK                                        0xF8
#define SCHEDULE_REPORT_PROPERTIES1_RESERVED_SHIFT                                       0x03
/* Values used for Schedule Set command */
#define SCHEDULE_SET_PROPERTIES1_WEEKDAY_MASK                                            0x07
#define SCHEDULE_SET_PROPERTIES1_RESERVED_MASK                                           0xF8
#define SCHEDULE_SET_PROPERTIES1_RESERVED_SHIFT                                          0x03

/* Clock command class commands */
#define CLOCK_VERSION                                                                    0x01
#define CLOCK_GET                                                                        0x05
#define CLOCK_REPORT                                                                     0x06
#define CLOCK_SET                                                                        0x04
/* Values used for Clock Report command */
#define CLOCK_REPORT_LEVEL_HOUR_MASK                                                     0x1F
#define CLOCK_REPORT_LEVEL_WEEKDAY_MASK                                                  0xE0
#define CLOCK_REPORT_LEVEL_WEEKDAY_SHIFT                                                 0x05
#define CLOCK_REPORT_WEEKDAY_MONDAY                                                      0x01
#define CLOCK_REPORT_WEEKDAY_TUESDAY                                                     0x02
#define CLOCK_REPORT_WEEKDAY_WEDNESDAY                                                   0x03
#define CLOCK_REPORT_WEEKDAY_THURSDAY                                                    0x04
#define CLOCK_REPORT_WEEKDAY_FRIDAY                                                      0x05
#define CLOCK_REPORT_WEEKDAY_SATURDAY                                                    0x06
#define CLOCK_REPORT_WEEKDAY_SUNDAY                                                      0x07
/* Values used for Clock Set command */
#define CLOCK_SET_LEVEL_HOUR_MASK                                                        0x1F
#define CLOCK_SET_LEVEL_WEEKDAY_MASK                                                     0xE0
#define CLOCK_SET_LEVEL_WEEKDAY_SHIFT                                                    0x05
#define CLOCK_SET_WEEKDAY_MONDAY                                                         0x01
#define CLOCK_SET_WEEKDAY_TUESDAY                                                        0x02
#define CLOCK_SET_WEEKDAY_WEDNESDAY                                                      0x03
#define CLOCK_SET_WEEKDAY_THURSDAY                                                       0x04
#define CLOCK_SET_WEEKDAY_FRIDAY                                                         0x05
#define CLOCK_SET_WEEKDAY_SATURDAY                                                       0x06
#define CLOCK_SET_WEEKDAY_SUNDAY                                                         0x07

/* Configuration command class commands */
#define CONFIGURATION_VERSION                                                            0x01
#define CONFIGURATION_GET                                                                0x05
#define CONFIGURATION_REPORT                                                             0x06
#define CONFIGURATION_SET                                                                0x04
/* Values used for Configuration Report command */
#define CONFIGURATION_REPORT_LEVEL_SIZE_MASK                                             0x07
#define CONFIGURATION_REPORT_LEVEL_RESERVED_MASK                                         0xF8
#define CONFIGURATION_REPORT_LEVEL_RESERVED_SHIFT                                        0x03
/* Values used for Configuration Set command */
#define CONFIGURATION_SET_LEVEL_SIZE_MASK                                                0x07
#define CONFIGURATION_SET_LEVEL_RESERVED_MASK                                            0x78
#define CONFIGURATION_SET_LEVEL_RESERVED_SHIFT                                           0x03
#define CONFIGURATION_SET_LEVEL_DEFAULT_BIT_MASK                                         0x80

/* Configuration command class commands */
#define CONFIGURATION_VERSION_V2                                                         0x02
#define CONFIGURATION_BULK_GET_V2                                                        0x08
#define CONFIGURATION_BULK_REPORT_V2                                                     0x09
#define CONFIGURATION_BULK_SET_V2                                                        0x07
#define CONFIGURATION_GET_V2                                                             0x05
#define CONFIGURATION_REPORT_V2                                                          0x06
#define CONFIGURATION_SET_V2                                                             0x04
/* Values used for Configuration Bulk Report command */
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_SIZE_MASK_V2                               0x07
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_MASK_V2                           0x38
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                          0x03
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_HANDSHAKE_BIT_MASK_V2                      0x40
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_DEFAULT_BIT_MASK_V2                        0x80
/* Values used for Configuration Bulk Set command */
#define CONFIGURATION_BULK_SET_PROPERTIES1_SIZE_MASK_V2                                  0x07
#define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_MASK_V2                              0x38
#define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_SHIFT_V2                             0x03
#define CONFIGURATION_BULK_SET_PROPERTIES1_HANDSHAKE_BIT_MASK_V2                         0x40
#define CONFIGURATION_BULK_SET_PROPERTIES1_DEFAULT_BIT_MASK_V2                           0x80
/* Values used for Configuration Report command */
#define CONFIGURATION_REPORT_LEVEL_SIZE_MASK_V2                                          0x07
#define CONFIGURATION_REPORT_LEVEL_RESERVED_MASK_V2                                      0xF8
#define CONFIGURATION_REPORT_LEVEL_RESERVED_SHIFT_V2                                     0x03
/* Values used for Configuration Set command */
#define CONFIGURATION_SET_LEVEL_SIZE_MASK_V2                                             0x07
#define CONFIGURATION_SET_LEVEL_RESERVED_MASK_V2                                         0x78
#define CONFIGURATION_SET_LEVEL_RESERVED_SHIFT_V2                                        0x03
#define CONFIGURATION_SET_LEVEL_DEFAULT_BIT_MASK_V2                                      0x80

/* Configuration command class commands */
#define CONFIGURATION_VERSION_V3                                                         0x03
#define CONFIGURATION_BULK_GET_V3                                                        0x08
#define CONFIGURATION_BULK_REPORT_V3                                                     0x09
#define CONFIGURATION_BULK_SET_V3                                                        0x07
#define CONFIGURATION_GET_V3                                                             0x05
#define CONFIGURATION_REPORT_V3                                                          0x06
#define CONFIGURATION_SET_V3                                                             0x04
#define CONFIGURATION_NAME_GET_V3                                                        0x0A
#define CONFIGURATION_NAME_REPORT_V3                                                     0x0B
#define CONFIGURATION_INFO_GET_V3                                                        0x0C
#define CONFIGURATION_INFO_REPORT_V3                                                     0x0D
#define CONFIGURATION_PROPERTIES_GET_V3                                                  0x0E
#define CONFIGURATION_PROPERTIES_REPORT_V3                                               0x0F
/* Values used for Configuration Bulk Report command */
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_SIZE_MASK_V3                               0x07
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_MASK_V3                           0x38
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                          0x03
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_HANDSHAKE_BIT_MASK_V3                      0x40
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_DEFAULT_BIT_MASK_V3                        0x80
/* Values used for Configuration Bulk Set command */
#define CONFIGURATION_BULK_SET_PROPERTIES1_SIZE_MASK_V3                                  0x07
#define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_MASK_V3                              0x38
#define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_SHIFT_V3                             0x03
#define CONFIGURATION_BULK_SET_PROPERTIES1_HANDSHAKE_BIT_MASK_V3                         0x40
#define CONFIGURATION_BULK_SET_PROPERTIES1_DEFAULT_BIT_MASK_V3                           0x80
/* Values used for Configuration Report command */
#define CONFIGURATION_REPORT_LEVEL_SIZE_MASK_V3                                          0x07
#define CONFIGURATION_REPORT_LEVEL_RESERVED_MASK_V3                                      0xF8
#define CONFIGURATION_REPORT_LEVEL_RESERVED_SHIFT_V3                                     0x03
/* Values used for Configuration Set command */
#define CONFIGURATION_SET_LEVEL_SIZE_MASK_V3                                             0x07
#define CONFIGURATION_SET_LEVEL_RESERVED_MASK_V3                                         0x78
#define CONFIGURATION_SET_LEVEL_RESERVED_SHIFT_V3                                        0x03
#define CONFIGURATION_SET_LEVEL_DEFAULT_BIT_MASK_V3                                      0x80
/* Values used for Configuration Properties Report command */
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_SIZE_MASK_V3                         0x07
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_FORMAT_MASK_V3                       0x38
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_FORMAT_SHIFT_V3                      0x03
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_SIGNED_INTEGER_V3                         0x00
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_UNSIGNED_INTEGER_V3                       0x01
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_ENUMERATED_V3                             0x02
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_BIT_FIELD_V3                              0x03
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_RESERVED_MASK_V3                     0xC0
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                    0x06

/* Configuration command class commands */
#define CONFIGURATION_VERSION_V4                                                         0x04
#define CONFIGURATION_BULK_GET_V4                                                        0x08
#define CONFIGURATION_BULK_REPORT_V4                                                     0x09
#define CONFIGURATION_BULK_SET_V4                                                        0x07
#define CONFIGURATION_GET_V4                                                             0x05
#define CONFIGURATION_REPORT_V4                                                          0x06
#define CONFIGURATION_SET_V4                                                             0x04
#define CONFIGURATION_NAME_GET_V4                                                        0x0A
#define CONFIGURATION_NAME_REPORT_V4                                                     0x0B
#define CONFIGURATION_INFO_GET_V4                                                        0x0C
#define CONFIGURATION_INFO_REPORT_V4                                                     0x0D
#define CONFIGURATION_PROPERTIES_GET_V4                                                  0x0E
#define CONFIGURATION_PROPERTIES_REPORT_V4                                               0x0F
#define CONFIGURATION_DEFAULT_RESET_V4                                                   0x01
/* Values used for Configuration Bulk Report command */
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_SIZE_MASK_V4                               0x07
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_MASK_V4                           0x38
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                          0x03
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_HANDSHAKE_BIT_MASK_V4                      0x40
#define CONFIGURATION_BULK_REPORT_PROPERTIES1_DEFAULT_BIT_MASK_V4                        0x80
/* Values used for Configuration Bulk Set command */
#define CONFIGURATION_BULK_SET_PROPERTIES1_SIZE_MASK_V4                                  0x07
#define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_MASK_V4                              0x38
#define CONFIGURATION_BULK_SET_PROPERTIES1_RESERVED_SHIFT_V4                             0x03
#define CONFIGURATION_BULK_SET_PROPERTIES1_HANDSHAKE_BIT_MASK_V4                         0x40
#define CONFIGURATION_BULK_SET_PROPERTIES1_DEFAULT_BIT_MASK_V4                           0x80
/* Values used for Configuration Report command */
#define CONFIGURATION_REPORT_LEVEL_SIZE_MASK_V4                                          0x07
#define CONFIGURATION_REPORT_LEVEL_RESERVED_MASK_V4                                      0xF8
#define CONFIGURATION_REPORT_LEVEL_RESERVED_SHIFT_V4                                     0x03
/* Values used for Configuration Set command */
#define CONFIGURATION_SET_LEVEL_SIZE_MASK_V4                                             0x07
#define CONFIGURATION_SET_LEVEL_RESERVED_MASK_V4                                         0x78
#define CONFIGURATION_SET_LEVEL_RESERVED_SHIFT_V4                                        0x03
#define CONFIGURATION_SET_LEVEL_DEFAULT_BIT_MASK_V4                                      0x80
/* Values used for Configuration Properties Report command */
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_SIZE_MASK_V4                         0x07
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_FORMAT_MASK_V4                       0x38
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_FORMAT_SHIFT_V4                      0x03
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_SIGNED_INTEGER_V4                         0x00
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_UNSIGNED_INTEGER_V4                       0x01
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_ENUMERATED_V4                             0x02
#define CONFIGURATION_PROPERTIES_REPORT_FORMAT_BIT_FIELD_V4                              0x03
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_READONLY_BIT_MASK_V4                 0x40
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES1_ALTERING_CAPABILITIES_BIT_MASK_V4    0x80
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES2_ADVANCED_BIT_MASK_V4                 0x01
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES2_NO_BULK_SUPPORT_BIT_MASK_V4          0x02
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES2_RESERVED1_MASK_V4                    0xFC
#define CONFIGURATION_PROPERTIES_REPORT_PROPERTIES2_RESERVED1_SHIFT_V4                   0x02

/* Controller Replication command class commands */
#define CONTROLLER_REPLICATION_VERSION                                                   0x01
#define CTRL_REPLICATION_TRANSFER_GROUP                                                  0x31
#define CTRL_REPLICATION_TRANSFER_GROUP_NAME                                             0x32
#define CTRL_REPLICATION_TRANSFER_SCENE                                                  0x33
#define CTRL_REPLICATION_TRANSFER_SCENE_NAME                                             0x34

/* Crc 16 Encap command class commands */
#define CRC_16_ENCAP_VERSION                                                             0x01
#define CRC_16_ENCAP                                                                     0x01

/* Dcp Config command class commands */
#define DCP_CONFIG_VERSION                                                               0x01
#define DCP_LIST_REMOVE                                                                  0x04
#define DCP_LIST_SET                                                                     0x03
#define DCP_LIST_SUPPORTED_GET                                                           0x01
#define DCP_LIST_SUPPORTED_REPORT                                                        0x02
/* Values used for Dcp List Set command */
#define DCP_LIST_SET_PROPERTIES1_NUMBER_OF_DC_MASK                                       0x03
#define DCP_LIST_SET_PROPERTIES1_RESERVED_MASK                                           0xFC
#define DCP_LIST_SET_PROPERTIES1_RESERVED_SHIFT                                          0x02

/* Dcp Monitor command class commands */
#define DCP_MONITOR_VERSION                                                              0x01
#define DCP_EVENT_STATUS_GET                                                             0x03
#define DCP_EVENT_STATUS_REPORT                                                          0x04
#define DCP_LIST_GET                                                                     0x01
#define DCP_LIST_REPORT                                                                  0x02
/* Values used for Dcp List Report command */
#define DCP_LIST_REPORT_PROPERTIES1_NUMBER_OF_DC_MASK                                    0x03
#define DCP_LIST_REPORT_PROPERTIES1_RESERVED_MASK                                        0xFC
#define DCP_LIST_REPORT_PROPERTIES1_RESERVED_SHIFT                                       0x02

/* Door Lock Logging command class commands */
#define DOOR_LOCK_LOGGING_VERSION                                                        0x01
#define DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET                                          0x01
#define DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT                                       0x02
#define RECORD_GET                                                                       0x03
#define RECORD_REPORT                                                                    0x04
/* Values used for Record Report command */
#define RECORD_REPORT_PROPERTIES1_HOUR_LOCAL_TIME_MASK                                   0x1F
#define RECORD_REPORT_PROPERTIES1_RECORD_STATUS_MASK                                     0xE0
#define RECORD_REPORT_PROPERTIES1_RECORD_STATUS_SHIFT                                    0x05

/* Door Lock command class commands */
#define DOOR_LOCK_VERSION                                                                0x01
#define DOOR_LOCK_CONFIGURATION_GET                                                      0x05
#define DOOR_LOCK_CONFIGURATION_REPORT                                                   0x06
#define DOOR_LOCK_CONFIGURATION_SET                                                      0x04
#define DOOR_LOCK_OPERATION_GET                                                          0x02
#define DOOR_LOCK_OPERATION_REPORT                                                       0x03
#define DOOR_LOCK_OPERATION_SET                                                          0x01
/* Values used for Door Lock Configuration Report command */
#define DOOR_LOCK_CONFIGURATION_REPORT_CONSTANT_OPERATION                                0x01
#define DOOR_LOCK_CONFIGURATION_REPORT_TIMED_OPERATION                                   0x02
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK      0x0F
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK     0xF0
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT    0x04
/* Values used for Door Lock Configuration Set command */
#define DOOR_LOCK_CONFIGURATION_SET_CONSTANT_OPERATION                                   0x01
#define DOOR_LOCK_CONFIGURATION_SET_TIMED_OPERATION                                      0x02
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK         0x0F
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK        0xF0
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT       0x04
/* Values used for Door Lock Operation Report command */
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED                                        0x00
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT                           0x01
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES                0x10
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT   0x11
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES               0x20
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT  0x21
#define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED                                          0xFF
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_MODE_MASK             0x0F
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_MASK            0xF0
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_SHIFT           0x04
/* Values used for Door Lock Operation Set command */
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED                                           0x00
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_WITH_TIMEOUT                              0x01
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES                   0x10
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT      0x11
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES                  0x20
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT     0x21
#define DOOR_LOCK_OPERATION_SET_DOOR_SECURED                                             0xFF

/* Door Lock command class commands */
#define DOOR_LOCK_VERSION_V2                                                             0x02
#define DOOR_LOCK_CONFIGURATION_GET_V2                                                   0x05
#define DOOR_LOCK_CONFIGURATION_REPORT_V2                                                0x06
#define DOOR_LOCK_CONFIGURATION_SET_V2                                                   0x04
#define DOOR_LOCK_OPERATION_GET_V2                                                       0x02
#define DOOR_LOCK_OPERATION_REPORT_V2                                                    0x03
#define DOOR_LOCK_OPERATION_SET_V2                                                       0x01
/* Values used for Door Lock Configuration Report command */
#define DOOR_LOCK_CONFIGURATION_REPORT_CONSTANT_OPERATION_V2                             0x01
#define DOOR_LOCK_CONFIGURATION_REPORT_TIMED_OPERATION_V2                                0x02
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK_V2   0x0F
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK_V2  0xF0
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT_V2 0x04
/* Values used for Door Lock Configuration Set command */
#define DOOR_LOCK_CONFIGURATION_SET_CONSTANT_OPERATION_V2                                0x01
#define DOOR_LOCK_CONFIGURATION_SET_TIMED_OPERATION_V2                                   0x02
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK_V2      0x0F
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK_V2     0xF0
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT_V2    0x04
/* Values used for Door Lock Operation Report command */
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_V2                                     0x00
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT_V2                        0x01
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V2             0x10
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2 0x11
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V2            0x20
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2 0x21
#define DOOR_LOCK_OPERATION_REPORT_DOOR_LOCK_STATE_UNKNOWN_V2                            0xFE
#define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED_V2                                       0xFF
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_MODE_MASK_V2          0x0F
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_MASK_V2         0xF0
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_SHIFT_V2        0x04
/* Values used for Door Lock Operation Set command */
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_V2                                        0x00
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_WITH_TIMEOUT_V2                           0x01
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V2                0x10
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2   0x11
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V2               0x20
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V2  0x21
#define DOOR_LOCK_OPERATION_SET_DOOR_SECURED_V2                                          0xFF

/* Door Lock command class commands */
#define DOOR_LOCK_VERSION_V3                                                             0x03
#define DOOR_LOCK_CONFIGURATION_GET_V3                                                   0x05
#define DOOR_LOCK_CONFIGURATION_REPORT_V3                                                0x06
#define DOOR_LOCK_CONFIGURATION_SET_V3                                                   0x04
#define DOOR_LOCK_OPERATION_GET_V3                                                       0x02
#define DOOR_LOCK_OPERATION_REPORT_V3                                                    0x03
#define DOOR_LOCK_OPERATION_SET_V3                                                       0x01
/* Values used for Door Lock Configuration Report command */
#define DOOR_LOCK_CONFIGURATION_REPORT_CONSTANT_OPERATION_V3                             0x01
#define DOOR_LOCK_CONFIGURATION_REPORT_TIMED_OPERATION_V3                                0x02
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK_V3   0x0F
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK_V3  0xF0
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT_V3 0x04
/* Values used for Door Lock Configuration Set command */
#define DOOR_LOCK_CONFIGURATION_SET_CONSTANT_OPERATION_V3                                0x01
#define DOOR_LOCK_CONFIGURATION_SET_TIMED_OPERATION_V3                                   0x02
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK_V3      0x0F
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK_V3     0xF0
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT_V3    0x04
/* Values used for Door Lock Operation Report command */
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_V3                                     0x00
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT_V3                        0x01
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V3             0x10
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V3 0x11
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V3            0x20
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V3 0x21
#define DOOR_LOCK_OPERATION_REPORT_DOOR_LOCK_STATE_UNKNOWN_V3                            0xFE
#define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED_V3                                       0xFF
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_MODE_MASK_V3          0x0F
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_MASK_V3         0xF0
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_SHIFT_V3        0x04
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_V3                                     0x00
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT_V3                        0x01
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V3             0x10
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V3 0x11
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V3            0x20
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V3 0x21
#define DOOR_LOCK_OPERATION_REPORT_DOOR_LOCK_STATE_UNKNOWN_V3                            0xFE
#define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED_V3                                       0xFF
#define DOOR_LOCK_OPERATION_REPORT_ALREADY_AT_THE_TARGET_VALUE_V3                        0x00
#define DOOR_LOCK_OPERATION_REPORT_UNKNOWN_DURATION_V3                                   0xFE
#define DOOR_LOCK_OPERATION_REPORT_RESERVED_V3                                           0xFF
/* Values used for Door Lock Operation Set command */
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_V3                                        0x00
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_WITH_TIMEOUT_V3                           0x01
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V3                0x10
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V3   0x11
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V3               0x20
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V3  0x21
#define DOOR_LOCK_OPERATION_SET_DOOR_SECURED_V3                                          0xFF

/* Door Lock command class commands */
#define DOOR_LOCK_VERSION_V4                                                             0x04
#define DOOR_LOCK_CONFIGURATION_GET_V4                                                   0x05
#define DOOR_LOCK_CONFIGURATION_REPORT_V4                                                0x06
#define DOOR_LOCK_CONFIGURATION_SET_V4                                                   0x04
#define DOOR_LOCK_OPERATION_GET_V4                                                       0x02
#define DOOR_LOCK_OPERATION_REPORT_V4                                                    0x03
#define DOOR_LOCK_OPERATION_SET_V4                                                       0x01
#define DOOR_LOCK_CAPABILITIES_GET_V4                                                    0x07
#define DOOR_LOCK_CAPABILITIES_REPORT_V4                                                 0x08
/* Values used for Door Lock Configuration Report command */
#define DOOR_LOCK_CONFIGURATION_REPORT_CONSTANT_OPERATION_V4                             0x01
#define DOOR_LOCK_CONFIGURATION_REPORT_TIMED_OPERATION_V4                                0x02
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK_V4   0x0F
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK_V4  0xF0
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT_V4 0x04
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES2_TA_BIT_MASK_V4                        0x01
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES2_BTB_BIT_MASK_V4                       0x02
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES2_RESERVED1_MASK_V4                     0xFC
#define DOOR_LOCK_CONFIGURATION_REPORT_PROPERTIES2_RESERVED1_SHIFT_V4                    0x02
/* Values used for Door Lock Configuration Set command */
#define DOOR_LOCK_CONFIGURATION_SET_CONSTANT_OPERATION_V4                                0x01
#define DOOR_LOCK_CONFIGURATION_SET_TIMED_OPERATION_V4                                   0x02
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_INSIDE_DOOR_HANDLES_ENABLED_MASK_V4      0x0F
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_MASK_V4     0xF0
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES1_OUTSIDE_DOOR_HANDLES_ENABLED_SHIFT_V4    0x04
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES2_TA_BIT_MASK_V4                           0x01
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES2_BTB_BIT_MASK_V4                          0x02
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES2_RESERVED1_MASK_V4                        0xFC
#define DOOR_LOCK_CONFIGURATION_SET_PROPERTIES2_RESERVED1_SHIFT_V4                       0x02
/* Values used for Door Lock Operation Report command */
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_V4                                     0x00
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT_V4                        0x01
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V4             0x10
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V4 0x11
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V4            0x20
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V4 0x21
#define DOOR_LOCK_OPERATION_REPORT_DOOR_MODE_UNKNOWN_V4                                  0xFE
#define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED_V4                                       0xFF
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_INSIDE_DOOR_HANDLES_MODE_MASK_V4          0x0F
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_MASK_V4         0xF0
#define DOOR_LOCK_OPERATION_REPORT_PROPERTIES1_OUTSIDE_DOOR_HANDLES_MODE_SHIFT_V4        0x04
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_V4                                     0x00
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_WITH_TIMEOUT_V4                        0x01
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V4             0x10
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V4 0x11
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V4            0x20
#define DOOR_LOCK_OPERATION_REPORT_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V4 0x21
#define DOOR_LOCK_OPERATION_REPORT_DOOR_MODE_UNKNOWN_V4                                  0xFE
#define DOOR_LOCK_OPERATION_REPORT_DOOR_SECURED_V4                                       0xFF
#define DOOR_LOCK_OPERATION_REPORT_ALREADY_AT_THE_TARGET_VALUE_V4                        0x00
#define DOOR_LOCK_OPERATION_REPORT_UNKNOWN_DURATION_V4                                   0xFE
#define DOOR_LOCK_OPERATION_REPORT_RESERVED_V4                                           0xFF
/* Values used for Door Lock Operation Set command */
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_V4                                        0x00
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_WITH_TIMEOUT_V4                           0x01
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_V4                0x10
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_INSIDE_DOOR_HANDLES_WITH_TIMEOUT_V4   0x11
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_V4               0x20
#define DOOR_LOCK_OPERATION_SET_DOOR_UNSECURED_FOR_OUTSIDE_DOOR_HANDLES_WITH_TIMEOUT_V4  0x21
#define DOOR_LOCK_OPERATION_SET_DOOR_SECURED_V4                                          0xFF
/* Values used for Door Lock Capabilities Report command */
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES1_SUPPORTED_OPERATION_TYPE_BIT_MASK_LENGTH_MASK_V4 0x1F
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK_V4                       0xE0
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                      0x05
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES2_SUPPORTED_INSIDE_HANDLE_MODES_BITMASK_MASK_V4 0x0F
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES2_SUPPORTED_OUTSIDE_HANDLE_MODES_BITMASK_MASK_V4 0xF0
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES2_SUPPORTED_OUTSIDE_HANDLE_MODES_BITMASK_SHIFT_V4 0x04
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES3_BTBS_BIT_MASK_V4                       0x01
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES3_TAS_BIT_MASK_V4                        0x02
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES3_HRS_BIT_MASK_V4                        0x04
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES3_ARS_BIT_MASK_V4                        0x08
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES3_RESERVED_MASK_V4                       0xF0
#define DOOR_LOCK_CAPABILITIES_REPORT_PROPERTIES3_RESERVED_SHIFT_V4                      0x04

/* Energy Production command class commands */
#define ENERGY_PRODUCTION_VERSION                                                        0x01
#define ENERGY_PRODUCTION_GET                                                            0x02
#define ENERGY_PRODUCTION_REPORT                                                         0x03
/* Values used for Energy Production Get command */
#define ENERGY_PRODUCTION_GET_INSTANT_ENERGY_PRODUCTION                                  0x00
#define ENERGY_PRODUCTION_GET_TOTAL_ENERGY_PRODUCTION                                    0x01
#define ENERGY_PRODUCTION_GET_ENERGY_PRODUCTION_TODAY                                    0x02
#define ENERGY_PRODUCTION_GET_TOTAL_PRODUCTION_TIME                                      0x03
/* Values used for Energy Production Report command */
#define ENERGY_PRODUCTION_REPORT_INSTANT_ENERGY_PRODUCTION                               0x00
#define ENERGY_PRODUCTION_REPORT_TOTAL_ENERGY_PRODUCTION                                 0x01
#define ENERGY_PRODUCTION_REPORT_ENERGY_PRODUCTION_TODAY                                 0x02
#define ENERGY_PRODUCTION_REPORT_TOTAL_PRODUCTION_TIME                                   0x03
#define ENERGY_PRODUCTION_REPORT_LEVEL_SIZE_MASK                                         0x07
#define ENERGY_PRODUCTION_REPORT_LEVEL_SCALE_MASK                                        0x18
#define ENERGY_PRODUCTION_REPORT_LEVEL_SCALE_SHIFT                                       0x03
#define ENERGY_PRODUCTION_REPORT_LEVEL_PRECISION_MASK                                    0xE0
#define ENERGY_PRODUCTION_REPORT_LEVEL_PRECISION_SHIFT                                   0x05

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION                                                       0x01
#define FIRMWARE_MD_GET                                                                  0x01
#define FIRMWARE_MD_REPORT                                                               0x02
#define FIRMWARE_UPDATE_MD_GET                                                           0x05
#define FIRMWARE_UPDATE_MD_REPORT                                                        0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET                                                   0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT                                                0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT                                                 0x07
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK                          0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK                                 0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK                       0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK                              0x80
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION                            0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION                        0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION                              0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR        0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE                               0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY                                    0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V2                                                    0x02
#define FIRMWARE_MD_GET_V2                                                               0x01
#define FIRMWARE_MD_REPORT_V2                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V2                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V2                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V2                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V2                                              0x07
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V2                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V2                              0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V2                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V2                           0x80
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V2                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V2                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V2                           0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V2     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V2                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V2                                 0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V3                                                    0x03
#define FIRMWARE_MD_GET_V3                                                               0x01
#define FIRMWARE_MD_REPORT_V3                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V3                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V3                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V3                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V3                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V3                                              0x07
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V3                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V3                              0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V3                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V3                           0x80
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V3                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V3                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_FRAGMENT_SIZE_V3                       0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_NOT_UPGRADABLE_V3                              0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V3                           0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V3     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V3                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_STORED_V3                          0xFE
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V3                                 0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V4                                                    0x04
#define FIRMWARE_MD_GET_V4                                                               0x01
#define FIRMWARE_MD_REPORT_V4                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V4                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V4                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V4                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V4                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V4                                              0x07
#define FIRMWARE_UPDATE_ACTIVATION_SET_V4                                                0x08
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V4                                      0x09
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V4                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V4                              0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V4                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V4                           0x80
/* Values used for Firmware Update Md Request Get command */
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_ACTIVATION_BIT_MASK_V4                0x01
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_MASK_V4                      0xFE
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_SHIFT_V4                     0x01
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V4                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V4                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_FRAGMENT_SIZE_V4                       0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_NOT_UPGRADABLE_V4                              0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V4                           0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V4     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V4                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_MANUFACTURER_ID_V4           0x02
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_ID_V4               0x03
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_TARGET_V4           0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_INFORMATION_V4              0x05
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_FORMAT_V4                   0x06
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INSUFFICIENT_MEMORY_V4                          0x07
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_WAITING_FOR_ACTIVATION_V4          0xFD
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_STORED_V4                          0xFE
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V4                                 0xFF
/* Values used for Firmware Update Activation Status Report command */
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_INVALID_COMBINATION_V4                  0x00
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_ERROR_ACTIVATING_THE_FIRMWARE_V4        0x01
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_FIRMWARE_UPDATE_COMPLETED_SUCCESSFULLY_V4 0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V5                                                    0x05
#define FIRMWARE_MD_GET_V5                                                               0x01
#define FIRMWARE_MD_REPORT_V5                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V5                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V5                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V5                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V5                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V5                                              0x07
#define FIRMWARE_UPDATE_ACTIVATION_SET_V5                                                0x08
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V5                                      0x09
#define FIRMWARE_UPDATE_MD_PREPARE_GET_V5                                                0x0A
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_V5                                             0x0B
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V5                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V5                              0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V5                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V5                           0x80
/* Values used for Firmware Update Md Request Get command */
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_ACTIVATION_BIT_MASK_V5                0x01
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_MASK_V5                      0xFE
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_SHIFT_V5                     0x01
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V5                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V5                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_FRAGMENT_SIZE_V5                       0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_NOT_UPGRADABLE_V5                              0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_HARDWARE_VERSION_V5                    0x04
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V5                           0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V5     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V5                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_MANUFACTURER_ID_V5           0x02
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_ID_V5               0x03
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_TARGET_V5           0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_INFORMATION_V5              0x05
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_FORMAT_V5                   0x06
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INSUFFICIENT_MEMORY_V5                          0x07
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_HARDWARE_VERSION_V5          0x08
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_WAITING_FOR_ACTIVATION_V5          0xFD
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_STORED_V5                          0xFE
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V5                                 0xFF
/* Values used for Firmware Update Activation Status Report command */
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_INVALID_COMBINATION_V5                  0x00
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_ERROR_ACTIVATING_THE_FIRMWARE_V5        0x01
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_FIRMWARE_UPDATE_COMPLETED_SUCCESSFULLY_V5 0xFF
/* Values used for Firmware Update Md Prepare Report command */
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_COMBINATION_V5                         0x00
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_REQUIRES_AUTHENTICATION_V5                     0x01
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_FRAGMENT_SIZE_V5                       0x02
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_NOT_DOWNLOADABLE_V5                            0x03
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_HARDWARE_VERSION_V5                    0x04
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_VALID_COMBINATION_V5                           0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V6                                                    0x06
#define FIRMWARE_MD_GET_V6                                                               0x01
#define FIRMWARE_MD_REPORT_V6                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V6                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V6                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V6                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V6                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V6                                              0x07
#define FIRMWARE_UPDATE_ACTIVATION_SET_V6                                                0x08
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V6                                      0x09
#define FIRMWARE_UPDATE_MD_PREPARE_GET_V6                                                0x0A
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_V6                                             0x0B
/* Values used for Firmware Md Report command */
#define FIRMWARE_MD_REPORT_PROPERTIES1_CC_BIT_MASK_V6                                    0x01
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESERVED1_MASK_V6                                 0xFE
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESERVED1_SHIFT_V6                                0x01
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V6                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V6                              0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V6                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V6                           0x80
/* Values used for Firmware Update Md Request Get command */
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_ACTIVATION_BIT_MASK_V6                0x01
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_MASK_V6                      0xFE
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_SHIFT_V6                     0x01
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V6                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V6                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_FRAGMENT_SIZE_V6                       0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_NOT_UPGRADABLE_V6                              0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_HARDWARE_VERSION_V6                    0x04
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_ANOTHER_FIRMWARE_IMAGE_V6                      0x05
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INSUFFICIENT_BATTERY_LEVEL_V6                  0x06
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V6                           0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V6     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V6                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_MANUFACTURER_ID_V6           0x02
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_ID_V6               0x03
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_TARGET_V6           0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_INFORMATION_V6              0x05
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_FORMAT_V6                   0x06
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INSUFFICIENT_MEMORY_V6                          0x07
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_HARDWARE_VERSION_V6          0x08
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_WAITING_FOR_ACTIVATION_V6          0xFD
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_STORED_V6                          0xFE
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V6                                 0xFF
/* Values used for Firmware Update Activation Status Report command */
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_INVALID_COMBINATION_V6                  0x00
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_ERROR_ACTIVATING_THE_FIRMWARE_V6        0x01
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_FIRMWARE_UPDATE_COMPLETED_SUCCESSFULLY_V6 0xFF
/* Values used for Firmware Update Md Prepare Report command */
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_COMBINATION_V6                         0x00
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_REQUIRES_AUTHENTICATION_V6                     0x01
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_FRAGMENT_SIZE_V6                       0x02
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_NOT_DOWNLOADABLE_V6                            0x03
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_HARDWARE_VERSION_V6                    0x04
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_VALID_COMBINATION_V6                           0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V7                                                    0x07
#define FIRMWARE_MD_GET_V7                                                               0x01
#define FIRMWARE_MD_REPORT_V7                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V7                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V7                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V7                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V7                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V7                                              0x07
#define FIRMWARE_UPDATE_ACTIVATION_SET_V7                                                0x08
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V7                                      0x09
#define FIRMWARE_UPDATE_MD_PREPARE_GET_V7                                                0x0A
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_V7                                             0x0B
/* Values used for Firmware Md Report command */
#define FIRMWARE_MD_REPORT_PROPERTIES1_CC_BIT_MASK_V7                                    0x01
#define FIRMWARE_MD_REPORT_PROPERTIES1_ACTIVATION_BIT_MASK_V7                            0x02
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESERVED1_MASK_V7                                 0xFC
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESERVED1_SHIFT_V7                                0x02
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V7                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_ZERO_BIT_MASK_V7                              0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V7                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V7                           0x80
/* Values used for Firmware Update Md Request Get command */
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_ACTIVATION_BIT_MASK_V7                0x01
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_MASK_V7                      0xFE
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_SHIFT_V7                     0x01
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V7                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V7                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_FRAGMENT_SIZE_V7                       0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_NOT_UPGRADABLE_V7                              0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_HARDWARE_VERSION_V7                    0x04
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_ANOTHER_FIRMWARE_IMAGE_V7                      0x05
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INSUFFICIENT_BATTERY_LEVEL_V7                  0x06
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V7                           0xFF
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V7     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V7                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_MANUFACTURER_ID_V7           0x02
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_ID_V7               0x03
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_TARGET_V7           0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_INFORMATION_V7              0x05
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_FORMAT_V7                   0x06
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INSUFFICIENT_MEMORY_V7                          0x07
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_HARDWARE_VERSION_V7          0x08
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_WAITING_FOR_ACTIVATION_V7          0xFD
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_STORED_V7                          0xFE
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V7                                 0xFF
/* Values used for Firmware Update Activation Status Report command */
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_INVALID_COMBINATION_V7                  0x00
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_ERROR_ACTIVATING_THE_FIRMWARE_V7        0x01
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_FIRMWARE_UPDATE_COMPLETED_SUCCESSFULLY_V7 0xFF
/* Values used for Firmware Update Md Prepare Report command */
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_COMBINATION_V7                         0x00
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_REQUIRES_AUTHENTICATION_V7                     0x01
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_FRAGMENT_SIZE_V7                       0x02
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_NOT_DOWNLOADABLE_V7                            0x03
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_HARDWARE_VERSION_V7                    0x04
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_VALID_COMBINATION_V7                           0xFF

/* Firmware Update Md command class commands */
#define FIRMWARE_UPDATE_MD_VERSION_V8                                                    0x08
#define FIRMWARE_MD_GET_V8                                                               0x01
#define FIRMWARE_MD_REPORT_V8                                                            0x02
#define FIRMWARE_UPDATE_MD_GET_V8                                                        0x05
#define FIRMWARE_UPDATE_MD_REPORT_V8                                                     0x06
#define FIRMWARE_UPDATE_MD_REQUEST_GET_V8                                                0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_V8                                             0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_V8                                              0x07
#define FIRMWARE_UPDATE_ACTIVATION_SET_V8                                                0x08
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V8                                      0x09
#define FIRMWARE_UPDATE_MD_PREPARE_GET_V8                                                0x0A
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_V8                                             0x0B
/* Values used for Firmware Md Report command */
#define FIRMWARE_MD_REPORT_PROPERTIES1_CC_BIT_MASK_V8                                    0x01
#define FIRMWARE_MD_REPORT_PROPERTIES1_ACTIVATION_BIT_MASK_V8                            0x02
#define FIRMWARE_MD_REPORT_PROPERTIES1_NON_SECURE_BIT_MASK_V8                            0x04
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESUME_BIT_MASK_V8                                0x08
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESERVED1_MASK_V8                                 0xF0
#define FIRMWARE_MD_REPORT_PROPERTIES1_RESERVED1_SHIFT_V8                                0x04
/* Values used for Firmware Update Md Get command */
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_REPORT_NUMBER_1_MASK_V8                       0x7F
#define FIRMWARE_UPDATE_MD_GET_PROPERTIES1_RES_BIT_MASK_V8                               0x80
/* Values used for Firmware Update Md Report command */
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_REPORT_NUMBER_1_MASK_V8                    0x7F
#define FIRMWARE_UPDATE_MD_REPORT_PROPERTIES1_LAST_BIT_MASK_V8                           0x80
/* Values used for Firmware Update Md Request Get command */
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_ACTIVATION_BIT_MASK_V8                0x01
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_NON_SECURE_BIT_MASK_V8                0x02
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESUME_BIT_MASK_V8                    0x04
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_MASK_V8                      0xF8
#define FIRMWARE_UPDATE_MD_REQUEST_GET_PROPERTIES1_RESERVED_SHIFT_V8                     0x03
/* Values used for Firmware Update Md Request Report command */
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_COMBINATION_V8                         0x00
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_REQUIRES_AUTHENTICATION_V8                     0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_FRAGMENT_SIZE_V8                       0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_NOT_UPGRADABLE_V8                              0x03
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INVALID_HARDWARE_VERSION_V8                    0x04
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_ANOTHER_FIRMWARE_IMAGE_V8                      0x05
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_INSUFFICIENT_BATTERY_LEVEL_V8                  0x06
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_VALID_COMBINATION_V8                           0xFF
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_PROPERTIES1_RESERVED_BIT_MASK_V8               0x01
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_PROPERTIES1_NON_SECURE_BIT_MASK_V8             0x02
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_PROPERTIES1_RESUME_BIT_MASK_V8                 0x04
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_PROPERTIES1_RESERVED1_MASK_V8                  0xF8
#define FIRMWARE_UPDATE_MD_REQUEST_REPORT_PROPERTIES1_RESERVED1_SHIFT_V8                 0x03
/* Values used for Firmware Update Md Status Report command */
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_WITHOUT_CHECKSUM_ERROR_V8     0x00
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_UNABLE_TO_RECEIVE_V8                            0x01
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_MANUFACTURER_ID_V8           0x02
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_ID_V8               0x03
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_FIRMWARE_TARGET_V8           0x04
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_INFORMATION_V8              0x05
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INVALID_FILE_HEADER_FORMAT_V8                   0x06
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_INSUFFICIENT_MEMORY_V8                          0x07
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_DOES_NOT_MATCH_THE_HARDWARE_VERSION_V8          0x08
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_WAITING_FOR_ACTIVATION_V8          0xFD
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_STORED_V8                          0xFE
#define FIRMWARE_UPDATE_MD_STATUS_REPORT_SUCCESSFULLY_V8                                 0xFF
/* Values used for Firmware Update Activation Status Report command */
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_INVALID_COMBINATION_V8                  0x00
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_ERROR_ACTIVATING_THE_FIRMWARE_V8        0x01
#define FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_FIRMWARE_UPDATE_COMPLETED_SUCCESSFULLY_V8 0xFF
/* Values used for Firmware Update Md Prepare Report command */
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_COMBINATION_V8                         0x00
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_REQUIRES_AUTHENTICATION_V8                     0x01
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_FRAGMENT_SIZE_V8                       0x02
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_NOT_DOWNLOADABLE_V8                            0x03
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_INVALID_HARDWARE_VERSION_V8                    0x04
#define FIRMWARE_UPDATE_MD_PREPARE_REPORT_VALID_COMBINATION_V8                           0xFF

/* Geographic Location command class commands */
#define GEOGRAPHIC_LOCATION_VERSION                                                      0x01
#define GEOGRAPHIC_LOCATION_GET                                                          0x02
#define GEOGRAPHIC_LOCATION_REPORT                                                       0x03
#define GEOGRAPHIC_LOCATION_SET                                                          0x01
/* Values used for Geographic Location Report command */
#define GEOGRAPHIC_LOCATION_REPORT_LEVEL_LONGITUDE_MINUTES_MASK                          0x7F
#define GEOGRAPHIC_LOCATION_REPORT_LEVEL_LONG_SIGN_BIT_MASK                              0x80
#define GEOGRAPHIC_LOCATION_REPORT_LEVEL2_LATITUDE_MINUTES_MASK                          0x7F
#define GEOGRAPHIC_LOCATION_REPORT_LEVEL2_LAT_SIGN_BIT_MASK                              0x80
/* Values used for Geographic Location Set command */
#define GEOGRAPHIC_LOCATION_SET_LEVEL_LONGITUDE_MINUTES_MASK                             0x7F
#define GEOGRAPHIC_LOCATION_SET_LEVEL_LONG_SIGN_BIT_MASK                                 0x80
#define GEOGRAPHIC_LOCATION_SET_LEVEL2_LATITUDE_MINUTES_MASK                             0x7F
#define GEOGRAPHIC_LOCATION_SET_LEVEL2_LAT_SIGN_BIT_MASK                                 0x80

/* Grouping Name command class commands */
#define GROUPING_NAME_VERSION                                                            0x01
#define GROUPING_NAME_GET                                                                0x02
#define GROUPING_NAME_REPORT                                                             0x03
#define GROUPING_NAME_SET                                                                0x01
/* Values used for Grouping Name Report command */
#define GROUPING_NAME_REPORT_PROPERTIES1_CHAR_PRESENTATION_MASK                          0x07
#define GROUPING_NAME_REPORT_PROPERTIES1_RESERVED_MASK                                   0xF8
#define GROUPING_NAME_REPORT_PROPERTIES1_RESERVED_SHIFT                                  0x03
/* Values used for Grouping Name Set command */
#define GROUPING_NAME_SET_PROPERTIES1_CHAR_PRESENTATION_MASK                             0x07
#define GROUPING_NAME_SET_PROPERTIES1_RESERVED_MASK                                      0xF8
#define GROUPING_NAME_SET_PROPERTIES1_RESERVED_SHIFT                                     0x03

/* Hail command class commands */
#define HAIL_VERSION                                                                     0x01
#define HAIL                                                                             0x01

/* Hrv Control command class commands */
#define HRV_CONTROL_VERSION                                                              0x01
#define HRV_CONTROL_BYPASS_GET                                                           0x05
#define HRV_CONTROL_BYPASS_REPORT                                                        0x06
#define HRV_CONTROL_BYPASS_SET                                                           0x04
#define HRV_CONTROL_MODE_GET                                                             0x02
#define HRV_CONTROL_MODE_REPORT                                                          0x03
#define HRV_CONTROL_MODE_SET                                                             0x01
#define HRV_CONTROL_MODE_SUPPORTED_GET                                                   0x0A
#define HRV_CONTROL_MODE_SUPPORTED_REPORT                                                0x0B
#define HRV_CONTROL_VENTILATION_RATE_GET                                                 0x08
#define HRV_CONTROL_VENTILATION_RATE_REPORT                                              0x09
#define HRV_CONTROL_VENTILATION_RATE_SET                                                 0x07
/* Values used for Hrv Control Mode Report command */
#define HRV_CONTROL_MODE_REPORT_PROPERTIES1_MODE_MASK                                    0x1F
#define HRV_CONTROL_MODE_REPORT_MODE_OFF                                                 0x00
#define HRV_CONTROL_MODE_REPORT_MODE_DEMAND_AUTOMATIC                                    0x01
#define HRV_CONTROL_MODE_REPORT_MODE_SCHEDULE                                            0x02
#define HRV_CONTROL_MODE_REPORT_MODE_ENERGY_SAVINGS_MODE                                 0x03
#define HRV_CONTROL_MODE_REPORT_MODE_MANUAL                                              0x04
#define HRV_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_MASK                                0xE0
#define HRV_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT                               0x05
/* Values used for Hrv Control Mode Set command */
#define HRV_CONTROL_MODE_SET_PROPERTIES1_MODE_MASK                                       0x1F
#define HRV_CONTROL_MODE_SET_MODE_OFF                                                    0x00
#define HRV_CONTROL_MODE_SET_MODE_DEMAND_AUTOMATIC                                       0x01
#define HRV_CONTROL_MODE_SET_MODE_SCHEDULE                                               0x02
#define HRV_CONTROL_MODE_SET_MODE_ENERGY_SAVINGS_MODE                                    0x03
#define HRV_CONTROL_MODE_SET_MODE_MANUAL                                                 0x04
#define HRV_CONTROL_MODE_SET_PROPERTIES1_RESERVED_MASK                                   0xE0
#define HRV_CONTROL_MODE_SET_PROPERTIES1_RESERVED_SHIFT                                  0x05
/* Values used for Hrv Control Mode Supported Report command */
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_PROPERTIES1_MANUAL_CONTROL_SUPPORTED_MASK      0x0F
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_BYPASS_OPEN_CLOSE     0x00
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_BYPASS_AUTO           0x01
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_MODULATED_BYPASS      0x02
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_MANUAL_CONTROL_SUPPORTED_VENTILATION_RATE      0x03
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK                      0xF0
#define HRV_CONTROL_MODE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT                     0x04

/* Hrv Status command class commands */
#define HRV_STATUS_VERSION                                                               0x01
#define HRV_STATUS_GET                                                                   0x01
#define HRV_STATUS_REPORT                                                                0x02
#define HRV_STATUS_SUPPORTED_GET                                                         0x03
#define HRV_STATUS_SUPPORTED_REPORT                                                      0x04
/* Values used for Hrv Status Get command */
#define HRV_STATUS_GET_OUTDOOR_AIR_TEMPERATURE                                           0x00
#define HRV_STATUS_GET_SUPPLY_AIR_TEMPERATURE                                            0x01
#define HRV_STATUS_GET_EXHAUST_AIR_TEMPERATURE                                           0x02
#define HRV_STATUS_GET_DISCHARGE_AIR_TEMPERATURE                                         0x03
#define HRV_STATUS_GET_ROOM_TEMPERATURE                                                  0x04
#define HRV_STATUS_GET_RELATIVE_HUMIDITY_IN_ROOM                                         0x05
#define HRV_STATUS_GET_REMAINING_FILTER_LIFE                                             0x06
/* Values used for Hrv Status Report command */
#define HRV_STATUS_REPORT_OUTDOOR_AIR_TEMPERATURE                                        0x00
#define HRV_STATUS_REPORT_SUPPLY_AIR_TEMPERATURE                                         0x01
#define HRV_STATUS_REPORT_EXHAUST_AIR_TEMPERATURE                                        0x02
#define HRV_STATUS_REPORT_DISCHARGE_AIR_TEMPERATURE                                      0x03
#define HRV_STATUS_REPORT_ROOM_TEMPERATURE                                               0x04
#define HRV_STATUS_REPORT_RELATIVE_HUMIDITY_IN_ROOM                                      0x05
#define HRV_STATUS_REPORT_REMAINING_FILTER_LIFE                                          0x06
#define HRV_STATUS_REPORT_PROPERTIES1_SIZE_MASK                                          0x07
#define HRV_STATUS_REPORT_PROPERTIES1_SCALE_MASK                                         0x18
#define HRV_STATUS_REPORT_PROPERTIES1_SCALE_SHIFT                                        0x03
#define HRV_STATUS_REPORT_PROPERTIES1_PRECISION_MASK                                     0xE0
#define HRV_STATUS_REPORT_PROPERTIES1_PRECISION_SHIFT                                    0x05

/* Indicator command class commands */
#define INDICATOR_VERSION                                                                0x01
#define INDICATOR_GET                                                                    0x02
#define INDICATOR_REPORT                                                                 0x03
#define INDICATOR_SET                                                                    0x01

/* Indicator command class commands */
#define INDICATOR_VERSION_V2                                                             0x02
#define INDICATOR_GET_V2                                                                 0x02
#define INDICATOR_REPORT_V2                                                              0x03
#define INDICATOR_SET_V2                                                                 0x01
#define INDICATOR_SUPPORTED_GET_V2                                                       0x04
#define INDICATOR_SUPPORTED_REPORT_V2                                                    0x05
/* Values used for Indicator Get command */
#define INDICATOR_GET_NA_V2                                                              0x00
#define INDICATOR_GET_ARMED_V2                                                           0x01
#define INDICATOR_GET_NOT_ARMED_V2                                                       0x02
#define INDICATOR_GET_READY_V2                                                           0x03
#define INDICATOR_GET_FAULT_V2                                                           0x04
#define INDICATOR_GET_BUSY_V2                                                            0x05
#define INDICATOR_GET_ENTER_ID_V2                                                        0x06
#define INDICATOR_GET_ENTER_PIN_V2                                                       0x07
#define INDICATOR_GET_OK_V2                                                              0x08
#define INDICATOR_GET_NOT_OK_V2                                                          0x09
#define INDICATOR_GET_ZONE1_ARMED_V2                                                     0x20
#define INDICATOR_GET_ZONE2_ARMED_V2                                                     0x21
#define INDICATOR_GET_ZONE3_ARMED_V2                                                     0x22
#define INDICATOR_GET_ZONE4_ARMED_V2                                                     0x23
#define INDICATOR_GET_ZONE5_ARMED_V2                                                     0x24
#define INDICATOR_GET_ZONE6_ARMED_V2                                                     0x25
#define INDICATOR_GET_LCD_BACKLIGHT_V2                                                   0x30
#define INDICATOR_GET_BUTTON_BACKLIGHT_LETTERS_V2                                        0x40
#define INDICATOR_GET_BUTTON_BACKLIGHT_DIGITS_V2                                         0x41
#define INDICATOR_GET_BUTTON_BACKLIGHT_COMMAND_V2                                        0x42
#define INDICATOR_GET_BUTTON1_INDICATION_V2                                              0x43
#define INDICATOR_GET_BUTTON2_INDICATION_V2                                              0x44
#define INDICATOR_GET_BUTTON3_INDICATION_V2                                              0x45
#define INDICATOR_GET_BUTTON4_INDICATION_V2                                              0x46
#define INDICATOR_GET_BUTTON5_INDICATION_V2                                              0x47
#define INDICATOR_GET_BUTTON6_INDICATION_V2                                              0x48
#define INDICATOR_GET_BUTTON7_INDICATION_V2                                              0x49
#define INDICATOR_GET_BUTTON8_INDICATION_V2                                              0x4A
#define INDICATOR_GET_BUTTON9_INDICATION_V2                                              0x4B
#define INDICATOR_GET_BUTTON10_INDICATION_V2                                             0x4C
#define INDICATOR_GET_BUTTON11_INDICATION_V2                                             0x4D
#define INDICATOR_GET_BUTTON12_INDICATION_V2                                             0x4E
#define INDICATOR_GET_BUZZER_V2                                                          0xF0
/* Values used for Indicator Report command */
#define INDICATOR_REPORT_PROPERTIES1_INDICATOR_OBJECT_COUNT_MASK_V2                      0x1F
#define INDICATOR_REPORT_PROPERTIES1_RESERVED_MASK_V2                                    0xE0
#define INDICATOR_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                   0x05
#define INDICATOR_REPORT_NA_V2                                                           0x00
#define INDICATOR_REPORT_ARMED_V2                                                        0x01
#define INDICATOR_REPORT_NOT_ARMED_V2                                                    0x02
#define INDICATOR_REPORT_READY_V2                                                        0x03
#define INDICATOR_REPORT_FAULT_V2                                                        0x04
#define INDICATOR_REPORT_BUSY_V2                                                         0x05
#define INDICATOR_REPORT_ENTER_ID_V2                                                     0x06
#define INDICATOR_REPORT_ENTER_PIN_V2                                                    0x07
#define INDICATOR_REPORT_OK_V2                                                           0x08
#define INDICATOR_REPORT_NOT_OK_V2                                                       0x09
#define INDICATOR_REPORT_ZONE1_ARMED_V2                                                  0x20
#define INDICATOR_REPORT_ZONE2_ARMED_V2                                                  0x21
#define INDICATOR_REPORT_ZONE3_ARMED_V2                                                  0x22
#define INDICATOR_REPORT_ZONE4_ARMED_V2                                                  0x23
#define INDICATOR_REPORT_ZONE5_ARMED_V2                                                  0x24
#define INDICATOR_REPORT_ZONE6_ARMED_V2                                                  0x25
#define INDICATOR_REPORT_LCD_BACKLIGHT_V2                                                0x30
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_LETTERS_V2                                     0x40
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_DIGITS_V2                                      0x41
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_COMMAND_V2                                     0x42
#define INDICATOR_REPORT_BUTTON1_INDICATION_V2                                           0x43
#define INDICATOR_REPORT_BUTTON2_INDICATION_V2                                           0x44
#define INDICATOR_REPORT_BUTTON3_INDICATION_V2                                           0x45
#define INDICATOR_REPORT_BUTTON4_INDICATION_V2                                           0x46
#define INDICATOR_REPORT_BUTTON5_INDICATION_V2                                           0x47
#define INDICATOR_REPORT_BUTTON6_INDICATION_V2                                           0x48
#define INDICATOR_REPORT_BUTTON7_INDICATION_V2                                           0x49
#define INDICATOR_REPORT_BUTTON8_INDICATION_V2                                           0x4A
#define INDICATOR_REPORT_BUTTON9_INDICATION_V2                                           0x4B
#define INDICATOR_REPORT_BUTTON10_INDICATION_V2                                          0x4C
#define INDICATOR_REPORT_BUTTON11_INDICATION_V2                                          0x4D
#define INDICATOR_REPORT_BUTTON12_INDICATION_V2                                          0x4E
#define INDICATOR_REPORT_BUZZER_V2                                                       0xF0
#define INDICATOR_REPORT_MULTILEVEL_V2                                                   0x01
#define INDICATOR_REPORT_BINARY_V2                                                       0x02
#define INDICATOR_REPORT_ON_OFF_PERIOD_V2                                                0x03
#define INDICATOR_REPORT_ON_OFF_CYCLES_V2                                                0x04
#define INDICATOR_REPORT_LOW_POWER_V2                                                    0x10
/* Values used for Indicator Set command */
#define INDICATOR_SET_PROPERTIES1_INDICATOR_OBJECT_COUNT_MASK_V2                         0x1F
#define INDICATOR_SET_PROPERTIES1_RESERVED_MASK_V2                                       0xE0
#define INDICATOR_SET_PROPERTIES1_RESERVED_SHIFT_V2                                      0x05
#define INDICATOR_SET_NA_V2                                                              0x00
#define INDICATOR_SET_ARMED_V2                                                           0x01
#define INDICATOR_SET_NOT_ARMED_V2                                                       0x02
#define INDICATOR_SET_READY_V2                                                           0x03
#define INDICATOR_SET_FAULT_V2                                                           0x04
#define INDICATOR_SET_BUSY_V2                                                            0x05
#define INDICATOR_SET_ENTER_ID_V2                                                        0x06
#define INDICATOR_SET_ENTER_PIN_V2                                                       0x07
#define INDICATOR_SET_OK_V2                                                              0x08
#define INDICATOR_SET_NOT_OK_V2                                                          0x09
#define INDICATOR_SET_ZONE1_ARMED_V2                                                     0x20
#define INDICATOR_SET_ZONE2_ARMED_V2                                                     0x21
#define INDICATOR_SET_ZONE3_ARMED_V2                                                     0x22
#define INDICATOR_SET_ZONE4_ARMED_V2                                                     0x23
#define INDICATOR_SET_ZONE5_ARMED_V2                                                     0x24
#define INDICATOR_SET_ZONE6_ARMED_V2                                                     0x25
#define INDICATOR_SET_LCD_BACKLIGHT_V2                                                   0x30
#define INDICATOR_SET_BUTTON_BACKLIGHT_LETTERS_V2                                        0x40
#define INDICATOR_SET_BUTTON_BACKLIGHT_DIGITS_V2                                         0x41
#define INDICATOR_SET_BUTTON_BACKLIGHT_COMMAND_V2                                        0x42
#define INDICATOR_SET_BUTTON1_INDICATION_V2                                              0x43
#define INDICATOR_SET_BUTTON2_INDICATION_V2                                              0x44
#define INDICATOR_SET_BUTTON3_INDICATION_V2                                              0x45
#define INDICATOR_SET_BUTTON4_INDICATION_V2                                              0x46
#define INDICATOR_SET_BUTTON5_INDICATION_V2                                              0x47
#define INDICATOR_SET_BUTTON6_INDICATION_V2                                              0x48
#define INDICATOR_SET_BUTTON7_INDICATION_V2                                              0x49
#define INDICATOR_SET_BUTTON8_INDICATION_V2                                              0x4A
#define INDICATOR_SET_BUTTON9_INDICATION_V2                                              0x4B
#define INDICATOR_SET_BUTTON10_INDICATION_V2                                             0x4C
#define INDICATOR_SET_BUTTON11_INDICATION_V2                                             0x4D
#define INDICATOR_SET_BUTTON12_INDICATION_V2                                             0x4E
#define INDICATOR_SET_BUZZER_V2                                                          0xF0
#define INDICATOR_SET_MULTILEVEL_V2                                                      0x01
#define INDICATOR_SET_BINARY_V2                                                          0x02
#define INDICATOR_SET_ON_OFF_PERIOD_V2                                                   0x03
#define INDICATOR_SET_ON_OFF_CYCLES_V2                                                   0x04
#define INDICATOR_SET_LOW_POWER_V2                                                       0x10
/* Values used for Indicator Supported Get command */
#define INDICATOR_SUPPORTED_GET_NA_V2                                                    0x00
#define INDICATOR_SUPPORTED_GET_ARMED_V2                                                 0x01
#define INDICATOR_SUPPORTED_GET_NOT_ARMED_V2                                             0x02
#define INDICATOR_SUPPORTED_GET_READY_V2                                                 0x03
#define INDICATOR_SUPPORTED_GET_FAULT_V2                                                 0x04
#define INDICATOR_SUPPORTED_GET_BUSY_V2                                                  0x05
#define INDICATOR_SUPPORTED_GET_ENTER_ID_V2                                              0x06
#define INDICATOR_SUPPORTED_GET_ENTER_PIN_V2                                             0x07
#define INDICATOR_SUPPORTED_GET_OK_V2                                                    0x08
#define INDICATOR_SUPPORTED_GET_NOT_OK_V2                                                0x09
#define INDICATOR_SUPPORTED_GET_ZONE1_ARMED_V2                                           0x20
#define INDICATOR_SUPPORTED_GET_ZONE2_ARMED_V2                                           0x21
#define INDICATOR_SUPPORTED_GET_ZONE3_ARMED_V2                                           0x22
#define INDICATOR_SUPPORTED_GET_ZONE4_ARMED_V2                                           0x23
#define INDICATOR_SUPPORTED_GET_ZONE5_ARMED_V2                                           0x24
#define INDICATOR_SUPPORTED_GET_ZONE6_ARMED_V2                                           0x25
#define INDICATOR_SUPPORTED_GET_LCD_BACKLIGHT_V2                                         0x30
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_LETTERS_V2                              0x40
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_DIGITS_V2                               0x41
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_COMMAND_V2                              0x42
#define INDICATOR_SUPPORTED_GET_BUTTON1_INDICATION_V2                                    0x43
#define INDICATOR_SUPPORTED_GET_BUTTON2_INDICATION_V2                                    0x44
#define INDICATOR_SUPPORTED_GET_BUTTON3_INDICATION_V2                                    0x45
#define INDICATOR_SUPPORTED_GET_BUTTON4_INDICATION_V2                                    0x46
#define INDICATOR_SUPPORTED_GET_BUTTON5_INDICATION_V2                                    0x47
#define INDICATOR_SUPPORTED_GET_BUTTON6_INDICATION_V2                                    0x48
#define INDICATOR_SUPPORTED_GET_BUTTON7_INDICATION_V2                                    0x49
#define INDICATOR_SUPPORTED_GET_BUTTON8_INDICATION_V2                                    0x4A
#define INDICATOR_SUPPORTED_GET_BUTTON9_INDICATION_V2                                    0x4B
#define INDICATOR_SUPPORTED_GET_BUTTON10_INDICATION_V2                                   0x4C
#define INDICATOR_SUPPORTED_GET_BUTTON11_INDICATION_V2                                   0x4D
#define INDICATOR_SUPPORTED_GET_BUTTON12_INDICATION_V2                                   0x4E
#define INDICATOR_SUPPORTED_GET_BUZZER_V2                                                0xF0
/* Values used for Indicator Supported Report command */
#define INDICATOR_SUPPORTED_REPORT_NA_V2                                                 0x00
#define INDICATOR_SUPPORTED_REPORT_ARMED_V2                                              0x01
#define INDICATOR_SUPPORTED_REPORT_NOT_ARMED_V2                                          0x02
#define INDICATOR_SUPPORTED_REPORT_READY_V2                                              0x03
#define INDICATOR_SUPPORTED_REPORT_FAULT_V2                                              0x04
#define INDICATOR_SUPPORTED_REPORT_BUSY_V2                                               0x05
#define INDICATOR_SUPPORTED_REPORT_ENTER_ID_V2                                           0x06
#define INDICATOR_SUPPORTED_REPORT_ENTER_PIN_V2                                          0x07
#define INDICATOR_SUPPORTED_REPORT_OK_V2                                                 0x08
#define INDICATOR_SUPPORTED_REPORT_NOT_OK_V2                                             0x09
#define INDICATOR_SUPPORTED_REPORT_ZONE1_ARMED_V2                                        0x20
#define INDICATOR_SUPPORTED_REPORT_ZONE2_ARMED_V2                                        0x21
#define INDICATOR_SUPPORTED_REPORT_ZONE3_ARMED_V2                                        0x22
#define INDICATOR_SUPPORTED_REPORT_ZONE4_ARMED_V2                                        0x23
#define INDICATOR_SUPPORTED_REPORT_ZONE5_ARMED_V2                                        0x24
#define INDICATOR_SUPPORTED_REPORT_ZONE6_ARMED_V2                                        0x25
#define INDICATOR_SUPPORTED_REPORT_LCD_BACKLIGHT_V2                                      0x30
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_LETTERS_V2                           0x40
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_DIGITS_V2                            0x41
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_COMMAND_V2                           0x42
#define INDICATOR_SUPPORTED_REPORT_BUTTON1_INDICATION_V2                                 0x43
#define INDICATOR_SUPPORTED_REPORT_BUTTON2_INDICATION_V2                                 0x44
#define INDICATOR_SUPPORTED_REPORT_BUTTON3_INDICATION_V2                                 0x45
#define INDICATOR_SUPPORTED_REPORT_BUTTON4_INDICATION_V2                                 0x46
#define INDICATOR_SUPPORTED_REPORT_BUTTON5_INDICATION_V2                                 0x47
#define INDICATOR_SUPPORTED_REPORT_BUTTON6_INDICATION_V2                                 0x48
#define INDICATOR_SUPPORTED_REPORT_BUTTON7_INDICATION_V2                                 0x49
#define INDICATOR_SUPPORTED_REPORT_BUTTON8_INDICATION_V2                                 0x4A
#define INDICATOR_SUPPORTED_REPORT_BUTTON9_INDICATION_V2                                 0x4B
#define INDICATOR_SUPPORTED_REPORT_BUTTON10_INDICATION_V2                                0x4C
#define INDICATOR_SUPPORTED_REPORT_BUTTON11_INDICATION_V2                                0x4D
#define INDICATOR_SUPPORTED_REPORT_BUTTON12_INDICATION_V2                                0x4E
#define INDICATOR_SUPPORTED_REPORT_BUZZER_V2                                             0xF0
#define INDICATOR_SUPPORTED_REPORT_NA_V2                                                 0x00
#define INDICATOR_SUPPORTED_REPORT_ARMED_V2                                              0x01
#define INDICATOR_SUPPORTED_REPORT_NOT_ARMED_V2                                          0x02
#define INDICATOR_SUPPORTED_REPORT_READY_V2                                              0x03
#define INDICATOR_SUPPORTED_REPORT_FAULT_V2                                              0x04
#define INDICATOR_SUPPORTED_REPORT_BUSY_V2                                               0x05
#define INDICATOR_SUPPORTED_REPORT_ENTER_ID_V2                                           0x06
#define INDICATOR_SUPPORTED_REPORT_ENTER_PIN_V2                                          0x07
#define INDICATOR_SUPPORTED_REPORT_OK_V2                                                 0x08
#define INDICATOR_SUPPORTED_REPORT_NOT_OK_V2                                             0x09
#define INDICATOR_SUPPORTED_REPORT_ZONE1_ARMED_V2                                        0x20
#define INDICATOR_SUPPORTED_REPORT_ZONE2_ARMED_V2                                        0x21
#define INDICATOR_SUPPORTED_REPORT_ZONE3_ARMED_V2                                        0x22
#define INDICATOR_SUPPORTED_REPORT_ZONE4_ARMED_V2                                        0x23
#define INDICATOR_SUPPORTED_REPORT_ZONE5_ARMED_V2                                        0x24
#define INDICATOR_SUPPORTED_REPORT_ZONE6_ARMED_V2                                        0x25
#define INDICATOR_SUPPORTED_REPORT_LCD_BACKLIGHT_V2                                      0x30
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_LETTERS_V2                           0x40
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_DIGITS_V2                            0x41
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_COMMAND_V2                           0x42
#define INDICATOR_SUPPORTED_REPORT_BUTTON1_INDICATION_V2                                 0x43
#define INDICATOR_SUPPORTED_REPORT_BUTTON2_INDICATION_V2                                 0x44
#define INDICATOR_SUPPORTED_REPORT_BUTTON3_INDICATION_V2                                 0x45
#define INDICATOR_SUPPORTED_REPORT_BUTTON4_INDICATION_V2                                 0x46
#define INDICATOR_SUPPORTED_REPORT_BUTTON5_INDICATION_V2                                 0x47
#define INDICATOR_SUPPORTED_REPORT_BUTTON6_INDICATION_V2                                 0x48
#define INDICATOR_SUPPORTED_REPORT_BUTTON7_INDICATION_V2                                 0x49
#define INDICATOR_SUPPORTED_REPORT_BUTTON8_INDICATION_V2                                 0x4A
#define INDICATOR_SUPPORTED_REPORT_BUTTON9_INDICATION_V2                                 0x4B
#define INDICATOR_SUPPORTED_REPORT_BUTTON10_INDICATION_V2                                0x4C
#define INDICATOR_SUPPORTED_REPORT_BUTTON11_INDICATION_V2                                0x4D
#define INDICATOR_SUPPORTED_REPORT_BUTTON12_INDICATION_V2                                0x4E
#define INDICATOR_SUPPORTED_REPORT_BUZZER_V2                                             0xF0
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_PROPERTY_SUPPORTED_BIT_MASK_LENGTH_MASK_V2 0x1F
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V2                          0xE0
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                         0x05

/* Indicator command class commands */
#define INDICATOR_VERSION_V3                                                             0x03
#define INDICATOR_GET_V3                                                                 0x02
#define INDICATOR_REPORT_V3                                                              0x03
#define INDICATOR_SET_V3                                                                 0x01
#define INDICATOR_SUPPORTED_GET_V3                                                       0x04
#define INDICATOR_SUPPORTED_REPORT_V3                                                    0x05
/* Values used for Indicator Get command */
#define INDICATOR_GET_NA_V3                                                              0x00
#define INDICATOR_GET_ARMED_V3                                                           0x01
#define INDICATOR_GET_NOT_ARMED_V3                                                       0x02
#define INDICATOR_GET_READY_V3                                                           0x03
#define INDICATOR_GET_FAULT_V3                                                           0x04
#define INDICATOR_GET_BUSY_V3                                                            0x05
#define INDICATOR_GET_ENTER_ID_V3                                                        0x06
#define INDICATOR_GET_ENTER_PIN_V3                                                       0x07
#define INDICATOR_GET_OK_V3                                                              0x08
#define INDICATOR_GET_NOT_OK_V3                                                          0x09
#define INDICATOR_GET_ARMED_STAY_V3                                                      0x0A
#define INDICATOR_GET_ARMED_AWAY_V3                                                      0x0B
#define INDICATOR_GET_ALARMING_V3                                                        0x0C
#define INDICATOR_GET_ALARMING_BURGLAR_V3                                                0x0D
#define INDICATOR_GET_ALARMING_SMOKE_FIRE_V3                                             0x0E
#define INDICATOR_GET_ALARMING_CARBON_MONOXIDE_V3                                        0x0F
#define INDICATOR_GET_BYPASS_CHALLENGE_V3                                                0x10
#define INDICATOR_GET_ENTRY_DELAY_V3                                                     0x11
#define INDICATOR_GET_EXIT_DELAY_V3                                                      0x12
#define INDICATOR_GET_ZONE1_ARMED_V3                                                     0x20
#define INDICATOR_GET_ZONE2_ARMED_V3                                                     0x21
#define INDICATOR_GET_ZONE3_ARMED_V3                                                     0x22
#define INDICATOR_GET_ZONE4_ARMED_V3                                                     0x23
#define INDICATOR_GET_ZONE5_ARMED_V3                                                     0x24
#define INDICATOR_GET_ZONE6_ARMED_V3                                                     0x25
#define INDICATOR_GET_LCD_BACKLIGHT_V3                                                   0x30
#define INDICATOR_GET_BUTTON_BACKLIGHT_LETTERS_V3                                        0x40
#define INDICATOR_GET_BUTTON_BACKLIGHT_DIGITS_V3                                         0x41
#define INDICATOR_GET_BUTTON_BACKLIGHT_COMMAND_V3                                        0x42
#define INDICATOR_GET_BUTTON1_INDICATION_V3                                              0x43
#define INDICATOR_GET_BUTTON2_INDICATION_V3                                              0x44
#define INDICATOR_GET_BUTTON3_INDICATION_V3                                              0x45
#define INDICATOR_GET_BUTTON4_INDICATION_V3                                              0x46
#define INDICATOR_GET_BUTTON5_INDICATION_V3                                              0x47
#define INDICATOR_GET_BUTTON6_INDICATION_V3                                              0x48
#define INDICATOR_GET_BUTTON7_INDICATION_V3                                              0x49
#define INDICATOR_GET_BUTTON8_INDICATION_V3                                              0x4A
#define INDICATOR_GET_BUTTON9_INDICATION_V3                                              0x4B
#define INDICATOR_GET_BUTTON10_INDICATION_V3                                             0x4C
#define INDICATOR_GET_BUTTON11_INDICATION_V3                                             0x4D
#define INDICATOR_GET_BUTTON12_INDICATION_V3                                             0x4E
#define INDICATOR_GET_NODE_IDENTIFY_V3                                                   0x50
#define INDICATOR_GET_BUZZER_V3                                                          0xF0
/* Values used for Indicator Report command */
#define INDICATOR_REPORT_PROPERTIES1_INDICATOR_OBJECT_COUNT_MASK_V3                      0x1F
#define INDICATOR_REPORT_PROPERTIES1_RESERVED_MASK_V3                                    0xE0
#define INDICATOR_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                                   0x05
#define INDICATOR_REPORT_NA_V3                                                           0x00
#define INDICATOR_REPORT_ARMED_V3                                                        0x01
#define INDICATOR_REPORT_NOT_ARMED_V3                                                    0x02
#define INDICATOR_REPORT_READY_V3                                                        0x03
#define INDICATOR_REPORT_FAULT_V3                                                        0x04
#define INDICATOR_REPORT_BUSY_V3                                                         0x05
#define INDICATOR_REPORT_ENTER_ID_V3                                                     0x06
#define INDICATOR_REPORT_ENTER_PIN_V3                                                    0x07
#define INDICATOR_REPORT_OK_V3                                                           0x08
#define INDICATOR_REPORT_NOT_OK_V3                                                       0x09
#define INDICATOR_REPORT_ARMED_STAY_V3                                                   0x0A
#define INDICATOR_REPORT_ARMED_AWAY_V3                                                   0x0B
#define INDICATOR_REPORT_ALARMING_V3                                                     0x0C
#define INDICATOR_REPORT_ALARMING_BURGLAR_V3                                             0x0D
#define INDICATOR_REPORT_ALARMING_SMOKE_FIRE_V3                                          0x0E
#define INDICATOR_REPORT_ALARMING_CARBON_MONOXIDE_V3                                     0x0F
#define INDICATOR_REPORT_BYPASS_CHALLENGE_V3                                             0x10
#define INDICATOR_REPORT_ENTRY_DELAY_V3                                                  0x11
#define INDICATOR_REPORT_EXIT_DELAY_V3                                                   0x12
#define INDICATOR_REPORT_ZONE1_ARMED_V3                                                  0x20
#define INDICATOR_REPORT_ZONE2_ARMED_V3                                                  0x21
#define INDICATOR_REPORT_ZONE3_ARMED_V3                                                  0x22
#define INDICATOR_REPORT_ZONE4_ARMED_V3                                                  0x23
#define INDICATOR_REPORT_ZONE5_ARMED_V3                                                  0x24
#define INDICATOR_REPORT_ZONE6_ARMED_V3                                                  0x25
#define INDICATOR_REPORT_LCD_BACKLIGHT_V3                                                0x30
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_LETTERS_V3                                     0x40
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_DIGITS_V3                                      0x41
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_COMMAND_V3                                     0x42
#define INDICATOR_REPORT_BUTTON1_INDICATION_V3                                           0x43
#define INDICATOR_REPORT_BUTTON2_INDICATION_V3                                           0x44
#define INDICATOR_REPORT_BUTTON3_INDICATION_V3                                           0x45
#define INDICATOR_REPORT_BUTTON4_INDICATION_V3                                           0x46
#define INDICATOR_REPORT_BUTTON5_INDICATION_V3                                           0x47
#define INDICATOR_REPORT_BUTTON6_INDICATION_V3                                           0x48
#define INDICATOR_REPORT_BUTTON7_INDICATION_V3                                           0x49
#define INDICATOR_REPORT_BUTTON8_INDICATION_V3                                           0x4A
#define INDICATOR_REPORT_BUTTON9_INDICATION_V3                                           0x4B
#define INDICATOR_REPORT_BUTTON10_INDICATION_V3                                          0x4C
#define INDICATOR_REPORT_BUTTON11_INDICATION_V3                                          0x4D
#define INDICATOR_REPORT_BUTTON12_INDICATION_V3                                          0x4E
#define INDICATOR_REPORT_NODE_IDENTIFY_V3                                                0x50
#define INDICATOR_REPORT_BUZZER_V3                                                       0xF0
#define INDICATOR_REPORT_MULTILEVEL_V3                                                   0x01
#define INDICATOR_REPORT_BINARY_V3                                                       0x02
#define INDICATOR_REPORT_ON_OFF_PERIOD_V3                                                0x03
#define INDICATOR_REPORT_ON_OFF_CYCLES_V3                                                0x04
#define INDICATOR_REPORT_ONE_TIME_ON_OFF_PERIOD_V3                                       0x05
#define INDICATOR_REPORT_TIMEOUT_MINUTES_V3                                              0x06
#define INDICATOR_REPORT_TIMEOUT_SECONDS_V3                                              0x07
#define INDICATOR_REPORT_TIMEOUT_1_100_SECONDS_V3                                        0x08
#define INDICATOR_REPORT_SPECIFIC_VOLUME_V3                                              0x09
#define INDICATOR_REPORT_LOW_POWER_V3                                                    0x10
/* Values used for Indicator Set command */
#define INDICATOR_SET_PROPERTIES1_INDICATOR_OBJECT_COUNT_MASK_V3                         0x1F
#define INDICATOR_SET_PROPERTIES1_RESERVED_MASK_V3                                       0xE0
#define INDICATOR_SET_PROPERTIES1_RESERVED_SHIFT_V3                                      0x05
#define INDICATOR_SET_NA_V3                                                              0x00
#define INDICATOR_SET_ARMED_V3                                                           0x01
#define INDICATOR_SET_NOT_ARMED_V3                                                       0x02
#define INDICATOR_SET_READY_V3                                                           0x03
#define INDICATOR_SET_FAULT_V3                                                           0x04
#define INDICATOR_SET_BUSY_V3                                                            0x05
#define INDICATOR_SET_ENTER_ID_V3                                                        0x06
#define INDICATOR_SET_ENTER_PIN_V3                                                       0x07
#define INDICATOR_SET_OK_V3                                                              0x08
#define INDICATOR_SET_NOT_OK_V3                                                          0x09
#define INDICATOR_SET_ARMED_STAY_V3                                                      0x0A
#define INDICATOR_SET_ARMED_AWAY_V3                                                      0x0B
#define INDICATOR_SET_ALARMING_V3                                                        0x0C
#define INDICATOR_SET_ALARMING_BURGLAR_V3                                                0x0D
#define INDICATOR_SET_ALARMING_SMOKE_FIRE_V3                                             0x0E
#define INDICATOR_SET_ALARMING_CARBON_MONOXIDE_V3                                        0x0F
#define INDICATOR_SET_BYPASS_CHALLENGE_V3                                                0x10
#define INDICATOR_SET_ENTRY_DELAY_V3                                                     0x11
#define INDICATOR_SET_EXIT_DELAY_V3                                                      0x12
#define INDICATOR_SET_ZONE1_ARMED_V3                                                     0x20
#define INDICATOR_SET_ZONE2_ARMED_V3                                                     0x21
#define INDICATOR_SET_ZONE3_ARMED_V3                                                     0x22
#define INDICATOR_SET_ZONE4_ARMED_V3                                                     0x23
#define INDICATOR_SET_ZONE5_ARMED_V3                                                     0x24
#define INDICATOR_SET_ZONE6_ARMED_V3                                                     0x25
#define INDICATOR_SET_LCD_BACKLIGHT_V3                                                   0x30
#define INDICATOR_SET_BUTTON_BACKLIGHT_LETTERS_V3                                        0x40
#define INDICATOR_SET_BUTTON_BACKLIGHT_DIGITS_V3                                         0x41
#define INDICATOR_SET_BUTTON_BACKLIGHT_COMMAND_V3                                        0x42
#define INDICATOR_SET_BUTTON1_INDICATION_V3                                              0x43
#define INDICATOR_SET_BUTTON2_INDICATION_V3                                              0x44
#define INDICATOR_SET_BUTTON3_INDICATION_V3                                              0x45
#define INDICATOR_SET_BUTTON4_INDICATION_V3                                              0x46
#define INDICATOR_SET_BUTTON5_INDICATION_V3                                              0x47
#define INDICATOR_SET_BUTTON6_INDICATION_V3                                              0x48
#define INDICATOR_SET_BUTTON7_INDICATION_V3                                              0x49
#define INDICATOR_SET_BUTTON8_INDICATION_V3                                              0x4A
#define INDICATOR_SET_BUTTON9_INDICATION_V3                                              0x4B
#define INDICATOR_SET_BUTTON10_INDICATION_V3                                             0x4C
#define INDICATOR_SET_BUTTON11_INDICATION_V3                                             0x4D
#define INDICATOR_SET_BUTTON12_INDICATION_V3                                             0x4E
#define INDICATOR_SET_NODE_IDENTIFY_V3                                                   0x50
#define INDICATOR_SET_BUZZER_V3                                                          0xF0
#define INDICATOR_SET_MULTILEVEL_V3                                                      0x01
#define INDICATOR_SET_BINARY_V3                                                          0x02
#define INDICATOR_SET_ON_OFF_PERIOD_V3                                                   0x03
#define INDICATOR_SET_ON_OFF_CYCLES_V3                                                   0x04
#define INDICATOR_SET_ONE_TIME_ON_OFF_PERIOD_V3                                          0x05
#define INDICATOR_SET_TIMEOUT_MINUTES_V3                                                 0x06
#define INDICATOR_SET_TIMEOUT_SECONDS_V3                                                 0x07
#define INDICATOR_SET_TIMEOUT_1_100_SECONDS_V3                                           0x08
#define INDICATOR_SET_SPECIFIC_VOLUME_V3                                                 0x09
#define INDICATOR_SET_LOW_POWER_V3                                                       0x10
/* Values used for Indicator Supported Get command */
#define INDICATOR_SUPPORTED_GET_NA_V3                                                    0x00
#define INDICATOR_SUPPORTED_GET_ARMED_V3                                                 0x01
#define INDICATOR_SUPPORTED_GET_NOT_ARMED_V3                                             0x02
#define INDICATOR_SUPPORTED_GET_READY_V3                                                 0x03
#define INDICATOR_SUPPORTED_GET_FAULT_V3                                                 0x04
#define INDICATOR_SUPPORTED_GET_BUSY_V3                                                  0x05
#define INDICATOR_SUPPORTED_GET_ENTER_ID_V3                                              0x06
#define INDICATOR_SUPPORTED_GET_ENTER_PIN_V3                                             0x07
#define INDICATOR_SUPPORTED_GET_OK_V3                                                    0x08
#define INDICATOR_SUPPORTED_GET_NOT_OK_V3                                                0x09
#define INDICATOR_SUPPORTED_GET_ARMED_STAY_V3                                            0x0A
#define INDICATOR_SUPPORTED_GET_ARMED_AWAY_V3                                            0x0B
#define INDICATOR_SUPPORTED_GET_ALARMING_V3                                              0x0C
#define INDICATOR_SUPPORTED_GET_ALARMING_BURGLAR_V3                                      0x0D
#define INDICATOR_SUPPORTED_GET_ALARMING_SMOKE_FIRE_V3                                   0x0E
#define INDICATOR_SUPPORTED_GET_ALARMING_CARBON_MONOXIDE_V3                              0x0F
#define INDICATOR_SUPPORTED_GET_BYPASS_CHALLENGE_V3                                      0x10
#define INDICATOR_SUPPORTED_GET_ENTRY_DELAY_V3                                           0x11
#define INDICATOR_SUPPORTED_GET_EXIT_DELAY_V3                                            0x12
#define INDICATOR_SUPPORTED_GET_ZONE1_ARMED_V3                                           0x20
#define INDICATOR_SUPPORTED_GET_ZONE2_ARMED_V3                                           0x21
#define INDICATOR_SUPPORTED_GET_ZONE3_ARMED_V3                                           0x22
#define INDICATOR_SUPPORTED_GET_ZONE4_ARMED_V3                                           0x23
#define INDICATOR_SUPPORTED_GET_ZONE5_ARMED_V3                                           0x24
#define INDICATOR_SUPPORTED_GET_ZONE6_ARMED_V3                                           0x25
#define INDICATOR_SUPPORTED_GET_LCD_BACKLIGHT_V3                                         0x30
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_LETTERS_V3                              0x40
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_DIGITS_V3                               0x41
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_COMMAND_V3                              0x42
#define INDICATOR_SUPPORTED_GET_BUTTON1_INDICATION_V3                                    0x43
#define INDICATOR_SUPPORTED_GET_BUTTON2_INDICATION_V3                                    0x44
#define INDICATOR_SUPPORTED_GET_BUTTON3_INDICATION_V3                                    0x45
#define INDICATOR_SUPPORTED_GET_BUTTON4_INDICATION_V3                                    0x46
#define INDICATOR_SUPPORTED_GET_BUTTON5_INDICATION_V3                                    0x47
#define INDICATOR_SUPPORTED_GET_BUTTON6_INDICATION_V3                                    0x48
#define INDICATOR_SUPPORTED_GET_BUTTON7_INDICATION_V3                                    0x49
#define INDICATOR_SUPPORTED_GET_BUTTON8_INDICATION_V3                                    0x4A
#define INDICATOR_SUPPORTED_GET_BUTTON9_INDICATION_V3                                    0x4B
#define INDICATOR_SUPPORTED_GET_BUTTON10_INDICATION_V3                                   0x4C
#define INDICATOR_SUPPORTED_GET_BUTTON11_INDICATION_V3                                   0x4D
#define INDICATOR_SUPPORTED_GET_BUTTON12_INDICATION_V3                                   0x4E
#define INDICATOR_SUPPORTED_GET_NODE_IDENTIFY_V3                                         0x50
#define INDICATOR_SUPPORTED_GET_BUZZER_V3                                                0xF0
/* Values used for Indicator Supported Report command */
#define INDICATOR_SUPPORTED_REPORT_NA_V3                                                 0x00
#define INDICATOR_SUPPORTED_REPORT_ARMED_V3                                              0x01
#define INDICATOR_SUPPORTED_REPORT_NOT_ARMED_V3                                          0x02
#define INDICATOR_SUPPORTED_REPORT_READY_V3                                              0x03
#define INDICATOR_SUPPORTED_REPORT_FAULT_V3                                              0x04
#define INDICATOR_SUPPORTED_REPORT_BUSY_V3                                               0x05
#define INDICATOR_SUPPORTED_REPORT_ENTER_ID_V3                                           0x06
#define INDICATOR_SUPPORTED_REPORT_ENTER_PIN_V3                                          0x07
#define INDICATOR_SUPPORTED_REPORT_OK_V3                                                 0x08
#define INDICATOR_SUPPORTED_REPORT_NOT_OK_V3                                             0x09
#define INDICATOR_SUPPORTED_REPORT_ARMED_STAY_V3                                         0x0A
#define INDICATOR_SUPPORTED_REPORT_ARMED_AWAY_V3                                         0x0B
#define INDICATOR_SUPPORTED_REPORT_ALARMING_V3                                           0x0C
#define INDICATOR_SUPPORTED_REPORT_ALARMING_BURGLAR_V3                                   0x0D
#define INDICATOR_SUPPORTED_REPORT_ALARMING_SMOKE_FIRE_V3                                0x0E
#define INDICATOR_SUPPORTED_REPORT_ALARMING_CARBON_MONOXIDE_V3                           0x0F
#define INDICATOR_SUPPORTED_REPORT_BYPASS_CHALLENGE_V3                                   0x10
#define INDICATOR_SUPPORTED_REPORT_ENTRY_DELAY_V3                                        0x11
#define INDICATOR_SUPPORTED_REPORT_EXIT_DELAY_V3                                         0x12
#define INDICATOR_SUPPORTED_REPORT_ZONE1_ARMED_V3                                        0x20
#define INDICATOR_SUPPORTED_REPORT_ZONE2_ARMED_V3                                        0x21
#define INDICATOR_SUPPORTED_REPORT_ZONE3_ARMED_V3                                        0x22
#define INDICATOR_SUPPORTED_REPORT_ZONE4_ARMED_V3                                        0x23
#define INDICATOR_SUPPORTED_REPORT_ZONE5_ARMED_V3                                        0x24
#define INDICATOR_SUPPORTED_REPORT_ZONE6_ARMED_V3                                        0x25
#define INDICATOR_SUPPORTED_REPORT_LCD_BACKLIGHT_V3                                      0x30
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_LETTERS_V3                           0x40
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_DIGITS_V3                            0x41
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_COMMAND_V3                           0x42
#define INDICATOR_SUPPORTED_REPORT_BUTTON1_INDICATION_V3                                 0x43
#define INDICATOR_SUPPORTED_REPORT_BUTTON2_INDICATION_V3                                 0x44
#define INDICATOR_SUPPORTED_REPORT_BUTTON3_INDICATION_V3                                 0x45
#define INDICATOR_SUPPORTED_REPORT_BUTTON4_INDICATION_V3                                 0x46
#define INDICATOR_SUPPORTED_REPORT_BUTTON5_INDICATION_V3                                 0x47
#define INDICATOR_SUPPORTED_REPORT_BUTTON6_INDICATION_V3                                 0x48
#define INDICATOR_SUPPORTED_REPORT_BUTTON7_INDICATION_V3                                 0x49
#define INDICATOR_SUPPORTED_REPORT_BUTTON8_INDICATION_V3                                 0x4A
#define INDICATOR_SUPPORTED_REPORT_BUTTON9_INDICATION_V3                                 0x4B
#define INDICATOR_SUPPORTED_REPORT_BUTTON10_INDICATION_V3                                0x4C
#define INDICATOR_SUPPORTED_REPORT_BUTTON11_INDICATION_V3                                0x4D
#define INDICATOR_SUPPORTED_REPORT_BUTTON12_INDICATION_V3                                0x4E
#define INDICATOR_SUPPORTED_REPORT_NODE_IDENTIFY_V3                                      0x50
#define INDICATOR_SUPPORTED_REPORT_BUZZER_V3                                             0xF0
#define INDICATOR_SUPPORTED_REPORT_NA_V3                                                 0x00
#define INDICATOR_SUPPORTED_REPORT_ARMED_V3                                              0x01
#define INDICATOR_SUPPORTED_REPORT_NOT_ARMED_V3                                          0x02
#define INDICATOR_SUPPORTED_REPORT_READY_V3                                              0x03
#define INDICATOR_SUPPORTED_REPORT_FAULT_V3                                              0x04
#define INDICATOR_SUPPORTED_REPORT_BUSY_V3                                               0x05
#define INDICATOR_SUPPORTED_REPORT_ENTER_ID_V3                                           0x06
#define INDICATOR_SUPPORTED_REPORT_ENTER_PIN_V3                                          0x07
#define INDICATOR_SUPPORTED_REPORT_OK_V3                                                 0x08
#define INDICATOR_SUPPORTED_REPORT_NOT_OK_V3                                             0x09
#define INDICATOR_SUPPORTED_REPORT_ARMED_STAY_V3                                         0x0A
#define INDICATOR_SUPPORTED_REPORT_ARMED_AWAY_V3                                         0x0B
#define INDICATOR_SUPPORTED_REPORT_ALARMING_V3                                           0x0C
#define INDICATOR_SUPPORTED_REPORT_ALARMING_BURGLAR_V3                                   0x0D
#define INDICATOR_SUPPORTED_REPORT_ALARMING_SMOKE_FIRE_V3                                0x0E
#define INDICATOR_SUPPORTED_REPORT_ALARMING_CARBON_MONOXIDE_V3                           0x0F
#define INDICATOR_SUPPORTED_REPORT_BYPASS_CHALLENGE_V3                                   0x10
#define INDICATOR_SUPPORTED_REPORT_ENTRY_DELAY_V3                                        0x11
#define INDICATOR_SUPPORTED_REPORT_EXIT_DELAY_V3                                         0x12
#define INDICATOR_SUPPORTED_REPORT_ZONE1_ARMED_V3                                        0x20
#define INDICATOR_SUPPORTED_REPORT_ZONE2_ARMED_V3                                        0x21
#define INDICATOR_SUPPORTED_REPORT_ZONE3_ARMED_V3                                        0x22
#define INDICATOR_SUPPORTED_REPORT_ZONE4_ARMED_V3                                        0x23
#define INDICATOR_SUPPORTED_REPORT_ZONE5_ARMED_V3                                        0x24
#define INDICATOR_SUPPORTED_REPORT_ZONE6_ARMED_V3                                        0x25
#define INDICATOR_SUPPORTED_REPORT_LCD_BACKLIGHT_V3                                      0x30
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_LETTERS_V3                           0x40
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_DIGITS_V3                            0x41
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_COMMAND_V3                           0x42
#define INDICATOR_SUPPORTED_REPORT_BUTTON1_INDICATION_V3                                 0x43
#define INDICATOR_SUPPORTED_REPORT_BUTTON2_INDICATION_V3                                 0x44
#define INDICATOR_SUPPORTED_REPORT_BUTTON3_INDICATION_V3                                 0x45
#define INDICATOR_SUPPORTED_REPORT_BUTTON4_INDICATION_V3                                 0x46
#define INDICATOR_SUPPORTED_REPORT_BUTTON5_INDICATION_V3                                 0x47
#define INDICATOR_SUPPORTED_REPORT_BUTTON6_INDICATION_V3                                 0x48
#define INDICATOR_SUPPORTED_REPORT_BUTTON7_INDICATION_V3                                 0x49
#define INDICATOR_SUPPORTED_REPORT_BUTTON8_INDICATION_V3                                 0x4A
#define INDICATOR_SUPPORTED_REPORT_BUTTON9_INDICATION_V3                                 0x4B
#define INDICATOR_SUPPORTED_REPORT_BUTTON10_INDICATION_V3                                0x4C
#define INDICATOR_SUPPORTED_REPORT_BUTTON11_INDICATION_V3                                0x4D
#define INDICATOR_SUPPORTED_REPORT_BUTTON12_INDICATION_V3                                0x4E
#define INDICATOR_SUPPORTED_REPORT_NODE_IDENTIFY_V3                                      0x50
#define INDICATOR_SUPPORTED_REPORT_BUZZER_V3                                             0xF0
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_PROPERTY_SUPPORTED_BIT_MASK_LENGTH_MASK_V3 0x1F
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                          0xE0
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                         0x05

/* Indicator command class commands */
#define INDICATOR_VERSION_V4                                                             0x04
#define INDICATOR_GET_V4                                                                 0x02
#define INDICATOR_REPORT_V4                                                              0x03
#define INDICATOR_SET_V4                                                                 0x01
#define INDICATOR_SUPPORTED_GET_V4                                                       0x04
#define INDICATOR_SUPPORTED_REPORT_V4                                                    0x05
#define INDICATOR_DESCRIPTION_GET_V4                                                     0x06
#define INDICATOR_DESCRIPTION_REPORT_V4                                                  0x07
/* Values used for Indicator Get command */
#define INDICATOR_GET_NA_V4                                                              0x00
#define INDICATOR_GET_ARMED_V4                                                           0x01
#define INDICATOR_GET_NOT_ARMED_V4                                                       0x02
#define INDICATOR_GET_READY_V4                                                           0x03
#define INDICATOR_GET_FAULT_V4                                                           0x04
#define INDICATOR_GET_BUSY_V4                                                            0x05
#define INDICATOR_GET_ENTER_ID_V4                                                        0x06
#define INDICATOR_GET_ENTER_PIN_V4                                                       0x07
#define INDICATOR_GET_OK_V4                                                              0x08
#define INDICATOR_GET_NOT_OK_V4                                                          0x09
#define INDICATOR_GET_ARMED_STAY_V4                                                      0x0A
#define INDICATOR_GET_ARMED_AWAY_V4                                                      0x0B
#define INDICATOR_GET_ALARMING_V4                                                        0x0C
#define INDICATOR_GET_ALARMING_BURGLAR_V4                                                0x0D
#define INDICATOR_GET_ALARMING_SMOKE_FIRE_V4                                             0x0E
#define INDICATOR_GET_ALARMING_CARBON_MONOXIDE_V4                                        0x0F
#define INDICATOR_GET_BYPASS_CHALLENGE_V4                                                0x10
#define INDICATOR_GET_ENTRY_DELAY_V4                                                     0x11
#define INDICATOR_GET_EXIT_DELAY_V4                                                      0x12
#define INDICATOR_GET_ZONE1_ARMED_V4                                                     0x20
#define INDICATOR_GET_ZONE2_ARMED_V4                                                     0x21
#define INDICATOR_GET_ZONE3_ARMED_V4                                                     0x22
#define INDICATOR_GET_ZONE4_ARMED_V4                                                     0x23
#define INDICATOR_GET_ZONE5_ARMED_V4                                                     0x24
#define INDICATOR_GET_ZONE6_ARMED_V4                                                     0x25
#define INDICATOR_GET_LCD_BACKLIGHT_V4                                                   0x30
#define INDICATOR_GET_BUTTON_BACKLIGHT_LETTERS_V4                                        0x40
#define INDICATOR_GET_BUTTON_BACKLIGHT_DIGITS_V4                                         0x41
#define INDICATOR_GET_BUTTON_BACKLIGHT_COMMAND_V4                                        0x42
#define INDICATOR_GET_BUTTON1_INDICATION_V4                                              0x43
#define INDICATOR_GET_BUTTON2_INDICATION_V4                                              0x44
#define INDICATOR_GET_BUTTON3_INDICATION_V4                                              0x45
#define INDICATOR_GET_BUTTON4_INDICATION_V4                                              0x46
#define INDICATOR_GET_BUTTON5_INDICATION_V4                                              0x47
#define INDICATOR_GET_BUTTON6_INDICATION_V4                                              0x48
#define INDICATOR_GET_BUTTON7_INDICATION_V4                                              0x49
#define INDICATOR_GET_BUTTON8_INDICATION_V4                                              0x4A
#define INDICATOR_GET_BUTTON9_INDICATION_V4                                              0x4B
#define INDICATOR_GET_BUTTON10_INDICATION_V4                                             0x4C
#define INDICATOR_GET_BUTTON11_INDICATION_V4                                             0x4D
#define INDICATOR_GET_BUTTON12_INDICATION_V4                                             0x4E
#define INDICATOR_GET_NODE_IDENTIFY_V4                                                   0x50
#define INDICATOR_GET_BUZZER_V4                                                          0xF0
/* Values used for Indicator Report command */
#define INDICATOR_REPORT_PROPERTIES1_INDICATOR_OBJECT_COUNT_MASK_V4                      0x1F
#define INDICATOR_REPORT_PROPERTIES1_RESERVED_MASK_V4                                    0xE0
#define INDICATOR_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                                   0x05
#define INDICATOR_REPORT_NA_V4                                                           0x00
#define INDICATOR_REPORT_ARMED_V4                                                        0x01
#define INDICATOR_REPORT_NOT_ARMED_V4                                                    0x02
#define INDICATOR_REPORT_READY_V4                                                        0x03
#define INDICATOR_REPORT_FAULT_V4                                                        0x04
#define INDICATOR_REPORT_BUSY_V4                                                         0x05
#define INDICATOR_REPORT_ENTER_ID_V4                                                     0x06
#define INDICATOR_REPORT_ENTER_PIN_V4                                                    0x07
#define INDICATOR_REPORT_OK_V4                                                           0x08
#define INDICATOR_REPORT_NOT_OK_V4                                                       0x09
#define INDICATOR_REPORT_ARMED_STAY_V4                                                   0x0A
#define INDICATOR_REPORT_ARMED_AWAY_V4                                                   0x0B
#define INDICATOR_REPORT_ALARMING_V4                                                     0x0C
#define INDICATOR_REPORT_ALARMING_BURGLAR_V4                                             0x0D
#define INDICATOR_REPORT_ALARMING_SMOKE_FIRE_V4                                          0x0E
#define INDICATOR_REPORT_ALARMING_CARBON_MONOXIDE_V4                                     0x0F
#define INDICATOR_REPORT_BYPASS_CHALLENGE_V4                                             0x10
#define INDICATOR_REPORT_ENTRY_DELAY_V4                                                  0x11
#define INDICATOR_REPORT_EXIT_DELAY_V4                                                   0x12
#define INDICATOR_REPORT_ZONE1_ARMED_V4                                                  0x20
#define INDICATOR_REPORT_ZONE2_ARMED_V4                                                  0x21
#define INDICATOR_REPORT_ZONE3_ARMED_V4                                                  0x22
#define INDICATOR_REPORT_ZONE4_ARMED_V4                                                  0x23
#define INDICATOR_REPORT_ZONE5_ARMED_V4                                                  0x24
#define INDICATOR_REPORT_ZONE6_ARMED_V4                                                  0x25
#define INDICATOR_REPORT_LCD_BACKLIGHT_V4                                                0x30
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_LETTERS_V4                                     0x40
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_DIGITS_V4                                      0x41
#define INDICATOR_REPORT_BUTTON_BACKLIGHT_COMMAND_V4                                     0x42
#define INDICATOR_REPORT_BUTTON1_INDICATION_V4                                           0x43
#define INDICATOR_REPORT_BUTTON2_INDICATION_V4                                           0x44
#define INDICATOR_REPORT_BUTTON3_INDICATION_V4                                           0x45
#define INDICATOR_REPORT_BUTTON4_INDICATION_V4                                           0x46
#define INDICATOR_REPORT_BUTTON5_INDICATION_V4                                           0x47
#define INDICATOR_REPORT_BUTTON6_INDICATION_V4                                           0x48
#define INDICATOR_REPORT_BUTTON7_INDICATION_V4                                           0x49
#define INDICATOR_REPORT_BUTTON8_INDICATION_V4                                           0x4A
#define INDICATOR_REPORT_BUTTON9_INDICATION_V4                                           0x4B
#define INDICATOR_REPORT_BUTTON10_INDICATION_V4                                          0x4C
#define INDICATOR_REPORT_BUTTON11_INDICATION_V4                                          0x4D
#define INDICATOR_REPORT_BUTTON12_INDICATION_V4                                          0x4E
#define INDICATOR_REPORT_NODE_IDENTIFY_V4                                                0x50
#define INDICATOR_REPORT_BUZZER_V4                                                       0xF0
#define INDICATOR_REPORT_MULTILEVEL_V4                                                   0x01
#define INDICATOR_REPORT_BINARY_V4                                                       0x02
#define INDICATOR_REPORT_ON_OFF_PERIOD_V4                                                0x03
#define INDICATOR_REPORT_ON_OFF_CYCLES_V4                                                0x04
#define INDICATOR_REPORT_ONE_TIME_ON_OFF_PERIOD_V4                                       0x05
#define INDICATOR_REPORT_TIMEOUT_MINUTES_V4                                              0x06
#define INDICATOR_REPORT_TIMEOUT_SECONDS_V4                                              0x07
#define INDICATOR_REPORT_TIMEOUT_1_100_SECONDS_V4                                        0x08
#define INDICATOR_REPORT_SPECIFIC_VOLUME_V4                                              0x09
#define INDICATOR_REPORT_LOW_POWER_V4                                                    0x10
/* Values used for Indicator Set command */
#define INDICATOR_SET_PROPERTIES1_INDICATOR_OBJECT_COUNT_MASK_V4                         0x1F
#define INDICATOR_SET_PROPERTIES1_RESERVED_MASK_V4                                       0xE0
#define INDICATOR_SET_PROPERTIES1_RESERVED_SHIFT_V4                                      0x05
#define INDICATOR_SET_NA_V4                                                              0x00
#define INDICATOR_SET_ARMED_V4                                                           0x01
#define INDICATOR_SET_NOT_ARMED_V4                                                       0x02
#define INDICATOR_SET_READY_V4                                                           0x03
#define INDICATOR_SET_FAULT_V4                                                           0x04
#define INDICATOR_SET_BUSY_V4                                                            0x05
#define INDICATOR_SET_ENTER_ID_V4                                                        0x06
#define INDICATOR_SET_ENTER_PIN_V4                                                       0x07
#define INDICATOR_SET_OK_V4                                                              0x08
#define INDICATOR_SET_NOT_OK_V4                                                          0x09
#define INDICATOR_SET_ARMED_STAY_V4                                                      0x0A
#define INDICATOR_SET_ARMED_AWAY_V4                                                      0x0B
#define INDICATOR_SET_ALARMING_V4                                                        0x0C
#define INDICATOR_SET_ALARMING_BURGLAR_V4                                                0x0D
#define INDICATOR_SET_ALARMING_SMOKE_FIRE_V4                                             0x0E
#define INDICATOR_SET_ALARMING_CARBON_MONOXIDE_V4                                        0x0F
#define INDICATOR_SET_BYPASS_CHALLENGE_V4                                                0x10
#define INDICATOR_SET_ENTRY_DELAY_V4                                                     0x11
#define INDICATOR_SET_EXIT_DELAY_V4                                                      0x12
#define INDICATOR_SET_ZONE1_ARMED_V4                                                     0x20
#define INDICATOR_SET_ZONE2_ARMED_V4                                                     0x21
#define INDICATOR_SET_ZONE3_ARMED_V4                                                     0x22
#define INDICATOR_SET_ZONE4_ARMED_V4                                                     0x23
#define INDICATOR_SET_ZONE5_ARMED_V4                                                     0x24
#define INDICATOR_SET_ZONE6_ARMED_V4                                                     0x25
#define INDICATOR_SET_LCD_BACKLIGHT_V4                                                   0x30
#define INDICATOR_SET_BUTTON_BACKLIGHT_LETTERS_V4                                        0x40
#define INDICATOR_SET_BUTTON_BACKLIGHT_DIGITS_V4                                         0x41
#define INDICATOR_SET_BUTTON_BACKLIGHT_COMMAND_V4                                        0x42
#define INDICATOR_SET_BUTTON1_INDICATION_V4                                              0x43
#define INDICATOR_SET_BUTTON2_INDICATION_V4                                              0x44
#define INDICATOR_SET_BUTTON3_INDICATION_V4                                              0x45
#define INDICATOR_SET_BUTTON4_INDICATION_V4                                              0x46
#define INDICATOR_SET_BUTTON5_INDICATION_V4                                              0x47
#define INDICATOR_SET_BUTTON6_INDICATION_V4                                              0x48
#define INDICATOR_SET_BUTTON7_INDICATION_V4                                              0x49
#define INDICATOR_SET_BUTTON8_INDICATION_V4                                              0x4A
#define INDICATOR_SET_BUTTON9_INDICATION_V4                                              0x4B
#define INDICATOR_SET_BUTTON10_INDICATION_V4                                             0x4C
#define INDICATOR_SET_BUTTON11_INDICATION_V4                                             0x4D
#define INDICATOR_SET_BUTTON12_INDICATION_V4                                             0x4E
#define INDICATOR_SET_NODE_IDENTIFY_V4                                                   0x50
#define INDICATOR_SET_BUZZER_V4                                                          0xF0
#define INDICATOR_SET_MULTILEVEL_V4                                                      0x01
#define INDICATOR_SET_BINARY_V4                                                          0x02
#define INDICATOR_SET_ON_OFF_PERIOD_V4                                                   0x03
#define INDICATOR_SET_ON_OFF_CYCLES_V4                                                   0x04
#define INDICATOR_SET_ONE_TIME_ON_OFF_PERIOD_V4                                          0x05
#define INDICATOR_SET_TIMEOUT_MINUTES_V4                                                 0x06
#define INDICATOR_SET_TIMEOUT_SECONDS_V4                                                 0x07
#define INDICATOR_SET_TIMEOUT_1_100_SECONDS_V4                                           0x08
#define INDICATOR_SET_SPECIFIC_VOLUME_V4                                                 0x09
#define INDICATOR_SET_LOW_POWER_V4                                                       0x10
/* Values used for Indicator Supported Get command */
#define INDICATOR_SUPPORTED_GET_NA_V4                                                    0x00
#define INDICATOR_SUPPORTED_GET_ARMED_V4                                                 0x01
#define INDICATOR_SUPPORTED_GET_NOT_ARMED_V4                                             0x02
#define INDICATOR_SUPPORTED_GET_READY_V4                                                 0x03
#define INDICATOR_SUPPORTED_GET_FAULT_V4                                                 0x04
#define INDICATOR_SUPPORTED_GET_BUSY_V4                                                  0x05
#define INDICATOR_SUPPORTED_GET_ENTER_ID_V4                                              0x06
#define INDICATOR_SUPPORTED_GET_ENTER_PIN_V4                                             0x07
#define INDICATOR_SUPPORTED_GET_OK_V4                                                    0x08
#define INDICATOR_SUPPORTED_GET_NOT_OK_V4                                                0x09
#define INDICATOR_SUPPORTED_GET_ARMED_STAY_V4                                            0x0A
#define INDICATOR_SUPPORTED_GET_ARMED_AWAY_V4                                            0x0B
#define INDICATOR_SUPPORTED_GET_ALARMING_V4                                              0x0C
#define INDICATOR_SUPPORTED_GET_ALARMING_BURGLAR_V4                                      0x0D
#define INDICATOR_SUPPORTED_GET_ALARMING_SMOKE_FIRE_V4                                   0x0E
#define INDICATOR_SUPPORTED_GET_ALARMING_CARBON_MONOXIDE_V4                              0x0F
#define INDICATOR_SUPPORTED_GET_BYPASS_CHALLENGE_V4                                      0x10
#define INDICATOR_SUPPORTED_GET_ENTRY_DELAY_V4                                           0x11
#define INDICATOR_SUPPORTED_GET_EXIT_DELAY_V4                                            0x12
#define INDICATOR_SUPPORTED_GET_ZONE1_ARMED_V4                                           0x20
#define INDICATOR_SUPPORTED_GET_ZONE2_ARMED_V4                                           0x21
#define INDICATOR_SUPPORTED_GET_ZONE3_ARMED_V4                                           0x22
#define INDICATOR_SUPPORTED_GET_ZONE4_ARMED_V4                                           0x23
#define INDICATOR_SUPPORTED_GET_ZONE5_ARMED_V4                                           0x24
#define INDICATOR_SUPPORTED_GET_ZONE6_ARMED_V4                                           0x25
#define INDICATOR_SUPPORTED_GET_LCD_BACKLIGHT_V4                                         0x30
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_LETTERS_V4                              0x40
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_DIGITS_V4                               0x41
#define INDICATOR_SUPPORTED_GET_BUTTON_BACKLIGHT_COMMAND_V4                              0x42
#define INDICATOR_SUPPORTED_GET_BUTTON1_INDICATION_V4                                    0x43
#define INDICATOR_SUPPORTED_GET_BUTTON2_INDICATION_V4                                    0x44
#define INDICATOR_SUPPORTED_GET_BUTTON3_INDICATION_V4                                    0x45
#define INDICATOR_SUPPORTED_GET_BUTTON4_INDICATION_V4                                    0x46
#define INDICATOR_SUPPORTED_GET_BUTTON5_INDICATION_V4                                    0x47
#define INDICATOR_SUPPORTED_GET_BUTTON6_INDICATION_V4                                    0x48
#define INDICATOR_SUPPORTED_GET_BUTTON7_INDICATION_V4                                    0x49
#define INDICATOR_SUPPORTED_GET_BUTTON8_INDICATION_V4                                    0x4A
#define INDICATOR_SUPPORTED_GET_BUTTON9_INDICATION_V4                                    0x4B
#define INDICATOR_SUPPORTED_GET_BUTTON10_INDICATION_V4                                   0x4C
#define INDICATOR_SUPPORTED_GET_BUTTON11_INDICATION_V4                                   0x4D
#define INDICATOR_SUPPORTED_GET_BUTTON12_INDICATION_V4                                   0x4E
#define INDICATOR_SUPPORTED_GET_NODE_IDENTIFY_V4                                         0x50
#define INDICATOR_SUPPORTED_GET_BUZZER_V4                                                0xF0
/* Values used for Indicator Supported Report command */
#define INDICATOR_SUPPORTED_REPORT_NA_V4                                                 0x00
#define INDICATOR_SUPPORTED_REPORT_ARMED_V4                                              0x01
#define INDICATOR_SUPPORTED_REPORT_NOT_ARMED_V4                                          0x02
#define INDICATOR_SUPPORTED_REPORT_READY_V4                                              0x03
#define INDICATOR_SUPPORTED_REPORT_FAULT_V4                                              0x04
#define INDICATOR_SUPPORTED_REPORT_BUSY_V4                                               0x05
#define INDICATOR_SUPPORTED_REPORT_ENTER_ID_V4                                           0x06
#define INDICATOR_SUPPORTED_REPORT_ENTER_PIN_V4                                          0x07
#define INDICATOR_SUPPORTED_REPORT_OK_V4                                                 0x08
#define INDICATOR_SUPPORTED_REPORT_NOT_OK_V4                                             0x09
#define INDICATOR_SUPPORTED_REPORT_ARMED_STAY_V4                                         0x0A
#define INDICATOR_SUPPORTED_REPORT_ARMED_AWAY_V4                                         0x0B
#define INDICATOR_SUPPORTED_REPORT_ALARMING_V4                                           0x0C
#define INDICATOR_SUPPORTED_REPORT_ALARMING_BURGLAR_V4                                   0x0D
#define INDICATOR_SUPPORTED_REPORT_ALARMING_SMOKE_FIRE_V4                                0x0E
#define INDICATOR_SUPPORTED_REPORT_ALARMING_CARBON_MONOXIDE_V4                           0x0F
#define INDICATOR_SUPPORTED_REPORT_BYPASS_CHALLENGE_V4                                   0x10
#define INDICATOR_SUPPORTED_REPORT_ENTRY_DELAY_V4                                        0x11
#define INDICATOR_SUPPORTED_REPORT_EXIT_DELAY_V4                                         0x12
#define INDICATOR_SUPPORTED_REPORT_ZONE1_ARMED_V4                                        0x20
#define INDICATOR_SUPPORTED_REPORT_ZONE2_ARMED_V4                                        0x21
#define INDICATOR_SUPPORTED_REPORT_ZONE3_ARMED_V4                                        0x22
#define INDICATOR_SUPPORTED_REPORT_ZONE4_ARMED_V4                                        0x23
#define INDICATOR_SUPPORTED_REPORT_ZONE5_ARMED_V4                                        0x24
#define INDICATOR_SUPPORTED_REPORT_ZONE6_ARMED_V4                                        0x25
#define INDICATOR_SUPPORTED_REPORT_LCD_BACKLIGHT_V4                                      0x30
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_LETTERS_V4                           0x40
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_DIGITS_V4                            0x41
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_COMMAND_V4                           0x42
#define INDICATOR_SUPPORTED_REPORT_BUTTON1_INDICATION_V4                                 0x43
#define INDICATOR_SUPPORTED_REPORT_BUTTON2_INDICATION_V4                                 0x44
#define INDICATOR_SUPPORTED_REPORT_BUTTON3_INDICATION_V4                                 0x45
#define INDICATOR_SUPPORTED_REPORT_BUTTON4_INDICATION_V4                                 0x46
#define INDICATOR_SUPPORTED_REPORT_BUTTON5_INDICATION_V4                                 0x47
#define INDICATOR_SUPPORTED_REPORT_BUTTON6_INDICATION_V4                                 0x48
#define INDICATOR_SUPPORTED_REPORT_BUTTON7_INDICATION_V4                                 0x49
#define INDICATOR_SUPPORTED_REPORT_BUTTON8_INDICATION_V4                                 0x4A
#define INDICATOR_SUPPORTED_REPORT_BUTTON9_INDICATION_V4                                 0x4B
#define INDICATOR_SUPPORTED_REPORT_BUTTON10_INDICATION_V4                                0x4C
#define INDICATOR_SUPPORTED_REPORT_BUTTON11_INDICATION_V4                                0x4D
#define INDICATOR_SUPPORTED_REPORT_BUTTON12_INDICATION_V4                                0x4E
#define INDICATOR_SUPPORTED_REPORT_NODE_IDENTIFY_V4                                      0x50
#define INDICATOR_SUPPORTED_REPORT_BUZZER_V4                                             0xF0
#define INDICATOR_SUPPORTED_REPORT_NA_V4                                                 0x00
#define INDICATOR_SUPPORTED_REPORT_ARMED_V4                                              0x01
#define INDICATOR_SUPPORTED_REPORT_NOT_ARMED_V4                                          0x02
#define INDICATOR_SUPPORTED_REPORT_READY_V4                                              0x03
#define INDICATOR_SUPPORTED_REPORT_FAULT_V4                                              0x04
#define INDICATOR_SUPPORTED_REPORT_BUSY_V4                                               0x05
#define INDICATOR_SUPPORTED_REPORT_ENTER_ID_V4                                           0x06
#define INDICATOR_SUPPORTED_REPORT_ENTER_PIN_V4                                          0x07
#define INDICATOR_SUPPORTED_REPORT_OK_V4                                                 0x08
#define INDICATOR_SUPPORTED_REPORT_NOT_OK_V4                                             0x09
#define INDICATOR_SUPPORTED_REPORT_ARMED_STAY_V4                                         0x0A
#define INDICATOR_SUPPORTED_REPORT_ARMED_AWAY_V4                                         0x0B
#define INDICATOR_SUPPORTED_REPORT_ALARMING_V4                                           0x0C
#define INDICATOR_SUPPORTED_REPORT_ALARMING_BURGLAR_V4                                   0x0D
#define INDICATOR_SUPPORTED_REPORT_ALARMING_SMOKE_FIRE_V4                                0x0E
#define INDICATOR_SUPPORTED_REPORT_ALARMING_CARBON_MONOXIDE_V4                           0x0F
#define INDICATOR_SUPPORTED_REPORT_BYPASS_CHALLENGE_V4                                   0x10
#define INDICATOR_SUPPORTED_REPORT_ENTRY_DELAY_V4                                        0x11
#define INDICATOR_SUPPORTED_REPORT_EXIT_DELAY_V4                                         0x12
#define INDICATOR_SUPPORTED_REPORT_ZONE1_ARMED_V4                                        0x20
#define INDICATOR_SUPPORTED_REPORT_ZONE2_ARMED_V4                                        0x21
#define INDICATOR_SUPPORTED_REPORT_ZONE3_ARMED_V4                                        0x22
#define INDICATOR_SUPPORTED_REPORT_ZONE4_ARMED_V4                                        0x23
#define INDICATOR_SUPPORTED_REPORT_ZONE5_ARMED_V4                                        0x24
#define INDICATOR_SUPPORTED_REPORT_ZONE6_ARMED_V4                                        0x25
#define INDICATOR_SUPPORTED_REPORT_LCD_BACKLIGHT_V4                                      0x30
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_LETTERS_V4                           0x40
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_DIGITS_V4                            0x41
#define INDICATOR_SUPPORTED_REPORT_BUTTON_BACKLIGHT_COMMAND_V4                           0x42
#define INDICATOR_SUPPORTED_REPORT_BUTTON1_INDICATION_V4                                 0x43
#define INDICATOR_SUPPORTED_REPORT_BUTTON2_INDICATION_V4                                 0x44
#define INDICATOR_SUPPORTED_REPORT_BUTTON3_INDICATION_V4                                 0x45
#define INDICATOR_SUPPORTED_REPORT_BUTTON4_INDICATION_V4                                 0x46
#define INDICATOR_SUPPORTED_REPORT_BUTTON5_INDICATION_V4                                 0x47
#define INDICATOR_SUPPORTED_REPORT_BUTTON6_INDICATION_V4                                 0x48
#define INDICATOR_SUPPORTED_REPORT_BUTTON7_INDICATION_V4                                 0x49
#define INDICATOR_SUPPORTED_REPORT_BUTTON8_INDICATION_V4                                 0x4A
#define INDICATOR_SUPPORTED_REPORT_BUTTON9_INDICATION_V4                                 0x4B
#define INDICATOR_SUPPORTED_REPORT_BUTTON10_INDICATION_V4                                0x4C
#define INDICATOR_SUPPORTED_REPORT_BUTTON11_INDICATION_V4                                0x4D
#define INDICATOR_SUPPORTED_REPORT_BUTTON12_INDICATION_V4                                0x4E
#define INDICATOR_SUPPORTED_REPORT_NODE_IDENTIFY_V4                                      0x50
#define INDICATOR_SUPPORTED_REPORT_BUZZER_V4                                             0xF0
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_PROPERTY_SUPPORTED_BIT_MASK_LENGTH_MASK_V4 0x1F
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V4                          0xE0
#define INDICATOR_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                         0x05

/* Ip Configuration command class commands */
#define IP_CONFIGURATION_VERSION                                                         0x01
#define IP_CONFIGURATION_GET                                                             0x02
#define IP_CONFIGURATION_RELEASE                                                         0x04
#define IP_CONFIGURATION_RENEW                                                           0x05
#define IP_CONFIGURATION_REPORT                                                          0x03
#define IP_CONFIGURATION_SET                                                             0x01
/* Values used for Ip Configuration Report command */
#define IP_CONFIGURATION_REPORT_PROPERTIES1_AUTO_DNS_BIT_MASK                            0x01
#define IP_CONFIGURATION_REPORT_PROPERTIES1_AUTO_IP_BIT_MASK                             0x02
#define IP_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                                0xFC
#define IP_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                               0x02
/* Values used for Ip Configuration Set command */
#define IP_CONFIGURATION_SET_PROPERTIES1_AUTO_DNS_BIT_MASK                               0x01
#define IP_CONFIGURATION_SET_PROPERTIES1_AUTO_IP_BIT_MASK                                0x02
#define IP_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK                                   0xFC
#define IP_CONFIGURATION_SET_PROPERTIES1_RESERVED_SHIFT                                  0x02

/* Language command class commands */
#define LANGUAGE_VERSION                                                                 0x01
#define LANGUAGE_GET                                                                     0x02
#define LANGUAGE_REPORT                                                                  0x03
#define LANGUAGE_SET                                                                     0x01

/* Manufacturer Proprietary command class commands */
#define MANUFACTURER_PROPRIETARY_VERSION                                                 0x01

/* Manufacturer Specific command class commands */
#define MANUFACTURER_SPECIFIC_VERSION                                                    0x01
#define MANUFACTURER_SPECIFIC_GET                                                        0x04
#define MANUFACTURER_SPECIFIC_REPORT                                                     0x05

/* Manufacturer Specific command class commands */
#define MANUFACTURER_SPECIFIC_VERSION_V2                                                 0x02
#define MANUFACTURER_SPECIFIC_GET_V2                                                     0x04
#define MANUFACTURER_SPECIFIC_REPORT_V2                                                  0x05
#define DEVICE_SPECIFIC_GET_V2                                                           0x06
#define DEVICE_SPECIFIC_REPORT_V2                                                        0x07
/* Values used for Device Specific Get command */
#define DEVICE_SPECIFIC_GET_PROPERTIES1_DEVICE_ID_TYPE_MASK_V2                           0x07
#define DEVICE_SPECIFIC_GET_DEVICE_ID_TYPE_RESERVED_V2                                   0x00
#define DEVICE_SPECIFIC_GET_DEVICE_ID_TYPE_SERIAL_NUMBER_V2                              0x01
#define DEVICE_SPECIFIC_GET_PROPERTIES1_RESERVED_MASK_V2                                 0xF8
#define DEVICE_SPECIFIC_GET_PROPERTIES1_RESERVED_SHIFT_V2                                0x03
/* Values used for Device Specific Report command */
#define DEVICE_SPECIFIC_REPORT_PROPERTIES1_DEVICE_ID_TYPE_MASK_V2                        0x07
#define DEVICE_SPECIFIC_REPORT_DEVICE_ID_TYPE_RESERVED_V2                                0x00
#define DEVICE_SPECIFIC_REPORT_DEVICE_ID_TYPE_SERIAL_NUMBER_V2                           0x01
#define DEVICE_SPECIFIC_REPORT_PROPERTIES1_RESERVED_MASK_V2                              0xF8
#define DEVICE_SPECIFIC_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                             0x03
#define DEVICE_SPECIFIC_REPORT_PROPERTIES2_DEVICE_ID_DATA_LENGTH_INDICATOR_MASK_V2       0x1F
#define DEVICE_SPECIFIC_REPORT_PROPERTIES2_DEVICE_ID_DATA_FORMAT_MASK_V2                 0xE0
#define DEVICE_SPECIFIC_REPORT_PROPERTIES2_DEVICE_ID_DATA_FORMAT_SHIFT_V2                0x05
#define DEVICE_SPECIFIC_REPORT_DEVICE_ID_DATA_FORMAT_RESERVED_V2                         0x00
#define DEVICE_SPECIFIC_REPORT_DEVICE_ID_DATA_FORMAT_BINARY_V2                           0x01

/* Mark command class commands */
#define MARK_VERSION                                                                     0x01

/* Meter Pulse command class commands */
#define METER_PULSE_VERSION                                                              0x01
#define METER_PULSE_GET                                                                  0x04
#define METER_PULSE_REPORT                                                               0x05

/* Meter Tbl Config command class commands */
#define METER_TBL_CONFIG_VERSION                                                         0x01
#define METER_TBL_TABLE_POINT_ADM_NO_SET                                                 0x01
/* Values used for Meter Tbl Table Point Adm No Set command */
#define METER_TBL_TABLE_POINT_ADM_NO_SET_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK           0x1F
#define METER_TBL_TABLE_POINT_ADM_NO_SET_PROPERTIES1_RESERVED_MASK                       0xE0
#define METER_TBL_TABLE_POINT_ADM_NO_SET_PROPERTIES1_RESERVED_SHIFT                      0x05

/* Meter Tbl Monitor command class commands */
#define METER_TBL_MONITOR_VERSION                                                        0x01
#define METER_TBL_STATUS_REPORT                                                          0x0B
#define METER_TBL_STATUS_DATE_GET                                                        0x0A
#define METER_TBL_STATUS_DEPTH_GET                                                       0x09
#define METER_TBL_STATUS_SUPPORTED_GET                                                   0x07
#define METER_TBL_STATUS_SUPPORTED_REPORT                                                0x08
#define METER_TBL_CURRENT_DATA_GET                                                       0x0C
#define METER_TBL_CURRENT_DATA_REPORT                                                    0x0D
#define METER_TBL_HISTORICAL_DATA_GET                                                    0x0E
#define METER_TBL_HISTORICAL_DATA_REPORT                                                 0x0F
#define METER_TBL_TABLE_CAPABILITY_REPORT                                                0x06
#define METER_TBL_TABLE_CAPABILITY_GET                                                   0x05
#define METER_TBL_TABLE_ID_GET                                                           0x03
#define METER_TBL_TABLE_ID_REPORT                                                        0x04
#define METER_TBL_TABLE_POINT_ADM_NO_GET                                                 0x01
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT                                              0x02
/* Values used for Meter Tbl Current Data Report command */
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK                         0x03
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_MASK                          0xFC
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT                         0x02
/* Values used for Meter Tbl Historical Data Report command */
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK                      0x03
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_MASK                       0xFC
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT                      0x02
/* Values used for Meter Tbl Table Capability Report command */
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_METER_TYPE_MASK                    0x3F
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_RATE_TYPE_MASK                     0xC0
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_RATE_TYPE_SHIFT                    0x06
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_PAY_METER_MASK                     0x0F
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_RESERVED                             0x00
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_CREDITMETER                          0x01
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_PREPAYMENT_METER                     0x02
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_PREPAYMENT_METER_DEBT                0x03
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_RESERVED_MASK                      0xF0
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_RESERVED_SHIFT                     0x04
/* Values used for Meter Tbl Table Id Report command */
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK                  0x1F
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_MASK                              0xE0
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_SHIFT                             0x05
/* Values used for Meter Tbl Table Point Adm No Report command */
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK        0x1F
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_MASK                    0xE0
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_SHIFT                   0x05

/* Meter Tbl Monitor command class commands */
#define METER_TBL_MONITOR_VERSION_V2                                                     0x02
#define METER_TBL_STATUS_REPORT_V2                                                       0x0B
#define METER_TBL_STATUS_DATE_GET_V2                                                     0x0A
#define METER_TBL_STATUS_DEPTH_GET_V2                                                    0x09
#define METER_TBL_STATUS_SUPPORTED_GET_V2                                                0x07
#define METER_TBL_STATUS_SUPPORTED_REPORT_V2                                             0x08
#define METER_TBL_CURRENT_DATA_GET_V2                                                    0x0C
#define METER_TBL_CURRENT_DATA_REPORT_V2                                                 0x0D
#define METER_TBL_HISTORICAL_DATA_GET_V2                                                 0x0E
#define METER_TBL_HISTORICAL_DATA_REPORT_V2                                              0x0F
#define METER_TBL_TABLE_CAPABILITY_REPORT_V2                                             0x06
#define METER_TBL_TABLE_CAPABILITY_GET_V2                                                0x05
#define METER_TBL_TABLE_ID_GET_V2                                                        0x03
#define METER_TBL_TABLE_ID_REPORT_V2                                                     0x04
#define METER_TBL_TABLE_POINT_ADM_NO_GET_V2                                              0x01
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_V2                                           0x02
/* Values used for Meter Tbl Current Data Report command */
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                      0x03
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_MASK_V2                       0x7C
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                      0x02
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_OPERATING_STATUS_INDICATION_BIT_MASK_V2 0x80
/* Values used for Meter Tbl Historical Data Report command */
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                   0x03
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_MASK_V2                    0x7C
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                   0x02
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_OPERATING_STATUS_INDICATION_BIT_MASK_V2 0x80
/* Values used for Meter Tbl Table Capability Report command */
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_METER_TYPE_MASK_V2                 0x3F
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                  0xC0
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V2                 0x06
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_PAY_METER_MASK_V2                  0x0F
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_RESERVED_V2                          0x00
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_CREDITMETER_V2                       0x01
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_PREPAYMENT_METER_V2                  0x02
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_PREPAYMENT_METER_DEBT_V2             0x03
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_RESERVED_MASK_V2                   0xF0
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_RESERVED_SHIFT_V2                  0x04
/* Values used for Meter Tbl Table Id Report command */
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK_V2               0x1F
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_MASK_V2                           0xE0
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                          0x05
/* Values used for Meter Tbl Table Point Adm No Report command */
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK_V2     0x1F
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_MASK_V2                 0xE0
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                0x05

/* Meter Tbl Monitor command class commands */
#define METER_TBL_MONITOR_VERSION_V3                                                     0x03
#define METER_TBL_STATUS_REPORT_V3                                                       0x0B
#define METER_TBL_STATUS_DATE_GET_V3                                                     0x0A
#define METER_TBL_STATUS_DEPTH_GET_V3                                                    0x09
#define METER_TBL_STATUS_SUPPORTED_GET_V3                                                0x07
#define METER_TBL_STATUS_SUPPORTED_REPORT_V3                                             0x08
#define METER_TBL_CURRENT_DATA_GET_V3                                                    0x0C
#define METER_TBL_CURRENT_DATA_REPORT_V3                                                 0x0D
#define METER_TBL_HISTORICAL_DATA_GET_V3                                                 0x0E
#define METER_TBL_HISTORICAL_DATA_REPORT_V3                                              0x0F
#define METER_TBL_TABLE_CAPABILITY_REPORT_V3                                             0x06
#define METER_TBL_TABLE_CAPABILITY_GET_V3                                                0x05
#define METER_TBL_TABLE_ID_GET_V3                                                        0x03
#define METER_TBL_TABLE_ID_REPORT_V3                                                     0x04
#define METER_TBL_TABLE_POINT_ADM_NO_GET_V3                                              0x01
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_V3                                           0x02
/* Values used for Meter Tbl Current Data Report command */
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK_V3                      0x03
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_MASK_V3                       0x7C
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                      0x02
#define METER_TBL_CURRENT_DATA_REPORT_PROPERTIES1_OPERATING_STATUS_INDICATION_BIT_MASK_V3 0x80
/* Values used for Meter Tbl Historical Data Report command */
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RATE_TYPE_MASK_V3                   0x03
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_MASK_V3                    0x7C
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                   0x02
#define METER_TBL_HISTORICAL_DATA_REPORT_PROPERTIES1_OPERATING_STATUS_INDICATION_BIT_MASK_V3 0x80
/* Values used for Meter Tbl Table Capability Report command */
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_METER_TYPE_MASK_V3                 0x3F
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_RATE_TYPE_MASK_V3                  0xC0
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V3                 0x06
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_PAY_METER_MASK_V3                  0x0F
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_RESERVED_V3                          0x00
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_CREDITMETER_V3                       0x01
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_PREPAYMENT_METER_V3                  0x02
#define METER_TBL_TABLE_CAPABILITY_REPORT_PAY_METER_PREPAYMENT_METER_DEBT_V3             0x03
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_RESERVED_MASK_V3                   0xF0
#define METER_TBL_TABLE_CAPABILITY_REPORT_PROPERTIES2_RESERVED_SHIFT_V3                  0x04
/* Values used for Meter Tbl Table Id Report command */
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK_V3               0x1F
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_MASK_V3                           0xE0
#define METER_TBL_TABLE_ID_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                          0x05
/* Values used for Meter Tbl Table Point Adm No Report command */
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_NUMBER_OF_CHARACTERS_MASK_V3     0x1F
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_MASK_V3                 0xE0
#define METER_TBL_TABLE_POINT_ADM_NO_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                0x05

/* Meter Tbl Push command class commands */
#define METER_TBL_PUSH_VERSION                                                           0x01
#define METER_TBL_PUSH_CONFIGURATION_GET                                                 0x02
#define METER_TBL_PUSH_CONFIGURATION_REPORT                                              0x03
#define METER_TBL_PUSH_CONFIGURATION_SET                                                 0x01
/* Values used for Meter Tbl Push Configuration Report command */
#define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_OPERATING_STATUS_PUSH_MODE_MASK  0x0F
#define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_PS_BIT_MASK                      0x10
#define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                    0xE0
#define METER_TBL_PUSH_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                   0x05
/* Values used for Meter Tbl Push Configuration Set command */
#define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_OPERATING_STATUS_PUSH_MODE_MASK     0x0F
#define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_PS_BIT_MASK                         0x10
#define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK                       0xE0
#define METER_TBL_PUSH_CONFIGURATION_SET_PROPERTIES1_RESERVED_SHIFT                      0x05

/* Meter command class commands */
#define METER_VERSION                                                                    0x01
#define METER_GET                                                                        0x01
#define METER_REPORT                                                                     0x02
/* Values used for Meter Report command */
#define METER_REPORT_ELECTRIC_METER                                                      0x01
#define METER_REPORT_GAS_METER                                                           0x02
#define METER_REPORT_WATER_METER                                                         0x03
#define METER_REPORT_PROPERTIES1_SIZE_MASK                                               0x07
#define METER_REPORT_PROPERTIES1_SCALE_MASK                                              0x18
#define METER_REPORT_PROPERTIES1_SCALE_SHIFT                                             0x03
#define METER_REPORT_PROPERTIES1_PRECISION_MASK                                          0xE0
#define METER_REPORT_PROPERTIES1_PRECISION_SHIFT                                         0x05

/* Meter command class commands */
#define METER_VERSION_V2                                                                 0x02
#define METER_GET_V2                                                                     0x01
#define METER_REPORT_V2                                                                  0x02
#define METER_RESET_V2                                                                   0x05
#define METER_SUPPORTED_GET_V2                                                           0x03
#define METER_SUPPORTED_REPORT_V2                                                        0x04
/* Values used for Meter Get command */
#define METER_GET_PROPERTIES1_RESERVED_MASK_V2                                           0x07
#define METER_GET_PROPERTIES1_SCALE_MASK_V2                                              0x18
#define METER_GET_PROPERTIES1_SCALE_SHIFT_V2                                             0x03
#define METER_GET_PROPERTIES1_RESERVED2_MASK_V2                                          0xE0
#define METER_GET_PROPERTIES1_RESERVED2_SHIFT_V2                                         0x05
/* Values used for Meter Report command */
#define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V2                                      0x1F
#define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V2                                       0x60
#define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V2                                      0x05
#define METER_REPORT_PROPERTIES1_RESERVED_BIT_MASK_V2                                    0x80
#define METER_REPORT_PROPERTIES2_SIZE_MASK_V2                                            0x07
#define METER_REPORT_PROPERTIES2_SCALE_MASK_V2                                           0x18
#define METER_REPORT_PROPERTIES2_SCALE_SHIFT_V2                                          0x03
#define METER_REPORT_PROPERTIES2_PRECISION_MASK_V2                                       0xE0
#define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V2                                      0x05
/* Values used for Meter Supported Report command */
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V2                            0x1F
#define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_MASK_V2                             0x60
#define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_SHIFT_V2                            0x05
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V2                       0x80
#define METER_SUPPORTED_REPORT_PROPERTIES2_SCALE_SUPPORTED_MASK_V2                       0x0F
#define METER_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_MASK_V2                             0xF0
#define METER_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_SHIFT_V2                            0x04

/* Meter command class commands */
#define METER_VERSION_V3                                                                 0x03
#define METER_GET_V3                                                                     0x01
#define METER_REPORT_V3                                                                  0x02
#define METER_RESET_V3                                                                   0x05
#define METER_SUPPORTED_GET_V3                                                           0x03
#define METER_SUPPORTED_REPORT_V3                                                        0x04
/* Values used for Meter Get command */
#define METER_GET_PROPERTIES1_RESERVED_MASK_V3                                           0x07
#define METER_GET_PROPERTIES1_SCALE_MASK_V3                                              0x38
#define METER_GET_PROPERTIES1_SCALE_SHIFT_V3                                             0x03
#define METER_GET_PROPERTIES1_RESERVED2_MASK_V3                                          0xC0
#define METER_GET_PROPERTIES1_RESERVED2_SHIFT_V3                                         0x06
/* Values used for Meter Report command */
#define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V3                                      0x1F
#define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V3                                       0x60
#define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V3                                      0x05
#define METER_REPORT_PROPERTIES1_SCALE_BIT_2_BIT_MASK_V3                                 0x80
#define METER_REPORT_PROPERTIES2_SIZE_MASK_V3                                            0x07
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_MASK_V3                                   0x18
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_SHIFT_V3                                  0x03
#define METER_REPORT_PROPERTIES2_PRECISION_MASK_V3                                       0xE0
#define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V3                                      0x05
/* Values used for Meter Supported Report command */
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V3                            0x1F
#define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                              0x60
#define METER_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                             0x05
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V3                       0x80

/* Meter command class commands */
#define METER_VERSION_V4                                                                 0x04
#define METER_GET_V4                                                                     0x01
#define METER_REPORT_V4                                                                  0x02
#define METER_RESET_V4                                                                   0x05
#define METER_SUPPORTED_GET_V4                                                           0x03
#define METER_SUPPORTED_REPORT_V4                                                        0x04
/* Values used for Meter Get command */
#define METER_GET_PROPERTIES1_RESERVED_MASK_V4                                           0x07
#define METER_GET_PROPERTIES1_SCALE_MASK_V4                                              0x38
#define METER_GET_PROPERTIES1_SCALE_SHIFT_V4                                             0x03
#define METER_GET_PROPERTIES1_RATE_TYPE_MASK_V4                                          0xC0
#define METER_GET_PROPERTIES1_RATE_TYPE_SHIFT_V4                                         0x06
#define METER_GET_RATE_TYPE_RESERVED_V4                                                  0x00
#define METER_GET_RATE_TYPE_IMPORT_V4                                                    0x01
#define METER_GET_RATE_TYPE_EXPORT_V4                                                    0x02
#define METER_GET_RATE_TYPE_NOT_TO_BE_USED_V4                                            0x03
/* Values used for Meter Report command */
#define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V4                                      0x1F
#define METER_REPORT_METER_TYPE_RESERVED_V4                                              0x00
#define METER_REPORT_METER_TYPE_ELECTRIC_METER_V4                                        0x01
#define METER_REPORT_METER_TYPE_GAS_METER_V4                                             0x02
#define METER_REPORT_METER_TYPE_WATER_METER_V4                                           0x03
#define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V4                                       0x60
#define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V4                                      0x05
#define METER_REPORT_RATE_TYPE_RESERVED_V4                                               0x00
#define METER_REPORT_RATE_TYPE_IMPORT_V4                                                 0x01
#define METER_REPORT_RATE_TYPE_EXPORT_V4                                                 0x02
#define METER_REPORT_RATE_TYPE_NOT_TO_BE_USED_V4                                         0x03
#define METER_REPORT_PROPERTIES1_SCALE_BIT_2_BIT_MASK_V4                                 0x80
#define METER_REPORT_PROPERTIES2_SIZE_MASK_V4                                            0x07
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_MASK_V4                                   0x18
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_SHIFT_V4                                  0x03
#define METER_REPORT_PROPERTIES2_PRECISION_MASK_V4                                       0xE0
#define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V4                                      0x05
/* Values used for Meter Supported Report command */
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V4                            0x1F
#define METER_SUPPORTED_REPORT_METER_TYPE_RESERVED_V4                                    0x00
#define METER_SUPPORTED_REPORT_METER_TYPE_ELECTRIC_METER_V4                              0x01
#define METER_SUPPORTED_REPORT_METER_TYPE_GAS_METER_V4                                   0x02
#define METER_SUPPORTED_REPORT_METER_TYPE_WATER_METER_V4                                 0x03
#define METER_SUPPORTED_REPORT_PROPERTIES1_RATE_TYPE_MASK_V4                             0x60
#define METER_SUPPORTED_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V4                            0x05
#define METER_SUPPORTED_REPORT_RATE_TYPE_RESERVED_V4                                     0x00
#define METER_SUPPORTED_REPORT_RATE_TYPE_IMPORT_ONLY_V4                                  0x01
#define METER_SUPPORTED_REPORT_RATE_TYPE_EXPORT_ONLY_V4                                  0x02
#define METER_SUPPORTED_REPORT_RATE_TYPE_IMPORT_AND_EXPORT_V4                            0x03
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V4                       0x80
#define METER_SUPPORTED_REPORT_PROPERTIES2_SCALE_SUPPORTED_0_MASK_V4                     0x7F
#define METER_SUPPORTED_REPORT_PROPERTIES2_M_S_T_BIT_MASK_V4                             0x80

/* Meter command class commands */
#define METER_VERSION_V5                                                                 0x05
#define METER_GET_V5                                                                     0x01
#define METER_REPORT_V5                                                                  0x02
#define METER_RESET_V5                                                                   0x05
#define METER_SUPPORTED_GET_V5                                                           0x03
#define METER_SUPPORTED_REPORT_V5                                                        0x04
/* Values used for Meter Get command */
#define METER_GET_PROPERTIES1_RESERVED_MASK_V5                                           0x07
#define METER_GET_PROPERTIES1_SCALE_MASK_V5                                              0x38
#define METER_GET_PROPERTIES1_SCALE_SHIFT_V5                                             0x03
#define METER_GET_PROPERTIES1_RATE_TYPE_MASK_V5                                          0xC0
#define METER_GET_PROPERTIES1_RATE_TYPE_SHIFT_V5                                         0x06
#define METER_GET_RATE_TYPE_RESERVED_V5                                                  0x00
#define METER_GET_RATE_TYPE_IMPORT_V5                                                    0x01
#define METER_GET_RATE_TYPE_EXPORT_V5                                                    0x02
#define METER_GET_RATE_TYPE_NOT_TO_BE_USED_V5                                            0x03
/* Values used for Meter Report command */
#define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V5                                      0x1F
#define METER_REPORT_METER_TYPE_RESERVED_V5                                              0x00
#define METER_REPORT_METER_TYPE_ELECTRIC_METER_V5                                        0x01
#define METER_REPORT_METER_TYPE_GAS_METER_V5                                             0x02
#define METER_REPORT_METER_TYPE_WATER_METER_V5                                           0x03
#define METER_REPORT_METER_TYPE_HEATING_METER_V5                                         0x04
#define METER_REPORT_METER_TYPE_COOLING_METER_V5                                         0x05
#define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V5                                       0x60
#define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V5                                      0x05
#define METER_REPORT_RATE_TYPE_RESERVED_V5                                               0x00
#define METER_REPORT_RATE_TYPE_IMPORT_V5                                                 0x01
#define METER_REPORT_RATE_TYPE_EXPORT_V5                                                 0x02
#define METER_REPORT_RATE_TYPE_NOT_TO_BE_USED_V5                                         0x03
#define METER_REPORT_PROPERTIES1_SCALE_BIT_2_BIT_MASK_V5                                 0x80
#define METER_REPORT_PROPERTIES2_SIZE_MASK_V5                                            0x07
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_MASK_V5                                   0x18
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_SHIFT_V5                                  0x03
#define METER_REPORT_PROPERTIES2_PRECISION_MASK_V5                                       0xE0
#define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V5                                      0x05
/* Values used for Meter Supported Report command */
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V5                            0x1F
#define METER_SUPPORTED_REPORT_METER_TYPE_RESERVED_V5                                    0x00
#define METER_SUPPORTED_REPORT_METER_TYPE_ELECTRIC_METER_V5                              0x01
#define METER_SUPPORTED_REPORT_METER_TYPE_GAS_METER_V5                                   0x02
#define METER_SUPPORTED_REPORT_METER_TYPE_WATER_METER_V5                                 0x03
#define METER_SUPPORTED_REPORT_METER_TYPE_HEATING_METER_V5                               0x04
#define METER_SUPPORTED_REPORT_METER_TYPE_COOLING_METER_V5                               0x05
#define METER_SUPPORTED_REPORT_PROPERTIES1_RATE_TYPE_MASK_V5                             0x60
#define METER_SUPPORTED_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V5                            0x05
#define METER_SUPPORTED_REPORT_RATE_TYPE_RESERVED_V5                                     0x00
#define METER_SUPPORTED_REPORT_RATE_TYPE_IMPORT_ONLY_V5                                  0x01
#define METER_SUPPORTED_REPORT_RATE_TYPE_EXPORT_ONLY_V5                                  0x02
#define METER_SUPPORTED_REPORT_RATE_TYPE_IMPORT_AND_EXPORT_V5                            0x03
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V5                       0x80
#define METER_SUPPORTED_REPORT_PROPERTIES2_SCALE_SUPPORTED_0_MASK_V5                     0x7F
#define METER_SUPPORTED_REPORT_PROPERTIES2_M_S_T_BIT_MASK_V5                             0x80

/* Meter command class commands */
#define METER_VERSION_V6                                                                 0x06
#define METER_GET_V6                                                                     0x01
#define METER_REPORT_V6                                                                  0x02
#define METER_RESET_V6                                                                   0x05
#define METER_SUPPORTED_GET_V6                                                           0x03
#define METER_SUPPORTED_REPORT_V6                                                        0x04
/* Values used for Meter Get command */
#define METER_GET_PROPERTIES1_RESERVED_MASK_V6                                           0x07
#define METER_GET_PROPERTIES1_SCALE_MASK_V6                                              0x38
#define METER_GET_PROPERTIES1_SCALE_SHIFT_V6                                             0x03
#define METER_GET_PROPERTIES1_RATE_TYPE_MASK_V6                                          0xC0
#define METER_GET_PROPERTIES1_RATE_TYPE_SHIFT_V6                                         0x06
#define METER_GET_RATE_TYPE_RESERVED_V6                                                  0x00
#define METER_GET_RATE_TYPE_IMPORT_V6                                                    0x01
#define METER_GET_RATE_TYPE_EXPORT_V6                                                    0x02
#define METER_GET_RATE_TYPE_NOT_TO_BE_USED_V6                                            0x03
/* Values used for Meter Report command */
#define METER_REPORT_PROPERTIES1_METER_TYPE_MASK_V6                                      0x1F
#define METER_REPORT_METER_TYPE_RESERVED_V6                                              0x00
#define METER_REPORT_METER_TYPE_ELECTRIC_METER_V6                                        0x01
#define METER_REPORT_METER_TYPE_GAS_METER_V6                                             0x02
#define METER_REPORT_METER_TYPE_WATER_METER_V6                                           0x03
#define METER_REPORT_METER_TYPE_HEATING_METER_V6                                         0x04
#define METER_REPORT_METER_TYPE_COOLING_METER_V6                                         0x05
#define METER_REPORT_PROPERTIES1_RATE_TYPE_MASK_V6                                       0x60
#define METER_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V6                                      0x05
#define METER_REPORT_RATE_TYPE_RESERVED_V6                                               0x00
#define METER_REPORT_RATE_TYPE_IMPORT_V6                                                 0x01
#define METER_REPORT_RATE_TYPE_EXPORT_V6                                                 0x02
#define METER_REPORT_RATE_TYPE_NOT_TO_BE_USED_V6                                         0x03
#define METER_REPORT_PROPERTIES1_SCALE_BIT_2_BIT_MASK_V6                                 0x80
#define METER_REPORT_PROPERTIES2_SIZE_MASK_V6                                            0x07
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_MASK_V6                                   0x18
#define METER_REPORT_PROPERTIES2_SCALE_BITS_10_SHIFT_V6                                  0x03
#define METER_REPORT_PROPERTIES2_PRECISION_MASK_V6                                       0xE0
#define METER_REPORT_PROPERTIES2_PRECISION_SHIFT_V6                                      0x05
/* Values used for Meter Reset command */
#define METER_RESET_PROPERTIES1_METER_TYPE_MASK_V6                                       0x1F
#define METER_RESET_METER_TYPE_RESERVED_V6                                               0x00
#define METER_RESET_METER_TYPE_ELECTRIC_METER_V6                                         0x01
#define METER_RESET_METER_TYPE_GAS_METER_V6                                              0x02
#define METER_RESET_METER_TYPE_WATER_METER_V6                                            0x03
#define METER_RESET_METER_TYPE_HEATING_METER_V6                                          0x04
#define METER_RESET_METER_TYPE_COOLING_METER_V6                                          0x05
#define METER_RESET_PROPERTIES1_RATE_TYPE_MASK_V6                                        0x60
#define METER_RESET_PROPERTIES1_RATE_TYPE_SHIFT_V6                                       0x05
#define METER_RESET_PROPERTIES1_SCALE_BIT_2_BIT_MASK_V6                                  0x80
#define METER_RESET_PROPERTIES2_SIZE_MASK_V6                                             0x07
#define METER_RESET_PROPERTIES2_SCALE_BITS_10_MASK_V6                                    0x18
#define METER_RESET_PROPERTIES2_SCALE_BITS_10_SHIFT_V6                                   0x03
#define METER_RESET_PROPERTIES2_PRECISION_MASK_V6                                        0xE0
#define METER_RESET_PROPERTIES2_PRECISION_SHIFT_V6                                       0x05
/* Values used for Meter Supported Report command */
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_TYPE_MASK_V6                            0x1F
#define METER_SUPPORTED_REPORT_METER_TYPE_RESERVED_V6                                    0x00
#define METER_SUPPORTED_REPORT_METER_TYPE_ELECTRIC_METER_V6                              0x01
#define METER_SUPPORTED_REPORT_METER_TYPE_GAS_METER_V6                                   0x02
#define METER_SUPPORTED_REPORT_METER_TYPE_WATER_METER_V6                                 0x03
#define METER_SUPPORTED_REPORT_METER_TYPE_HEATING_METER_V6                               0x04
#define METER_SUPPORTED_REPORT_METER_TYPE_COOLING_METER_V6                               0x05
#define METER_SUPPORTED_REPORT_PROPERTIES1_RATE_TYPE_MASK_V6                             0x60
#define METER_SUPPORTED_REPORT_PROPERTIES1_RATE_TYPE_SHIFT_V6                            0x05
#define METER_SUPPORTED_REPORT_RATE_TYPE_RESERVED_V6                                     0x00
#define METER_SUPPORTED_REPORT_RATE_TYPE_IMPORT_ONLY_V6                                  0x01
#define METER_SUPPORTED_REPORT_RATE_TYPE_EXPORT_ONLY_V6                                  0x02
#define METER_SUPPORTED_REPORT_RATE_TYPE_IMPORT_AND_EXPORT_V6                            0x03
#define METER_SUPPORTED_REPORT_PROPERTIES1_METER_RESET_BIT_MASK_V6                       0x80
#define METER_SUPPORTED_REPORT_PROPERTIES2_SCALE_SUPPORTED_0_MASK_V6                     0x7F
#define METER_SUPPORTED_REPORT_PROPERTIES2_M_S_T_BIT_MASK_V6                             0x80

/* Mtp Window Covering command class commands */
#define MTP_WINDOW_COVERING_VERSION                                                      0x01
#define MOVE_TO_POSITION_GET                                                             0x02
#define MOVE_TO_POSITION_REPORT                                                          0x03
#define MOVE_TO_POSITION_SET                                                             0x01

/* Multi Channel Association command class commands */
#define MULTI_CHANNEL_ASSOCIATION_VERSION_V2                                             0x02
#define MULTI_CHANNEL_ASSOCIATION_GET_V2                                                 0x02
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2                                       0x05
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2                                    0x06
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_V2                                              0x04
#define MULTI_CHANNEL_ASSOCIATION_REPORT_V2                                              0x03
#define MULTI_CHANNEL_ASSOCIATION_SET_V2                                                 0x01
/* Values used for Multi Channel Association Remove command */
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_MARKER_V2                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Report command */
#define MULTI_CHANNEL_ASSOCIATION_REPORT_MARKER_V2                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Set command */
#define MULTI_CHANNEL_ASSOCIATION_SET_MARKER_V2                                          0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/

/* Multi Channel Association command class commands */
#define MULTI_CHANNEL_ASSOCIATION_VERSION_V3                                             0x03
#define MULTI_CHANNEL_ASSOCIATION_GET_V3                                                 0x02
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V3                                       0x05
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V3                                    0x06
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_V3                                              0x04
#define MULTI_CHANNEL_ASSOCIATION_REPORT_V3                                              0x03
#define MULTI_CHANNEL_ASSOCIATION_SET_V3                                                 0x01
/* Values used for Multi Channel Association Remove command */
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_MARKER_V3                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Report command */
#define MULTI_CHANNEL_ASSOCIATION_REPORT_MARKER_V3                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Set command */
#define MULTI_CHANNEL_ASSOCIATION_SET_MARKER_V3                                          0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/

/* Multi Channel Association command class commands */
#define MULTI_CHANNEL_ASSOCIATION_VERSION_V4                                             0x04
#define MULTI_CHANNEL_ASSOCIATION_GET_V4                                                 0x02
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V4                                       0x05
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V4                                    0x06
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_V4                                              0x04
#define MULTI_CHANNEL_ASSOCIATION_REPORT_V4                                              0x03
#define MULTI_CHANNEL_ASSOCIATION_SET_V4                                                 0x01
/* Values used for Multi Channel Association Remove command */
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_MARKER_V4                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Report command */
#define MULTI_CHANNEL_ASSOCIATION_REPORT_MARKER_V4                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Set command */
#define MULTI_CHANNEL_ASSOCIATION_SET_MARKER_V4                                          0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/

/* Multi Channel Association command class commands */
#define MULTI_CHANNEL_ASSOCIATION_VERSION_V5                                             0x05
#define MULTI_CHANNEL_ASSOCIATION_GET_V5                                                 0x02
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V5                                       0x05
#define MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V5                                    0x06
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_V5                                              0x04
#define MULTI_CHANNEL_ASSOCIATION_REPORT_V5                                              0x03
#define MULTI_CHANNEL_ASSOCIATION_SET_V5                                                 0x01
/* Values used for Multi Channel Association Remove command */
#define MULTI_CHANNEL_ASSOCIATION_REMOVE_MARKER_V5                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Report command */
#define MULTI_CHANNEL_ASSOCIATION_REPORT_MARKER_V5                                       0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Channel Association Set command */
#define MULTI_CHANNEL_ASSOCIATION_SET_MARKER_V5                                          0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/

/* Multi Channel command class commands */
#define MULTI_CHANNEL_VERSION_V2                                                         0x02
#define MULTI_CHANNEL_CAPABILITY_GET_V2                                                  0x09
#define MULTI_CHANNEL_CAPABILITY_REPORT_V2                                               0x0A
#define MULTI_CHANNEL_CMD_ENCAP_V2                                                       0x0D
#define MULTI_CHANNEL_END_POINT_FIND_V2                                                  0x0B
#define MULTI_CHANNEL_END_POINT_FIND_REPORT_V2                                           0x0C
#define MULTI_CHANNEL_END_POINT_GET_V2                                                   0x07
#define MULTI_CHANNEL_END_POINT_REPORT_V2                                                0x08
#define MULTI_INSTANCE_CMD_ENCAP_V2                                                      0x06
#define MULTI_INSTANCE_GET_V2                                                            0x04
#define MULTI_INSTANCE_REPORT_V2                                                         0x05
/* Values used for Multi Channel Capability Get command */
#define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V2                       0x7F
#define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES_BIT_MASK_V2                         0x80
/* Values used for Multi Channel Capability Report command */
#define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V2                    0x7F
#define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V2                  0x80
/* Values used for Multi Channel Cmd Encap command */
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_SOURCE_END_POINT_MASK_V2                     0x7F
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V2                              0x80
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_DESTINATION_END_POINT_MASK_V2                0x7F
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_BIT_ADDRESS_BIT_MASK_V2                      0x80
/* Values used for Multi Channel End Point Report command */
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES1_MASK_V2                          0x3F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V2                 0x40
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V2                   0x80
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_END_POINTS_MASK_V2                    0x7F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES2_BIT_MASK_V2                      0x80
/* Values used for Multi Instance Cmd Encap command */
#define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_INSTANCE_MASK_V2                            0x7F
#define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V2                             0x80
/* Values used for Multi Instance Report command */
#define MULTI_INSTANCE_REPORT_PROPERTIES1_INSTANCES_MASK_V2                              0x7F
#define MULTI_INSTANCE_REPORT_PROPERTIES1_RES_BIT_MASK_V2                                0x80

/* Multi Channel command class commands */
#define MULTI_CHANNEL_VERSION_V3                                                         0x03
#define MULTI_CHANNEL_CAPABILITY_GET_V3                                                  0x09
#define MULTI_CHANNEL_CAPABILITY_REPORT_V3                                               0x0A
#define MULTI_CHANNEL_CMD_ENCAP_V3                                                       0x0D
#define MULTI_CHANNEL_END_POINT_FIND_V3                                                  0x0B
#define MULTI_CHANNEL_END_POINT_FIND_REPORT_V3                                           0x0C
#define MULTI_CHANNEL_END_POINT_GET_V3                                                   0x07
#define MULTI_CHANNEL_END_POINT_REPORT_V3                                                0x08
#define MULTI_INSTANCE_CMD_ENCAP_V3                                                      0x06
#define MULTI_INSTANCE_GET_V3                                                            0x04
#define MULTI_INSTANCE_REPORT_V3                                                         0x05
/* Values used for Multi Channel Capability Get command */
#define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V3                       0x7F
#define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES_BIT_MASK_V3                         0x80
/* Values used for Multi Channel Capability Report command */
#define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V3                    0x7F
#define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V3                  0x80
/* Values used for Multi Channel Cmd Encap command */
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_SOURCE_END_POINT_MASK_V3                     0x7F
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V3                              0x80
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_DESTINATION_END_POINT_MASK_V3                0x7F
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_BIT_ADDRESS_BIT_MASK_V3                      0x80
/* Values used for Multi Channel End Point Report command */
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES1_MASK_V3                          0x3F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V3                 0x40
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V3                   0x80
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_END_POINTS_MASK_V3                    0x7F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES2_BIT_MASK_V3                      0x80
/* Values used for Multi Instance Cmd Encap command */
#define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_INSTANCE_MASK_V3                            0x7F
#define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V3                             0x80
/* Values used for Multi Instance Report command */
#define MULTI_INSTANCE_REPORT_PROPERTIES1_INSTANCES_MASK_V3                              0x7F
#define MULTI_INSTANCE_REPORT_PROPERTIES1_RES_BIT_MASK_V3                                0x80

/* Multi Channel command class commands */
#define MULTI_CHANNEL_VERSION_V4                                                         0x04
#define MULTI_CHANNEL_CAPABILITY_GET_V4                                                  0x09
#define MULTI_CHANNEL_CAPABILITY_REPORT_V4                                               0x0A
#define MULTI_CHANNEL_CMD_ENCAP_V4                                                       0x0D
#define MULTI_CHANNEL_END_POINT_FIND_V4                                                  0x0B
#define MULTI_CHANNEL_END_POINT_FIND_REPORT_V4                                           0x0C
#define MULTI_CHANNEL_END_POINT_GET_V4                                                   0x07
#define MULTI_CHANNEL_END_POINT_REPORT_V4                                                0x08
#define MULTI_INSTANCE_CMD_ENCAP_V4                                                      0x06
#define MULTI_INSTANCE_GET_V4                                                            0x04
#define MULTI_INSTANCE_REPORT_V4                                                         0x05
#define MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4                                          0x0E
#define MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4                                       0x0F
/* Values used for Multi Channel Capability Get command */
#define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V4                       0x7F
#define MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES_BIT_MASK_V4                         0x80
/* Values used for Multi Channel Capability Report command */
#define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V4                    0x7F
#define MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V4                  0x80
/* Values used for Multi Channel Cmd Encap command */
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_SOURCE_END_POINT_MASK_V4                     0x7F
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V4                              0x80
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_DESTINATION_END_POINT_MASK_V4                0x7F
#define MULTI_CHANNEL_CMD_ENCAP_PROPERTIES2_BIT_ADDRESS_BIT_MASK_V4                      0x80
/* Values used for Multi Channel End Point Report command */
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES1_MASK_V4                          0x3F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V4                 0x40
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_DYNAMIC_BIT_MASK_V4                   0x80
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_INDIVIDUAL_END_POINTS_MASK_V4         0x7F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES2_BIT_MASK_V4                      0x80
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES3_AGGREGATED_END_POINTS_MASK_V4         0x7F
#define MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES3_RES3_BIT_MASK_V4                      0x80
/* Values used for Multi Instance Cmd Encap command */
#define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_INSTANCE_MASK_V4                            0x7F
#define MULTI_INSTANCE_CMD_ENCAP_PROPERTIES1_RES_BIT_MASK_V4                             0x80
/* Values used for Multi Instance Report command */
#define MULTI_INSTANCE_REPORT_PROPERTIES1_INSTANCES_MASK_V4                              0x7F
#define MULTI_INSTANCE_REPORT_PROPERTIES1_RES_BIT_MASK_V4                                0x80
/* Values used for Multi Channel Aggregated Members Get command */
#define MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_AGGREGATED_END_POINT_MASK_V4    0x7F
#define MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_RES_BIT_MASK_V4                 0x80
/* Values used for Multi Channel Aggregated Members Report command */
#define MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_AGGREGATED_END_POINT_MASK_V4 0x7F
#define MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_RES_BIT_MASK_V4              0x80

/* Multi Cmd command class commands */
#define MULTI_CMD_VERSION                                                                0x01
#define MULTI_CMD_ENCAP                                                                  0x01

/* Multi Instance Association command class commands */
#define MULTI_INSTANCE_ASSOCIATION_VERSION                                               0x01
#define MULTI_INSTANCE_ASSOCIATION_GET                                                   0x02
#define MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET                                         0x05
#define MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT                                      0x06
#define MULTI_INSTANCE_ASSOCIATION_REMOVE                                                0x04
#define MULTI_INSTANCE_ASSOCIATION_REPORT                                                0x03
#define MULTI_INSTANCE_ASSOCIATION_SET                                                   0x01
/* Values used for Multi Instance Association Remove command */
#define MULTI_INSTANCE_ASSOCIATION_REMOVE_MARKER                                         0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Instance Association Report command */
#define MULTI_INSTANCE_ASSOCIATION_REPORT_MARKER                                         0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
/* Values used for Multi Instance Association Set command */
#define MULTI_INSTANCE_ASSOCIATION_SET_MARKER                                            0x00 /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/

/* Multi Instance command class commands */
#define MULTI_INSTANCE_VERSION                                                           0x01
#define MULTI_INSTANCE_CMD_ENCAP                                                         0x06
#define MULTI_INSTANCE_GET                                                               0x04
#define MULTI_INSTANCE_REPORT                                                            0x05

/* Network Management Proxy command class commands */
#define NETWORK_MANAGEMENT_PROXY_VERSION                                                 0x01
#define NODE_INFO_CACHED_GET                                                             0x03
#define NODE_INFO_CACHED_REPORT                                                          0x04
#define NODE_LIST_GET                                                                    0x01
#define NODE_LIST_REPORT                                                                 0x02
/* Values used for Node Info Cached Get command */
#define NODE_INFO_CACHED_GET_PROPERTIES1_MAX_AGE_MASK                                    0x0F
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_MASK                                   0xF0
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_SHIFT                                  0x04
/* Values used for Node Info Cached Report command */
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_AGE_MASK                                     0x0F
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_MASK                                  0xF0
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_SHIFT                                 0x04
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_OK                                         0x00
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_NOT_RESPONDING                             0x01
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_UNKNOWN                                    0x02
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK         0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_LISTENING_BIT_MASK                           0x80
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK         0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_OPT_BIT_MASK                                 0x80

/* Network Management Proxy command class commands */
#define NETWORK_MANAGEMENT_PROXY_VERSION_V2                                              0x02
#define NODE_INFO_CACHED_GET_V2                                                          0x03
#define NODE_INFO_CACHED_REPORT_V2                                                       0x04
#define NODE_LIST_GET_V2                                                                 0x01
#define NODE_LIST_REPORT_V2                                                              0x02
#define NM_MULTI_CHANNEL_END_POINT_GET_V2                                                0x05
#define NM_MULTI_CHANNEL_END_POINT_REPORT_V2                                             0x06
#define NM_MULTI_CHANNEL_CAPABILITY_GET_V2                                               0x07
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_V2                                            0x08
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V2                                       0x09
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2                                    0x0A
/* Values used for Node Info Cached Get command */
#define NODE_INFO_CACHED_GET_PROPERTIES1_MAX_AGE_MASK_V2                                 0x0F
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_MASK_V2                                0xF0
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_SHIFT_V2                               0x04
/* Values used for Node Info Cached Report command */
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_AGE_MASK_V2                                  0x0F
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_MASK_V2                               0xF0
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_SHIFT_V2                              0x04
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_OK_V2                                      0x00
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_NOT_RESPONDING_V2                          0x01
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_UNKNOWN_V2                                 0x02
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V2      0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_LISTENING_BIT_MASK_V2                        0x80
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V2      0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_OPT_BIT_MASK_V2                              0x80
/* Values used for Nm Multi Channel End Point Report command */
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_INDIVIDUAL_END_POINTS_MASK_V2      0x7F
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES1_BIT_MASK_V2                   0x80
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_AGGREGATED_END_POINTS_MASK_V2      0x7F
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES2_BIT_MASK_V2                   0x80
/* Values used for Nm Multi Channel Capability Get command */
#define NM_MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V2                    0x7F
#define NM_MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES1_BIT_MASK_V2                     0x80
/* Values used for Nm Multi Channel Capability Report command */
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V2                 0x7F
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_RES1_BIT_MASK_V2                  0x80
/* Values used for Nm Multi Channel Aggregated Members Get command */
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_AGGREGATED_END_POINT_MASK_V2 0x7F
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_RES1_BIT_MASK_V2             0x80
/* Values used for Nm Multi Channel Aggregated Members Report command */
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_AGGREGATED_END_POINT_MASK_V2 0x7F
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_RES1_BIT_MASK_V2          0x80

/* Network Management Proxy command class commands */
#define NETWORK_MANAGEMENT_PROXY_VERSION_V3                                              0x03
#define NODE_INFO_CACHED_GET_V3                                                          0x03
#define NODE_INFO_CACHED_REPORT_V3                                                       0x04
#define NODE_LIST_GET_V3                                                                 0x01
#define NODE_LIST_REPORT_V3                                                              0x02
#define NM_MULTI_CHANNEL_END_POINT_GET_V3                                                0x05
#define NM_MULTI_CHANNEL_END_POINT_REPORT_V3                                             0x06
#define NM_MULTI_CHANNEL_CAPABILITY_GET_V3                                               0x07
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_V3                                            0x08
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V3                                       0x09
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3                                    0x0A
#define FAILED_NODE_LIST_GET_V3                                                          0x0B
#define FAILED_NODE_LIST_REPORT_V3                                                       0x0C
/* Values used for Node Info Cached Get command */
#define NODE_INFO_CACHED_GET_PROPERTIES1_MAX_AGE_MASK_V3                                 0x0F
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_MASK_V3                                0xF0
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_SHIFT_V3                               0x04
/* Values used for Node Info Cached Report command */
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_AGE_MASK_V3                                  0x0F
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_MASK_V3                               0xF0
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_SHIFT_V3                              0x04
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_OK_V3                                      0x00
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_NOT_RESPONDING_V3                          0x01
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_UNKNOWN_V3                                 0x02
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V3      0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_LISTENING_BIT_MASK_V3                        0x80
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V3      0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_OPT_BIT_MASK_V3                              0x80
/* Values used for Nm Multi Channel End Point Report command */
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_INDIVIDUAL_END_POINTS_MASK_V3      0x7F
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES1_BIT_MASK_V3                   0x80
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_AGGREGATED_END_POINTS_MASK_V3      0x7F
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES2_BIT_MASK_V3                   0x80
/* Values used for Nm Multi Channel Capability Get command */
#define NM_MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V3                    0x7F
#define NM_MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES1_BIT_MASK_V3                     0x80
/* Values used for Nm Multi Channel Capability Report command */
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V3                 0x7F
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_RES1_BIT_MASK_V3                  0x80
/* Values used for Nm Multi Channel Aggregated Members Get command */
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_AGGREGATED_END_POINT_MASK_V3 0x7F
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_RES1_BIT_MASK_V3             0x80
/* Values used for Nm Multi Channel Aggregated Members Report command */
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_AGGREGATED_END_POINT_MASK_V3 0x7F
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_RES1_BIT_MASK_V3          0x80

/* Network Management Proxy command class commands */
#define NETWORK_MANAGEMENT_PROXY_VERSION_V4                                              0x04
#define NODE_INFO_CACHED_GET_V4                                                          0x03
#define NODE_INFO_CACHED_REPORT_V4                                                       0x04
#define NODE_LIST_GET_V4                                                                 0x01
#define NODE_LIST_REPORT_V4                                                              0x02
#define NM_MULTI_CHANNEL_END_POINT_GET_V4                                                0x05
#define NM_MULTI_CHANNEL_END_POINT_REPORT_V4                                             0x06
#define NM_MULTI_CHANNEL_CAPABILITY_GET_V4                                               0x07
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_V4                                            0x08
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4                                       0x09
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4                                    0x0A
#define FAILED_NODE_LIST_GET_V4                                                          0x0B
#define FAILED_NODE_LIST_REPORT_V4                                                       0x0C
/* Values used for Node Info Cached Get command */
#define NODE_INFO_CACHED_GET_PROPERTIES1_MAX_AGE_MASK_V4                                 0x0F
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_MASK_V4                                0xF0
#define NODE_INFO_CACHED_GET_PROPERTIES1_RESERVED_SHIFT_V4                               0x04
/* Values used for Node Info Cached Report command */
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_AGE_MASK_V4                                  0x0F
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_MASK_V4                               0xF0
#define NODE_INFO_CACHED_REPORT_PROPERTIES1_STATUS_SHIFT_V4                              0x04
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_OK_V4                                      0x00
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_NOT_RESPONDING_V4                          0x01
#define NODE_INFO_CACHED_REPORT_STATUS_STATUS_UNKNOWN_V4                                 0x02
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V4      0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES2_LISTENING_BIT_MASK_V4                        0x80
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V4      0x7F
#define NODE_INFO_CACHED_REPORT_PROPERTIES3_OPT_BIT_MASK_V4                              0x80
/* Values used for Nm Multi Channel End Point Report command */
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_INDIVIDUAL_END_POINTS_MASK_V4      0x7F
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES1_RES1_BIT_MASK_V4                   0x80
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_AGGREGATED_END_POINTS_MASK_V4      0x7F
#define NM_MULTI_CHANNEL_END_POINT_REPORT_PROPERTIES2_RES2_BIT_MASK_V4                   0x80
/* Values used for Nm Multi Channel Capability Get command */
#define NM_MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_END_POINT_MASK_V4                    0x7F
#define NM_MULTI_CHANNEL_CAPABILITY_GET_PROPERTIES1_RES1_BIT_MASK_V4                     0x80
/* Values used for Nm Multi Channel Capability Report command */
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_END_POINT_MASK_V4                 0x7F
#define NM_MULTI_CHANNEL_CAPABILITY_REPORT_PROPERTIES1_RES1_BIT_MASK_V4                  0x80
/* Values used for Nm Multi Channel Aggregated Members Get command */
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_AGGREGATED_END_POINT_MASK_V4 0x7F
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_PROPERTIES1_RES1_BIT_MASK_V4             0x80
/* Values used for Nm Multi Channel Aggregated Members Report command */
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_AGGREGATED_END_POINT_MASK_V4 0x7F
#define NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_PROPERTIES1_RES1_BIT_MASK_V4          0x80

/* Network Management Basic command class commands */
#define NETWORK_MANAGEMENT_BASIC_VERSION                                                 0x01
#define LEARN_MODE_SET                                                                   0x01
#define LEARN_MODE_SET_STATUS                                                            0x02
#define NODE_INFORMATION_SEND                                                            0x05
#define NETWORK_UPDATE_REQUEST                                                           0x03
#define NETWORK_UPDATE_REQUEST_STATUS                                                    0x04
#define DEFAULT_SET                                                                      0x06
#define DEFAULT_SET_COMPLETE                                                             0x07

/* Network Management Basic command class commands */
#define NETWORK_MANAGEMENT_BASIC_VERSION_V2                                              0x02
#define LEARN_MODE_SET_V2                                                                0x01
#define LEARN_MODE_SET_STATUS_V2                                                         0x02
#define NODE_INFORMATION_SEND_V2                                                         0x05
#define NETWORK_UPDATE_REQUEST_V2                                                        0x03
#define NETWORK_UPDATE_REQUEST_STATUS_V2                                                 0x04
#define DEFAULT_SET_V2                                                                   0x06
#define DEFAULT_SET_COMPLETE_V2                                                          0x07
#define DSK_GET_V2                                                                       0x08
#define DSK_REPORT_V2                                                                    0x09
/* Values used for Learn Mode Set command */
#define LEARN_MODE_SET_PROPERTIES1_RETURN_INTERVIEW_STATUS_BIT_MASK_V2                   0x01
#define LEARN_MODE_SET_PROPERTIES1_RESERVED_MASK_V2                                      0xFE
#define LEARN_MODE_SET_PROPERTIES1_RESERVED_SHIFT_V2                                     0x01
/* Values used for Dsk Get command */
#define DSK_GET_PROPERTIES1_ADD_MODE_BIT_MASK_V2                                         0x01
#define DSK_GET_PROPERTIES1_RESERVED_MASK_V2                                             0xFE
#define DSK_GET_PROPERTIES1_RESERVED_SHIFT_V2                                            0x01
/* Values used for Dsk Report command */
#define DSK_REPORT_PROPERTIES1_ADD_MODE_BIT_MASK_V2                                      0x01
#define DSK_REPORT_PROPERTIES1_RESERVED_MASK_V2                                          0xFE
#define DSK_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                         0x01

/* Network Management Inclusion command class commands */
#define NETWORK_MANAGEMENT_INCLUSION_VERSION                                             0x01
#define FAILED_NODE_REMOVE                                                               0x07
#define FAILED_NODE_REMOVE_STATUS                                                        0x08
#define NODE_ADD                                                                         0x01
#define NODE_ADD_STATUS                                                                  0x02
#define NODE_REMOVE                                                                      0x03
#define NODE_REMOVE_STATUS                                                               0x04
#define FAILED_NODE_REPLACE                                                              0x09
#define FAILED_NODE_REPLACE_STATUS                                                       0x0A
#define NODE_NEIGHBOR_UPDATE_REQUEST                                                     0x0B
#define NODE_NEIGHBOR_UPDATE_STATUS                                                      0x0C
#define RETURN_ROUTE_ASSIGN                                                              0x0D
#define RETURN_ROUTE_ASSIGN_COMPLETE                                                     0x0E
#define RETURN_ROUTE_DELETE                                                              0x0F
#define RETURN_ROUTE_DELETE_COMPLETE                                                     0x10
/* Values used for Node Add Status command */
#define NODE_ADD_STATUS_PROPERTIES1_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK                 0x7F
#define NODE_ADD_STATUS_PROPERTIES1_LISTENING_BIT_MASK                                   0x80
#define NODE_ADD_STATUS_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK                 0x7F
#define NODE_ADD_STATUS_PROPERTIES2_OPT_BIT_MASK                                         0x80

/* Network Management Inclusion command class commands */
#define NETWORK_MANAGEMENT_INCLUSION_VERSION_V2                                          0x02
#define FAILED_NODE_REMOVE_V2                                                            0x07
#define FAILED_NODE_REMOVE_STATUS_V2                                                     0x08
#define NODE_ADD_V2                                                                      0x01
#define NODE_ADD_STATUS_V2                                                               0x02
#define NODE_REMOVE_V2                                                                   0x03
#define NODE_REMOVE_STATUS_V2                                                            0x04
#define FAILED_NODE_REPLACE_V2                                                           0x09
#define FAILED_NODE_REPLACE_STATUS_V2                                                    0x0A
#define NODE_NEIGHBOR_UPDATE_REQUEST_V2                                                  0x0B
#define NODE_NEIGHBOR_UPDATE_STATUS_V2                                                   0x0C
#define RETURN_ROUTE_ASSIGN_V2                                                           0x0D
#define RETURN_ROUTE_ASSIGN_COMPLETE_V2                                                  0x0E
#define RETURN_ROUTE_DELETE_V2                                                           0x0F
#define RETURN_ROUTE_DELETE_COMPLETE_V2                                                  0x10
#define NODE_ADD_KEYS_REPORT_V2                                                          0x11
#define NODE_ADD_KEYS_SET_V2                                                             0x12
#define NODE_ADD_DSK_REPORT_V2                                                           0x13
#define NODE_ADD_DSK_SET_V2                                                              0x14
/* Values used for Node Add Status command */
#define NODE_ADD_STATUS_PROPERTIES1_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V2              0x7F
#define NODE_ADD_STATUS_PROPERTIES1_LISTENING_BIT_MASK_V2                                0x80
#define NODE_ADD_STATUS_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V2              0x7F
#define NODE_ADD_STATUS_PROPERTIES2_OPT_BIT_MASK_V2                                      0x80
/* Values used for Node Add Keys Report command */
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_REQUEST_CSA_BIT_MASK_V2                         0x01
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_RESERVED_MASK_V2                                0xFE
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                               0x01
/* Values used for Node Add Keys Set command */
#define NODE_ADD_KEYS_SET_PROPERTIES1_ACCEPT_BIT_MASK_V2                                 0x01
#define NODE_ADD_KEYS_SET_PROPERTIES1_GRANT_CSA_BIT_MASK_V2                              0x02
#define NODE_ADD_KEYS_SET_PROPERTIES1_RESERVED_MASK_V2                                   0xFC
#define NODE_ADD_KEYS_SET_PROPERTIES1_RESERVED_SHIFT_V2                                  0x02
/* Values used for Node Add Dsk Report command */
#define NODE_ADD_DSK_REPORT_PROPERTIES1_INPUT_DSK_LENGTH_MASK_V2                         0x0F
#define NODE_ADD_DSK_REPORT_PROPERTIES1_RESERVED_MASK_V2                                 0xF0
#define NODE_ADD_DSK_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                0x04
/* Values used for Node Add Dsk Set command */
#define NODE_ADD_DSK_SET_PROPERTIES1_INPUT_DSK_LENGTH_MASK_V2                            0x0F
#define NODE_ADD_DSK_SET_PROPERTIES1_RESERVED_MASK_V2                                    0x70
#define NODE_ADD_DSK_SET_PROPERTIES1_RESERVED_SHIFT_V2                                   0x04
#define NODE_ADD_DSK_SET_PROPERTIES1_ACCEPT_BIT_MASK_V2                                  0x80

/* Network Management Inclusion command class commands */
#define NETWORK_MANAGEMENT_INCLUSION_VERSION_V3                                          0x03
#define FAILED_NODE_REMOVE_V3                                                            0x07
#define FAILED_NODE_REMOVE_STATUS_V3                                                     0x08
#define NODE_ADD_V3                                                                      0x01
#define NODE_ADD_STATUS_V3                                                               0x02
#define NODE_REMOVE_V3                                                                   0x03
#define NODE_REMOVE_STATUS_V3                                                            0x04
#define FAILED_NODE_REPLACE_V3                                                           0x09
#define FAILED_NODE_REPLACE_STATUS_V3                                                    0x0A
#define NODE_NEIGHBOR_UPDATE_REQUEST_V3                                                  0x0B
#define NODE_NEIGHBOR_UPDATE_STATUS_V3                                                   0x0C
#define RETURN_ROUTE_ASSIGN_V3                                                           0x0D
#define RETURN_ROUTE_ASSIGN_COMPLETE_V3                                                  0x0E
#define RETURN_ROUTE_DELETE_V3                                                           0x0F
#define RETURN_ROUTE_DELETE_COMPLETE_V3                                                  0x10
#define NODE_ADD_KEYS_REPORT_V3                                                          0x11
#define NODE_ADD_KEYS_SET_V3                                                             0x12
#define NODE_ADD_DSK_REPORT_V3                                                           0x13
#define NODE_ADD_DSK_SET_V3                                                              0x14
#define SMART_START_JOIN_STARTED_REPORT_V3                                               0x15
#define INCLUDED_NIF_REPORT_V3                                                           0x19
/* Values used for Node Add Status command */
#define NODE_ADD_STATUS_PROPERTIES1_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V3              0x7F
#define NODE_ADD_STATUS_PROPERTIES1_LISTENING_BIT_MASK_V3                                0x80
#define NODE_ADD_STATUS_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V3              0x7F
#define NODE_ADD_STATUS_PROPERTIES2_OPT_BIT_MASK_V3                                      0x80
#define NODE_ADD_STATUS_PROPERTIES3_DSK_LENGTH_MASK_V3                                   0x1F
#define NODE_ADD_STATUS_PROPERTIES3_RESERVED2_MASK_V3                                    0xE0
#define NODE_ADD_STATUS_PROPERTIES3_RESERVED2_SHIFT_V3                                   0x05
/* Values used for Node Add Keys Report command */
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_REQUEST_CSA_BIT_MASK_V3                         0x01
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_RESERVED_MASK_V3                                0xFE
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                               0x01
/* Values used for Node Add Keys Set command */
#define NODE_ADD_KEYS_SET_PROPERTIES1_ACCEPT_BIT_MASK_V3                                 0x01
#define NODE_ADD_KEYS_SET_PROPERTIES1_GRANT_CSA_BIT_MASK_V3                              0x02
#define NODE_ADD_KEYS_SET_PROPERTIES1_RESERVED_MASK_V3                                   0xFC
#define NODE_ADD_KEYS_SET_PROPERTIES1_RESERVED_SHIFT_V3                                  0x02
/* Values used for Node Add Dsk Report command */
#define NODE_ADD_DSK_REPORT_PROPERTIES1_INPUT_DSK_LENGTH_MASK_V3                         0x0F
#define NODE_ADD_DSK_REPORT_PROPERTIES1_RESERVED_MASK_V3                                 0xF0
#define NODE_ADD_DSK_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                                0x04
/* Values used for Node Add Dsk Set command */
#define NODE_ADD_DSK_SET_PROPERTIES1_INPUT_DSK_LENGTH_MASK_V3                            0x0F
#define NODE_ADD_DSK_SET_PROPERTIES1_RESERVED_MASK_V3                                    0x70
#define NODE_ADD_DSK_SET_PROPERTIES1_RESERVED_SHIFT_V3                                   0x04
#define NODE_ADD_DSK_SET_PROPERTIES1_ACCEPT_BIT_MASK_V3                                  0x80
/* Values used for Smart Start Join Started Report command */
#define SMART_START_JOIN_STARTED_REPORT_PROPERTIES1_DSK_LENGTH_MASK_V3                   0x1F
#define SMART_START_JOIN_STARTED_REPORT_PROPERTIES1_RESERVED1_MASK_V3                    0xE0
#define SMART_START_JOIN_STARTED_REPORT_PROPERTIES1_RESERVED1_SHIFT_V3                   0x05
/* Values used for Included Nif Report command */
#define INCLUDED_NIF_REPORT_PROPERTIES1_DSK_LENGTH_MASK_V3                               0x1F
#define INCLUDED_NIF_REPORT_PROPERTIES1_RESERVED1_MASK_V3                                0xE0
#define INCLUDED_NIF_REPORT_PROPERTIES1_RESERVED1_SHIFT_V3                               0x05

/* Network Management Inclusion command class commands */
#define NETWORK_MANAGEMENT_INCLUSION_VERSION_V4                                          0x04
#define FAILED_NODE_REMOVE_V4                                                            0x07
#define FAILED_NODE_REMOVE_STATUS_V4                                                     0x08
#define NODE_ADD_V4                                                                      0x01
#define NODE_ADD_STATUS_V4                                                               0x02
#define NODE_REMOVE_V4                                                                   0x03
#define NODE_REMOVE_STATUS_V4                                                            0x04
#define FAILED_NODE_REPLACE_V4                                                           0x09
#define FAILED_NODE_REPLACE_STATUS_V4                                                    0x0A
#define NODE_NEIGHBOR_UPDATE_REQUEST_V4                                                  0x0B
#define NODE_NEIGHBOR_UPDATE_STATUS_V4                                                   0x0C
#define RETURN_ROUTE_ASSIGN_V4                                                           0x0D
#define RETURN_ROUTE_ASSIGN_COMPLETE_V4                                                  0x0E
#define RETURN_ROUTE_DELETE_V4                                                           0x0F
#define RETURN_ROUTE_DELETE_COMPLETE_V4                                                  0x10
#define NODE_ADD_KEYS_REPORT_V4                                                          0x11
#define NODE_ADD_KEYS_SET_V4                                                             0x12
#define NODE_ADD_DSK_REPORT_V4                                                           0x13
#define NODE_ADD_DSK_SET_V4                                                              0x14
#define SMART_START_JOIN_STARTED_REPORT_V4                                               0x15
#define INCLUDED_NIF_REPORT_V4                                                           0x19
#define EXTENDED_NODE_ADD_STATUS_V4                                                      0x16
/* Values used for Node Add Status command */
#define NODE_ADD_STATUS_PROPERTIES1_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V4              0x7F
#define NODE_ADD_STATUS_PROPERTIES1_LISTENING_BIT_MASK_V4                                0x80
#define NODE_ADD_STATUS_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V4              0x7F
#define NODE_ADD_STATUS_PROPERTIES2_OPT_BIT_MASK_V4                                      0x80
#define NODE_ADD_STATUS_PROPERTIES3_DSK_LENGTH_MASK_V4                                   0x1F
#define NODE_ADD_STATUS_PROPERTIES3_RESERVED2_MASK_V4                                    0xE0
#define NODE_ADD_STATUS_PROPERTIES3_RESERVED2_SHIFT_V4                                   0x05
/* Values used for Node Add Keys Report command */
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_REQUEST_CSA_BIT_MASK_V4                         0x01
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_RESERVED_MASK_V4                                0xFE
#define NODE_ADD_KEYS_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                               0x01
/* Values used for Node Add Keys Set command */
#define NODE_ADD_KEYS_SET_PROPERTIES1_ACCEPT_BIT_MASK_V4                                 0x01
#define NODE_ADD_KEYS_SET_PROPERTIES1_GRANT_CSA_BIT_MASK_V4                              0x02
#define NODE_ADD_KEYS_SET_PROPERTIES1_RESERVED_MASK_V4                                   0xFC
#define NODE_ADD_KEYS_SET_PROPERTIES1_RESERVED_SHIFT_V4                                  0x02
/* Values used for Node Add Dsk Report command */
#define NODE_ADD_DSK_REPORT_PROPERTIES1_INPUT_DSK_LENGTH_MASK_V4                         0x0F
#define NODE_ADD_DSK_REPORT_PROPERTIES1_RESERVED_MASK_V4                                 0xF0
#define NODE_ADD_DSK_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                                0x04
/* Values used for Node Add Dsk Set command */
#define NODE_ADD_DSK_SET_PROPERTIES1_INPUT_DSK_LENGTH_MASK_V4                            0x0F
#define NODE_ADD_DSK_SET_PROPERTIES1_RESERVED_MASK_V4                                    0x70
#define NODE_ADD_DSK_SET_PROPERTIES1_RESERVED_SHIFT_V4                                   0x04
#define NODE_ADD_DSK_SET_PROPERTIES1_ACCEPT_BIT_MASK_V4                                  0x80
/* Values used for Smart Start Join Started Report command */
#define SMART_START_JOIN_STARTED_REPORT_PROPERTIES1_DSK_LENGTH_MASK_V4                   0x1F
#define SMART_START_JOIN_STARTED_REPORT_PROPERTIES1_RESERVED1_MASK_V4                    0xE0
#define SMART_START_JOIN_STARTED_REPORT_PROPERTIES1_RESERVED1_SHIFT_V4                   0x05
/* Values used for Included Nif Report command */
#define INCLUDED_NIF_REPORT_PROPERTIES1_DSK_LENGTH_MASK_V4                               0x1F
#define INCLUDED_NIF_REPORT_PROPERTIES1_RESERVED1_MASK_V4                                0xE0
#define INCLUDED_NIF_REPORT_PROPERTIES1_RESERVED1_SHIFT_V4                               0x05
/* Values used for Extended Node Add Status command */
#define EXTENDED_NODE_ADD_STATUS_PROPERTIES1_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK_V4     0x7F
#define EXTENDED_NODE_ADD_STATUS_PROPERTIES1_LISTENING_BIT_MASK_V4                       0x80
#define EXTENDED_NODE_ADD_STATUS_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK_V4     0x7F
#define EXTENDED_NODE_ADD_STATUS_PROPERTIES2_OPT_FUNC_BIT_MASK_V4                        0x80

/* No Operation command class commands */
#define NO_OPERATION_VERSION                                                             0x01

/* Node Naming command class commands */
#define NODE_NAMING_VERSION                                                              0x01
#define NODE_NAMING_NODE_LOCATION_REPORT                                                 0x06
#define NODE_NAMING_NODE_LOCATION_SET                                                    0x04
#define NODE_NAMING_NODE_LOCATION_GET                                                    0x05
#define NODE_NAMING_NODE_NAME_GET                                                        0x02
#define NODE_NAMING_NODE_NAME_REPORT                                                     0x03
#define NODE_NAMING_NODE_NAME_SET                                                        0x01
/* Values used for Node Naming Node Location Report command */
#define NODE_NAMING_NODE_LOCATION_REPORT_LEVEL_CHAR_PRESENTATION_MASK                    0x07
#define NODE_NAMING_NODE_LOCATION_REPORT_LEVEL_RESERVED_MASK                             0xF8
#define NODE_NAMING_NODE_LOCATION_REPORT_LEVEL_RESERVED_SHIFT                            0x03
/* Values used for Node Naming Node Location Set command */
#define NODE_NAMING_NODE_LOCATION_SET_LEVEL_CHAR_PRESENTATION_MASK                       0x07
#define NODE_NAMING_NODE_LOCATION_SET_LEVEL_RESERVED_MASK                                0xF8
#define NODE_NAMING_NODE_LOCATION_SET_LEVEL_RESERVED_SHIFT                               0x03
/* Values used for Node Naming Node Name Report command */
#define NODE_NAMING_NODE_NAME_REPORT_LEVEL_CHAR_PRESENTATION_MASK                        0x07
#define NODE_NAMING_NODE_NAME_REPORT_LEVEL_RESERVED_MASK                                 0xF8
#define NODE_NAMING_NODE_NAME_REPORT_LEVEL_RESERVED_SHIFT                                0x03
/* Values used for Node Naming Node Name Set command */
#define NODE_NAMING_NODE_NAME_SET_LEVEL_CHAR_PRESENTATION_MASK                           0x07
#define NODE_NAMING_NODE_NAME_SET_LEVEL_RESERVED_MASK                                    0xF8
#define NODE_NAMING_NODE_NAME_SET_LEVEL_RESERVED_SHIFT                                   0x03

/* Non Interoperable command class commands */
#define NON_INTEROPERABLE_VERSION                                                        0x01

/* Powerlevel command class commands */
#define POWERLEVEL_VERSION                                                               0x01
#define POWERLEVEL_GET                                                                   0x02
#define POWERLEVEL_REPORT                                                                0x03
#define POWERLEVEL_SET                                                                   0x01
#define POWERLEVEL_TEST_NODE_GET                                                         0x05
#define POWERLEVEL_TEST_NODE_REPORT                                                      0x06
#define POWERLEVEL_TEST_NODE_SET                                                         0x04
/* Values used for Powerlevel Report command */
#define POWERLEVEL_REPORT_NORMALPOWER                                                    0x00
#define POWERLEVEL_REPORT_MINUS1DBM                                                      0x01
#define POWERLEVEL_REPORT_MINUS2DBM                                                      0x02
#define POWERLEVEL_REPORT_MINUS3DBM                                                      0x03
#define POWERLEVEL_REPORT_MINUS4DBM                                                      0x04
#define POWERLEVEL_REPORT_MINUS5DBM                                                      0x05
#define POWERLEVEL_REPORT_MINUS6DBM                                                      0x06
#define POWERLEVEL_REPORT_MINUS7DBM                                                      0x07
#define POWERLEVEL_REPORT_MINUS8DBM                                                      0x08
#define POWERLEVEL_REPORT_MINUS9DBM                                                      0x09
/* Values used for Powerlevel Set command */
#define POWERLEVEL_SET_NORMALPOWER                                                       0x00
#define POWERLEVEL_SET_MINUS1DBM                                                         0x01
#define POWERLEVEL_SET_MINUS2DBM                                                         0x02
#define POWERLEVEL_SET_MINUS3DBM                                                         0x03
#define POWERLEVEL_SET_MINUS4DBM                                                         0x04
#define POWERLEVEL_SET_MINUS5DBM                                                         0x05
#define POWERLEVEL_SET_MINUS6DBM                                                         0x06
#define POWERLEVEL_SET_MINUS7DBM                                                         0x07
#define POWERLEVEL_SET_MINUS8DBM                                                         0x08
#define POWERLEVEL_SET_MINUS9DBM                                                         0x09
/* Values used for Powerlevel Test Node Report command */
#define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_NOT_A_NODEID                                 0x00
#define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_FAILED                                       0x00
#define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_SUCCES                                       0x01
#define POWERLEVEL_TEST_NODE_REPORT_ZW_TEST_INPROGRESS                                   0x02
/* Values used for Powerlevel Test Node Set command */
#define POWERLEVEL_TEST_NODE_SET_NORMALPOWER                                             0x00
#define POWERLEVEL_TEST_NODE_SET_MINUS1DBM                                               0x01
#define POWERLEVEL_TEST_NODE_SET_MINUS2DBM                                               0x02
#define POWERLEVEL_TEST_NODE_SET_MINUS3DBM                                               0x03
#define POWERLEVEL_TEST_NODE_SET_MINUS4DBM                                               0x04
#define POWERLEVEL_TEST_NODE_SET_MINUS5DBM                                               0x05
#define POWERLEVEL_TEST_NODE_SET_MINUS6DBM                                               0x06
#define POWERLEVEL_TEST_NODE_SET_MINUS7DBM                                               0x07
#define POWERLEVEL_TEST_NODE_SET_MINUS8DBM                                               0x08
#define POWERLEVEL_TEST_NODE_SET_MINUS9DBM                                               0x09

/* Prepayment Encapsulation command class commands */
#define PREPAYMENT_ENCAPSULATION_VERSION                                                 0x01
#define CMD_ENCAPSULATION                                                                0x01

/* Prepayment command class commands */
#define PREPAYMENT_VERSION                                                               0x01
#define PREPAYMENT_BALANCE_GET                                                           0x01
#define PREPAYMENT_BALANCE_REPORT                                                        0x02
#define PREPAYMENT_SUPPORTED_GET                                                         0x03
#define PREPAYMENT_SUPPORTED_REPORT                                                      0x04
/* Values used for Prepayment Balance Get command */
#define PREPAYMENT_BALANCE_GET_PROPERTIES1_RESERVED_MASK                                 0x3F
#define PREPAYMENT_BALANCE_GET_PROPERTIES1_BALANCE_TYPE_MASK                             0xC0
#define PREPAYMENT_BALANCE_GET_PROPERTIES1_BALANCE_TYPE_SHIFT                            0x06
#define PREPAYMENT_BALANCE_GET_BALANCE_TYPE_UTILITY                                      0x00
#define PREPAYMENT_BALANCE_GET_BALANCE_TYPE_MONETARY                                     0x01
/* Values used for Prepayment Balance Report command */
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES1_METER_TYPE_MASK                            0x3F
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES1_BALANCE_TYPE_MASK                          0xC0
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES1_BALANCE_TYPE_SHIFT                         0x06
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES2_SCALE_MASK                                 0x1F
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES2_BALANCE_PRECISION_MASK                     0xE0
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES2_BALANCE_PRECISION_SHIFT                    0x05
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES3_RESERVED1_MASK                             0x1F
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES3_DEBT_PRECISION_MASK                        0xE0
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES3_DEBT_PRECISION_SHIFT                       0x05
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES4_RESERVED2_MASK                             0x1F
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES4_EMER_CREDIT_PRECISION_MASK                 0xE0
#define PREPAYMENT_BALANCE_REPORT_PROPERTIES4_EMER_CREDIT_PRECISION_SHIFT                0x05
/* Values used for Prepayment Supported Report command */
#define PREPAYMENT_SUPPORTED_REPORT_PROPERTIES1_TYPES_SUPPORTED_MASK                     0x0F
#define PREPAYMENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK                            0xF0
#define PREPAYMENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT                           0x04

/* Proprietary command class commands */
#define PROPRIETARY_VERSION                                                              0x01
#define PROPRIETARY_GET                                                                  0x02
#define PROPRIETARY_REPORT                                                               0x03
#define PROPRIETARY_SET                                                                  0x01

/* Protection command class commands */
#define PROTECTION_VERSION                                                               0x01
#define PROTECTION_GET                                                                   0x02
#define PROTECTION_REPORT                                                                0x03
#define PROTECTION_SET                                                                   0x01
/* Values used for Protection Report command */
#define PROTECTION_REPORT_UNPROTECTED                                                    0x00
#define PROTECTION_REPORT_PROTECTION_BY_SEQUENCE                                         0x01
#define PROTECTION_REPORT_NO_OPERATION_POSSIBLE                                          0x02
/* Values used for Protection Set command */
#define PROTECTION_SET_UNPROTECTED                                                       0x00
#define PROTECTION_SET_PROTECTION_BY_SEQUENCE                                            0x01
#define PROTECTION_SET_NO_OPERATION_POSSIBLE                                             0x02

/* Protection command class commands */
#define PROTECTION_VERSION_V2                                                            0x02
#define PROTECTION_EC_GET_V2                                                             0x07
#define PROTECTION_EC_REPORT_V2                                                          0x08
#define PROTECTION_EC_SET_V2                                                             0x06
#define PROTECTION_GET_V2                                                                0x02
#define PROTECTION_REPORT_V2                                                             0x03
#define PROTECTION_SET_V2                                                                0x01
#define PROTECTION_SUPPORTED_GET_V2                                                      0x04
#define PROTECTION_SUPPORTED_REPORT_V2                                                   0x05
#define PROTECTION_TIMEOUT_GET_V2                                                        0x0A
#define PROTECTION_TIMEOUT_REPORT_V2                                                     0x0B
#define PROTECTION_TIMEOUT_SET_V2                                                        0x09
/* Values used for Protection Report command */
#define PROTECTION_REPORT_LEVEL_LOCAL_PROTECTION_STATE_MASK_V2                           0x0F
#define PROTECTION_REPORT_LEVEL_RESERVED1_MASK_V2                                        0xF0
#define PROTECTION_REPORT_LEVEL_RESERVED1_SHIFT_V2                                       0x04
#define PROTECTION_REPORT_LEVEL2_RF_PROTECTION_STATE_MASK_V2                             0x0F
#define PROTECTION_REPORT_LEVEL2_RESERVED2_MASK_V2                                       0xF0
#define PROTECTION_REPORT_LEVEL2_RESERVED2_SHIFT_V2                                      0x04
/* Values used for Protection Set command */
#define PROTECTION_SET_LEVEL_LOCAL_PROTECTION_STATE_MASK_V2                              0x0F
#define PROTECTION_SET_LEVEL_RESERVED1_MASK_V2                                           0xF0
#define PROTECTION_SET_LEVEL_RESERVED1_SHIFT_V2                                          0x04
#define PROTECTION_SET_LEVEL2_RF_PROTECTION_STATE_MASK_V2                                0x0F
#define PROTECTION_SET_LEVEL2_RESERVED2_MASK_V2                                          0xF0
#define PROTECTION_SET_LEVEL2_RESERVED2_SHIFT_V2                                         0x04
/* Values used for Protection Supported Report command */
#define PROTECTION_SUPPORTED_REPORT_LEVEL_TIMEOUT_BIT_MASK_V2                            0x01
#define PROTECTION_SUPPORTED_REPORT_LEVEL_EXCLUSIVE_CONTROL_BIT_MASK_V2                  0x02
#define PROTECTION_SUPPORTED_REPORT_LEVEL_RESERVED_MASK_V2                               0xFC
#define PROTECTION_SUPPORTED_REPORT_LEVEL_RESERVED_SHIFT_V2                              0x02

/* Rate Tbl Config command class commands */
#define RATE_TBL_CONFIG_VERSION                                                          0x01
#define RATE_TBL_REMOVE                                                                  0x02
#define RATE_TBL_SET                                                                     0x01
/* Values used for Rate Tbl Remove command */
#define RATE_TBL_REMOVE_PROPERTIES1_RATE_PARAMETER_SET_IDS_MASK                          0x3F
#define RATE_TBL_REMOVE_PROPERTIES1_RESERVED_MASK                                        0xC0
#define RATE_TBL_REMOVE_PROPERTIES1_RESERVED_SHIFT                                       0x06
/* Values used for Rate Tbl Set command */
#define RATE_TBL_SET_PROPERTIES1_NUMBER_OF_RATE_CHAR_MASK                                0x1F
#define RATE_TBL_SET_PROPERTIES1_RATE_TYPE_MASK                                          0x60
#define RATE_TBL_SET_PROPERTIES1_RATE_TYPE_SHIFT                                         0x05
#define RATE_TBL_SET_PROPERTIES1_RESERVED_BIT_MASK                                       0x80
#define RATE_TBL_SET_PROPERTIES2_CONSUMPTION_SCALE_MASK                                  0x1F
#define RATE_TBL_SET_PROPERTIES2_CONSUMPTION_PRECISION_MASK                              0xE0
#define RATE_TBL_SET_PROPERTIES2_CONSUMPTION_PRECISION_SHIFT                             0x05
#define RATE_TBL_SET_PROPERTIES3_MAX_DEMAND_SCALE_MASK                                   0x1F
#define RATE_TBL_SET_PROPERTIES3_MAX_DEMAND_PRECISION_MASK                               0xE0
#define RATE_TBL_SET_PROPERTIES3_MAX_DEMAND_PRECISION_SHIFT                              0x05

/* Rate Tbl Monitor command class commands */
#define RATE_TBL_MONITOR_VERSION                                                         0x01
#define RATE_TBL_ACTIVE_RATE_GET                                                         0x05
#define RATE_TBL_ACTIVE_RATE_REPORT                                                      0x06
#define RATE_TBL_CURRENT_DATA_GET                                                        0x07
#define RATE_TBL_CURRENT_DATA_REPORT                                                     0x08
#define RATE_TBL_GET                                                                     0x03
#define RATE_TBL_HISTORICAL_DATA_GET                                                     0x09
#define RATE_TBL_HISTORICAL_DATA_REPORT                                                  0x0A
#define RATE_TBL_REPORT                                                                  0x04
#define RATE_TBL_SUPPORTED_GET                                                           0x01
#define RATE_TBL_SUPPORTED_REPORT                                                        0x02
/* Values used for Rate Tbl Report command */
#define RATE_TBL_REPORT_PROPERTIES1_NUMBER_OF_RATE_CHAR_MASK                             0x1F
#define RATE_TBL_REPORT_PROPERTIES1_RATE_TYPE_MASK                                       0x60
#define RATE_TBL_REPORT_PROPERTIES1_RATE_TYPE_SHIFT                                      0x05
#define RATE_TBL_REPORT_PROPERTIES1_RESERVED_BIT_MASK                                    0x80
#define RATE_TBL_REPORT_PROPERTIES2_CONSUMPTION_SCALE_MASK                               0x1F
#define RATE_TBL_REPORT_PROPERTIES2_CONSUMPTION_PRECISION_MASK                           0xE0
#define RATE_TBL_REPORT_PROPERTIES2_CONSUMPTION_PRECISION_SHIFT                          0x05
#define RATE_TBL_REPORT_PROPERTIES3_MAX_DEMAND_SCALE_MASK                                0x1F
#define RATE_TBL_REPORT_PROPERTIES3_MAX_DEMAND_PRECISION_MASK                            0xE0
#define RATE_TBL_REPORT_PROPERTIES3_MAX_DEMAND_PRECISION_SHIFT                           0x05

/* Remote Association Activate command class commands */
#define REMOTE_ASSOCIATION_ACTIVATE_VERSION                                              0x01
#define REMOTE_ASSOCIATION_ACTIVATE                                                      0x01

/* Remote Association command class commands */
#define REMOTE_ASSOCIATION_VERSION                                                       0x01
#define REMOTE_ASSOCIATION_CONFIGURATION_GET                                             0x02
#define REMOTE_ASSOCIATION_CONFIGURATION_REPORT                                          0x03
#define REMOTE_ASSOCIATION_CONFIGURATION_SET                                             0x01

/* Scene Activation command class commands */
#define SCENE_ACTIVATION_VERSION                                                         0x01
#define SCENE_ACTIVATION_SET                                                             0x01

/* Scene Actuator Conf command class commands */
#define SCENE_ACTUATOR_CONF_VERSION                                                      0x01
#define SCENE_ACTUATOR_CONF_GET                                                          0x02
#define SCENE_ACTUATOR_CONF_REPORT                                                       0x03
#define SCENE_ACTUATOR_CONF_SET                                                          0x01
/* Values used for Scene Actuator Conf Set command */
#define SCENE_ACTUATOR_CONF_SET_LEVEL2_RESERVED_MASK                                     0x7F
#define SCENE_ACTUATOR_CONF_SET_LEVEL2_OVERRIDE_BIT_MASK                                 0x80

/* Scene Controller Conf command class commands */
#define SCENE_CONTROLLER_CONF_VERSION                                                    0x01
#define SCENE_CONTROLLER_CONF_GET                                                        0x02
#define SCENE_CONTROLLER_CONF_REPORT                                                     0x03
#define SCENE_CONTROLLER_CONF_SET                                                        0x01

/* Schedule Entry Lock command class commands */
#define SCHEDULE_ENTRY_LOCK_VERSION                                                      0x01
#define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET                                               0x02
#define SCHEDULE_ENTRY_LOCK_ENABLE_SET                                                   0x01
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET                                                 0x04
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT                                              0x05
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET                                                 0x03
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET                                                 0x07
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT                                              0x08
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET                                                 0x06
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET                                                0x09
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT                                             0x0A

/* Schedule Entry Lock command class commands */
#define SCHEDULE_ENTRY_LOCK_VERSION_V2                                                   0x02
#define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2                                            0x02
#define SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2                                                0x01
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2                                           0x0B
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2                                        0x0C
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2                                           0x0D
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2                                              0x04
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2                                           0x05
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2                                              0x03
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2                                              0x07
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2                                           0x08
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2                                              0x06
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2                                             0x09
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2                                          0x0A
/* Values used for Schedule Entry Lock Time Offset Report command */
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V2                    0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V2                0x80
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V2          0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2        0x80
/* Values used for Schedule Entry Lock Time Offset Set command */
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V2                       0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V2                   0x80
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V2             0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2           0x80

/* Schedule Entry Lock command class commands */
#define SCHEDULE_ENTRY_LOCK_VERSION_V3                                                   0x03
#define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3                                            0x02
#define SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3                                                0x01
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3                                           0x0B
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3                                        0x0C
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3                                           0x0D
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3                                              0x04
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3                                           0x05
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3                                              0x03
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3                                              0x07
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3                                           0x08
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3                                              0x06
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3                                             0x09
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3                                          0x0A
#define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3                                       0x0E
#define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3                                    0x0F
#define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3                                       0x10
/* Values used for Schedule Entry Lock Time Offset Report command */
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V3                    0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V3                0x80
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V3          0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V3        0x80
/* Values used for Schedule Entry Lock Time Offset Set command */
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V3                       0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V3                   0x80
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V3             0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V3           0x80

/* Schedule Entry Lock command class commands */
#define SCHEDULE_ENTRY_LOCK_VERSION_V4                                                   0x04
#define SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V4                                            0x02
#define SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4                                                0x01
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V4                                           0x0B
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V4                                        0x0C
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V4                                           0x0D
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V4                                              0x04
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V4                                           0x05
#define SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V4                                              0x03
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V4                                              0x07
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V4                                           0x08
#define SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V4                                              0x06
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V4                                             0x09
#define SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V4                                          0x0A
#define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4                                       0x0E
#define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4                                    0x0F
#define SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4                                       0x10
#define EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4                                       0x11
#define EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_SET_V4                            0x12
#define EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_GET_V4                            0x13
#define EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_REPORT_V4                         0x14
#define EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_SET_V4                            0x15
#define EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_GET_V4                            0x16
#define EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_REPORT_V4                         0x17
#define EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4                              0x18
#define EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4                              0x19
#define EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4                           0x1A
/* Values used for Schedule Entry Lock Time Offset Report command */
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V4                    0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V4                0x80
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V4          0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V4        0x80
/* Values used for Schedule Entry Lock Time Offset Set command */
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V4                       0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V4                   0x80
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V4             0x7F
#define SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V4           0x80
/* Values used for Extended Schedule Entry Lock Enable Set command */
#define EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_PROPERTIES1_ENABLED_BIT_MASK_V4          0x01
#define EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_PROPERTIES1_RESERVED_MASK_V4             0xFE
#define EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_PROPERTIES1_RESERVED_SHIFT_V4            0x01

/* Screen Attributes command class commands */
#define SCREEN_ATTRIBUTES_VERSION                                                        0x01
#define SCREEN_ATTRIBUTES_GET                                                            0x01
#define SCREEN_ATTRIBUTES_REPORT                                                         0x02
/* Values used for Screen Attributes Report command */
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_NUMBER_OF_LINES_MASK                        0x1F
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_MASK                               0xE0
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_SHIFT                              0x05

/* Screen Attributes command class commands */
#define SCREEN_ATTRIBUTES_VERSION_V2                                                     0x02
#define SCREEN_ATTRIBUTES_GET_V2                                                         0x01
#define SCREEN_ATTRIBUTES_REPORT_V2                                                      0x02
#define SCREEN_ATTRIBUTES_REPORT_LEGACY_V2                                               0x03 /*added for backward compatibility*/
/* Values used for Screen Attributes Report command */
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_NUMBER_OF_LINES_MASK_V2                     0x1F
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_ESCAPE_SEQUENCE_BIT_MASK_V2                 0x20
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_MASK_V2                            0xC0
#define SCREEN_ATTRIBUTES_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                           0x06
/* Values used for Screen Attributes Report Legacy command */
#define SCREEN_ATTRIBUTES_REPORT_LEGACY_PROPERTIES1_NUMBER_OF_LINES_MASK_V2              0x1F
#define SCREEN_ATTRIBUTES_REPORT_LEGACY_PROPERTIES1_ESCAPE_SEQUENCE_BIT_MASK_V2          0x20
#define SCREEN_ATTRIBUTES_REPORT_LEGACY_PROPERTIES1_RESERVED_MASK_V2                     0xC0
#define SCREEN_ATTRIBUTES_REPORT_LEGACY_PROPERTIES1_RESERVED_SHIFT_V2                    0x06

/* Screen Md command class commands */
#define SCREEN_MD_VERSION                                                                0x01
#define SCREEN_MD_GET                                                                    0x01
#define SCREEN_MD_REPORT                                                                 0x02
/* Values used for Screen Md Report command */
#define SCREEN_MD_REPORT_PROPERTIES1_CHAR_PRESENTATION_MASK                              0x07
#define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_MASK                                0x38
#define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_SHIFT                               0x03
#define SCREEN_MD_REPORT_PROPERTIES1_RESERVED_BIT_MASK                                   0x40
#define SCREEN_MD_REPORT_PROPERTIES1_MORE_DATA_BIT_MASK                                  0x80

/* Screen Md command class commands */
#define SCREEN_MD_VERSION_V2                                                             0x02
#define SCREEN_MD_GET_V2                                                                 0x01
#define SCREEN_MD_REPORT_V2                                                              0x02
#define SCREEN_MD_REPORT_LEGACY_V2                                                       0x03 /*added for backward compatibility*/
/* Values used for Screen Md Report command */
#define SCREEN_MD_REPORT_PROPERTIES1_CHAR_PRESENTATION_MASK_V2                           0x07
#define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_MASK_V2                             0x38
#define SCREEN_MD_REPORT_PROPERTIES1_SCREEN_SETTINGS_SHIFT_V2                            0x03
#define SCREEN_MD_REPORT_PROPERTIES1_RESERVED1_BIT_MASK_V2                               0x40
#define SCREEN_MD_REPORT_PROPERTIES1_MORE_DATA_BIT_MASK_V2                               0x80
#define SCREEN_MD_REPORT_PROPERTIES2_SCREEN_TIMEOUT_BIT_MASK_V2                          0x01
#define SCREEN_MD_REPORT_PROPERTIES2_RESERVED2_MASK_V2                                   0xFE
#define SCREEN_MD_REPORT_PROPERTIES2_RESERVED2_SHIFT_V2                                  0x01
/* Values used for Screen Md Report Legacy command */
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES1_CHAR_PRESENTATION_MASK_V2                    0x07
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES1_SCREEN_SETTINGS_MASK_V2                      0x38
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES1_SCREEN_SETTINGS_SHIFT_V2                     0x03
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES1_RESERVED1_BIT_MASK_V2                        0x40
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES1_MORE_DATA_BIT_MASK_V2                        0x80
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES2_SCREEN_TIMEOUT_BIT_MASK_V2                   0x01
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES2_RESERVED2_MASK_V2                            0xFE
#define SCREEN_MD_REPORT_LEGACY_PROPERTIES2_RESERVED2_SHIFT_V2                           0x01

/* Security Panel Mode command class commands */
#define SECURITY_PANEL_MODE_VERSION                                                      0x01
#define SECURITY_PANEL_MODE_GET                                                          0x03
#define SECURITY_PANEL_MODE_REPORT                                                       0x04
#define SECURITY_PANEL_MODE_SET                                                          0x05
#define SECURITY_PANEL_MODE_SUPPORTED_GET                                                0x01
#define SECURITY_PANEL_MODE_SUPPORTED_REPORT                                             0x02

/* Security Panel Zone Sensor command class commands */
#define SECURITY_PANEL_ZONE_SENSOR_VERSION                                               0x01
#define COMMAND_CLASS_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT                        0x02
#define SECURITY_PANEL_ZONE_SENSOR_TYPE_GET                                              0x03
#define SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT                                           0x04
#define SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET                                         0x01
#define SECURITY_PANEL_ZONE_SENSOR_STATE_GET                                             0x05
#define SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT                                          0x06

/* Security Panel Zone command class commands */
#define SECURITY_PANEL_ZONE_VERSION                                                      0x01
#define SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET                                         0x01
#define SECURITY_PANEL_ZONE_STATE_GET                                                    0x05
#define SECURITY_PANEL_ZONE_STATE_REPORT                                                 0x06
#define SECURITY_PANEL_ZONE_SUPPORTED_REPORT                                             0x02
#define SECURITY_PANEL_ZONE_TYPE_GET                                                     0x03
#define SECURITY_PANEL_ZONE_TYPE_REPORT                                                  0x04
/* Values used for Security Panel Zone Supported Report command */
#define SECURITY_PANEL_ZONE_SUPPORTED_REPORT_PARAMETERS1_ZONES_SUPPORTED_MASK            0x7F
#define SECURITY_PANEL_ZONE_SUPPORTED_REPORT_PARAMETERS1_ZM_BIT_MASK                     0x80

/* Security command class commands */
#define SECURITY_VERSION                                                                 0x01
#define NETWORK_KEY_SET                                                                  0x06
#define NETWORK_KEY_VERIFY                                                               0x07
#define SECURITY_COMMANDS_SUPPORTED_GET                                                  0x02
#define SECURITY_COMMANDS_SUPPORTED_REPORT                                               0x03
#define SECURITY_MESSAGE_ENCAPSULATION                                                   0x81
#define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET                                         0xC1
#define SECURITY_NONCE_GET                                                               0x40
#define SECURITY_NONCE_REPORT                                                            0x80
#define SECURITY_SCHEME_GET                                                              0x04
#define SECURITY_SCHEME_INHERIT                                                          0x08
#define SECURITY_SCHEME_REPORT                                                           0x05
/* Values used for Security Commands Supported Report command */
#define SECURITY_COMMANDS_SUPPORTED_REPORT_COMMAND_CLASS_MARK                            0xEF /*The COMMAND_CLASS_MARK is used to indicate that all preceding command classes are supported and all following command classes are controlled.*/
/* Values used for Security Message Encapsulation command */
#define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_SEQUENCE_COUNTER_MASK                 0x0F
#define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_SEQUENCED_BIT_MASK                    0x10
#define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_SECOND_FRAME_BIT_MASK                 0x20
#define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_MASK                         0xC0
#define SECURITY_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_SHIFT                        0x06
/* Values used for Security Message Encapsulation Nonce Get command */
#define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_SEQUENCE_COUNTER_MASK       0x0F
#define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_SEQUENCED_BIT_MASK          0x10
#define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_SECOND_FRAME_BIT_MASK       0x20
#define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_RESERVED_MASK               0xC0
#define SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_PROPERTIES1_RESERVED_SHIFT              0x06

/* Sensor Alarm command class commands */
#define SENSOR_ALARM_VERSION                                                             0x01
#define SENSOR_ALARM_GET                                                                 0x01
#define SENSOR_ALARM_REPORT                                                              0x02
#define SENSOR_ALARM_SUPPORTED_GET                                                       0x03
#define SENSOR_ALARM_SUPPORTED_REPORT                                                    0x04

/* Sensor Binary command class commands */
#define SENSOR_BINARY_VERSION                                                            0x01
#define SENSOR_BINARY_GET                                                                0x02
#define SENSOR_BINARY_REPORT                                                             0x03
/* Values used for Sensor Binary Report command */
#define SENSOR_BINARY_REPORT_IDLE                                                        0x00
#define SENSOR_BINARY_REPORT_DETECTED_AN_EVENT                                           0xFF

/* Sensor Binary command class commands */
#define SENSOR_BINARY_VERSION_V2                                                         0x02
#define SENSOR_BINARY_GET_V2                                                             0x02
#define SENSOR_BINARY_REPORT_V2                                                          0x03
#define SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2                                            0x01
#define SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_V2                                         0x04
/* Values used for Sensor Binary Report command */
#define SENSOR_BINARY_REPORT_IDLE_V2                                                     0x00
#define SENSOR_BINARY_REPORT_DETECTED_AN_EVENT_V2                                        0xFF

/* Sensor Configuration command class commands */
#define SENSOR_CONFIGURATION_VERSION                                                     0x01
#define SENSOR_TRIGGER_LEVEL_GET                                                         0x02
#define SENSOR_TRIGGER_LEVEL_REPORT                                                      0x03
#define SENSOR_TRIGGER_LEVEL_SET                                                         0x01
/* Values used for Sensor Trigger Level Report command */
#define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_SIZE_MASK                                0x07
#define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_SCALE_MASK                               0x18
#define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_SCALE_SHIFT                              0x03
#define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_PRECISION_MASK                           0xE0
#define SENSOR_TRIGGER_LEVEL_REPORT_PROPERTIES1_PRECISION_SHIFT                          0x05
/* Values used for Sensor Trigger Level Set command */
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES1_RESERVED_MASK                               0x3F
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES1_CURRENT_BIT_MASK                            0x40
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES1_DEFAULT_BIT_MASK                            0x80
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_SIZE_MASK                                   0x07
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_SCALE_MASK                                  0x18
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_SCALE_SHIFT                                 0x03
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_PRECISION_MASK                              0xE0
#define SENSOR_TRIGGER_LEVEL_SET_PROPERTIES2_PRECISION_SHIFT                             0x05

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION                                                        0x01
#define SENSOR_MULTILEVEL_GET                                                            0x04
#define SENSOR_MULTILEVEL_REPORT                                                         0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1                                   0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1                         0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1                                     0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK                                         0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK                                        0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT                                       0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK                                    0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT                                   0x05

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V2                                                     0x02
#define SENSOR_MULTILEVEL_GET_V2                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V2                                                      0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V2                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V2                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V2                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V2                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V2                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V2                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V2                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V2                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V2                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V2                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V2                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V2                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V2                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V2                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V2                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V2                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V2                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V2                                0x05

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V3                                                     0x03
#define SENSOR_MULTILEVEL_GET_V3                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V3                                                      0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V3                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V3                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V3                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V3                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V3                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V3                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V3                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V3                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V3                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V3                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V3                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V3                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V3                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V3                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V3                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V3                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V3                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V3                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V3                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V3                                   0x14
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V3                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V3                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V3                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V3                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V3                                0x05

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V4                                                     0x04
#define SENSOR_MULTILEVEL_GET_V4                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V4                                                      0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V4                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V4                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V4                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V4                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V4                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V4                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V4                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V4                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V4                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V4                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V4                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V4                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V4                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V4                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V4                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V4                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V4                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V4                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V4                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V4                                   0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V4                             0x15
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V4                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V4                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V4                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V4                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V4                                0x05

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V5                                                     0x05
#define SENSOR_MULTILEVEL_GET_V5                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V5                                                      0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5                                        0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V5                                     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5                                         0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5                                      0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V5                                   0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V5                         0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V5                                     0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V5                                         0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V5                             0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V5                                      0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V5                                     0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V5                          0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V5                           0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V5                               0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V5                                     0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V5                                     0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V5                                    0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V5                                        0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V5                                       0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V5                                       0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V5                                     0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V5                                      0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V5                                 0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V5                                      0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V5                                0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V5                                             0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V5                                    0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V5                                     0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V5                                    0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V5                                    0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V5                                          0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V5                               0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V5                              0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V5                                             0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V5                                             0x1F
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V5                              0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V5                                  0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V5                                 0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V5                              0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V5                             0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V5                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V5                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V5                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V5                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V5                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V5                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V5                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V5                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V5                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V5                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V5                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V5                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V5                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V5                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V5                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V5                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V5                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V5                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V5                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V5                                   0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V5                             0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V5                                          0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V5                                 0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V5                                  0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V5                                 0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V5                                 0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V5                                       0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V5                            0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V5                           0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V5                                          0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V5                                          0x1F
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V5                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V5                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V5                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V5                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V5                                0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V5                   0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V5         0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V5                     0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V5                         0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V5             0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V5                      0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V5                     0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V5          0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V5           0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V5               0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V5                     0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V5                     0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V5                    0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V5                        0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V5                       0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V5                       0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V5                     0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V5                      0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V5                 0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V5                      0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V5                0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V5                             0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V5                    0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V5                     0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V5                    0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V5                    0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V5                          0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V5               0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V5              0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V5                             0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V5                             0x1F
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V5                0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V5      0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V5                  0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V5                      0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V5          0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V5                   0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V5                  0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V5       0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V5        0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V5            0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V5                  0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V5                  0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V5                 0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V5                     0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V5                    0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V5                    0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V5                  0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V5                   0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V5              0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V5                   0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V5             0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V5                          0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V5                 0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V5                  0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V5                 0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V5                 0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V5                       0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V5            0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V5           0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V5                          0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V5                          0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V5      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V5            0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V5           0x04

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V6                                                     0x06
#define SENSOR_MULTILEVEL_GET_V6                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V6                                                      0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6                                        0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V6                                     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6                                         0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6                                      0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V6                                   0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V6                         0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V6                                     0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V6                                         0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V6                             0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V6                                      0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V6                                     0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V6                          0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V6                           0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V6                               0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V6                                     0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V6                                     0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V6                                    0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V6                                        0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V6                                       0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V6                                       0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V6                                     0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V6                                      0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V6                                 0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V6                                      0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V6                                0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V6                                             0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V6                                    0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V6                                     0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V6                                    0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V6                                    0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V6                                          0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V6                               0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V6                              0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V6                                             0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V6                                             0x1F
#define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V6                                            0x20
#define SENSOR_MULTILEVEL_GET_TIME_V6_V6                                                 0x21
#define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V6                                   0x22
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V6                              0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V6                                  0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V6                                 0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V6                              0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V6                             0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V6                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V6                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V6                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V6                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V6                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V6                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V6                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V6                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V6                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V6                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V6                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V6                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V6                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V6                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V6                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V6                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V6                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V6                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V6                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V6                                   0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V6                             0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V6                                          0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V6                                 0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V6                                  0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V6                                 0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V6                                 0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V6                                       0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V6                            0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V6                           0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V6                                          0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V6                                          0x1F
#define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V6                                         0x20
#define SENSOR_MULTILEVEL_REPORT_TIME_V6_V6                                              0x21
#define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V6                                0x22
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V6                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V6                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V6                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V6                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V6                                0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V6                   0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V6         0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V6                     0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V6                         0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V6             0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V6                      0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V6                     0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V6          0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V6           0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V6               0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V6                     0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V6                     0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V6                    0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V6                        0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V6                       0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V6                       0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V6                     0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V6                      0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V6                 0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V6                      0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V6                0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V6                             0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V6                    0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V6                     0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V6                    0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V6                    0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V6                          0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V6               0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V6              0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V6                             0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V6                             0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V6                            0x20
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V6                                 0x21
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V6                   0x22
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V6                0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V6      0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V6                  0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V6                      0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V6          0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V6                   0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V6                  0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V6       0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V6        0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V6            0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V6                  0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V6                  0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V6                 0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V6                     0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V6                    0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V6                    0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V6                  0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V6                   0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V6              0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V6                   0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V6             0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V6                          0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V6                 0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V6                  0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V6                 0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V6                 0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V6                       0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V6            0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V6           0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V6                          0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V6                          0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V6                         0x20
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V6                              0x21
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V6                0x22
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V6      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V6            0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V6           0x04

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V7                                                     0x07
#define SENSOR_MULTILEVEL_GET_V7                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V7                                                      0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V7                                        0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V7                                     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V7                                         0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V7                                      0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V7                                   0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V7                         0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V7                                     0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V7                                         0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V7                             0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V7                                      0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V7                                     0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V7                          0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V7                           0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V7                               0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V7                                     0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V7                                     0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V7                                    0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V7                                        0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V7                                       0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V7                                       0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V7                                     0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V7                                      0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V7                                 0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V7                                      0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V7                                0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V7                                             0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V7                                    0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V7                                     0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V7                                    0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V7                                    0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V7                                          0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V7                               0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V7                              0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V7                                             0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V7                                             0x1F
#define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V7                                            0x20
#define SENSOR_MULTILEVEL_GET_TIME_V6_V7                                                 0x21
#define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V7                                   0x22
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_2_5_V7_V7                               0x23
#define SENSOR_MULTILEVEL_GET_FORMALDEHYDE_CH2O_LEVEL_V7_V7                              0x24
#define SENSOR_MULTILEVEL_GET_RADON_CONCENTRATION_V7_V7                                  0x25
#define SENSOR_MULTILEVEL_GET_METHANE_DENSITY_CH4_V7_V7                                  0x26
#define SENSOR_MULTILEVEL_GET_VOLATILE_ORGANIC_COMPOUND_V7_V7                            0x27
#define SENSOR_MULTILEVEL_GET_CARBON_MONOXIDE_CO_LEVEL_V7_V7                             0x28
#define SENSOR_MULTILEVEL_GET_SOIL_HUMIDITY_V7_V7                                        0x29
#define SENSOR_MULTILEVEL_GET_SOIL_REACTIVITY_V7_V7                                      0x2A
#define SENSOR_MULTILEVEL_GET_SOIL_SALINITY_V7_V7                                        0x2B
#define SENSOR_MULTILEVEL_GET_HEART_RATE_V7_V7                                           0x2C
#define SENSOR_MULTILEVEL_GET_BLOOD_PRESSURE_V7_V7                                       0x2D
#define SENSOR_MULTILEVEL_GET_MUSCLE_MASS_V7_V7                                          0x2E
#define SENSOR_MULTILEVEL_GET_FAT_MASS_V7_V7                                             0x2F
#define SENSOR_MULTILEVEL_GET_BONE_MASS_V7_V7                                            0x30
#define SENSOR_MULTILEVEL_GET_TOTAL_BODY_WATER_TBW_V7_V7                                 0x31
#define SENSOR_MULTILEVEL_GET_BASIC_METABOLIC_RATE_BMR_V7_V7                             0x32
#define SENSOR_MULTILEVEL_GET_BODY_MASS_INDEX_BMI_V7_V7                                  0x33
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V7                              0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V7                                  0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V7                                 0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V7                              0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V7                             0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V7                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V7                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V7                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V7                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V7                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V7                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V7                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V7                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V7                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V7                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V7                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V7                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V7                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V7                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V7                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V7                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V7                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V7                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V7                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V7                                   0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V7                             0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V7                                          0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V7                                 0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V7                                  0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V7                                 0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V7                                 0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V7                                       0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V7                            0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V7                           0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V7                                          0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V7                                          0x1F
#define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V7                                         0x20
#define SENSOR_MULTILEVEL_REPORT_TIME_V6_V7                                              0x21
#define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V7                                0x22
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_2_5_V7_V7                            0x23
#define SENSOR_MULTILEVEL_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V7                           0x24
#define SENSOR_MULTILEVEL_REPORT_RADON_CONCENTRATION_V7_V7                               0x25
#define SENSOR_MULTILEVEL_REPORT_METHANE_DENSITY_CH4_V7_V7                               0x26
#define SENSOR_MULTILEVEL_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V7                         0x27
#define SENSOR_MULTILEVEL_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V7                          0x28
#define SENSOR_MULTILEVEL_REPORT_SOIL_HUMIDITY_V7_V7                                     0x29
#define SENSOR_MULTILEVEL_REPORT_SOIL_REACTIVITY_V7_V7                                   0x2A
#define SENSOR_MULTILEVEL_REPORT_SOIL_SALINITY_V7_V7                                     0x2B
#define SENSOR_MULTILEVEL_REPORT_HEART_RATE_V7_V7                                        0x2C
#define SENSOR_MULTILEVEL_REPORT_BLOOD_PRESSURE_V7_V7                                    0x2D
#define SENSOR_MULTILEVEL_REPORT_MUSCLE_MASS_V7_V7                                       0x2E
#define SENSOR_MULTILEVEL_REPORT_FAT_MASS_V7_V7                                          0x2F
#define SENSOR_MULTILEVEL_REPORT_BONE_MASS_V7_V7                                         0x30
#define SENSOR_MULTILEVEL_REPORT_TOTAL_BODY_WATER_TBW_V7_V7                              0x31
#define SENSOR_MULTILEVEL_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V7                          0x32
#define SENSOR_MULTILEVEL_REPORT_BODY_MASS_INDEX_BMI_V7_V7                               0x33
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V7                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V7                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V7                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V7                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V7                                0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V7                   0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V7         0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V7                     0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V7                         0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V7             0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V7                      0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V7                     0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V7          0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V7           0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V7               0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V7                     0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V7                     0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V7                    0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V7                        0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V7                       0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V7                       0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V7                     0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V7                      0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V7                 0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V7                      0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V7                0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V7                             0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V7                    0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V7                     0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V7                    0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V7                    0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V7                          0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V7               0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V7              0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V7                             0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V7                             0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V7                            0x20
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V7                                 0x21
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V7                   0x22
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_2_5_V7_V7               0x23
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FORMALDEHYDE_CH2O_LEVEL_V7_V7              0x24
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RADON_CONCENTRATION_V7_V7                  0x25
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_METHANE_DENSITY_CH4_V7_V7                  0x26
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLATILE_ORGANIC_COMPOUND_V7_V7            0x27
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CARBON_MONOXIDE_CO_LEVEL_V7_V7             0x28
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_HUMIDITY_V7_V7                        0x29
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_REACTIVITY_V7_V7                      0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_SALINITY_V7_V7                        0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_HEART_RATE_V7_V7                           0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BLOOD_PRESSURE_V7_V7                       0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MUSCLE_MASS_V7_V7                          0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FAT_MASS_V7_V7                             0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BONE_MASS_V7_V7                            0x30
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TOTAL_BODY_WATER_TBW_V7_V7                 0x31
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BASIC_METABOLIC_RATE_BMR_V7_V7             0x32
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BODY_MASS_INDEX_BMI_V7_V7                  0x33
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V7                0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V7      0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V7                  0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V7                      0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V7          0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V7                   0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V7                  0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V7       0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V7        0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V7            0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V7                  0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V7                  0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V7                 0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V7                     0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V7                    0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V7                    0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V7                  0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V7                   0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V7              0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V7                   0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V7             0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V7                          0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V7                 0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V7                  0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V7                 0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V7                 0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V7                       0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V7            0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V7           0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V7                          0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V7                          0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V7                         0x20
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V7                              0x21
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V7                0x22
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_2_5_V7_V7            0x23
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V7           0x24
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RADON_CONCENTRATION_V7_V7               0x25
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_METHANE_DENSITY_CH4_V7_V7               0x26
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V7         0x27
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V7          0x28
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_HUMIDITY_V7_V7                     0x29
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_REACTIVITY_V7_V7                   0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_SALINITY_V7_V7                     0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_HEART_RATE_V7_V7                        0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BLOOD_PRESSURE_V7_V7                    0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MUSCLE_MASS_V7_V7                       0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FAT_MASS_V7_V7                          0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BONE_MASS_V7_V7                         0x30
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TOTAL_BODY_WATER_TBW_V7_V7              0x31
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V7          0x32
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BODY_MASS_INDEX_BMI_V7_V7               0x33
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V7      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V7            0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V7           0x04

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V8                                                     0x08
#define SENSOR_MULTILEVEL_GET_V8                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V8                                                      0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V8                                        0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V8                                     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V8                                         0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V8                                      0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V8                                   0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V8                         0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V8                                     0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V8                                         0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V8                             0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V8                                      0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V8                                     0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V8                          0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V8                           0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V8                               0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V8                                     0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V8                                     0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V8                                    0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V8                                        0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V8                                       0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V8                                       0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V8                                     0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V8                                      0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V8                                 0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V8                                      0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V8                                0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V8                                             0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V8                                    0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V8                                     0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V8                                    0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V8                                    0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V8                                          0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V8                               0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V8                              0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V8                                             0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V8                                             0x1F
#define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V8                                            0x20
#define SENSOR_MULTILEVEL_GET_TIME_V6_V8                                                 0x21
#define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V8                                   0x22
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_2_5_V7_V8                               0x23
#define SENSOR_MULTILEVEL_GET_FORMALDEHYDE_CH2O_LEVEL_V7_V8                              0x24
#define SENSOR_MULTILEVEL_GET_RADON_CONCENTRATION_V7_V8                                  0x25
#define SENSOR_MULTILEVEL_GET_METHANE_DENSITY_CH4_V7_V8                                  0x26
#define SENSOR_MULTILEVEL_GET_VOLATILE_ORGANIC_COMPOUND_V7_V8                            0x27
#define SENSOR_MULTILEVEL_GET_CARBON_MONOXIDE_CO_LEVEL_V7_V8                             0x28
#define SENSOR_MULTILEVEL_GET_SOIL_HUMIDITY_V7_V8                                        0x29
#define SENSOR_MULTILEVEL_GET_SOIL_REACTIVITY_V7_V8                                      0x2A
#define SENSOR_MULTILEVEL_GET_SOIL_SALINITY_V7_V8                                        0x2B
#define SENSOR_MULTILEVEL_GET_HEART_RATE_V7_V8                                           0x2C
#define SENSOR_MULTILEVEL_GET_BLOOD_PRESSURE_V7_V8                                       0x2D
#define SENSOR_MULTILEVEL_GET_MUSCLE_MASS_V7_V8                                          0x2E
#define SENSOR_MULTILEVEL_GET_FAT_MASS_V7_V8                                             0x2F
#define SENSOR_MULTILEVEL_GET_BONE_MASS_V7_V8                                            0x30
#define SENSOR_MULTILEVEL_GET_TOTAL_BODY_WATER_TBW_V7_V8                                 0x31
#define SENSOR_MULTILEVEL_GET_BASIC_METABOLIC_RATE_BMR_V7_V8                             0x32
#define SENSOR_MULTILEVEL_GET_BODY_MASS_INDEX_BMI_V7_V8                                  0x33
#define SENSOR_MULTILEVEL_GET_ACCELERATION_X_AXIS_V8_V8                                  0x34
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Y_AXIS_V8_V8                                  0x35
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Z_AXIS_V8_V8                                  0x36
#define SENSOR_MULTILEVEL_GET_SMOKE_DENSITY_V8_V8                                        0x37
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V8                              0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V8                                  0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V8                                 0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V8                              0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V8                             0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V8                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V8                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V8                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V8                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V8                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V8                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V8                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V8                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V8                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V8                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V8                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V8                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V8                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V8                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V8                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V8                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V8                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V8                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V8                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V8                                   0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V8                             0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V8                                          0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V8                                 0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V8                                  0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V8                                 0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V8                                 0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V8                                       0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V8                            0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V8                           0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V8                                          0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V8                                          0x1F
#define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V8                                         0x20
#define SENSOR_MULTILEVEL_REPORT_TIME_V6_V8                                              0x21
#define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V8                                0x22
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_2_5_V7_V8                            0x23
#define SENSOR_MULTILEVEL_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V8                           0x24
#define SENSOR_MULTILEVEL_REPORT_RADON_CONCENTRATION_V7_V8                               0x25
#define SENSOR_MULTILEVEL_REPORT_METHANE_DENSITY_CH4_V7_V8                               0x26
#define SENSOR_MULTILEVEL_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V8                         0x27
#define SENSOR_MULTILEVEL_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V8                          0x28
#define SENSOR_MULTILEVEL_REPORT_SOIL_HUMIDITY_V7_V8                                     0x29
#define SENSOR_MULTILEVEL_REPORT_SOIL_REACTIVITY_V7_V8                                   0x2A
#define SENSOR_MULTILEVEL_REPORT_SOIL_SALINITY_V7_V8                                     0x2B
#define SENSOR_MULTILEVEL_REPORT_HEART_RATE_V7_V8                                        0x2C
#define SENSOR_MULTILEVEL_REPORT_BLOOD_PRESSURE_V7_V8                                    0x2D
#define SENSOR_MULTILEVEL_REPORT_MUSCLE_MASS_V7_V8                                       0x2E
#define SENSOR_MULTILEVEL_REPORT_FAT_MASS_V7_V8                                          0x2F
#define SENSOR_MULTILEVEL_REPORT_BONE_MASS_V7_V8                                         0x30
#define SENSOR_MULTILEVEL_REPORT_TOTAL_BODY_WATER_TBW_V7_V8                              0x31
#define SENSOR_MULTILEVEL_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V8                          0x32
#define SENSOR_MULTILEVEL_REPORT_BODY_MASS_INDEX_BMI_V7_V8                               0x33
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_X_AXIS_V8_V8                               0x34
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Y_AXIS_V8_V8                               0x35
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Z_AXIS_V8_V8                               0x36
#define SENSOR_MULTILEVEL_REPORT_SMOKE_DENSITY_V8_V8                                     0x37
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V8                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V8                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V8                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V8                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V8                                0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V8                   0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V8         0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V8                     0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V8                         0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V8             0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V8                      0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V8                     0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V8          0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V8           0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V8               0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V8                     0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V8                     0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V8                    0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V8                        0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V8                       0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V8                       0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V8                     0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V8                      0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V8                 0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V8                      0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V8                0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V8                             0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V8                    0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V8                     0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V8                    0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V8                    0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V8                          0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V8               0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V8              0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V8                             0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V8                             0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V8                            0x20
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V8                                 0x21
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V8                   0x22
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_2_5_V7_V8               0x23
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FORMALDEHYDE_CH2O_LEVEL_V7_V8              0x24
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RADON_CONCENTRATION_V7_V8                  0x25
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_METHANE_DENSITY_CH4_V7_V8                  0x26
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLATILE_ORGANIC_COMPOUND_V7_V8            0x27
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CARBON_MONOXIDE_CO_LEVEL_V7_V8             0x28
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_HUMIDITY_V7_V8                        0x29
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_REACTIVITY_V7_V8                      0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_SALINITY_V7_V8                        0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_HEART_RATE_V7_V8                           0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BLOOD_PRESSURE_V7_V8                       0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MUSCLE_MASS_V7_V8                          0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FAT_MASS_V7_V8                             0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BONE_MASS_V7_V8                            0x30
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TOTAL_BODY_WATER_TBW_V7_V8                 0x31
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BASIC_METABOLIC_RATE_BMR_V7_V8             0x32
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BODY_MASS_INDEX_BMI_V7_V8                  0x33
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_X_AXIS_V8_V8                  0x34
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Y_AXIS_V8_V8                  0x35
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Z_AXIS_V8_V8                  0x36
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SMOKE_DENSITY_V8_V8                        0x37
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V8                0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V8      0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V8                  0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V8                      0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V8          0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V8                   0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V8                  0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V8       0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V8        0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V8            0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V8                  0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V8                  0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V8                 0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V8                     0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V8                    0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V8                    0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V8                  0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V8                   0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V8              0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V8                   0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V8             0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V8                          0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V8                 0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V8                  0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V8                 0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V8                 0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V8                       0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V8            0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V8           0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V8                          0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V8                          0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V8                         0x20
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V8                              0x21
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V8                0x22
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_2_5_V7_V8            0x23
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V8           0x24
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RADON_CONCENTRATION_V7_V8               0x25
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_METHANE_DENSITY_CH4_V7_V8               0x26
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V8         0x27
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V8          0x28
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_HUMIDITY_V7_V8                     0x29
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_REACTIVITY_V7_V8                   0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_SALINITY_V7_V8                     0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_HEART_RATE_V7_V8                        0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BLOOD_PRESSURE_V7_V8                    0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MUSCLE_MASS_V7_V8                       0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FAT_MASS_V7_V8                          0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BONE_MASS_V7_V8                         0x30
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TOTAL_BODY_WATER_TBW_V7_V8              0x31
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V8          0x32
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BODY_MASS_INDEX_BMI_V7_V8               0x33
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_X_AXIS_V8_V8               0x34
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Y_AXIS_V8_V8               0x35
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Z_AXIS_V8_V8               0x36
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SMOKE_DENSITY_V8_V8                     0x37
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V8      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V8            0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V8           0x04

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V9                                                     0x09
#define SENSOR_MULTILEVEL_GET_V9                                                         0x04
#define SENSOR_MULTILEVEL_REPORT_V9                                                      0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V9                                        0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V9                                     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V9                                         0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V9                                      0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V9                                   0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V9                         0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V9                                     0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V9                                         0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V9                             0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V9                                      0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V9                                     0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V9                          0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V9                           0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V9                               0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V9                                     0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V9                                     0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V9                                    0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V9                                        0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V9                                       0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V9                                       0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V9                                     0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V9                                      0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V9                                 0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V9                                      0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V9                                0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V9                                             0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V9                                    0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V9                                     0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V9                                    0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V9                                    0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V9                                          0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V9                               0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V9                              0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V9                                             0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V9                                             0x1F
#define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V9                                            0x20
#define SENSOR_MULTILEVEL_GET_TIME_V6_V9                                                 0x21
#define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V9                                   0x22
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_2_5_V7_V9                               0x23
#define SENSOR_MULTILEVEL_GET_FORMALDEHYDE_CH2O_LEVEL_V7_V9                              0x24
#define SENSOR_MULTILEVEL_GET_RADON_CONCENTRATION_V7_V9                                  0x25
#define SENSOR_MULTILEVEL_GET_METHANE_DENSITY_CH4_V7_V9                                  0x26
#define SENSOR_MULTILEVEL_GET_VOLATILE_ORGANIC_COMPOUND_V7_V9                            0x27
#define SENSOR_MULTILEVEL_GET_CARBON_MONOXIDE_CO_LEVEL_V7_V9                             0x28
#define SENSOR_MULTILEVEL_GET_SOIL_HUMIDITY_V7_V9                                        0x29
#define SENSOR_MULTILEVEL_GET_SOIL_REACTIVITY_V7_V9                                      0x2A
#define SENSOR_MULTILEVEL_GET_SOIL_SALINITY_V7_V9                                        0x2B
#define SENSOR_MULTILEVEL_GET_HEART_RATE_V7_V9                                           0x2C
#define SENSOR_MULTILEVEL_GET_BLOOD_PRESSURE_V7_V9                                       0x2D
#define SENSOR_MULTILEVEL_GET_MUSCLE_MASS_V7_V9                                          0x2E
#define SENSOR_MULTILEVEL_GET_FAT_MASS_V7_V9                                             0x2F
#define SENSOR_MULTILEVEL_GET_BONE_MASS_V7_V9                                            0x30
#define SENSOR_MULTILEVEL_GET_TOTAL_BODY_WATER_TBW_V7_V9                                 0x31
#define SENSOR_MULTILEVEL_GET_BASIC_METABOLIC_RATE_BMR_V7_V9                             0x32
#define SENSOR_MULTILEVEL_GET_BODY_MASS_INDEX_BMI_V7_V9                                  0x33
#define SENSOR_MULTILEVEL_GET_ACCELERATION_X_AXIS_V8_V9                                  0x34
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Y_AXIS_V8_V9                                  0x35
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Z_AXIS_V8_V9                                  0x36
#define SENSOR_MULTILEVEL_GET_SMOKE_DENSITY_V8_V9                                        0x37
#define SENSOR_MULTILEVEL_GET_WATER_FLOW_V9_V9                                           0x38
#define SENSOR_MULTILEVEL_GET_WATER_PRESSURE_V9_V9                                       0x39
#define SENSOR_MULTILEVEL_GET_RF_SIGNAL_STRENGTH_V9_V9                                   0x3A
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V9                              0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V9                                  0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V9                                 0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V9                              0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V9                             0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V9                                0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V9                      0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V9                                  0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V9                                      0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V9                          0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V9                                   0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V9                                  0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V9                       0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V9                        0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V9                            0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V9                                  0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V9                                  0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V9                                 0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V9                                     0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V9                                    0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V9                                    0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V9                                  0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V9                                   0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V9                              0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V9                                   0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V9                             0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V9                                          0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V9                                 0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V9                                  0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V9                                 0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V9                                 0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V9                                       0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V9                            0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V9                           0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V9                                          0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V9                                          0x1F
#define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V9                                         0x20
#define SENSOR_MULTILEVEL_REPORT_TIME_V6_V9                                              0x21
#define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V9                                0x22
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_2_5_V7_V9                            0x23
#define SENSOR_MULTILEVEL_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V9                           0x24
#define SENSOR_MULTILEVEL_REPORT_RADON_CONCENTRATION_V7_V9                               0x25
#define SENSOR_MULTILEVEL_REPORT_METHANE_DENSITY_CH4_V7_V9                               0x26
#define SENSOR_MULTILEVEL_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V9                         0x27
#define SENSOR_MULTILEVEL_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V9                          0x28
#define SENSOR_MULTILEVEL_REPORT_SOIL_HUMIDITY_V7_V9                                     0x29
#define SENSOR_MULTILEVEL_REPORT_SOIL_REACTIVITY_V7_V9                                   0x2A
#define SENSOR_MULTILEVEL_REPORT_SOIL_SALINITY_V7_V9                                     0x2B
#define SENSOR_MULTILEVEL_REPORT_HEART_RATE_V7_V9                                        0x2C
#define SENSOR_MULTILEVEL_REPORT_BLOOD_PRESSURE_V7_V9                                    0x2D
#define SENSOR_MULTILEVEL_REPORT_MUSCLE_MASS_V7_V9                                       0x2E
#define SENSOR_MULTILEVEL_REPORT_FAT_MASS_V7_V9                                          0x2F
#define SENSOR_MULTILEVEL_REPORT_BONE_MASS_V7_V9                                         0x30
#define SENSOR_MULTILEVEL_REPORT_TOTAL_BODY_WATER_TBW_V7_V9                              0x31
#define SENSOR_MULTILEVEL_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V9                          0x32
#define SENSOR_MULTILEVEL_REPORT_BODY_MASS_INDEX_BMI_V7_V9                               0x33
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_X_AXIS_V8_V9                               0x34
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Y_AXIS_V8_V9                               0x35
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Z_AXIS_V8_V9                               0x36
#define SENSOR_MULTILEVEL_REPORT_SMOKE_DENSITY_V8_V9                                     0x37
#define SENSOR_MULTILEVEL_REPORT_WATER_FLOW_V9_V9                                        0x38
#define SENSOR_MULTILEVEL_REPORT_WATER_PRESSURE_V9_V9                                    0x39
#define SENSOR_MULTILEVEL_REPORT_RF_SIGNAL_STRENGTH_V9_V9                                0x3A
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V9                                      0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V9                                     0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V9                                    0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V9                                 0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V9                                0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V9                   0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V9         0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V9                     0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V9                         0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V9             0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V9                      0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V9                     0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V9          0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V9           0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V9               0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V9                     0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V9                     0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V9                    0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V9                        0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V9                       0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V9                       0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V9                     0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V9                      0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V9                 0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V9                      0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V9                0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V9                             0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V9                    0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V9                     0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V9                    0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V9                    0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V9                          0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V9               0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V9              0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V9                             0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V9                             0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V9                            0x20
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V9                                 0x21
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V9                   0x22
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_2_5_V7_V9               0x23
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FORMALDEHYDE_CH2O_LEVEL_V7_V9              0x24
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RADON_CONCENTRATION_V7_V9                  0x25
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_METHANE_DENSITY_CH4_V7_V9                  0x26
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLATILE_ORGANIC_COMPOUND_V7_V9            0x27
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CARBON_MONOXIDE_CO_LEVEL_V7_V9             0x28
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_HUMIDITY_V7_V9                        0x29
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_REACTIVITY_V7_V9                      0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_SALINITY_V7_V9                        0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_HEART_RATE_V7_V9                           0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BLOOD_PRESSURE_V7_V9                       0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MUSCLE_MASS_V7_V9                          0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FAT_MASS_V7_V9                             0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BONE_MASS_V7_V9                            0x30
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TOTAL_BODY_WATER_TBW_V7_V9                 0x31
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BASIC_METABOLIC_RATE_BMR_V7_V9             0x32
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BODY_MASS_INDEX_BMI_V7_V9                  0x33
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_X_AXIS_V8_V9                  0x34
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Y_AXIS_V8_V9                  0x35
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Z_AXIS_V8_V9                  0x36
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SMOKE_DENSITY_V8_V9                        0x37
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_FLOW_V9_V9                           0x38
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_PRESSURE_V9_V9                       0x39
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RF_SIGNAL_STRENGTH_V9_V9                   0x3A
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V9                0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V9      0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V9                  0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V9                      0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V9          0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V9                   0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V9                  0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V9       0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V9        0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V9            0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V9                  0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V9                  0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V9                 0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V9                     0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V9                    0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V9                    0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V9                  0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V9                   0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V9              0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V9                   0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V9             0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V9                          0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V9                 0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V9                  0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V9                 0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V9                 0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V9                       0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V9            0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V9           0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V9                          0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V9                          0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V9                         0x20
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V9                              0x21
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V9                0x22
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_2_5_V7_V9            0x23
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V9           0x24
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RADON_CONCENTRATION_V7_V9               0x25
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_METHANE_DENSITY_CH4_V7_V9               0x26
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V9         0x27
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V9          0x28
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_HUMIDITY_V7_V9                     0x29
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_REACTIVITY_V7_V9                   0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_SALINITY_V7_V9                     0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_HEART_RATE_V7_V9                        0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BLOOD_PRESSURE_V7_V9                    0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MUSCLE_MASS_V7_V9                       0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FAT_MASS_V7_V9                          0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BONE_MASS_V7_V9                         0x30
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TOTAL_BODY_WATER_TBW_V7_V9              0x31
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V9          0x32
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BODY_MASS_INDEX_BMI_V7_V9               0x33
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_X_AXIS_V8_V9               0x34
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Y_AXIS_V8_V9               0x35
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Z_AXIS_V8_V9               0x36
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SMOKE_DENSITY_V8_V9                     0x37
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_FLOW_V9_V9                        0x38
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_PRESSURE_V9_V9                    0x39
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RF_SIGNAL_STRENGTH_V9_V9                0x3A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V9      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V9            0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V9           0x04

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V10                                                    0x0A
#define SENSOR_MULTILEVEL_GET_V10                                                        0x04
#define SENSOR_MULTILEVEL_REPORT_V10                                                     0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V10                                       0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V10                                    0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V10                                        0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V10                                     0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V10                                  0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V10                        0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V10                                    0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V10                                        0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V10                            0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V10                                     0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V10                                    0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V10                         0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V10                          0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V10                              0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V10                                    0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V10                                    0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V10                                   0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V10                                       0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V10                                      0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V10                                      0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V10                                    0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V10                                     0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V10                                0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V10                                     0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V10                               0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V10                                            0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V10                                   0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V10                                    0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V10                                   0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V10                                   0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V10                                         0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V10                              0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V10                             0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V10                                            0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V10                                            0x1F
#define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V10                                           0x20
#define SENSOR_MULTILEVEL_GET_TIME_V6_V10                                                0x21
#define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V10                                  0x22
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_2_5_V7_V10                              0x23
#define SENSOR_MULTILEVEL_GET_FORMALDEHYDE_CH2O_LEVEL_V7_V10                             0x24
#define SENSOR_MULTILEVEL_GET_RADON_CONCENTRATION_V7_V10                                 0x25
#define SENSOR_MULTILEVEL_GET_METHANE_DENSITY_CH4_V7_V10                                 0x26
#define SENSOR_MULTILEVEL_GET_VOLATILE_ORGANIC_COMPOUND_V7_V10                           0x27
#define SENSOR_MULTILEVEL_GET_CARBON_MONOXIDE_CO_LEVEL_V7_V10                            0x28
#define SENSOR_MULTILEVEL_GET_SOIL_HUMIDITY_V7_V10                                       0x29
#define SENSOR_MULTILEVEL_GET_SOIL_REACTIVITY_V7_V10                                     0x2A
#define SENSOR_MULTILEVEL_GET_SOIL_SALINITY_V7_V10                                       0x2B
#define SENSOR_MULTILEVEL_GET_HEART_RATE_V7_V10                                          0x2C
#define SENSOR_MULTILEVEL_GET_BLOOD_PRESSURE_V7_V10                                      0x2D
#define SENSOR_MULTILEVEL_GET_MUSCLE_MASS_V7_V10                                         0x2E
#define SENSOR_MULTILEVEL_GET_FAT_MASS_V7_V10                                            0x2F
#define SENSOR_MULTILEVEL_GET_BONE_MASS_V7_V10                                           0x30
#define SENSOR_MULTILEVEL_GET_TOTAL_BODY_WATER_TBW_V7_V10                                0x31
#define SENSOR_MULTILEVEL_GET_BASIC_METABOLIC_RATE_BMR_V7_V10                            0x32
#define SENSOR_MULTILEVEL_GET_BODY_MASS_INDEX_BMI_V7_V10                                 0x33
#define SENSOR_MULTILEVEL_GET_ACCELERATION_X_AXIS_V8_V10                                 0x34
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Y_AXIS_V8_V10                                 0x35
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Z_AXIS_V8_V10                                 0x36
#define SENSOR_MULTILEVEL_GET_SMOKE_DENSITY_V8_V10                                       0x37
#define SENSOR_MULTILEVEL_GET_WATER_FLOW_V9_V10                                          0x38
#define SENSOR_MULTILEVEL_GET_WATER_PRESSURE_V9_V10                                      0x39
#define SENSOR_MULTILEVEL_GET_RF_SIGNAL_STRENGTH_V9_V10                                  0x3A
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_V10_V10                                 0x3B
#define SENSOR_MULTILEVEL_GET_RESPIRATORY_RATE_V10_V10                                   0x3C
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V10                             0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V10                                 0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V10                                0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V10                             0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V10                            0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V10                               0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V10                     0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V10                                 0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V10                                     0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V10                         0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V10                                  0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V10                                 0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V10                      0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V10                       0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V10                           0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V10                                 0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V10                                 0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V10                                0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V10                                    0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V10                                   0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V10                                   0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V10                                 0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V10                                  0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V10                             0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V10                                  0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V10                            0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V10                                         0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V10                                0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V10                                 0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V10                                0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V10                                0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V10                                      0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V10                           0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V10                          0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V10                                         0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V10                                         0x1F
#define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V10                                        0x20
#define SENSOR_MULTILEVEL_REPORT_TIME_V6_V10                                             0x21
#define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V10                               0x22
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_2_5_V7_V10                           0x23
#define SENSOR_MULTILEVEL_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V10                          0x24
#define SENSOR_MULTILEVEL_REPORT_RADON_CONCENTRATION_V7_V10                              0x25
#define SENSOR_MULTILEVEL_REPORT_METHANE_DENSITY_CH4_V7_V10                              0x26
#define SENSOR_MULTILEVEL_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V10                        0x27
#define SENSOR_MULTILEVEL_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V10                         0x28
#define SENSOR_MULTILEVEL_REPORT_SOIL_HUMIDITY_V7_V10                                    0x29
#define SENSOR_MULTILEVEL_REPORT_SOIL_REACTIVITY_V7_V10                                  0x2A
#define SENSOR_MULTILEVEL_REPORT_SOIL_SALINITY_V7_V10                                    0x2B
#define SENSOR_MULTILEVEL_REPORT_HEART_RATE_V7_V10                                       0x2C
#define SENSOR_MULTILEVEL_REPORT_BLOOD_PRESSURE_V7_V10                                   0x2D
#define SENSOR_MULTILEVEL_REPORT_MUSCLE_MASS_V7_V10                                      0x2E
#define SENSOR_MULTILEVEL_REPORT_FAT_MASS_V7_V10                                         0x2F
#define SENSOR_MULTILEVEL_REPORT_BONE_MASS_V7_V10                                        0x30
#define SENSOR_MULTILEVEL_REPORT_TOTAL_BODY_WATER_TBW_V7_V10                             0x31
#define SENSOR_MULTILEVEL_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V10                         0x32
#define SENSOR_MULTILEVEL_REPORT_BODY_MASS_INDEX_BMI_V7_V10                              0x33
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_X_AXIS_V8_V10                              0x34
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Y_AXIS_V8_V10                              0x35
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Z_AXIS_V8_V10                              0x36
#define SENSOR_MULTILEVEL_REPORT_SMOKE_DENSITY_V8_V10                                    0x37
#define SENSOR_MULTILEVEL_REPORT_WATER_FLOW_V9_V10                                       0x38
#define SENSOR_MULTILEVEL_REPORT_WATER_PRESSURE_V9_V10                                   0x39
#define SENSOR_MULTILEVEL_REPORT_RF_SIGNAL_STRENGTH_V9_V10                               0x3A
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_V10_V10                              0x3B
#define SENSOR_MULTILEVEL_REPORT_RESPIRATORY_RATE_V10_V10                                0x3C
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V10                                     0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V10                                    0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V10                                   0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V10                                0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V10                               0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V10                  0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V10        0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V10                    0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V10                        0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V10            0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V10                     0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V10                    0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V10         0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V10          0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V10              0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V10                    0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V10                    0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V10                   0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V10                       0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V10                      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V10                      0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V10                    0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V10                     0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V10                0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V10                     0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V10               0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V10                            0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V10                   0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V10                    0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V10                   0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V10                   0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V10                         0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V10              0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V10             0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V10                            0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V10                            0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V10                           0x20
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V10                                0x21
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V10                  0x22
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_2_5_V7_V10              0x23
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FORMALDEHYDE_CH2O_LEVEL_V7_V10             0x24
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RADON_CONCENTRATION_V7_V10                 0x25
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_METHANE_DENSITY_CH4_V7_V10                 0x26
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLATILE_ORGANIC_COMPOUND_V7_V10           0x27
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CARBON_MONOXIDE_CO_LEVEL_V7_V10            0x28
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_HUMIDITY_V7_V10                       0x29
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_REACTIVITY_V7_V10                     0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_SALINITY_V7_V10                       0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_HEART_RATE_V7_V10                          0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BLOOD_PRESSURE_V7_V10                      0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MUSCLE_MASS_V7_V10                         0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FAT_MASS_V7_V10                            0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BONE_MASS_V7_V10                           0x30
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TOTAL_BODY_WATER_TBW_V7_V10                0x31
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BASIC_METABOLIC_RATE_BMR_V7_V10            0x32
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BODY_MASS_INDEX_BMI_V7_V10                 0x33
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_X_AXIS_V8_V10                 0x34
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Y_AXIS_V8_V10                 0x35
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Z_AXIS_V8_V10                 0x36
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SMOKE_DENSITY_V8_V10                       0x37
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_FLOW_V9_V10                          0x38
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_PRESSURE_V9_V10                      0x39
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RF_SIGNAL_STRENGTH_V9_V10                  0x3A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_V10_V10                 0x3B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RESPIRATORY_RATE_V10_V10                   0x3C
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V10               0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V10     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V10                 0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V10                     0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V10         0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V10                  0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V10                 0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V10      0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V10       0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V10           0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V10                 0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V10                 0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V10                0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V10                    0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V10                   0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V10                   0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V10                 0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V10                  0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V10             0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V10                  0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V10            0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V10                         0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V10                0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V10                 0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V10                0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V10                0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V10                      0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V10           0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V10          0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V10                         0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V10                         0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V10                        0x20
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V10                             0x21
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V10               0x22
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_2_5_V7_V10           0x23
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V10          0x24
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RADON_CONCENTRATION_V7_V10              0x25
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_METHANE_DENSITY_CH4_V7_V10              0x26
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V10        0x27
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V10         0x28
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_HUMIDITY_V7_V10                    0x29
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_REACTIVITY_V7_V10                  0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_SALINITY_V7_V10                    0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_HEART_RATE_V7_V10                       0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BLOOD_PRESSURE_V7_V10                   0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MUSCLE_MASS_V7_V10                      0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FAT_MASS_V7_V10                         0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BONE_MASS_V7_V10                        0x30
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TOTAL_BODY_WATER_TBW_V7_V10             0x31
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V10         0x32
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BODY_MASS_INDEX_BMI_V7_V10              0x33
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_X_AXIS_V8_V10              0x34
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Y_AXIS_V8_V10              0x35
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Z_AXIS_V8_V10              0x36
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SMOKE_DENSITY_V8_V10                    0x37
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_FLOW_V9_V10                       0x38
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_PRESSURE_V9_V10                   0x39
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RF_SIGNAL_STRENGTH_V9_V10               0x3A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_V10_V10              0x3B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RESPIRATORY_RATE_V10_V10                0x3C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V10     0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V10           0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V10          0x04

/* Sensor Multilevel command class commands */
#define SENSOR_MULTILEVEL_VERSION_V11                                                    0x0B
#define SENSOR_MULTILEVEL_GET_V11                                                        0x04
#define SENSOR_MULTILEVEL_REPORT_V11                                                     0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V11                                       0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_V11                                    0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V11                                        0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V11                                     0x06
/* Values used for Sensor Multilevel Get command */
#define SENSOR_MULTILEVEL_GET_TEMPERATURE_VERSION_1_V11                                  0x01
#define SENSOR_MULTILEVEL_GET_GENERAL_PURPOSE_VALUE_VERSION_1_V11                        0x02
#define SENSOR_MULTILEVEL_GET_LUMINANCE_VERSION_1_V11                                    0x03
#define SENSOR_MULTILEVEL_GET_POWER_VERSION_2_V11                                        0x04
#define SENSOR_MULTILEVEL_GET_RELATIVE_HUMIDITY_VERSION_2_V11                            0x05
#define SENSOR_MULTILEVEL_GET_VELOCITY_VERSION_2_V11                                     0x06
#define SENSOR_MULTILEVEL_GET_DIRECTION_VERSION_2_V11                                    0x07
#define SENSOR_MULTILEVEL_GET_ATMOSPHERIC_PRESSURE_VERSION_2_V11                         0x08
#define SENSOR_MULTILEVEL_GET_BAROMETRIC_PRESSURE_VERSION_2_V11                          0x09
#define SENSOR_MULTILEVEL_GET_SOLAR_RADIATION_VERSION_2_V11                              0x0A
#define SENSOR_MULTILEVEL_GET_DEW_POINT_VERSION_2_V11                                    0x0B
#define SENSOR_MULTILEVEL_GET_RAIN_RATE_VERSION_2_V11                                    0x0C
#define SENSOR_MULTILEVEL_GET_TIDE_LEVEL_VERSION_2_V11                                   0x0D
#define SENSOR_MULTILEVEL_GET_WEIGHT_VERSION_3_V11                                       0x0E
#define SENSOR_MULTILEVEL_GET_VOLTAGE_VERSION_3_V11                                      0x0F
#define SENSOR_MULTILEVEL_GET_CURRENT_VERSION_3_V11                                      0x10
#define SENSOR_MULTILEVEL_GET_CO2_LEVEL_VERSION_3_V11                                    0x11
#define SENSOR_MULTILEVEL_GET_AIR_FLOW_VERSION_3_V11                                     0x12
#define SENSOR_MULTILEVEL_GET_TANK_CAPACITY_VERSION_3_V11                                0x13
#define SENSOR_MULTILEVEL_GET_DISTANCE_VERSION_3_V11                                     0x14
#define SENSOR_MULTILEVEL_GET_ANGLE_POSITION_VERSION_4_V11                               0x15
#define SENSOR_MULTILEVEL_GET_ROTATION_V5_V11                                            0x16
#define SENSOR_MULTILEVEL_GET_WATER_TEMPERATURE_V5_V11                                   0x17
#define SENSOR_MULTILEVEL_GET_SOIL_TEMPERATURE_V5_V11                                    0x18
#define SENSOR_MULTILEVEL_GET_SEISMIC_INTENSITY_V5_V11                                   0x19
#define SENSOR_MULTILEVEL_GET_SEISMIC_MAGNITUDE_V5_V11                                   0x1A
#define SENSOR_MULTILEVEL_GET_ULTRAVIOLET_V5_V11                                         0x1B
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_RESISTIVITY_V5_V11                              0x1C
#define SENSOR_MULTILEVEL_GET_ELECTRICAL_CONDUCTIVITY_V5_V11                             0x1D
#define SENSOR_MULTILEVEL_GET_LOUDNESS_V5_V11                                            0x1E
#define SENSOR_MULTILEVEL_GET_MOISTURE_V5_V11                                            0x1F
#define SENSOR_MULTILEVEL_GET_FREQUENCY_V6_V11                                           0x20
#define SENSOR_MULTILEVEL_GET_TIME_V6_V11                                                0x21
#define SENSOR_MULTILEVEL_GET_TARGET_TEMPERATURE_V6_V11                                  0x22
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_2_5_V7_V11                              0x23
#define SENSOR_MULTILEVEL_GET_FORMALDEHYDE_CH2O_LEVEL_V7_V11                             0x24
#define SENSOR_MULTILEVEL_GET_RADON_CONCENTRATION_V7_V11                                 0x25
#define SENSOR_MULTILEVEL_GET_METHANE_DENSITY_CH4_V7_V11                                 0x26
#define SENSOR_MULTILEVEL_GET_VOLATILE_ORGANIC_COMPOUND_V7_V11                           0x27
#define SENSOR_MULTILEVEL_GET_CARBON_MONOXIDE_CO_LEVEL_V7_V11                            0x28
#define SENSOR_MULTILEVEL_GET_SOIL_HUMIDITY_V7_V11                                       0x29
#define SENSOR_MULTILEVEL_GET_SOIL_REACTIVITY_V7_V11                                     0x2A
#define SENSOR_MULTILEVEL_GET_SOIL_SALINITY_V7_V11                                       0x2B
#define SENSOR_MULTILEVEL_GET_HEART_RATE_V7_V11                                          0x2C
#define SENSOR_MULTILEVEL_GET_BLOOD_PRESSURE_V7_V11                                      0x2D
#define SENSOR_MULTILEVEL_GET_MUSCLE_MASS_V7_V11                                         0x2E
#define SENSOR_MULTILEVEL_GET_FAT_MASS_V7_V11                                            0x2F
#define SENSOR_MULTILEVEL_GET_BONE_MASS_V7_V11                                           0x30
#define SENSOR_MULTILEVEL_GET_TOTAL_BODY_WATER_TBW_V7_V11                                0x31
#define SENSOR_MULTILEVEL_GET_BASIC_METABOLIC_RATE_BMR_V7_V11                            0x32
#define SENSOR_MULTILEVEL_GET_BODY_MASS_INDEX_BMI_V7_V11                                 0x33
#define SENSOR_MULTILEVEL_GET_ACCELERATION_X_AXIS_V8_V11                                 0x34
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Y_AXIS_V8_V11                                 0x35
#define SENSOR_MULTILEVEL_GET_ACCELERATION_Z_AXIS_V8_V11                                 0x36
#define SENSOR_MULTILEVEL_GET_SMOKE_DENSITY_V8_V11                                       0x37
#define SENSOR_MULTILEVEL_GET_WATER_FLOW_V9_V11                                          0x38
#define SENSOR_MULTILEVEL_GET_WATER_PRESSURE_V9_V11                                      0x39
#define SENSOR_MULTILEVEL_GET_RF_SIGNAL_STRENGTH_V9_V11                                  0x3A
#define SENSOR_MULTILEVEL_GET_PARTICULATE_MATTER_V10_V11                                 0x3B
#define SENSOR_MULTILEVEL_GET_RESPIRATORY_RATE_V10_V11                                   0x3C
#define SENSOR_MULTILEVEL_GET_RELATIVE_MODULATION_LEVEL_V11                              0x3D
#define SENSOR_MULTILEVEL_GET_BOILER_WATER_TEMPERATURE_V11                               0x3E
#define SENSOR_MULTILEVEL_GET_DOMESTIC_HOT_WATER_TEMPERATURE_V11                         0x3F
#define SENSOR_MULTILEVEL_GET_OUTSIDE_TEMPERATURE_V11                                    0x40
#define SENSOR_MULTILEVEL_GET_EXHAUST_TEMPERATURE_V11                                    0x41
#define SENSOR_MULTILEVEL_GET_WATER_CHLORINE_LEVEL_V11                                   0x42
#define SENSOR_MULTILEVEL_GET_WATER_ACIDITY_V11                                          0x43
#define SENSOR_MULTILEVEL_GET_WATER_OXIDATION_REDUCTION_POTENTIAL_V11                    0x44
#define SENSOR_MULTILEVEL_GET_HEART_RATE_LF_HF_RATIO_V11                                 0x45
#define SENSOR_MULTILEVEL_GET_MOTION_DIRECTION_V11                                       0x46
#define SENSOR_MULTILEVEL_GET_APPLIED_FORCE_ON_THE_SENSOR_V11                            0x47
#define SENSOR_MULTILEVEL_GET_RETURN_AIR_TEMPERATURE_V11                                 0x48
#define SENSOR_MULTILEVEL_GET_SUPPLY_AIR_TEMPERATURE_V11                                 0x49
#define SENSOR_MULTILEVEL_GET_CONDENSER_COIL_TEMPERATURE_V11                             0x4A
#define SENSOR_MULTILEVEL_GET_EVAPORATOR_COIL_TEMPERATURE_V11                            0x4B
#define SENSOR_MULTILEVEL_GET_LIQUID_LINE_TEMPERATURE_V11                                0x4C
#define SENSOR_MULTILEVEL_GET_DISCHARGE_LINE_TEMPERATURE_V11                             0x4D
#define SENSOR_MULTILEVEL_GET_SUCTION_PRESSURE_V11                                       0x4E
#define SENSOR_MULTILEVEL_GET_DISCHARGE_PRESSURE_V11                                     0x4F
#define SENSOR_MULTILEVEL_GET_DEFROST_TEMPERATURE_V11                                    0x50
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED1_MASK_V11                             0x07
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_MASK_V11                                 0x18
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_SCALE_SHIFT_V11                                0x03
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_MASK_V11                             0xE0
#define SENSOR_MULTILEVEL_GET_PROPERTIES1_RESERVED2_SHIFT_V11                            0x05
/* Values used for Sensor Multilevel Report command */
#define SENSOR_MULTILEVEL_REPORT_TEMPERATURE_VERSION_1_V11                               0x01
#define SENSOR_MULTILEVEL_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V11                     0x02
#define SENSOR_MULTILEVEL_REPORT_LUMINANCE_VERSION_1_V11                                 0x03
#define SENSOR_MULTILEVEL_REPORT_POWER_VERSION_2_V11                                     0x04
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_HUMIDITY_VERSION_2_V11                         0x05
#define SENSOR_MULTILEVEL_REPORT_VELOCITY_VERSION_2_V11                                  0x06
#define SENSOR_MULTILEVEL_REPORT_DIRECTION_VERSION_2_V11                                 0x07
#define SENSOR_MULTILEVEL_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V11                      0x08
#define SENSOR_MULTILEVEL_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V11                       0x09
#define SENSOR_MULTILEVEL_REPORT_SOLAR_RADIATION_VERSION_2_V11                           0x0A
#define SENSOR_MULTILEVEL_REPORT_DEW_POINT_VERSION_2_V11                                 0x0B
#define SENSOR_MULTILEVEL_REPORT_RAIN_RATE_VERSION_2_V11                                 0x0C
#define SENSOR_MULTILEVEL_REPORT_TIDE_LEVEL_VERSION_2_V11                                0x0D
#define SENSOR_MULTILEVEL_REPORT_WEIGHT_VERSION_3_V11                                    0x0E
#define SENSOR_MULTILEVEL_REPORT_VOLTAGE_VERSION_3_V11                                   0x0F
#define SENSOR_MULTILEVEL_REPORT_CURRENT_VERSION_3_V11                                   0x10
#define SENSOR_MULTILEVEL_REPORT_CO2_LEVEL_VERSION_3_V11                                 0x11
#define SENSOR_MULTILEVEL_REPORT_AIR_FLOW_VERSION_3_V11                                  0x12
#define SENSOR_MULTILEVEL_REPORT_TANK_CAPACITY_VERSION_3_V11                             0x13
#define SENSOR_MULTILEVEL_REPORT_DISTANCE_VERSION_3_V11                                  0x14
#define SENSOR_MULTILEVEL_REPORT_ANGLE_POSITION_VERSION_4_V11                            0x15
#define SENSOR_MULTILEVEL_REPORT_ROTATION_V5_V11                                         0x16
#define SENSOR_MULTILEVEL_REPORT_WATER_TEMPERATURE_V5_V11                                0x17
#define SENSOR_MULTILEVEL_REPORT_SOIL_TEMPERATURE_V5_V11                                 0x18
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_INTENSITY_V5_V11                                0x19
#define SENSOR_MULTILEVEL_REPORT_SEISMIC_MAGNITUDE_V5_V11                                0x1A
#define SENSOR_MULTILEVEL_REPORT_ULTRAVIOLET_V5_V11                                      0x1B
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_RESISTIVITY_V5_V11                           0x1C
#define SENSOR_MULTILEVEL_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V11                          0x1D
#define SENSOR_MULTILEVEL_REPORT_LOUDNESS_V5_V11                                         0x1E
#define SENSOR_MULTILEVEL_REPORT_MOISTURE_V5_V11                                         0x1F
#define SENSOR_MULTILEVEL_REPORT_FREQUENCY_V6_V11                                        0x20
#define SENSOR_MULTILEVEL_REPORT_TIME_V6_V11                                             0x21
#define SENSOR_MULTILEVEL_REPORT_TARGET_TEMPERATURE_V6_V11                               0x22
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_2_5_V7_V11                           0x23
#define SENSOR_MULTILEVEL_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V11                          0x24
#define SENSOR_MULTILEVEL_REPORT_RADON_CONCENTRATION_V7_V11                              0x25
#define SENSOR_MULTILEVEL_REPORT_METHANE_DENSITY_CH4_V7_V11                              0x26
#define SENSOR_MULTILEVEL_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V11                        0x27
#define SENSOR_MULTILEVEL_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V11                         0x28
#define SENSOR_MULTILEVEL_REPORT_SOIL_HUMIDITY_V7_V11                                    0x29
#define SENSOR_MULTILEVEL_REPORT_SOIL_REACTIVITY_V7_V11                                  0x2A
#define SENSOR_MULTILEVEL_REPORT_SOIL_SALINITY_V7_V11                                    0x2B
#define SENSOR_MULTILEVEL_REPORT_HEART_RATE_V7_V11                                       0x2C
#define SENSOR_MULTILEVEL_REPORT_BLOOD_PRESSURE_V7_V11                                   0x2D
#define SENSOR_MULTILEVEL_REPORT_MUSCLE_MASS_V7_V11                                      0x2E
#define SENSOR_MULTILEVEL_REPORT_FAT_MASS_V7_V11                                         0x2F
#define SENSOR_MULTILEVEL_REPORT_BONE_MASS_V7_V11                                        0x30
#define SENSOR_MULTILEVEL_REPORT_TOTAL_BODY_WATER_TBW_V7_V11                             0x31
#define SENSOR_MULTILEVEL_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V11                         0x32
#define SENSOR_MULTILEVEL_REPORT_BODY_MASS_INDEX_BMI_V7_V11                              0x33
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_X_AXIS_V8_V11                              0x34
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Y_AXIS_V8_V11                              0x35
#define SENSOR_MULTILEVEL_REPORT_ACCELERATION_Z_AXIS_V8_V11                              0x36
#define SENSOR_MULTILEVEL_REPORT_SMOKE_DENSITY_V8_V11                                    0x37
#define SENSOR_MULTILEVEL_REPORT_WATER_FLOW_V9_V11                                       0x38
#define SENSOR_MULTILEVEL_REPORT_WATER_PRESSURE_V9_V11                                   0x39
#define SENSOR_MULTILEVEL_REPORT_RF_SIGNAL_STRENGTH_V9_V11                               0x3A
#define SENSOR_MULTILEVEL_REPORT_PARTICULATE_MATTER_V10_V11                              0x3B
#define SENSOR_MULTILEVEL_REPORT_RESPIRATORY_RATE_V10_V11                                0x3C
#define SENSOR_MULTILEVEL_REPORT_RELATIVE_MODULATION_LEVEL_V11                           0x3D
#define SENSOR_MULTILEVEL_REPORT_BOILER_WATER_TEMPERATURE_V11                            0x3E
#define SENSOR_MULTILEVEL_REPORT_DOMESTIC_HOT_WATER_TEMPERATURE_V11                      0x3F
#define SENSOR_MULTILEVEL_REPORT_OUTSIDE_TEMPERATURE_V11                                 0x40
#define SENSOR_MULTILEVEL_REPORT_EXHAUST_TEMPERATURE_V11                                 0x41
#define SENSOR_MULTILEVEL_REPORT_WATER_CHLORINE_LEVEL_V11                                0x42
#define SENSOR_MULTILEVEL_REPORT_WATER_ACIDITY_V11                                       0x43
#define SENSOR_MULTILEVEL_REPORT_WATER_OXIDATION_REDUCTION_POTENTIAL_V11                 0x44
#define SENSOR_MULTILEVEL_REPORT_HEART_RATE_LF_HF_RATIO_V11                              0x45
#define SENSOR_MULTILEVEL_REPORT_MOTION_DIRECTION_V11                                    0x46
#define SENSOR_MULTILEVEL_REPORT_APPLIED_FORCE_ON_THE_SENSOR_V11                         0x47
#define SENSOR_MULTILEVEL_REPORT_RETURN_AIR_TEMPERATURE_V11                              0x48
#define SENSOR_MULTILEVEL_REPORT_SUPPLY_AIR_TEMPERATURE_V11                              0x49
#define SENSOR_MULTILEVEL_REPORT_CONDENSER_COIL_TEMPERATURE_V11                          0x4A
#define SENSOR_MULTILEVEL_REPORT_EVAPORATOR_COIL_TEMPERATURE_V11                         0x4B
#define SENSOR_MULTILEVEL_REPORT_LIQUID_LINE_TEMPERATURE_V11                             0x4C
#define SENSOR_MULTILEVEL_REPORT_DISCHARGE_LINE_TEMPERATURE_V11                          0x4D
#define SENSOR_MULTILEVEL_REPORT_SUCTION_PRESSURE_V11                                    0x4E
#define SENSOR_MULTILEVEL_REPORT_DISCHARGE_PRESSURE_V11                                  0x4F
#define SENSOR_MULTILEVEL_REPORT_DEFROST_TEMPERATURE_V11                                 0x50
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SIZE_MASK_V11                                     0x07
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_MASK_V11                                    0x18
#define SENSOR_MULTILEVEL_REPORT_LEVEL_SCALE_SHIFT_V11                                   0x03
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_MASK_V11                                0xE0
#define SENSOR_MULTILEVEL_REPORT_LEVEL_PRECISION_SHIFT_V11                               0x05
/* Values used for Sensor Multilevel Supported Get Scale command */
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TEMPERATURE_VERSION_1_V11                  0x01
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_GENERAL_PURPOSE_VALUE_VERSION_1_V11        0x02
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LUMINANCE_VERSION_1_V11                    0x03
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_POWER_VERSION_2_V11                        0x04
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_HUMIDITY_VERSION_2_V11            0x05
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VELOCITY_VERSION_2_V11                     0x06
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DIRECTION_VERSION_2_V11                    0x07
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ATMOSPHERIC_PRESSURE_VERSION_2_V11         0x08
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BAROMETRIC_PRESSURE_VERSION_2_V11          0x09
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOLAR_RADIATION_VERSION_2_V11              0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEW_POINT_VERSION_2_V11                    0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RAIN_RATE_VERSION_2_V11                    0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIDE_LEVEL_VERSION_2_V11                   0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WEIGHT_VERSION_3_V11                       0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLTAGE_VERSION_3_V11                      0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CURRENT_VERSION_3_V11                      0x10
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CO2_LEVEL_VERSION_3_V11                    0x11
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_AIR_FLOW_VERSION_3_V11                     0x12
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TANK_CAPACITY_VERSION_3_V11                0x13
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISTANCE_VERSION_3_V11                     0x14
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ANGLE_POSITION_VERSION_4_V11               0x15
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ROTATION_V5_V11                            0x16
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_TEMPERATURE_V5_V11                   0x17
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_TEMPERATURE_V5_V11                    0x18
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_INTENSITY_V5_V11                   0x19
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SEISMIC_MAGNITUDE_V5_V11                   0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ULTRAVIOLET_V5_V11                         0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_RESISTIVITY_V5_V11              0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ELECTRICAL_CONDUCTIVITY_V5_V11             0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LOUDNESS_V5_V11                            0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOISTURE_V5_V11                            0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FREQUENCY_V6_V11                           0x20
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TIME_V6_V11                                0x21
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TARGET_TEMPERATURE_V6_V11                  0x22
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_2_5_V7_V11              0x23
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FORMALDEHYDE_CH2O_LEVEL_V7_V11             0x24
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RADON_CONCENTRATION_V7_V11                 0x25
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_METHANE_DENSITY_CH4_V7_V11                 0x26
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_VOLATILE_ORGANIC_COMPOUND_V7_V11           0x27
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CARBON_MONOXIDE_CO_LEVEL_V7_V11            0x28
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_HUMIDITY_V7_V11                       0x29
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_REACTIVITY_V7_V11                     0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SOIL_SALINITY_V7_V11                       0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_HEART_RATE_V7_V11                          0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BLOOD_PRESSURE_V7_V11                      0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MUSCLE_MASS_V7_V11                         0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_FAT_MASS_V7_V11                            0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BONE_MASS_V7_V11                           0x30
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_TOTAL_BODY_WATER_TBW_V7_V11                0x31
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BASIC_METABOLIC_RATE_BMR_V7_V11            0x32
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BODY_MASS_INDEX_BMI_V7_V11                 0x33
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_X_AXIS_V8_V11                 0x34
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Y_AXIS_V8_V11                 0x35
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_ACCELERATION_Z_AXIS_V8_V11                 0x36
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SMOKE_DENSITY_V8_V11                       0x37
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_FLOW_V9_V11                          0x38
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_PRESSURE_V9_V11                      0x39
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RF_SIGNAL_STRENGTH_V9_V11                  0x3A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_PARTICULATE_MATTER_V10_V11                 0x3B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RESPIRATORY_RATE_V10_V11                   0x3C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RELATIVE_MODULATION_LEVEL_V11              0x3D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_BOILER_WATER_TEMPERATURE_V11               0x3E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DOMESTIC_HOT_WATER_TEMPERATURE_V11         0x3F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_OUTSIDE_TEMPERATURE_V11                    0x40
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_EXHAUST_TEMPERATURE_V11                    0x41
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_CHLORINE_LEVEL_V11                   0x42
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_ACIDITY_V11                          0x43
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_WATER_OXIDATION_REDUCTION_POTENTIAL_V11    0x44
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_HEART_RATE_LF_HF_RATIO_V11                 0x45
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_MOTION_DIRECTION_V11                       0x46
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_APPLIED_FORCE_ON_THE_SENSOR_V11            0x47
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_RETURN_AIR_TEMPERATURE_V11                 0x48
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SUPPLY_AIR_TEMPERATURE_V11                 0x49
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_CONDENSER_COIL_TEMPERATURE_V11             0x4A
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_EVAPORATOR_COIL_TEMPERATURE_V11            0x4B
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_LIQUID_LINE_TEMPERATURE_V11                0x4C
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISCHARGE_LINE_TEMPERATURE_V11             0x4D
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_SUCTION_PRESSURE_V11                       0x4E
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DISCHARGE_PRESSURE_V11                     0x4F
#define SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_DEFROST_TEMPERATURE_V11                    0x50
/* Values used for Sensor Multilevel Supported Scale Report command */
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TEMPERATURE_VERSION_1_V11               0x01
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_GENERAL_PURPOSE_VALUE_VERSION_1_V11     0x02
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LUMINANCE_VERSION_1_V11                 0x03
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_POWER_VERSION_2_V11                     0x04
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_HUMIDITY_VERSION_2_V11         0x05
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VELOCITY_VERSION_2_V11                  0x06
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DIRECTION_VERSION_2_V11                 0x07
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ATMOSPHERIC_PRESSURE_VERSION_2_V11      0x08
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BAROMETRIC_PRESSURE_VERSION_2_V11       0x09
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOLAR_RADIATION_VERSION_2_V11           0x0A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEW_POINT_VERSION_2_V11                 0x0B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RAIN_RATE_VERSION_2_V11                 0x0C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIDE_LEVEL_VERSION_2_V11                0x0D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WEIGHT_VERSION_3_V11                    0x0E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLTAGE_VERSION_3_V11                   0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CURRENT_VERSION_3_V11                   0x10
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CO2_LEVEL_VERSION_3_V11                 0x11
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_AIR_FLOW_VERSION_3_V11                  0x12
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TANK_CAPACITY_VERSION_3_V11             0x13
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISTANCE_VERSION_3_V11                  0x14
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ANGLE_POSITION_VERSION_4_V11            0x15
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ROTATION_V5_V11                         0x16
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_TEMPERATURE_V5_V11                0x17
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_TEMPERATURE_V5_V11                 0x18
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_INTENSITY_V5_V11                0x19
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SEISMIC_MAGNITUDE_V5_V11                0x1A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ULTRAVIOLET_V5_V11                      0x1B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_RESISTIVITY_V5_V11           0x1C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ELECTRICAL_CONDUCTIVITY_V5_V11          0x1D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LOUDNESS_V5_V11                         0x1E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOISTURE_V5_V11                         0x1F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FREQUENCY_V6_V11                        0x20
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TIME_V6_V11                             0x21
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TARGET_TEMPERATURE_V6_V11               0x22
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_2_5_V7_V11           0x23
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FORMALDEHYDE_CH2O_LEVEL_V7_V11          0x24
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RADON_CONCENTRATION_V7_V11              0x25
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_METHANE_DENSITY_CH4_V7_V11              0x26
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_VOLATILE_ORGANIC_COMPOUND_V7_V11        0x27
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CARBON_MONOXIDE_CO_LEVEL_V7_V11         0x28
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_HUMIDITY_V7_V11                    0x29
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_REACTIVITY_V7_V11                  0x2A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SOIL_SALINITY_V7_V11                    0x2B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_HEART_RATE_V7_V11                       0x2C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BLOOD_PRESSURE_V7_V11                   0x2D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MUSCLE_MASS_V7_V11                      0x2E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_FAT_MASS_V7_V11                         0x2F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BONE_MASS_V7_V11                        0x30
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_TOTAL_BODY_WATER_TBW_V7_V11             0x31
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BASIC_METABOLIC_RATE_BMR_V7_V11         0x32
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BODY_MASS_INDEX_BMI_V7_V11              0x33
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_X_AXIS_V8_V11              0x34
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Y_AXIS_V8_V11              0x35
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_ACCELERATION_Z_AXIS_V8_V11              0x36
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SMOKE_DENSITY_V8_V11                    0x37
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_FLOW_V9_V11                       0x38
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_PRESSURE_V9_V11                   0x39
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RF_SIGNAL_STRENGTH_V9_V11               0x3A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PARTICULATE_MATTER_V10_V11              0x3B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RESPIRATORY_RATE_V10_V11                0x3C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RELATIVE_MODULATION_LEVEL_V11           0x3D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_BOILER_WATER_TEMPERATURE_V11            0x3E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DOMESTIC_HOT_WATER_TEMPERATURE_V11      0x3F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_OUTSIDE_TEMPERATURE_V11                 0x40
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_EXHAUST_TEMPERATURE_V11                 0x41
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_CHLORINE_LEVEL_V11                0x42
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_ACIDITY_V11                       0x43
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_WATER_OXIDATION_REDUCTION_POTENTIAL_V11 0x44
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_HEART_RATE_LF_HF_RATIO_V11              0x45
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_MOTION_DIRECTION_V11                    0x46
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_APPLIED_FORCE_ON_THE_SENSOR_V11         0x47
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_RETURN_AIR_TEMPERATURE_V11              0x48
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SUPPLY_AIR_TEMPERATURE_V11              0x49
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_CONDENSER_COIL_TEMPERATURE_V11          0x4A
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_EVAPORATOR_COIL_TEMPERATURE_V11         0x4B
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_LIQUID_LINE_TEMPERATURE_V11             0x4C
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISCHARGE_LINE_TEMPERATURE_V11          0x4D
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_SUCTION_PRESSURE_V11                    0x4E
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DISCHARGE_PRESSURE_V11                  0x4F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_DEFROST_TEMPERATURE_V11                 0x50
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V11     0x0F
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_MASK_V11           0xF0
#define SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_PROPERTIES1_RESERVED_SHIFT_V11          0x04

/* Silence Alarm command class commands */
#define SILENCE_ALARM_VERSION                                                            0x01
#define SENSOR_ALARM_SET                                                                 0x01

/* Simple Av Control command class commands */
#define SIMPLE_AV_CONTROL_VERSION                                                        0x01
#define SIMPLE_AV_CONTROL_GET                                                            0x02
#define SIMPLE_AV_CONTROL_REPORT                                                         0x03
#define SIMPLE_AV_CONTROL_SET                                                            0x01
#define SIMPLE_AV_CONTROL_SUPPORTED_GET                                                  0x04
#define SIMPLE_AV_CONTROL_SUPPORTED_REPORT                                               0x05
/* Values used for Simple Av Control Set command */
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_KEY_ATTRIBUTES_MASK                            0x07
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_MASK                                  0xF8
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_SHIFT                                 0x03

/* Simple Av Control command class commands */
#define SIMPLE_AV_CONTROL_VERSION_V2                                                     0x02
#define SIMPLE_AV_CONTROL_GET_V2                                                         0x02
#define SIMPLE_AV_CONTROL_REPORT_V2                                                      0x03
#define SIMPLE_AV_CONTROL_SET_V2                                                         0x01
#define SIMPLE_AV_CONTROL_SUPPORTED_GET_V2                                               0x04
#define SIMPLE_AV_CONTROL_SUPPORTED_REPORT_V2                                            0x05
/* Values used for Simple Av Control Set command */
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_KEY_ATTRIBUTES_MASK_V2                         0x07
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_MASK_V2                               0xF8
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_SHIFT_V2                              0x03

/* Simple Av Control command class commands */
#define SIMPLE_AV_CONTROL_VERSION_V3                                                     0x03
#define SIMPLE_AV_CONTROL_GET_V3                                                         0x02
#define SIMPLE_AV_CONTROL_REPORT_V3                                                      0x03
#define SIMPLE_AV_CONTROL_SET_V3                                                         0x01
#define SIMPLE_AV_CONTROL_SUPPORTED_GET_V3                                               0x04
#define SIMPLE_AV_CONTROL_SUPPORTED_REPORT_V3                                            0x05
/* Values used for Simple Av Control Set command */
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_KEY_ATTRIBUTES_MASK_V3                         0x07
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_MASK_V3                               0xF8
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_SHIFT_V3                              0x03

/* Simple Av Control command class commands */
#define SIMPLE_AV_CONTROL_VERSION_V4                                                     0x04
#define SIMPLE_AV_CONTROL_GET_V4                                                         0x02
#define SIMPLE_AV_CONTROL_REPORT_V4                                                      0x03
#define SIMPLE_AV_CONTROL_SET_V4                                                         0x01
#define SIMPLE_AV_CONTROL_SUPPORTED_GET_V4                                               0x04
#define SIMPLE_AV_CONTROL_SUPPORTED_REPORT_V4                                            0x05
/* Values used for Simple Av Control Set command */
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_KEY_ATTRIBUTES_MASK_V4                         0x07
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_MASK_V4                               0xF8
#define SIMPLE_AV_CONTROL_SET_PROPERTIES1_RESERVED_SHIFT_V4                              0x03

/* Switch All command class commands */
#define SWITCH_ALL_VERSION                                                               0x01
#define SWITCH_ALL_GET                                                                   0x02
#define SWITCH_ALL_OFF                                                                   0x05
#define SWITCH_ALL_ON                                                                    0x04
#define SWITCH_ALL_REPORT                                                                0x03
#define SWITCH_ALL_SET                                                                   0x01
/* Values used for Switch All Report command */
#define SWITCH_ALL_REPORT_EXCLUDED_FROM_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                 0x00
#define SWITCH_ALL_REPORT_EXCLUDED_FROM_THE_ALL_ON_FUNCTIONALITY_BUT_NOT_ALL_OFF         0x01
#define SWITCH_ALL_REPORT_EXCLUDED_FROM_THE_ALL_OFF_FUNCTIONALITY_BUT_NOT_ALL_ON         0x02
#define SWITCH_ALL_REPORT_INCLUDED_IN_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                   0xFF
/* Values used for Switch All Set command */
#define SWITCH_ALL_SET_EXCLUDED_FROM_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                    0x00
#define SWITCH_ALL_SET_EXCLUDED_FROM_THE_ALL_ON_FUNCTIONALITY_BUT_NOT_ALL_OFF            0x01
#define SWITCH_ALL_SET_EXCLUDED_FROM_THE_ALL_OFF_FUNCTIONALITY_BUT_NOT_ALL_ON            0x02
#define SWITCH_ALL_SET_INCLUDED_IN_THE_ALL_ON_ALL_OFF_FUNCTIONALITY                      0xFF

/* Switch Binary command class commands */
#define SWITCH_BINARY_VERSION                                                            0x01
#define SWITCH_BINARY_GET                                                                0x02
#define SWITCH_BINARY_REPORT                                                             0x03
#define SWITCH_BINARY_SET                                                                0x01

/* Switch Binary command class commands */
#define SWITCH_BINARY_VERSION_V2                                                         0x02
#define SWITCH_BINARY_GET_V2                                                             0x02
#define SWITCH_BINARY_REPORT_V2                                                          0x03
#define SWITCH_BINARY_SET_V2                                                             0x01
/* Values used for Switch Binary Report command */
#define SWITCH_BINARY_REPORT_OFF_0_V2                                                    0x00
#define SWITCH_BINARY_REPORT_UNKNOWN_V2                                                  0xFE
#define SWITCH_BINARY_REPORT_ON_100_V2                                                   0xFF
#define SWITCH_BINARY_REPORT_OFF_0_V2                                                    0x00
#define SWITCH_BINARY_REPORT_ON_100_V2                                                   0xFF
#define SWITCH_BINARY_REPORT_ALREADY_AT_THE_TARGET_VALUE_V2                              0x00
#define SWITCH_BINARY_REPORT_UNKNOWN_DURATION_V2                                         0xFE
#define SWITCH_BINARY_REPORT_RESERVED_V2                                                 0xFF
/* Values used for Switch Binary Set command */
#define SWITCH_BINARY_SET_OFF_0_V2                                                       0x00
#define SWITCH_BINARY_SET_ON_100_V2                                                      0xFF
#define SWITCH_BINARY_SET_INSTANTLY_V2                                                   0x00
#define SWITCH_BINARY_SET_DEFAULT_V2                                                     0xFF

/* Switch Multilevel command class commands */
#define SWITCH_MULTILEVEL_VERSION                                                        0x01
#define SWITCH_MULTILEVEL_GET                                                            0x02
#define SWITCH_MULTILEVEL_REPORT                                                         0x03
#define SWITCH_MULTILEVEL_SET                                                            0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE                                             0x04
#define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE                                              0x05
/* Values used for Switch Multilevel Start Level Change command */
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED1_MASK                        0x1F
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_IGNORE_START_LEVEL_BIT_MASK           0x20
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_UP_DOWN_BIT_MASK                      0x40
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED2_BIT_MASK                    0x80

/* Switch Multilevel command class commands */
#define SWITCH_MULTILEVEL_VERSION_V2                                                     0x02
#define SWITCH_MULTILEVEL_GET_V2                                                         0x02
#define SWITCH_MULTILEVEL_REPORT_V2                                                      0x03
#define SWITCH_MULTILEVEL_SET_V2                                                         0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2                                          0x04
#define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2                                           0x05
/* Values used for Switch Multilevel Start Level Change command */
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED1_MASK_V2               0x1F
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_LEVEL_BIT_MASK_V2  0x20
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK_V2             0x40
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED2_BIT_MASK_V2           0x80

/* Switch Multilevel command class commands */
#define SWITCH_MULTILEVEL_VERSION_V3                                                     0x03
#define SWITCH_MULTILEVEL_GET_V3                                                         0x02
#define SWITCH_MULTILEVEL_REPORT_V3                                                      0x03
#define SWITCH_MULTILEVEL_SET_V3                                                         0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3                                          0x04
#define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3                                           0x05
#define SWITCH_MULTILEVEL_SUPPORTED_GET_V3                                               0x06
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3                                            0x07
/* Values used for Switch Multilevel Start Level Change command */
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED_MASK_V3                0x07
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_INC_DEC_MASK_V3                 0x18
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_INC_DEC_SHIFT_V3                0x03
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_INCREMENT_V3                        0x00
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_DECREMENT_V3                        0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_RESERVED_V3                         0x02
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_NONE_V3                             0x03
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_LEVEL_BIT_MASK_V3  0x20
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_MASK_V3                 0xC0
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_SHIFT_V3                0x06
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_UP_V3                               0x00
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_DOWN_V3                             0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_RESERVED_V3                         0x02
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_NONE_V3                             0x03
/* Values used for Switch Multilevel Supported Report command */
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_PRIMARY_SWITCH_TYPE_MASK_V3       0x1F
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_MASK_V3                 0xE0
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_SHIFT_V3                0x05
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_SECONDARY_SWITCH_TYPE_MASK_V3     0x1F
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_MASK_V3                 0xE0
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_SHIFT_V3                0x05

/* Switch Multilevel command class commands */
#define SWITCH_MULTILEVEL_VERSION_V4                                                     0x04
#define SWITCH_MULTILEVEL_GET_V4                                                         0x02
#define SWITCH_MULTILEVEL_REPORT_V4                                                      0x03
#define SWITCH_MULTILEVEL_SET_V4                                                         0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V4                                          0x04
#define SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V4                                           0x05
#define SWITCH_MULTILEVEL_SUPPORTED_GET_V4                                               0x06
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_V4                                            0x07
/* Values used for Switch Multilevel Report command */
#define SWITCH_MULTILEVEL_REPORT_ALREADY_AT_THE_TARGET_VALUE_V4                          0x00
#define SWITCH_MULTILEVEL_REPORT_UNKNOWN_DURATION_V4                                     0xFE
#define SWITCH_MULTILEVEL_REPORT_RESERVED_V4                                             0xFF
/* Values used for Switch Multilevel Start Level Change command */
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_RESERVED_MASK_V4                0x07
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_INC_DEC_MASK_V4                 0x18
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_INC_DEC_SHIFT_V4                0x03
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_INCREMENT_V4                        0x00
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_DECREMENT_V4                        0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_RESERVED_V4                         0x02
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_INC_DEC_NONE_V4                             0x03
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_LEVEL_BIT_MASK_V4  0x20
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_MASK_V4                 0xC0
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_SHIFT_V4                0x06
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_UP_V4                               0x00
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_DOWN_V4                             0x01
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_RESERVED_V4                         0x02
#define SWITCH_MULTILEVEL_START_LEVEL_CHANGE_UP_DOWN_NONE_V4                             0x03
/* Values used for Switch Multilevel Supported Report command */
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_PRIMARY_SWITCH_TYPE_MASK_V4       0x1F
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_MASK_V4                 0xE0
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_SHIFT_V4                0x05
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_SECONDARY_SWITCH_TYPE_MASK_V4     0x1F
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_MASK_V4                 0xE0
#define SWITCH_MULTILEVEL_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_SHIFT_V4                0x05

/* Switch Toggle Binary command class commands */
#define SWITCH_TOGGLE_BINARY_VERSION                                                     0x01
#define SWITCH_TOGGLE_BINARY_SET                                                         0x01 /*SWITCH_TOGGLE_BINARY_SET*/
#define SWITCH_TOGGLE_BINARY_GET                                                         0x02
#define SWITCH_TOGGLE_BINARY_REPORT                                                      0x03

/* Switch Toggle Multilevel command class commands */
#define SWITCH_TOGGLE_MULTILEVEL_VERSION                                                 0x01
#define SWITCH_TOGGLE_MULTILEVEL_SET                                                     0x01 /*SWITCH_TOGGLE_MULTILEVEL_SET*/
#define SWITCH_TOGGLE_MULTILEVEL_GET                                                     0x02
#define SWITCH_TOGGLE_MULTILEVEL_REPORT                                                  0x03
#define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE                                      0x04
#define SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE                                       0x05
/* Values used for Switch Toggle Multilevel Start Level Change command */
#define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED1_MASK                 0x1F
#define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_IGNORE_START_LEVEL_BIT_MASK    0x20
#define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_RESERVED2_BIT_MASK             0x40
#define SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_LEVEL_ROLL_OVER_BIT_MASK             0x80

/* Tariff Config command class commands */
#define TARIFF_CONFIG_VERSION                                                            0x01
#define TARIFF_TBL_REMOVE                                                                0x03
#define TARIFF_TBL_SET                                                                   0x02
#define TARIFF_TBL_SUPPLIER_SET                                                          0x01
/* Values used for Tariff Tbl Remove command */
#define TARIFF_TBL_REMOVE_PROPERTIES1_RATE_PARAMETER_SET_IDS_MASK                        0x3F
#define TARIFF_TBL_REMOVE_PROPERTIES1_RESERVED_MASK                                      0xC0
#define TARIFF_TBL_REMOVE_PROPERTIES1_RESERVED_SHIFT                                     0x06
/* Values used for Tariff Tbl Set command */
#define TARIFF_TBL_SET_PROPERTIES1_RESERVED_MASK                                         0x1F
#define TARIFF_TBL_SET_PROPERTIES1_TARIFF_PRECISION_MASK                                 0xE0
#define TARIFF_TBL_SET_PROPERTIES1_TARIFF_PRECISION_SHIFT                                0x05
/* Values used for Tariff Tbl Supplier Set command */
#define TARIFF_TBL_SUPPLIER_SET_PROPERTIES1_STANDING_CHARGE_PERIOD_MASK                  0x1F
#define TARIFF_TBL_SUPPLIER_SET_PROPERTIES1_STANDING_CHARGE_PRECISION_MASK               0xE0
#define TARIFF_TBL_SUPPLIER_SET_PROPERTIES1_STANDING_CHARGE_PRECISION_SHIFT              0x05
#define TARIFF_TBL_SUPPLIER_SET_PROPERTIES2_NUMBER_OF_SUPPLIER_CHARACTERS_MASK           0x1F
#define TARIFF_TBL_SUPPLIER_SET_PROPERTIES2_RESERVED_MASK                                0xE0
#define TARIFF_TBL_SUPPLIER_SET_PROPERTIES2_RESERVED_SHIFT                               0x05

/* Tariff Tbl Monitor command class commands */
#define TARIFF_TBL_MONITOR_VERSION                                                       0x01
#define TARIFF_TBL_COST_GET                                                              0x05
#define TARIFF_TBL_COST_REPORT                                                           0x06
#define TARIFF_TBL_GET                                                                   0x03
#define TARIFF_TBL_REPORT                                                                0x04
#define TARIFF_TBL_SUPPLIER_GET                                                          0x01
#define TARIFF_TBL_SUPPLIER_REPORT                                                       0x02
/* Values used for Tariff Tbl Cost Report command */
#define TARIFF_TBL_COST_REPORT_PROPERTIES1_RATE_TYPE_MASK                                0x03
#define TARIFF_TBL_COST_REPORT_PROPERTIES1_RESERVED1_MASK                                0xFC
#define TARIFF_TBL_COST_REPORT_PROPERTIES1_RESERVED1_SHIFT                               0x02
#define TARIFF_TBL_COST_REPORT_PROPERTIES2_RESERVED2_MASK                                0x1F
#define TARIFF_TBL_COST_REPORT_PROPERTIES2_COST_PRECISION_MASK                           0xE0
#define TARIFF_TBL_COST_REPORT_PROPERTIES2_COST_PRECISION_SHIFT                          0x05
/* Values used for Tariff Tbl Report command */
#define TARIFF_TBL_REPORT_PROPERTIES1_RESERVED_MASK                                      0x1F
#define TARIFF_TBL_REPORT_PROPERTIES1_TARIFF_PRECISION_MASK                              0xE0
#define TARIFF_TBL_REPORT_PROPERTIES1_TARIFF_PRECISION_SHIFT                             0x05
/* Values used for Tariff Tbl Supplier Report command */
#define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES1_STANDING_CHARGE_PERIOD_MASK               0x1F
#define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES1_STANDING_CHARGE_PRECISION_MASK            0xE0
#define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES1_STANDING_CHARGE_PRECISION_SHIFT           0x05
#define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES2_NUMBER_OF_SUPPLIER_CHARACTERS_MASK        0x1F
#define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES2_RESERVED_MASK                             0xE0
#define TARIFF_TBL_SUPPLIER_REPORT_PROPERTIES2_RESERVED_SHIFT                            0x05

/* Thermostat Fan Mode command class commands */
#define THERMOSTAT_FAN_MODE_VERSION                                                      0x01
#define THERMOSTAT_FAN_MODE_GET                                                          0x02
#define THERMOSTAT_FAN_MODE_REPORT                                                       0x03
#define THERMOSTAT_FAN_MODE_SET                                                          0x01
#define THERMOSTAT_FAN_MODE_SUPPORTED_GET                                                0x04
#define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT                                             0x05
/* Values used for Thermostat Fan Mode Report command */
#define THERMOSTAT_FAN_MODE_REPORT_LEVEL_FAN_MODE_MASK                                   0x0F
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW                                     0x00
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW                                          0x01
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH                                    0x02
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH                                         0x03
#define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_MASK                                   0xF0
#define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_SHIFT                                  0x04
/* Values used for Thermostat Fan Mode Set command */
#define THERMOSTAT_FAN_MODE_SET_LEVEL_FAN_MODE_MASK                                      0x0F
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW                                        0x00
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW                                             0x01
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH                                       0x02
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH                                            0x03
#define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_MASK                                      0xF0
#define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_SHIFT                                     0x04

/* Thermostat Fan Mode command class commands */
#define THERMOSTAT_FAN_MODE_VERSION_V2                                                   0x02
#define THERMOSTAT_FAN_MODE_GET_V2                                                       0x02
#define THERMOSTAT_FAN_MODE_REPORT_V2                                                    0x03
#define THERMOSTAT_FAN_MODE_SET_V2                                                       0x01
#define THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2                                             0x04
#define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_V2                                          0x05
/* Values used for Thermostat Fan Mode Report command */
#define THERMOSTAT_FAN_MODE_REPORT_LEVEL_FAN_MODE_MASK_V2                                0x0F
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW_V2                                  0x00
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW_V2                                       0x01
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH_V2                                 0x02
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH_V2                                      0x03
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_MEDIUM_V2                               0x04
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_MEDIUM_V2                                    0x05
#define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_MASK_V2                                0xF0
#define THERMOSTAT_FAN_MODE_REPORT_LEVEL_RESERVED_SHIFT_V2                               0x04
/* Values used for Thermostat Fan Mode Set command */
#define THERMOSTAT_FAN_MODE_SET_LEVEL_FAN_MODE_MASK_V2                                   0x0F
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW_V2                                     0x00
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW_V2                                          0x01
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH_V2                                    0x02
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH_V2                                         0x03
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_MEDIUM_V2                                  0x04
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_MEDIUM_V2                                       0x05
#define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_MASK_V2                                   0x70
#define THERMOSTAT_FAN_MODE_SET_LEVEL_RESERVED_SHIFT_V2                                  0x04
#define THERMOSTAT_FAN_MODE_SET_LEVEL_OFF_BIT_MASK_V2                                    0x80

/* Thermostat Fan Mode command class commands */
#define THERMOSTAT_FAN_MODE_VERSION_V3                                                   0x03
#define THERMOSTAT_FAN_MODE_GET_V3                                                       0x02
#define THERMOSTAT_FAN_MODE_REPORT_V3                                                    0x03
#define THERMOSTAT_FAN_MODE_SET_V3                                                       0x01
#define THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3                                             0x04
#define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_V3                                          0x05
/* Values used for Thermostat Fan Mode Report command */
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_FAN_MODE_MASK_V3                          0x0F
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW_V3                                  0x00
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW_V3                                       0x01
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH_V3                                 0x02
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH_V3                                      0x03
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_MEDIUM_V3                               0x04
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_MEDIUM_V3                                    0x05
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_CIRCULATION_V3                               0x06
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HUMIDITY_V3                                  0x07
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_MASK_V3                          0x70
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                         0x04
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_OFF_BIT_MASK_V3                           0x80
/* Values used for Thermostat Fan Mode Set command */
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_FAN_MODE_MASK_V3                             0x0F
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW_V3                                     0x00
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW_V3                                          0x01
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH_V3                                    0x02
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH_V3                                         0x03
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_MEDIUM_V3                                  0x04
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_MEDIUM_V3                                       0x05
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_CIRCULATION_V3                                  0x06
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HUMIDITY_V3                                     0x07
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_MASK_V3                             0x70
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_SHIFT_V3                            0x04
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_OFF_BIT_MASK_V3                              0x80

/* Thermostat Fan Mode command class commands */
#define THERMOSTAT_FAN_MODE_VERSION_V4                                                   0x04
#define THERMOSTAT_FAN_MODE_GET_V4                                                       0x02
#define THERMOSTAT_FAN_MODE_REPORT_V4                                                    0x03
#define THERMOSTAT_FAN_MODE_SET_V4                                                       0x01
#define THERMOSTAT_FAN_MODE_SUPPORTED_GET_V4                                             0x04
#define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_V4                                          0x05
/* Values used for Thermostat Fan Mode Report command */
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_FAN_MODE_MASK_V4                          0x0F
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW_V4                                  0x00
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW_V4                                       0x01
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH_V4                                 0x02
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH_V4                                      0x03
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_MEDIUM_V4                               0x04
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_MEDIUM_V4                                    0x05
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_CIRCULATION_V4                               0x06
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HUMIDITY_V4                                  0x07
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LEFT_RIGHT_V4                                0x08
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_UP_DOWN_V4                                   0x09
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_QUIET_V4                                     0x0A
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDB_V4                                 0x0B
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDC_V4                                 0x0C
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDD_V4                                 0x0D
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDE_V4                                 0x0E
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDF_V4                                 0x0F
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_MASK_V4                          0x70
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT_V4                         0x04
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_OFF_BIT_MASK_V4                           0x80
/* Values used for Thermostat Fan Mode Set command */
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_FAN_MODE_MASK_V4                             0x0F
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW_V4                                     0x00
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW_V4                                          0x01
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH_V4                                    0x02
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH_V4                                         0x03
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_MEDIUM_V4                                  0x04
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_MEDIUM_V4                                       0x05
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_CIRCULATION_V4                                  0x06
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HUMIDITY_V4                                     0x07
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LEFT_RIGHT_V4                                   0x08
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_UP_DOWN_V4                                      0x09
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_QUIET_V4                                        0x0A
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDB_V4                                    0x0B
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDC_V4                                    0x0C
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDD_V4                                    0x0D
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDE_V4                                    0x0E
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDF_V4                                    0x0F
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_MASK_V4                             0x70
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_SHIFT_V4                            0x04
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_OFF_BIT_MASK_V4                              0x80

/* Thermostat Fan Mode command class commands */
#define THERMOSTAT_FAN_MODE_VERSION_V5                                                   0x05
#define THERMOSTAT_FAN_MODE_GET_V5                                                       0x02
#define THERMOSTAT_FAN_MODE_REPORT_V5                                                    0x03
#define THERMOSTAT_FAN_MODE_SET_V5                                                       0x01
#define THERMOSTAT_FAN_MODE_SUPPORTED_GET_V5                                             0x04
#define THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_V5                                          0x05
/* Values used for Thermostat Fan Mode Report command */
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_FAN_MODE_MASK_V5                          0x0F
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_LOW_V5                                  0x00
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LOW_V5                                       0x01
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_HIGH_V5                                 0x02
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HIGH_V5                                      0x03
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_AUTO_MEDIUM_V5                               0x04
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_MEDIUM_V5                                    0x05
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_CIRCULATION_V5                               0x06
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_HUMIDITY_V5                                  0x07
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_LEFT_RIGHT_V5                                0x08
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_UP_DOWN_V5                                   0x09
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_QUIET_V5                                     0x0A
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_EXTERNAL_CIRCULATION_V5                      0x0B
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDC_V5                                 0x0C
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDD_V5                                 0x0D
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDE_V5                                 0x0E
#define THERMOSTAT_FAN_MODE_REPORT_FAN_MODE_RESERVEDF_V5                                 0x0F
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_MASK_V5                          0x70
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT_V5                         0x04
#define THERMOSTAT_FAN_MODE_REPORT_PROPERTIES1_OFF_BIT_MASK_V5                           0x80
/* Values used for Thermostat Fan Mode Set command */
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_FAN_MODE_MASK_V5                             0x0F
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_LOW_V5                                     0x00
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LOW_V5                                          0x01
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_HIGH_V5                                    0x02
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HIGH_V5                                         0x03
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_AUTO_MEDIUM_V5                                  0x04
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_MEDIUM_V5                                       0x05
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_CIRCULATION_V5                                  0x06
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_HUMIDITY_V5                                     0x07
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_LEFT_RIGHT_V5                                   0x08
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_UP_DOWN_V5                                      0x09
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_QUIET_V5                                        0x0A
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_EXTERNAL_CIRCULATION_V5                         0x0B
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDC_V5                                    0x0C
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDD_V5                                    0x0D
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDE_V5                                    0x0E
#define THERMOSTAT_FAN_MODE_SET_FAN_MODE_RESERVEDF_V5                                    0x0F
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_MASK_V5                             0x70
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_RESERVED_SHIFT_V5                            0x04
#define THERMOSTAT_FAN_MODE_SET_PROPERTIES1_OFF_BIT_MASK_V5                              0x80

/* Thermostat Fan State command class commands */
#define THERMOSTAT_FAN_STATE_VERSION                                                     0x01
#define THERMOSTAT_FAN_STATE_GET                                                         0x02
#define THERMOSTAT_FAN_STATE_REPORT                                                      0x03
/* Values used for Thermostat Fan State Report command */
#define THERMOSTAT_FAN_STATE_REPORT_LEVEL_FAN_OPERATING_STATE_MASK                       0x0F
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_IDLE                             0x00
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_RUNNING                          0x01
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_RUNNING_HIGH                     0x02
#define THERMOSTAT_FAN_STATE_REPORT_LEVEL_RESERVED_MASK                                  0xF0
#define THERMOSTAT_FAN_STATE_REPORT_LEVEL_RESERVED_SHIFT                                 0x04

/* Thermostat Fan State command class commands */
#define THERMOSTAT_FAN_STATE_VERSION_V2                                                  0x02
#define THERMOSTAT_FAN_STATE_GET_V2                                                      0x02
#define THERMOSTAT_FAN_STATE_REPORT_V2                                                   0x03
/* Values used for Thermostat Fan State Report command */
#define THERMOSTAT_FAN_STATE_REPORT_LEVEL_FAN_OPERATING_STATE_MASK_V2                    0x0F
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_IDLE_V2                          0x00
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_RUNNING_V2                       0x01
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_RUNNING_HIGH_V2                  0x02
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_RUNNING_MEDIUM_V2                0x03
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_CIRCULATION_V2                   0x04
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_HUMIDITY_CIRCULATION_V2          0x05
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_RIGHT_LEFT_CIRCULATION_V2        0x06
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_UP_DOWN_CIRCULATION_V2           0x07
#define THERMOSTAT_FAN_STATE_REPORT_FAN_OPERATING_STATE_QUIET_CIRCULATION_V2             0x08
#define THERMOSTAT_FAN_STATE_REPORT_LEVEL_RESERVED_MASK_V2                               0xF0
#define THERMOSTAT_FAN_STATE_REPORT_LEVEL_RESERVED_SHIFT_V2                              0x04

/* Thermostat Heating command class commands */
#define THERMOSTAT_HEATING_VERSION                                                       0x01
#define THERMOSTAT_HEATING_STATUS_REPORT                                                 0x0D
#define THERMOSTAT_HEATING_MODE_GET                                                      0x02
#define THERMOSTAT_HEATING_MODE_REPORT                                                   0x03
#define THERMOSTAT_HEATING_MODE_SET                                                      0x01
#define THERMOSTAT_HEATING_RELAY_STATUS_GET                                              0x09
#define THERMOSTAT_HEATING_RELAY_STATUS_REPORT                                           0x0A
#define THERMOSTAT_HEATING_SETPOINT_GET                                                  0x05
#define THERMOSTAT_HEATING_SETPOINT_REPORT                                               0x06
#define THERMOSTAT_HEATING_SETPOINT_SET                                                  0x04
#define THERMOSTAT_HEATING_STATUS_GET                                                    0x0C
#define THERMOSTAT_HEATING_STATUS_SET                                                    0x0B
#define THERMOSTAT_HEATING_TIMED_OFF_SET                                                 0x11
/* Values used for Thermostat Heating Status Report command */
#define THERMOSTAT_HEATING_STATUS_REPORT_HEATING                                         0x00
#define THERMOSTAT_HEATING_STATUS_REPORT_COOLING                                         0x01
/* Values used for Thermostat Heating Mode Report command */
#define THERMOSTAT_HEATING_MODE_REPORT_OFF                                               0x00
#define THERMOSTAT_HEATING_MODE_REPORT_OFF_TIMED                                         0x01
#define THERMOSTAT_HEATING_MODE_REPORT_OFF_3_HOURS                                       0x02
#define THERMOSTAT_HEATING_MODE_REPORT_ANTI_FREEZE                                       0x03
#define THERMOSTAT_HEATING_MODE_REPORT_MANUAL                                            0x04
#define THERMOSTAT_HEATING_MODE_REPORT_TEMPORARY_MANUAL                                  0x05
#define THERMOSTAT_HEATING_MODE_REPORT_AUTOMATIC                                         0x06
#define THERMOSTAT_HEATING_MODE_REPORT_MANUAL_TIMED                                      0x07
/* Values used for Thermostat Heating Mode Set command */
#define THERMOSTAT_HEATING_MODE_SET_OFF                                                  0x00
#define THERMOSTAT_HEATING_MODE_SET_OFF_TIMED                                            0x01
#define THERMOSTAT_HEATING_MODE_SET_OFF_3_HOURS                                          0x02
#define THERMOSTAT_HEATING_MODE_SET_ANTI_FREEZE                                          0x03
#define THERMOSTAT_HEATING_MODE_SET_MANUAL                                               0x04
#define THERMOSTAT_HEATING_MODE_SET_TEMPORARY_MANUAL                                     0x05
#define THERMOSTAT_HEATING_MODE_SET_AUTOMATIC                                            0x06
#define THERMOSTAT_HEATING_MODE_SET_MANUAL_TIMED                                         0x07
/* Values used for Thermostat Heating Relay Status Report command */
#define THERMOSTAT_HEATING_RELAY_STATUS_REPORT_OFF                                       0x00
#define THERMOSTAT_HEATING_RELAY_STATUS_REPORT_ON                                        0x01
/* Values used for Thermostat Heating Setpoint Report command */
#define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_SIZE_MASK                         0x07
#define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_SCALE_MASK                        0x18
#define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_SCALE_SHIFT                       0x03
#define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_PRECISION_MASK                    0xE0
#define THERMOSTAT_HEATING_SETPOINT_REPORT_PROPERTIES1_PRECISION_SHIFT                   0x05
/* Values used for Thermostat Heating Setpoint Set command */
#define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_SIZE_MASK                            0x07
#define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_SCALE_MASK                           0x18
#define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_SCALE_SHIFT                          0x03
#define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_PRECISION_MASK                       0xE0
#define THERMOSTAT_HEATING_SETPOINT_SET_PROPERTIES1_PRECISION_SHIFT                      0x05
/* Values used for Thermostat Heating Status Set command */
#define THERMOSTAT_HEATING_STATUS_SET_HEATING                                            0x00
#define THERMOSTAT_HEATING_STATUS_SET_COOLING                                            0x01

/* Thermostat Mode command class commands */
#define THERMOSTAT_MODE_VERSION                                                          0x01
#define THERMOSTAT_MODE_GET                                                              0x02
#define THERMOSTAT_MODE_REPORT                                                           0x03
#define THERMOSTAT_MODE_SET                                                              0x01
#define THERMOSTAT_MODE_SUPPORTED_GET                                                    0x04
#define THERMOSTAT_MODE_SUPPORTED_REPORT                                                 0x05
/* Values used for Thermostat Mode Report command */
#define THERMOSTAT_MODE_REPORT_LEVEL_MODE_MASK                                           0x1F
#define THERMOSTAT_MODE_REPORT_MODE_OFF                                                  0x00
#define THERMOSTAT_MODE_REPORT_MODE_HEAT                                                 0x01
#define THERMOSTAT_MODE_REPORT_MODE_COOL                                                 0x02
#define THERMOSTAT_MODE_REPORT_MODE_AUTO                                                 0x03
#define THERMOSTAT_MODE_REPORT_MODE_AUXILIARY_HEAT                                       0x04
#define THERMOSTAT_MODE_REPORT_MODE_RESUME                                               0x05
#define THERMOSTAT_MODE_REPORT_MODE_FAN_ONLY                                             0x06
#define THERMOSTAT_MODE_REPORT_MODE_FURNACE                                              0x07
#define THERMOSTAT_MODE_REPORT_MODE_DRY_AIR                                              0x08
#define THERMOSTAT_MODE_REPORT_MODE_MOIST_AIR                                            0x09
#define THERMOSTAT_MODE_REPORT_MODE_AUTO_CHANGEOVER                                      0x0A
#define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_MASK                                       0xE0
#define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_SHIFT                                      0x05
/* Values used for Thermostat Mode Set command */
#define THERMOSTAT_MODE_SET_LEVEL_MODE_MASK                                              0x1F
#define THERMOSTAT_MODE_SET_MODE_OFF                                                     0x00
#define THERMOSTAT_MODE_SET_MODE_HEAT                                                    0x01
#define THERMOSTAT_MODE_SET_MODE_COOL                                                    0x02
#define THERMOSTAT_MODE_SET_MODE_AUTO                                                    0x03
#define THERMOSTAT_MODE_SET_MODE_AUXILIARY_HEAT                                          0x04
#define THERMOSTAT_MODE_SET_MODE_RESUME                                                  0x05
#define THERMOSTAT_MODE_SET_MODE_FAN_ONLY                                                0x06
#define THERMOSTAT_MODE_SET_MODE_FURNACE                                                 0x07
#define THERMOSTAT_MODE_SET_MODE_DRY_AIR                                                 0x08
#define THERMOSTAT_MODE_SET_MODE_MOIST_AIR                                               0x09
#define THERMOSTAT_MODE_SET_MODE_AUTO_CHANGEOVER                                         0x0A
#define THERMOSTAT_MODE_SET_LEVEL_RESERVED_MASK                                          0xE0
#define THERMOSTAT_MODE_SET_LEVEL_RESERVED_SHIFT                                         0x05

/* Thermostat Mode command class commands */
#define THERMOSTAT_MODE_VERSION_V2                                                       0x02
#define THERMOSTAT_MODE_GET_V2                                                           0x02
#define THERMOSTAT_MODE_REPORT_V2                                                        0x03
#define THERMOSTAT_MODE_SET_V2                                                           0x01
#define THERMOSTAT_MODE_SUPPORTED_GET_V2                                                 0x04
#define THERMOSTAT_MODE_SUPPORTED_REPORT_V2                                              0x05
/* Values used for Thermostat Mode Report command */
#define THERMOSTAT_MODE_REPORT_LEVEL_MODE_MASK_V2                                        0x1F
#define THERMOSTAT_MODE_REPORT_MODE_OFF_V2                                               0x00
#define THERMOSTAT_MODE_REPORT_MODE_HEAT_V2                                              0x01
#define THERMOSTAT_MODE_REPORT_MODE_COOL_V2                                              0x02
#define THERMOSTAT_MODE_REPORT_MODE_AUTO_V2                                              0x03
#define THERMOSTAT_MODE_REPORT_MODE_AUXILIARY_HEAT_V2                                    0x04
#define THERMOSTAT_MODE_REPORT_MODE_RESUME_V2                                            0x05
#define THERMOSTAT_MODE_REPORT_MODE_FAN_ONLY_V2                                          0x06
#define THERMOSTAT_MODE_REPORT_MODE_FURNACE_V2                                           0x07
#define THERMOSTAT_MODE_REPORT_MODE_DRY_AIR_V2                                           0x08
#define THERMOSTAT_MODE_REPORT_MODE_MOIST_AIR_V2                                         0x09
#define THERMOSTAT_MODE_REPORT_MODE_AUTO_CHANGEOVER_V2                                   0x0A
#define THERMOSTAT_MODE_REPORT_MODE_ENERGY_SAVE_HEAT_V2                                  0x0B
#define THERMOSTAT_MODE_REPORT_MODE_ENERGY_SAVE_COOL_V2                                  0x0C
#define THERMOSTAT_MODE_REPORT_MODE_AWAY_V2                                              0x0D
#define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_MASK_V2                                    0xE0
#define THERMOSTAT_MODE_REPORT_LEVEL_RESERVED_SHIFT_V2                                   0x05
/* Values used for Thermostat Mode Set command */
#define THERMOSTAT_MODE_SET_LEVEL_MODE_MASK_V2                                           0x1F
#define THERMOSTAT_MODE_SET_MODE_OFF_V2                                                  0x00
#define THERMOSTAT_MODE_SET_MODE_HEAT_V2                                                 0x01
#define THERMOSTAT_MODE_SET_MODE_COOL_V2                                                 0x02
#define THERMOSTAT_MODE_SET_MODE_AUTO_V2                                                 0x03
#define THERMOSTAT_MODE_SET_MODE_AUXILIARY_HEAT_V2                                       0x04
#define THERMOSTAT_MODE_SET_MODE_RESUME_V2                                               0x05
#define THERMOSTAT_MODE_SET_MODE_FAN_ONLY_V2                                             0x06
#define THERMOSTAT_MODE_SET_MODE_FURNACE_V2                                              0x07
#define THERMOSTAT_MODE_SET_MODE_DRY_AIR_V2                                              0x08
#define THERMOSTAT_MODE_SET_MODE_MOIST_AIR_V2                                            0x09
#define THERMOSTAT_MODE_SET_MODE_AUTO_CHANGEOVER_V2                                      0x0A
#define THERMOSTAT_MODE_SET_MODE_ENERGY_SAVE_HEAT_V2                                     0x0B
#define THERMOSTAT_MODE_SET_MODE_ENERGY_SAVE_COOL_V2                                     0x0C
#define THERMOSTAT_MODE_SET_MODE_AWAY_V2                                                 0x0D
#define THERMOSTAT_MODE_SET_LEVEL_RESERVED_MASK_V2                                       0xE0
#define THERMOSTAT_MODE_SET_LEVEL_RESERVED_SHIFT_V2                                      0x05

/* Thermostat Mode command class commands */
#define THERMOSTAT_MODE_VERSION_V3                                                       0x03
#define THERMOSTAT_MODE_GET_V3                                                           0x02
#define THERMOSTAT_MODE_REPORT_V3                                                        0x03
#define THERMOSTAT_MODE_SET_V3                                                           0x01
#define THERMOSTAT_MODE_SUPPORTED_GET_V3                                                 0x04
#define THERMOSTAT_MODE_SUPPORTED_REPORT_V3                                              0x05
/* Values used for Thermostat Mode Report command */
#define THERMOSTAT_MODE_REPORT_LEVEL_MODE_MASK_V3                                        0x1F
#define THERMOSTAT_MODE_REPORT_MODE_OFF_V3                                               0x00
#define THERMOSTAT_MODE_REPORT_MODE_HEAT_V3                                              0x01
#define THERMOSTAT_MODE_REPORT_MODE_COOL_V3                                              0x02
#define THERMOSTAT_MODE_REPORT_MODE_AUTO_V3                                              0x03
#define THERMOSTAT_MODE_REPORT_MODE_AUXILIARY_HEAT_V3                                    0x04
#define THERMOSTAT_MODE_REPORT_MODE_RESUME_V3                                            0x05
#define THERMOSTAT_MODE_REPORT_MODE_FAN_ONLY_V3                                          0x06
#define THERMOSTAT_MODE_REPORT_MODE_FURNACE_V3                                           0x07
#define THERMOSTAT_MODE_REPORT_MODE_DRY_AIR_V3                                           0x08
#define THERMOSTAT_MODE_REPORT_MODE_MOIST_AIR_V3                                         0x09
#define THERMOSTAT_MODE_REPORT_MODE_AUTO_CHANGEOVER_V3                                   0x0A
#define THERMOSTAT_MODE_REPORT_MODE_ENERGY_SAVE_HEAT_V3                                  0x0B
#define THERMOSTAT_MODE_REPORT_MODE_ENERGY_SAVE_COOL_V3                                  0x0C
#define THERMOSTAT_MODE_REPORT_MODE_AWAY_V3                                              0x0D
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED_V3                                          0x0E
#define THERMOSTAT_MODE_REPORT_MODE_FULL_POWER_V3                                        0x0F
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED0_V3                                         0x10
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED1_V3                                         0x11
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED2_V3                                         0x12
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED3_V3                                         0x13
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED4_V3                                         0x14
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED5_V3                                         0x15
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED6_V3                                         0x16
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED7_V3                                         0x17
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED8_V3                                         0x18
#define THERMOSTAT_MODE_REPORT_MODE_RESERVED9_V3                                         0x19
#define THERMOSTAT_MODE_REPORT_MODE_RESERVEDA_V3                                         0x1A
#define THERMOSTAT_MODE_REPORT_MODE_RESERVEDB_V3                                         0x1B
#define THERMOSTAT_MODE_REPORT_MODE_RESERVEDC_V3                                         0x1C
#define THERMOSTAT_MODE_REPORT_MODE_RESERVEDD_V3                                         0x1D
#define THERMOSTAT_MODE_REPORT_MODE_RESERVEDE_V3                                         0x1E
#define THERMOSTAT_MODE_REPORT_MODE_MANUFACTURER_SPECIFC_V3                              0x1F
#define THERMOSTAT_MODE_REPORT_LEVEL_NO_OF_MANUFACTURER_DATA_FIELDS_MASK_V3              0xE0
#define THERMOSTAT_MODE_REPORT_LEVEL_NO_OF_MANUFACTURER_DATA_FIELDS_SHIFT_V3             0x05
/* Values used for Thermostat Mode Set command */
#define THERMOSTAT_MODE_SET_LEVEL_MODE_MASK_V3                                           0x1F
#define THERMOSTAT_MODE_SET_MODE_OFF_V3                                                  0x00
#define THERMOSTAT_MODE_SET_MODE_HEAT_V3                                                 0x01
#define THERMOSTAT_MODE_SET_MODE_COOL_V3                                                 0x02
#define THERMOSTAT_MODE_SET_MODE_AUTO_V3                                                 0x03
#define THERMOSTAT_MODE_SET_MODE_AUXILIARY_HEAT_V3                                       0x04
#define THERMOSTAT_MODE_SET_MODE_RESUME_V3                                               0x05
#define THERMOSTAT_MODE_SET_MODE_FAN_ONLY_V3                                             0x06
#define THERMOSTAT_MODE_SET_MODE_FURNACE_V3                                              0x07
#define THERMOSTAT_MODE_SET_MODE_DRY_AIR_V3                                              0x08
#define THERMOSTAT_MODE_SET_MODE_MOIST_AIR_V3                                            0x09
#define THERMOSTAT_MODE_SET_MODE_AUTO_CHANGEOVER_V3                                      0x0A
#define THERMOSTAT_MODE_SET_MODE_ENERGY_SAVE_HEAT_V3                                     0x0B
#define THERMOSTAT_MODE_SET_MODE_ENERGY_SAVE_COOL_V3                                     0x0C
#define THERMOSTAT_MODE_SET_MODE_AWAY_V3                                                 0x0D
#define THERMOSTAT_MODE_SET_MODE_RESERVED_V3                                             0x0E
#define THERMOSTAT_MODE_SET_MODE_FULL_POWER_V3                                           0x0F
#define THERMOSTAT_MODE_SET_MODE_RESERVED0_V3                                            0x10
#define THERMOSTAT_MODE_SET_MODE_RESERVED1_V3                                            0x11
#define THERMOSTAT_MODE_SET_MODE_RESERVED2_V3                                            0x12
#define THERMOSTAT_MODE_SET_MODE_RESERVED3_V3                                            0x13
#define THERMOSTAT_MODE_SET_MODE_RESERVED4_V3                                            0x14
#define THERMOSTAT_MODE_SET_MODE_RESERVED5_V3                                            0x15
#define THERMOSTAT_MODE_SET_MODE_RESERVED6_V3                                            0x16
#define THERMOSTAT_MODE_SET_MODE_RESERVED7_V3                                            0x17
#define THERMOSTAT_MODE_SET_MODE_RESERVED8_V3                                            0x18
#define THERMOSTAT_MODE_SET_MODE_RESERVED9_V3                                            0x19
#define THERMOSTAT_MODE_SET_MODE_RESERVEDA_V3                                            0x1A
#define THERMOSTAT_MODE_SET_MODE_RESERVEDB_V3                                            0x1B
#define THERMOSTAT_MODE_SET_MODE_RESERVEDC_V3                                            0x1C
#define THERMOSTAT_MODE_SET_MODE_RESERVEDD_V3                                            0x1D
#define THERMOSTAT_MODE_SET_MODE_RESERVEDE_V3                                            0x1E
#define THERMOSTAT_MODE_SET_MODE_MANUFACTURER_SPECIFC_V3                                 0x1F
#define THERMOSTAT_MODE_SET_LEVEL_NO_OF_MANUFACTURER_DATA_FIELDS_MASK_V3                 0xE0
#define THERMOSTAT_MODE_SET_LEVEL_NO_OF_MANUFACTURER_DATA_FIELDS_SHIFT_V3                0x05

/* Thermostat Operating State command class commands */
#define THERMOSTAT_OPERATING_STATE_VERSION                                               0x01
#define THERMOSTAT_OPERATING_STATE_GET                                                   0x02
#define THERMOSTAT_OPERATING_STATE_REPORT                                                0x03
/* Values used for Thermostat Operating State Report command */
#define THERMOSTAT_OPERATING_STATE_REPORT_LEVEL_OPERATING_STATE_MASK                     0x0F
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_IDLE                           0x00
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_HEATING                        0x01
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_COOLING                        0x02
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_FAN_ONLY                       0x03
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_HEAT                   0x04
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_COOL                   0x05
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_VENT_ECONOMIZER                0x06
#define THERMOSTAT_OPERATING_STATE_REPORT_LEVEL_RESERVED_MASK                            0xF0
#define THERMOSTAT_OPERATING_STATE_REPORT_LEVEL_RESERVED_SHIFT                           0x04

/* Thermostat Operating State command class commands */
#define THERMOSTAT_OPERATING_STATE_VERSION_V2                                            0x02
#define THERMOSTAT_OPERATING_STATE_GET_V2                                                0x02
#define THERMOSTAT_OPERATING_STATE_REPORT_V2                                             0x03
#define THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2                              0x01
#define THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_V2                                 0x04
#define THERMOSTAT_OPERATING_STATE_LOGGING_GET_V2                                        0x05
#define THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2                                     0x06
/* Values used for Thermostat Operating State Report command */
#define THERMOSTAT_OPERATING_STATE_REPORT_PROPERTIES1_OPERATING_STATE_MASK_V2            0x0F
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_IDLE_V2                        0x00
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_HEATING_V2                     0x01
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_COOLING_V2                     0x02
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_FAN_ONLY_V2                    0x03
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_HEAT_V2                0x04
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_PENDING_COOL_V2                0x05
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_VENT_ECONOMIZER_V2             0x06
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_AUX_HEATING_V2                 0x07
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_2ND_STAGE_HEATING_V2           0x08
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_2ND_STAGE_COOLING_V2           0x09
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_2ND_STAGE_AUX_HEAT_V2          0x0A
#define THERMOSTAT_OPERATING_STATE_REPORT_OPERATING_STATE_3RD_STAGE_AUX_HEAT_V2          0x0B
#define THERMOSTAT_OPERATING_STATE_REPORT_PROPERTIES1_RESERVED_MASK_V2                   0xF0
#define THERMOSTAT_OPERATING_STATE_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                  0x04

/* Thermostat Setback command class commands */
#define THERMOSTAT_SETBACK_VERSION                                                       0x01
#define THERMOSTAT_SETBACK_GET                                                           0x02
#define THERMOSTAT_SETBACK_REPORT                                                        0x03
#define THERMOSTAT_SETBACK_SET                                                           0x01
/* Values used for Thermostat Setback Report command */
#define THERMOSTAT_SETBACK_REPORT_PROPERTIES1_SETBACK_TYPE_MASK                          0x03
#define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_NO_OVERRIDE                               0x00
#define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_TEMPORARY_OVERRIDE                        0x01
#define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_PERMANENT_OVERRIDE                        0x02
#define THERMOSTAT_SETBACK_REPORT_SETBACK_TYPE_RESERVED                                  0x03
#define THERMOSTAT_SETBACK_REPORT_PROPERTIES1_RESERVED_MASK                              0xFC
#define THERMOSTAT_SETBACK_REPORT_PROPERTIES1_RESERVED_SHIFT                             0x02
/* Values used for Thermostat Setback Set command */
#define THERMOSTAT_SETBACK_SET_PROPERTIES1_SETBACK_TYPE_MASK                             0x03
#define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_NO_OVERRIDE                                  0x00
#define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_TEMPORARY_OVERRIDE                           0x01
#define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_PERMANENT_OVERRIDE                           0x02
#define THERMOSTAT_SETBACK_SET_SETBACK_TYPE_RESERVED                                     0x03
#define THERMOSTAT_SETBACK_SET_PROPERTIES1_RESERVED_MASK                                 0xFC
#define THERMOSTAT_SETBACK_SET_PROPERTIES1_RESERVED_SHIFT                                0x02

/* Thermostat Setpoint command class commands */
#define THERMOSTAT_SETPOINT_VERSION                                                      0x01
#define THERMOSTAT_SETPOINT_GET                                                          0x02
#define THERMOSTAT_SETPOINT_REPORT                                                       0x03
#define THERMOSTAT_SETPOINT_SET                                                          0x01
#define THERMOSTAT_SETPOINT_SUPPORTED_GET                                                0x04
#define THERMOSTAT_SETPOINT_SUPPORTED_REPORT                                             0x05
/* Values used for Thermostat Setpoint Get command */
#define THERMOSTAT_SETPOINT_GET_LEVEL_SETPOINT_TYPE_MASK                                 0x0F
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED                              0x00
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_HEATING_1                                  0x01
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_COOLING_1                                  0x02
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED1                             0x03
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED2                             0x04
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED3                             0x05
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED4                             0x06
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_FURNACE                                    0x07
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_DRY_AIR                                    0x08
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_MOIST_AIR                                  0x09
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AUTO_CHANGEOVER                            0x0A
#define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_MASK                                      0xF0
#define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_SHIFT                                     0x04
/* Values used for Thermostat Setpoint Report command */
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_SETPOINT_TYPE_MASK                              0x0F
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED                           0x00
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_HEATING_1                               0x01
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_COOLING_1                               0x02
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED1                          0x03
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED2                          0x04
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED3                          0x05
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED4                          0x06
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_FURNACE                                 0x07
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_DRY_AIR                                 0x08
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_MOIST_AIR                               0x09
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AUTO_CHANGEOVER                         0x0A
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_MASK                                   0xF0
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_SHIFT                                  0x04
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SIZE_MASK                                      0x07
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_MASK                                     0x18
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_SHIFT                                    0x03
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_MASK                                 0xE0
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_SHIFT                                0x05
/* Values used for Thermostat Setpoint Set command */
#define THERMOSTAT_SETPOINT_SET_LEVEL_SETPOINT_TYPE_MASK                                 0x0F
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED                              0x00
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_HEATING_1                                  0x01
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_COOLING_1                                  0x02
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED1                             0x03
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED2                             0x04
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED3                             0x05
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED4                             0x06
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_FURNACE                                    0x07
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_DRY_AIR                                    0x08
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_MOIST_AIR                                  0x09
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AUTO_CHANGEOVER                            0x0A
#define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_MASK                                      0xF0
#define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_SHIFT                                     0x04
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SIZE_MASK                                         0x07
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_MASK                                        0x18
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_SHIFT                                       0x03
#define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_MASK                                    0xE0
#define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_SHIFT                                   0x05

/* Thermostat Setpoint command class commands */
#define THERMOSTAT_SETPOINT_VERSION_V2                                                   0x02
#define THERMOSTAT_SETPOINT_GET_V2                                                       0x02
#define THERMOSTAT_SETPOINT_REPORT_V2                                                    0x03
#define THERMOSTAT_SETPOINT_SET_V2                                                       0x01
#define THERMOSTAT_SETPOINT_SUPPORTED_GET_V2                                             0x04
#define THERMOSTAT_SETPOINT_SUPPORTED_REPORT_V2                                          0x05
/* Values used for Thermostat Setpoint Get command */
#define THERMOSTAT_SETPOINT_GET_LEVEL_SETPOINT_TYPE_MASK_V2                              0x0F
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED_V2                           0x00
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_HEATING_1_V2                               0x01
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_COOLING_1_V2                               0x02
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED1_V2                          0x03
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED2_V2                          0x04
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED3_V2                          0x05
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED4_V2                          0x06
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_FURNACE_V2                                 0x07
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_DRY_AIR_V2                                 0x08
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_MOIST_AIR_V2                               0x09
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AUTO_CHANGEOVER_V2                         0x0A
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V2                     0x0B
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V2                     0x0C
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AWAY_HEATING_V2                            0x0D
#define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_MASK_V2                                   0xF0
#define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_SHIFT_V2                                  0x04
/* Values used for Thermostat Setpoint Report command */
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_SETPOINT_TYPE_MASK_V2                           0x0F
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED_V2                        0x00
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_HEATING_1_V2                            0x01
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_COOLING_1_V2                            0x02
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED1_V2                       0x03
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED2_V2                       0x04
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED3_V2                       0x05
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED4_V2                       0x06
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_FURNACE_V2                              0x07
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_DRY_AIR_V2                              0x08
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_MOIST_AIR_V2                            0x09
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AUTO_CHANGEOVER_V2                      0x0A
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V2                  0x0B
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V2                  0x0C
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AWAY_HEATING_V2                         0x0D
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_MASK_V2                                0xF0
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_SHIFT_V2                               0x04
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SIZE_MASK_V2                                   0x07
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_MASK_V2                                  0x18
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_SHIFT_V2                                 0x03
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_MASK_V2                              0xE0
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_SHIFT_V2                             0x05
/* Values used for Thermostat Setpoint Set command */
#define THERMOSTAT_SETPOINT_SET_LEVEL_SETPOINT_TYPE_MASK_V2                              0x0F
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED_V2                           0x00
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_HEATING_1_V2                               0x01
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_COOLING_1_V2                               0x02
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED1_V2                          0x03
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED2_V2                          0x04
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED3_V2                          0x05
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED4_V2                          0x06
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_FURNACE_V2                                 0x07
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_DRY_AIR_V2                                 0x08
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_MOIST_AIR_V2                               0x09
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AUTO_CHANGEOVER_V2                         0x0A
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V2                     0x0B
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V2                     0x0C
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AWAY_HEATING_V2                            0x0D
#define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_MASK_V2                                   0xF0
#define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_SHIFT_V2                                  0x04
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SIZE_MASK_V2                                      0x07
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_MASK_V2                                     0x18
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_SHIFT_V2                                    0x03
#define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_MASK_V2                                 0xE0
#define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_SHIFT_V2                                0x05

/* Thermostat Setpoint command class commands */
#define THERMOSTAT_SETPOINT_VERSION_V3                                                   0x03
#define THERMOSTAT_SETPOINT_GET_V3                                                       0x02
#define THERMOSTAT_SETPOINT_REPORT_V3                                                    0x03
#define THERMOSTAT_SETPOINT_SET_V3                                                       0x01
#define THERMOSTAT_SETPOINT_SUPPORTED_GET_V3                                             0x04
#define THERMOSTAT_SETPOINT_SUPPORTED_REPORT_V3                                          0x05
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_V3                                          0x09
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_V3                                       0x0A
/* Values used for Thermostat Setpoint Get command */
#define THERMOSTAT_SETPOINT_GET_LEVEL_SETPOINT_TYPE_MASK_V3                              0x0F
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED_V3                           0x00
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_HEATING_1_V3                               0x01
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_COOLING_1_V3                               0x02
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED1_V3                          0x03
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED2_V3                          0x04
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED3_V3                          0x05
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_NOT_SUPPORTED4_V3                          0x06
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_FURNACE_V3                                 0x07
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_DRY_AIR_V3                                 0x08
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_MOIST_AIR_V3                               0x09
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AUTO_CHANGEOVER_V3                         0x0A
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V3                     0x0B
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V3                     0x0C
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AWAY_HEATING_V3                            0x0D
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_AWAY_COOLING_V3                            0x0E
#define THERMOSTAT_SETPOINT_GET_SETPOINT_TYPE_FULL_POWER_V3                              0x0F
#define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_MASK_V3                                   0xF0
#define THERMOSTAT_SETPOINT_GET_LEVEL_RESERVED_SHIFT_V3                                  0x04
/* Values used for Thermostat Setpoint Report command */
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_SETPOINT_TYPE_MASK_V3                           0x0F
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED_V3                        0x00
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_HEATING_1_V3                            0x01
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_COOLING_1_V3                            0x02
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED1_V3                       0x03
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED2_V3                       0x04
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED3_V3                       0x05
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_NOT_SUPPORTED4_V3                       0x06
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_FURNACE_V3                              0x07
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_DRY_AIR_V3                              0x08
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_MOIST_AIR_V3                            0x09
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AUTO_CHANGEOVER_V3                      0x0A
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V3                  0x0B
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V3                  0x0C
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AWAY_HEATING_V3                         0x0D
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_AWAY_COOLING_V3                         0x0E
#define THERMOSTAT_SETPOINT_REPORT_SETPOINT_TYPE_FULL_POWER_V3                           0x0F
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_MASK_V3                                0xF0
#define THERMOSTAT_SETPOINT_REPORT_LEVEL_RESERVED_SHIFT_V3                               0x04
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SIZE_MASK_V3                                   0x07
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_MASK_V3                                  0x18
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_SCALE_SHIFT_V3                                 0x03
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_MASK_V3                              0xE0
#define THERMOSTAT_SETPOINT_REPORT_LEVEL2_PRECISION_SHIFT_V3                             0x05
/* Values used for Thermostat Setpoint Set command */
#define THERMOSTAT_SETPOINT_SET_LEVEL_SETPOINT_TYPE_MASK_V3                              0x0F
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED_V3                           0x00
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_HEATING_1_V3                               0x01
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_COOLING_1_V3                               0x02
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED1_V3                          0x03
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED2_V3                          0x04
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED3_V3                          0x05
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_NOT_SUPPORTED4_V3                          0x06
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_FURNACE_V3                                 0x07
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_DRY_AIR_V3                                 0x08
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_MOIST_AIR_V3                               0x09
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AUTO_CHANGEOVER_V3                         0x0A
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V3                     0x0B
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V3                     0x0C
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AWAY_HEATING_V3                            0x0D
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_AWAY_COOLING_V3                            0x0E
#define THERMOSTAT_SETPOINT_SET_SETPOINT_TYPE_FULL_POWER_V3                              0x0F
#define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_MASK_V3                                   0xF0
#define THERMOSTAT_SETPOINT_SET_LEVEL_RESERVED_SHIFT_V3                                  0x04
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SIZE_MASK_V3                                      0x07
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_MASK_V3                                     0x18
#define THERMOSTAT_SETPOINT_SET_LEVEL2_SCALE_SHIFT_V3                                    0x03
#define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_MASK_V3                                 0xE0
#define THERMOSTAT_SETPOINT_SET_LEVEL2_PRECISION_SHIFT_V3                                0x05
/* Values used for Thermostat Setpoint Capabilities Get command */
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_PROPERTIES1_SETPOINT_TYPE_MASK_V3           0x0F
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_NOT_SUPPORTED_V3              0x00
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_HEATING_1_V3                  0x01
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_COOLING_1_V3                  0x02
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_NOT_SUPPORTED1_V3             0x03
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_NOT_SUPPORTED2_V3             0x04
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_NOT_SUPPORTED3_V3             0x05
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_NOT_SUPPORTED4_V3             0x06
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_FURNACE_V3                    0x07
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_DRY_AIR_V3                    0x08
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_MOIST_AIR_V3                  0x09
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_AUTO_CHANGEOVER_V3            0x0A
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V3        0x0B
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V3        0x0C
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_AWAY_HEATING_V3               0x0D
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_AWAY_COOLING_V3               0x0E
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_FULL_POWER_V3                 0x0F
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_PROPERTIES1_RESERVED_MASK_V3                0xF0
#define THERMOSTAT_SETPOINT_CAPABILITIES_GET_PROPERTIES1_RESERVED_SHIFT_V3               0x04
/* Values used for Thermostat Setpoint Capabilities Report command */
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_SETPOINT_TYPE_MASK_V3        0x0F
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_NOT_SUPPORTED_V3           0x00
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_HEATING_1_V3               0x01
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_COOLING_1_V3               0x02
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_NOT_SUPPORTED1_V3          0x03
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_NOT_SUPPORTED2_V3          0x04
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_NOT_SUPPORTED3_V3          0x05
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_NOT_SUPPORTED4_V3          0x06
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_FURNACE_V3                 0x07
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_DRY_AIR_V3                 0x08
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_MOIST_AIR_V3               0x09
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_AUTO_CHANGEOVER_V3         0x0A
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_ENERGY_SAVE_HEATING_V3     0x0B
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_ENERGY_SAVE_COOLING_V3     0x0C
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_AWAY_HEATING_V3            0x0D
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_AWAY_COOLING_V3            0x0E
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_FULL_POWER_V3              0x0F
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK_V3             0xF0
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_SHIFT_V3            0x04
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SIZE1_MASK_V3                0x07
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SCALE1_MASK_V3               0x18
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SCALE1_SHIFT_V3              0x03
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_PRECISION1_MASK_V3           0xE0
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_PRECISION1_SHIFT_V3          0x05
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SIZE2_MASK_V3                0x07
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SCALE2_MASK_V3               0x18
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SCALE2_SHIFT_V3              0x03
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_PRECISION2_MASK_V3           0xE0
#define THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_PRECISION2_SHIFT_V3          0x05

/* Time Parameters command class commands */
#define TIME_PARAMETERS_VERSION                                                          0x01
#define TIME_PARAMETERS_GET                                                              0x02
#define TIME_PARAMETERS_REPORT                                                           0x03
#define TIME_PARAMETERS_SET                                                              0x01

/* Time command class commands */
#define TIME_VERSION                                                                     0x01
#define DATE_GET                                                                         0x03
#define DATE_REPORT                                                                      0x04
#define TIME_GET                                                                         0x01
#define TIME_REPORT                                                                      0x02
/* Values used for Time Report command */
#define TIME_REPORT_PROPERTIES1_HOUR_LOCAL_TIME_MASK                                     0x1F
#define TIME_REPORT_PROPERTIES1_RESERVED_MASK                                            0x60
#define TIME_REPORT_PROPERTIES1_RESERVED_SHIFT                                           0x05
#define TIME_REPORT_PROPERTIES1_RTC_FAILURE_BIT_MASK                                     0x80

/* Time command class commands */
#define TIME_VERSION_V2                                                                  0x02
#define DATE_GET_V2                                                                      0x03
#define DATE_REPORT_V2                                                                   0x04
#define TIME_GET_V2                                                                      0x01
#define TIME_OFFSET_GET_V2                                                               0x06
#define TIME_OFFSET_REPORT_V2                                                            0x07
#define TIME_OFFSET_SET_V2                                                               0x05
#define TIME_REPORT_V2                                                                   0x02
/* Values used for Time Offset Report command */
#define TIME_OFFSET_REPORT_LEVEL_HOUR_TZO_MASK_V2                                        0x7F
#define TIME_OFFSET_REPORT_LEVEL_SIGN_TZO_BIT_MASK_V2                                    0x80
#define TIME_OFFSET_REPORT_LEVEL2_MINUTE_OFFSET_DST_MASK_V2                              0x7F
#define TIME_OFFSET_REPORT_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2                            0x80
/* Values used for Time Offset Set command */
#define TIME_OFFSET_SET_LEVEL_HOUR_TZO_MASK_V2                                           0x7F
#define TIME_OFFSET_SET_LEVEL_SIGN_TZO_BIT_MASK_V2                                       0x80
#define TIME_OFFSET_SET_LEVEL2_MINUTE_OFFSET_DST_MASK_V2                                 0x7F
#define TIME_OFFSET_SET_LEVEL2_SIGN_OFFSET_DST_BIT_MASK_V2                               0x80
/* Values used for Time Report command */
#define TIME_REPORT_PROPERTIES1_HOUR_LOCAL_TIME_MASK_V2                                  0x1F
#define TIME_REPORT_PROPERTIES1_RESERVED_MASK_V2                                         0x60
#define TIME_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                        0x05
#define TIME_REPORT_PROPERTIES1_RTC_FAILURE_BIT_MASK_V2                                  0x80

/* Transport Service command class commands */
#define TRANSPORT_SERVICE_VERSION_V2                                                     0x02
#define COMMAND_FIRST_SEGMENT_V2                                                         0xC0
#define COMMAND_SEGMENT_COMPLETE_V2                                                      0xE8
#define COMMAND_SEGMENT_REQUEST_V2                                                       0xC8
#define COMMAND_SEGMENT_WAIT_V2                                                          0xF0
#define COMMAND_SUBSEQUENT_SEGMENT_V2                                                    0xE0
/* Values used for Command First Segment command */
#define COMMAND_FIRST_SEGMENT_MASK_V2                                                    0xF8
#define COMMAND_FIRST_SEGMENT_DATAGRAM_SIZE_1_MASK_V2                                    0x07
#define COMMAND_FIRST_SEGMENT_PROPERTIES2_RESERVED_MASK_V2                               0x07
#define COMMAND_FIRST_SEGMENT_PROPERTIES2_EXT_BIT_MASK_V2                                0x08
#define COMMAND_FIRST_SEGMENT_PROPERTIES2_SESSION_ID_MASK_V2                             0xF0
#define COMMAND_FIRST_SEGMENT_PROPERTIES2_SESSION_ID_SHIFT_V2                            0x04
/* Values used for Command Segment Complete command */
#define COMMAND_SEGMENT_COMPLETE_MASK_V2                                                 0xF8
#define COMMAND_SEGMENT_COMPLETE_RESERVED_MASK_V2                                        0x07
#define COMMAND_SEGMENT_COMPLETE_PROPERTIES2_RESERVED2_MASK_V2                           0x0F
#define COMMAND_SEGMENT_COMPLETE_PROPERTIES2_SESSION_ID_MASK_V2                          0xF0
#define COMMAND_SEGMENT_COMPLETE_PROPERTIES2_SESSION_ID_SHIFT_V2                         0x04
/* Values used for Command Segment Request command */
#define COMMAND_SEGMENT_REQUEST_MASK_V2                                                  0xF8
#define COMMAND_SEGMENT_REQUEST_RESERVED_MASK_V2                                         0x07
#define COMMAND_SEGMENT_REQUEST_PROPERTIES2_DATAGRAM_OFFSET_1_MASK_V2                    0x07
#define COMMAND_SEGMENT_REQUEST_PROPERTIES2_RESERVED2_BIT_MASK_V2                        0x08
#define COMMAND_SEGMENT_REQUEST_PROPERTIES2_SESSION_ID_MASK_V2                           0xF0
#define COMMAND_SEGMENT_REQUEST_PROPERTIES2_SESSION_ID_SHIFT_V2                          0x04
/* Values used for Command Segment Wait command */
#define COMMAND_SEGMENT_WAIT_MASK_V2                                                     0xF8
#define COMMAND_SEGMENT_WAIT_RESERVED_MASK_V2                                            0x07
/* Values used for Command Subsequent Segment command */
#define COMMAND_SUBSEQUENT_SEGMENT_MASK_V2                                               0xF8
#define COMMAND_SUBSEQUENT_SEGMENT_DATAGRAM_SIZE_1_MASK_V2                               0x07
#define COMMAND_SUBSEQUENT_SEGMENT_PROPERTIES2_DATAGRAM_OFFSET_1_MASK_V2                 0x07
#define COMMAND_SUBSEQUENT_SEGMENT_PROPERTIES2_EXT_BIT_MASK_V2                           0x08
#define COMMAND_SUBSEQUENT_SEGMENT_PROPERTIES2_SESSION_ID_MASK_V2                        0xF0
#define COMMAND_SUBSEQUENT_SEGMENT_PROPERTIES2_SESSION_ID_SHIFT_V2                       0x04

/* Transport Service command class commands */
#define TRANSPORT_SERVICE_VERSION                                                        0x01
#define COMMAND_FIRST_FRAGMENT                                                           0xC0
#define COMMAND_SUBSEQUENT_FRAGMENT                                                      0xE0
/* Values used for Command First Fragment command */
#define COMMAND_FIRST_FRAGMENT_MASK                                                      0xF8
#define COMMAND_FIRST_FRAGMENT_DATAGRAM_SIZE_1_MASK                                      0x07
#define COMMAND_FIRST_FRAGMENT_PROPERTIES2_SEQUENCE_NO_MASK                              0x0F
#define COMMAND_FIRST_FRAGMENT_PROPERTIES2_RESERVED_MASK                                 0xF0
#define COMMAND_FIRST_FRAGMENT_PROPERTIES2_RESERVED_SHIFT                                0x04
/* Values used for Command Subsequent Fragment command */
#define COMMAND_SUBSEQUENT_FRAGMENT_MASK                                                 0xF8
#define COMMAND_SUBSEQUENT_FRAGMENT_DATAGRAM_SIZE_1_MASK                                 0x07
#define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_DATAGRAM_OFFSET_1_MASK                   0x07
#define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_SEQUENCE_NO_MASK                         0x78
#define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_SEQUENCE_NO_SHIFT                        0x03
#define COMMAND_SUBSEQUENT_FRAGMENT_PROPERTIES2_RESERVED_BIT_MASK                        0x80

/* User Code command class commands */
#define USER_CODE_VERSION                                                                0x01
#define USER_CODE_GET                                                                    0x02
#define USER_CODE_REPORT                                                                 0x03
#define USER_CODE_SET                                                                    0x01
#define USERS_NUMBER_GET                                                                 0x04
#define USERS_NUMBER_REPORT                                                              0x05
/* Values used for User Code Report command */
#define USER_CODE_REPORT_AVAILABLE_NOT_SET                                               0x00
#define USER_CODE_REPORT_OCCUPIED                                                        0x01
#define USER_CODE_REPORT_RESERVED_BY_ADMINISTRATOR                                       0x02
#define USER_CODE_REPORT_STATUS_NOT_AVAILABLE                                            0xFE
/* Values used for User Code Set command */
#define USER_CODE_SET_AVAILABLE_NOT_SET                                                  0x00
#define USER_CODE_SET_OCCUPIED                                                           0x01
#define USER_CODE_SET_RESERVED_BY_ADMINISTRATOR                                          0x02
#define USER_CODE_SET_STATUS_NOT_AVAILABLE                                               0xFE

/* User Code command class commands */
#define USER_CODE_VERSION_V2                                                             0x02
#define USER_CODE_GET_V2                                                                 0x02
#define USER_CODE_REPORT_V2                                                              0x03
#define USER_CODE_SET_V2                                                                 0x01
#define USERS_NUMBER_GET_V2                                                              0x04
#define USERS_NUMBER_REPORT_V2                                                           0x05
#define EXTENDED_USER_CODE_SET_V2                                                        0x0B
#define EXTENDED_USER_CODE_GET_V2                                                        0x0C
#define EXTENDED_USER_CODE_REPORT_V2                                                     0x0D
#define USER_CODE_CAPABILITIES_GET_V2                                                    0x06
#define USER_CODE_CAPABILITIES_REPORT_V2                                                 0x07
#define USER_CODE_KEYPAD_MODE_SET_V2                                                     0x08
#define USER_CODE_KEYPAD_MODE_GET_V2                                                     0x09
#define USER_CODE_KEYPAD_MODE_REPORT_V2                                                  0x0A
#define ADMIN_CODE_SET_V2                                                                0x0E
#define ADMIN_CODE_GET_V2                                                                0x0F
#define ADMIN_CODE_REPORT_V2                                                             0x10
#define USER_CODE_CHECKSUM_GET_V2                                                        0x11
#define USER_CODE_CHECKSUM_REPORT_V2                                                     0x12
/* Values used for User Code Report command */
#define USER_CODE_REPORT_AVAILABLE_V2                                                    0x00
#define USER_CODE_REPORT_ENABLED_GRANT_ACCESS_V2                                         0x01
#define USER_CODE_REPORT_DISABLED_V2                                                     0x02
#define USER_CODE_REPORT_MESSAGING_V2                                                    0x03
#define USER_CODE_REPORT_PASSAGE_MODE_V2                                                 0x04
#define USER_CODE_REPORT_STATUS_NOT_AVAILABLE_V2                                         0xFE
/* Values used for User Code Set command */
#define USER_CODE_SET_AVAILABLE_V2                                                       0x00
#define USER_CODE_SET_ENABLED_GRANT_ACCESS_V2                                            0x01
#define USER_CODE_SET_DISABLED_V2                                                        0x02
#define USER_CODE_SET_MESSAGING_V2                                                       0x03
#define USER_CODE_SET_PASSAGE_MODE_V2                                                    0x04
#define USER_CODE_SET_STATUS_NOT_AVAILABLE_V2                                            0xFE
/* Values used for Extended User Code Set command */
#define EXTENDED_USER_CODE_SET_AVAILABLE_V2                                              0x00
#define EXTENDED_USER_CODE_SET_ENABLED_GRANT_ACCESS_V2                                   0x01
#define EXTENDED_USER_CODE_SET_DISABLED_V2                                               0x02
#define EXTENDED_USER_CODE_SET_MESSAGING_V2                                              0x03
#define EXTENDED_USER_CODE_SET_PASSAGE_MODE_V2                                           0x04
#define EXTENDED_USER_CODE_SET_STATUS_NOT_AVAILABLE_V2                                   0xFE
/* Values used for Extended User Code Get command */
#define EXTENDED_USER_CODE_GET_PROPERTIES1_REPORT_MORE_BIT_MASK_V2                       0x01
#define EXTENDED_USER_CODE_GET_PROPERTIES1_RESERVED_MASK_V2                              0xFE
#define EXTENDED_USER_CODE_GET_PROPERTIES1_RESERVED_SHIFT_V2                             0x01
/* Values used for Extended User Code Report command */
#define EXTENDED_USER_CODE_REPORT_AVAILABLE_V2                                           0x00
#define EXTENDED_USER_CODE_REPORT_ENABLED_GRANT_ACCESS_V2                                0x01
#define EXTENDED_USER_CODE_REPORT_DISABLED_V2                                            0x02
#define EXTENDED_USER_CODE_REPORT_MESSAGING_V2                                           0x03
#define EXTENDED_USER_CODE_REPORT_PASSAGE_MODE_V2                                        0x04
#define EXTENDED_USER_CODE_REPORT_STATUS_NOT_AVAILABLE_V2                                0xFE
/* Values used for User Code Capabilities Report command */
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES1_SUPPORTED_USER_ID_STATUS_BIT_MASK_LENGTH_MASK_V2 0x1F
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES1_RESERVED1_BIT_MASK_V2                  0x20
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES1_ACD_SUPPORT_BIT_MASK_V2                0x40
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES1_AC_SUPPORT_BIT_MASK_V2                 0x80
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES2_SUPPORTED_KEYPAD_MODES_BIT_MASK_LENGTH_MASK_V2 0x1F
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES2_MUCS_SUPPORT_BIT_MASK_V2               0x20
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES2_MUCR_SUPPORT_BIT_MASK_V2               0x40
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES2_UCC_SUPPORT_BIT_MASK_V2                0x80
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES3_SUPPORTED_KEYS_BIT_MASK_LENGTH_MASK_V2 0x1F
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES3_RESERVED2_MASK_V2                      0xE0
#define USER_CODE_CAPABILITIES_REPORT_PROPERTIES3_RESERVED2_SHIFT_V2                     0x05
/* Values used for User Code Keypad Mode Set command */
#define USER_CODE_KEYPAD_MODE_SET_NORMAL_MODE_V2                                         0x00
#define USER_CODE_KEYPAD_MODE_SET_VACATION_MODE_V2                                       0x01
#define USER_CODE_KEYPAD_MODE_SET_PRIVACY_MODE_V2                                        0x02
#define USER_CODE_KEYPAD_MODE_SET_LOCKED_OUT_MODE_V2                                     0x03
/* Values used for User Code Keypad Mode Report command */
#define USER_CODE_KEYPAD_MODE_REPORT_NORMAL_MODE_V2                                      0x00
#define USER_CODE_KEYPAD_MODE_REPORT_VACATION_MODE_V2                                    0x01
#define USER_CODE_KEYPAD_MODE_REPORT_PRIVACY_MODE_V2                                     0x02
#define USER_CODE_KEYPAD_MODE_REPORT_LOCKED_OUT_MODE_V2                                  0x03
/* Values used for Admin Code Set command */
#define ADMIN_CODE_SET_PROPERTIES1_ADMIN_CODE_LENGTH_MASK_V2                             0x0F
#define ADMIN_CODE_SET_PROPERTIES1_RESERVED_MASK_V2                                      0xF0
#define ADMIN_CODE_SET_PROPERTIES1_RESERVED_SHIFT_V2                                     0x04
/* Values used for Admin Code Report command */
#define ADMIN_CODE_REPORT_PROPERTIES1_ADMIN_CODE_LENGTH_MASK_V2                          0x0F
#define ADMIN_CODE_REPORT_PROPERTIES1_RESERVED_MASK_V2                                   0xF0
#define ADMIN_CODE_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                  0x04

/* Version command class commands */
#define VERSION_VERSION                                                                  0x01
#define VERSION_COMMAND_CLASS_GET                                                        0x13
#define VERSION_COMMAND_CLASS_REPORT                                                     0x14
#define VERSION_GET                                                                      0x11
#define VERSION_REPORT                                                                   0x12

/* Version command class commands */
#define VERSION_VERSION_V2                                                               0x02
#define VERSION_COMMAND_CLASS_GET_V2                                                     0x13
#define VERSION_COMMAND_CLASS_REPORT_V2                                                  0x14
#define VERSION_GET_V2                                                                   0x11
#define VERSION_REPORT_V2                                                                0x12

/* Version command class commands */
#define VERSION_VERSION_V3                                                               0x03
#define VERSION_COMMAND_CLASS_GET_V3                                                     0x13
#define VERSION_COMMAND_CLASS_REPORT_V3                                                  0x14
#define VERSION_GET_V3                                                                   0x11
#define VERSION_REPORT_V3                                                                0x12
#define VERSION_CAPABILITIES_GET_V3                                                      0x15
#define VERSION_CAPABILITIES_REPORT_V3                                                   0x16
#define VERSION_ZWAVE_SOFTWARE_GET_V3                                                    0x17
#define VERSION_ZWAVE_SOFTWARE_REPORT_V3                                                 0x18
/* Values used for Version Capabilities Report command */
#define VERSION_CAPABILITIES_REPORT_PROPERTIES1_VERSION_BIT_MASK_V3                      0x01
#define VERSION_CAPABILITIES_REPORT_PROPERTIES1_COMMAND_CLASS_BIT_MASK_V3                0x02
#define VERSION_CAPABILITIES_REPORT_PROPERTIES1_Z_WAVE_SOFTWARE_BIT_MASK_V3              0x04
#define VERSION_CAPABILITIES_REPORT_PROPERTIES1_RESERVED1_MASK_V3                        0xF8
#define VERSION_CAPABILITIES_REPORT_PROPERTIES1_RESERVED1_SHIFT_V3                       0x03

/* Wake Up command class commands */
#define WAKE_UP_VERSION                                                                  0x01
#define WAKE_UP_INTERVAL_GET                                                             0x05
#define WAKE_UP_INTERVAL_REPORT                                                          0x06
#define WAKE_UP_INTERVAL_SET                                                             0x04
#define WAKE_UP_NO_MORE_INFORMATION                                                      0x08
#define WAKE_UP_NOTIFICATION                                                             0x07

/* Wake Up command class commands */
#define WAKE_UP_VERSION_V2                                                               0x02
#define WAKE_UP_INTERVAL_CAPABILITIES_GET_V2                                             0x09
#define WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2                                          0x0A
#define WAKE_UP_INTERVAL_GET_V2                                                          0x05
#define WAKE_UP_INTERVAL_REPORT_V2                                                       0x06
#define WAKE_UP_INTERVAL_SET_V2                                                          0x04
#define WAKE_UP_NO_MORE_INFORMATION_V2                                                   0x08
#define WAKE_UP_NOTIFICATION_V2                                                          0x07

/* Wake Up command class commands */
#define WAKE_UP_VERSION_V3                                                               0x03
#define WAKE_UP_INTERVAL_CAPABILITIES_GET_V3                                             0x09
#define WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V3                                          0x0A
#define WAKE_UP_INTERVAL_GET_V3                                                          0x05
#define WAKE_UP_INTERVAL_REPORT_V3                                                       0x06
#define WAKE_UP_INTERVAL_SET_V3                                                          0x04
#define WAKE_UP_NO_MORE_INFORMATION_V3                                                   0x08
#define WAKE_UP_NOTIFICATION_V3                                                          0x07
/* Values used for Wake Up Interval Capabilities Report command */
#define WAKE_UP_INTERVAL_CAPABILITIES_REPORT_PROPERTIES1_WAKE_UP_ON_DEMAND_BIT_MASK_V3   0x01
#define WAKE_UP_INTERVAL_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK_V3                0xFE
#define WAKE_UP_INTERVAL_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_SHIFT_V3               0x01

/* Zip 6lowpan command class commands */
#define ZIP_6LOWPAN_VERSION                                                              0x01
#define LOWPAN_FIRST_FRAGMENT                                                            0xC0
#define LOWPAN_SUBSEQUENT_FRAGMENT                                                       0xE0
/* Values used for Lowpan First Fragment command */
#define LOWPAN_FIRST_FRAGMENT_MASK                                                       0xF8
#define LOWPAN_FIRST_FRAGMENT_DATAGRAM_SIZE_1_MASK                                       0x07
/* Values used for Lowpan Subsequent Fragment command */
#define LOWPAN_SUBSEQUENT_FRAGMENT_MASK                                                  0xF8
#define LOWPAN_SUBSEQUENT_FRAGMENT_DATAGRAM_SIZE_1_MASK                                  0x07

/* Zip command class commands */
#define ZIP_VERSION                                                                      0x01
#define COMMAND_ZIP_PACKET                                                               0x02
/* Values used for Command Zip Packet command */
#define COMMAND_ZIP_PACKET_PROPERTIES1_RESERVED1_MASK                                    0x03
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_OPTION_ERROR_BIT_MASK                        0x04
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_QUEUE_FULL_BIT_MASK                          0x08
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_WAITING_BIT_MASK                             0x10
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_RESPONSE_BIT_MASK                            0x20
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_RESPONSE_BIT_MASK                             0x40
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_REQUEST_BIT_MASK                              0x80
#define COMMAND_ZIP_PACKET_PROPERTIES2_RESERVED2_MASK                                    0x1F
#define COMMAND_ZIP_PACKET_PROPERTIES2_MORE_INFORMATION_BIT_MASK                         0x20
#define COMMAND_ZIP_PACKET_PROPERTIES2_Z_WAVE_CMD_INCLUDED_BIT_MASK                      0x40
#define COMMAND_ZIP_PACKET_PROPERTIES2_HEADER_EXT_INCLUDED_BIT_MASK                      0x80
#define COMMAND_ZIP_PACKET_PROPERTIES3_SOURCE_END_POINT_MASK                             0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES3_RESERVED3_BIT_MASK                                0x80
#define COMMAND_ZIP_PACKET_PROPERTIES4_DESTINATION_END_POINT_MASK                        0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES4_BIT_ADDRESS_BIT_MASK                              0x80

/* Zip command class commands */
#define ZIP_VERSION_V2                                                                   0x02
#define COMMAND_ZIP_PACKET_V2                                                            0x02
/* Values used for Command Zip Packet command */
#define COMMAND_ZIP_PACKET_PROPERTIES1_RESERVED1_MASK_V2                                 0x03
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_OPTION_ERROR_BIT_MASK_V2                     0x04
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_QUEUE_FULL_BIT_MASK_V2                       0x08
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_WAITING_BIT_MASK_V2                          0x10
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_RESPONSE_BIT_MASK_V2                         0x20
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_RESPONSE_BIT_MASK_V2                          0x40
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_REQUEST_BIT_MASK_V2                           0x80
#define COMMAND_ZIP_PACKET_PROPERTIES2_RESERVED2_MASK_V2                                 0x0F
#define COMMAND_ZIP_PACKET_PROPERTIES2_SECURE_ORIGIN_BIT_MASK_V2                         0x10
#define COMMAND_ZIP_PACKET_PROPERTIES2_MORE_INFORMATION_BIT_MASK_V2                      0x20
#define COMMAND_ZIP_PACKET_PROPERTIES2_Z_WAVE_CMD_INCLUDED_BIT_MASK_V2                   0x40
#define COMMAND_ZIP_PACKET_PROPERTIES2_HEADER_EXT_INCLUDED_BIT_MASK_V2                   0x80
#define COMMAND_ZIP_PACKET_PROPERTIES3_SOURCE_END_POINT_MASK_V2                          0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES3_RESERVED3_BIT_MASK_V2                             0x80
#define COMMAND_ZIP_PACKET_PROPERTIES4_DESTINATION_END_POINT_MASK_V2                     0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES4_BIT_ADDRESS_BIT_MASK_V2                           0x80

/* Zip command class commands */
#define ZIP_VERSION_V3                                                                   0x03
#define COMMAND_ZIP_PACKET_V3                                                            0x02
/* Values used for Command Zip Packet command */
#define COMMAND_ZIP_PACKET_PROPERTIES1_RESERVED1_MASK_V3                                 0x03
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_OPTION_ERROR_BIT_MASK_V3                     0x04
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_QUEUE_FULL_BIT_MASK_V3                       0x08
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_WAITING_BIT_MASK_V3                          0x10
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_RESPONSE_BIT_MASK_V3                         0x20
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_RESPONSE_BIT_MASK_V3                          0x40
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_REQUEST_BIT_MASK_V3                           0x80
#define COMMAND_ZIP_PACKET_PROPERTIES2_RESERVED2_MASK_V3                                 0x0F
#define COMMAND_ZIP_PACKET_PROPERTIES2_SECURE_ORIGIN_BIT_MASK_V3                         0x10
#define COMMAND_ZIP_PACKET_PROPERTIES2_MORE_INFORMATION_BIT_MASK_V3                      0x20
#define COMMAND_ZIP_PACKET_PROPERTIES2_Z_WAVE_CMD_INCLUDED_BIT_MASK_V3                   0x40
#define COMMAND_ZIP_PACKET_PROPERTIES2_HEADER_EXT_INCLUDED_BIT_MASK_V3                   0x80
#define COMMAND_ZIP_PACKET_PROPERTIES3_SOURCE_END_POINT_MASK_V3                          0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES3_RESERVED3_BIT_MASK_V3                             0x80
#define COMMAND_ZIP_PACKET_PROPERTIES4_DESTINATION_END_POINT_MASK_V3                     0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES4_BIT_ADDRESS_BIT_MASK_V3                           0x80

/* Zip command class commands */
#define ZIP_VERSION_V4                                                                   0x04
#define COMMAND_ZIP_PACKET_V4                                                            0x02
#define COMMAND_ZIP_KEEP_ALIVE_V4                                                        0x03
/* Values used for Command Zip Packet command */
#define COMMAND_ZIP_PACKET_PROPERTIES1_RESERVED1_MASK_V4                                 0x03
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_OPTION_ERROR_BIT_MASK_V4                     0x04
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_QUEUE_FULL_BIT_MASK_V4                       0x08
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_WAITING_BIT_MASK_V4                          0x10
#define COMMAND_ZIP_PACKET_PROPERTIES1_NACK_RESPONSE_BIT_MASK_V4                         0x20
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_RESPONSE_BIT_MASK_V4                          0x40
#define COMMAND_ZIP_PACKET_PROPERTIES1_ACK_REQUEST_BIT_MASK_V4                           0x80
#define COMMAND_ZIP_PACKET_PROPERTIES2_RESERVED2_MASK_V4                                 0x0F
#define COMMAND_ZIP_PACKET_PROPERTIES2_SECURE_ORIGIN_BIT_MASK_V4                         0x10
#define COMMAND_ZIP_PACKET_PROPERTIES2_MORE_INFORMATION_BIT_MASK_V4                      0x20
#define COMMAND_ZIP_PACKET_PROPERTIES2_Z_WAVE_CMD_INCLUDED_BIT_MASK_V4                   0x40
#define COMMAND_ZIP_PACKET_PROPERTIES2_HEADER_EXT_INCLUDED_BIT_MASK_V4                   0x80
#define COMMAND_ZIP_PACKET_PROPERTIES3_SOURCE_END_POINT_MASK_V4                          0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES3_RESERVED3_BIT_MASK_V4                             0x80
#define COMMAND_ZIP_PACKET_PROPERTIES4_DESTINATION_END_POINT_MASK_V4                     0x7F
#define COMMAND_ZIP_PACKET_PROPERTIES4_BIT_ADDRESS_BIT_MASK_V4                           0x80
/* Values used for Command Zip Keep Alive command */
#define COMMAND_ZIP_KEEP_ALIVE_PROPERTIES1_RESERVED_MASK_V4                              0x3F
#define COMMAND_ZIP_KEEP_ALIVE_PROPERTIES1_ACK_RESPONCE_BIT_MASK_V4                      0x40
#define COMMAND_ZIP_KEEP_ALIVE_PROPERTIES1_ACK_REQUEST_BIT_MASK_V4                       0x80

/* Application Capability command class commands */
#define APPLICATION_CAPABILITY_VERSION                                                   0x01
#define COMMAND_COMMAND_CLASS_NOT_SUPPORTED                                              0x01
/* Values used for Command Command Class Not Supported command */
#define COMMAND_COMMAND_CLASS_NOT_SUPPORTED_PROPERTIES1_RESERVED_MASK                    0x7F
#define COMMAND_COMMAND_CLASS_NOT_SUPPORTED_PROPERTIES1_DYNAMIC_BIT_MASK                 0x80

/* Switch Color command class commands */
#define SWITCH_COLOR_VERSION                                                             0x01
#define SWITCH_COLOR_SUPPORTED_GET                                                       0x01
#define SWITCH_COLOR_SUPPORTED_REPORT                                                    0x02
#define SWITCH_COLOR_GET                                                                 0x03
#define SWITCH_COLOR_REPORT                                                              0x04
#define SWITCH_COLOR_SET                                                                 0x05
#define SWITCH_COLOR_START_LEVEL_CHANGE                                                  0x06
#define SWITCH_COLOR_STOP_LEVEL_CHANGE                                                   0x07
/* Values used for Switch Color Set command */
#define SWITCH_COLOR_SET_PROPERTIES1_COLOR_COMPONENT_COUNT_MASK                          0x1F
#define SWITCH_COLOR_SET_PROPERTIES1_RESERVED_MASK                                       0xE0
#define SWITCH_COLOR_SET_PROPERTIES1_RESERVED_SHIFT                                      0x05
/* Values used for Switch Color Start Level Change command */
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_RES1_MASK                            0x1F
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_STATE_BIT_MASK          0x20
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK                     0x40
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_RES2_BIT_MASK                        0x80

/* Switch Color command class commands */
#define SWITCH_COLOR_VERSION_V2                                                          0x02
#define SWITCH_COLOR_SUPPORTED_GET_V2                                                    0x01
#define SWITCH_COLOR_SUPPORTED_REPORT_V2                                                 0x02
#define SWITCH_COLOR_GET_V2                                                              0x03
#define SWITCH_COLOR_REPORT_V2                                                           0x04
#define SWITCH_COLOR_SET_V2                                                              0x05
#define SWITCH_COLOR_START_LEVEL_CHANGE_V2                                               0x06
#define SWITCH_COLOR_STOP_LEVEL_CHANGE_V2                                                0x07
/* Values used for Switch Color Set command */
#define SWITCH_COLOR_SET_PROPERTIES1_COLOR_COMPONENT_COUNT_MASK_V2                       0x1F
#define SWITCH_COLOR_SET_PROPERTIES1_RESERVED_MASK_V2                                    0xE0
#define SWITCH_COLOR_SET_PROPERTIES1_RESERVED_SHIFT_V2                                   0x05
/* Values used for Switch Color Start Level Change command */
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_RES1_MASK_V2                         0x1F
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_STATE_BIT_MASK_V2       0x20
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK_V2                  0x40
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_RES2_BIT_MASK_V2                     0x80

/* Switch Color command class commands */
#define SWITCH_COLOR_VERSION_V3                                                          0x03
#define SWITCH_COLOR_SUPPORTED_GET_V3                                                    0x01
#define SWITCH_COLOR_SUPPORTED_REPORT_V3                                                 0x02
#define SWITCH_COLOR_GET_V3                                                              0x03
#define SWITCH_COLOR_REPORT_V3                                                           0x04
#define SWITCH_COLOR_SET_V3                                                              0x05
#define SWITCH_COLOR_START_LEVEL_CHANGE_V3                                               0x06
#define SWITCH_COLOR_STOP_LEVEL_CHANGE_V3                                                0x07
/* Values used for Switch Color Set command */
#define SWITCH_COLOR_SET_PROPERTIES1_COLOR_COMPONENT_COUNT_MASK_V3                       0x1F
#define SWITCH_COLOR_SET_PROPERTIES1_RESERVED_MASK_V3                                    0xE0
#define SWITCH_COLOR_SET_PROPERTIES1_RESERVED_SHIFT_V3                                   0x05
/* Values used for Switch Color Start Level Change command */
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_RES1_MASK_V3                         0x1F
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_IGNORE_START_STATE_BIT_MASK_V3       0x20
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK_V3                  0x40
#define SWITCH_COLOR_START_LEVEL_CHANGE_PROPERTIES1_RES2_BIT_MASK_V3                     0x80

/* Schedule command class commands */
#define SCHEDULE_VERSION                                                                 0x01
#define SCHEDULE_SUPPORTED_GET                                                           0x01
#define SCHEDULE_SUPPORTED_REPORT                                                        0x02
#define COMMAND_SCHEDULE_SET                                                             0x03
#define COMMAND_SCHEDULE_GET                                                             0x04
#define COMMAND_SCHEDULE_REPORT                                                          0x05
#define SCHEDULE_REMOVE                                                                  0x06
#define SCHEDULE_STATE_SET                                                               0x07
#define SCHEDULE_STATE_GET                                                               0x08
#define SCHEDULE_STATE_REPORT                                                            0x09
/* Values used for Schedule Supported Report command */
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_START_TIME_SUPPORT_MASK                    0x3F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_FALLBACK_SUPPORT_BIT_MASK                  0x40
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_SUPPORT_ENABLE_DISABLE_BIT_MASK            0x80
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_SUPPORTED_OVERRIDE_TYPES_MASK              0x7F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_OVERRIDE_SUPPORT_BIT_MASK                  0x80
/* Values used for Command Schedule Set command */
#define COMMAND_SCHEDULE_SET_PROPERTIES1_START_MONTH_MASK                                0x0F
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RESERVED1_MASK                                  0xF0
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RESERVED1_SHIFT                                 0x04
#define COMMAND_SCHEDULE_SET_PROPERTIES2_START_DAY_OF_MONTH_MASK                         0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED2_MASK                                  0xE0
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED2_SHIFT                                 0x05
#define COMMAND_SCHEDULE_SET_PROPERTIES3_START_WEEKDAY_MASK                              0x7F
#define COMMAND_SCHEDULE_SET_PROPERTIES3_RES_BIT_MASK                                    0x80
#define COMMAND_SCHEDULE_SET_PROPERTIES4_START_HOUR_MASK                                 0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_MASK                              0xE0
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_SHIFT                             0x05
#define COMMAND_SCHEDULE_SET_PROPERTIES5_START_MINUTE_MASK                               0x3F
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_MASK                                  0xC0
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_SHIFT                                 0x06
/* Values used for Command Schedule Report command */
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_START_MONTH_MASK                             0x0F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_ACTIVE_ID_MASK                               0xF0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_ACTIVE_ID_SHIFT                              0x04
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_START_DAY_OF_MONTH_MASK                      0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RESERVED2_MASK                               0xE0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RESERVED2_SHIFT                              0x05
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_START_WEEKDAY_MASK                           0x7F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_RES_BIT_MASK                                 0x80
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_START_HOUR_MASK                              0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_MASK                           0xE0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_SHIFT                          0x05
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_START_MINUTE_MASK                            0x3F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED3_MASK                               0xC0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED3_SHIFT                              0x06
/* Values used for Schedule State Report command */
#define SCHEDULE_STATE_REPORT_PROPERTIES1_OVERRIDE_BIT_MASK                              0x01
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK                         0xFE
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_SHIFT                        0x01

/* Schedule command class commands */
#define SCHEDULE_VERSION_V2                                                              0x02
#define SCHEDULE_SUPPORTED_GET_V2                                                        0x01
#define SCHEDULE_SUPPORTED_REPORT_V2                                                     0x02
#define COMMAND_SCHEDULE_SET_V2                                                          0x03
#define COMMAND_SCHEDULE_GET_V2                                                          0x04
#define COMMAND_SCHEDULE_REPORT_V2                                                       0x05
#define SCHEDULE_REMOVE_V2                                                               0x06
#define SCHEDULE_STATE_SET_V2                                                            0x07
#define SCHEDULE_STATE_GET_V2                                                            0x08
#define SCHEDULE_STATE_REPORT_V2                                                         0x09
/* Values used for Schedule Supported Report command */
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_START_TIME_SUPPORT_MASK_V2                 0x3F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_FALLBACK_SUPPORT_BIT_MASK_V2               0x40
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_SUPPORT_ENABLE_DISABLE_BIT_MASK_V2         0x80
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_SUPPORTED_OVERRIDE_TYPES_MASK_V2           0x7F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_OVERRIDE_SUPPORT_BIT_MASK_V2               0x80
/* Values used for Command Schedule Set command */
#define COMMAND_SCHEDULE_SET_PROPERTIES1_START_MONTH_MASK_V2                             0x0F
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RESERVED0_MASK_V2                               0xF0
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RESERVED0_SHIFT_V2                              0x04
#define COMMAND_SCHEDULE_SET_PROPERTIES2_START_DAY_OF_MONTH_MASK_V2                      0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED1_MASK_V2                               0xE0
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED1_SHIFT_V2                              0x05
#define COMMAND_SCHEDULE_SET_PROPERTIES3_START_WEEKDAY_MASK_V2                           0x7F
#define COMMAND_SCHEDULE_SET_PROPERTIES3_RESERVED2_BIT_MASK_V2                           0x80
#define COMMAND_SCHEDULE_SET_PROPERTIES4_START_HOUR_MASK_V2                              0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_MASK_V2                           0xE0
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_SHIFT_V2                          0x05
#define COMMAND_SCHEDULE_SET_PROPERTIES5_START_MINUTE_MASK_V2                            0x3F
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_MASK_V2                               0xC0
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_SHIFT_V2                              0x06
/* Values used for Command Schedule Report command */
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_START_MONTH_MASK_V2                          0x0F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_ACTIVE_ID_MASK_V2                            0xF0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_ACTIVE_ID_SHIFT_V2                           0x04
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_START_DAY_OF_MONTH_MASK_V2                   0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RESERVED0_MASK_V2                            0xE0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RESERVED0_SHIFT_V2                           0x05
#define COMMAND_SCHEDULE_REPORT_RESERVED0_REPEAT_EVERY_N_HOURS_V2                        0x00
#define COMMAND_SCHEDULE_REPORT_RESERVED0_REPEAT_EVERY_N_DAYS_V2                         0x01
#define COMMAND_SCHEDULE_REPORT_RESERVED0_REPEAT_EVERY_N_WEEKS_V2                        0x02
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_START_WEEKDAY_MASK_V2                        0x7F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_RESERVED1_BIT_MASK_V2                        0x80
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_START_HOUR_MASK_V2                           0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_MASK_V2                        0xE0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_SHIFT_V2                       0x05
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_START_MINUTE_MASK_V2                         0x3F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED2_MASK_V2                            0xC0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED2_SHIFT_V2                           0x06
/* Values used for Schedule State Report command */
#define SCHEDULE_STATE_REPORT_PROPERTIES1_OVERRIDE_BIT_MASK_V2                           0x01
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK_V2                      0xFE
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_SHIFT_V2                     0x01

/* Schedule command class commands */
#define SCHEDULE_VERSION_V3                                                              0x03
#define SCHEDULE_SUPPORTED_GET_V3                                                        0x01
#define SCHEDULE_SUPPORTED_REPORT_V3                                                     0x02
#define COMMAND_SCHEDULE_SET_V3                                                          0x03
#define COMMAND_SCHEDULE_GET_V3                                                          0x04
#define COMMAND_SCHEDULE_REPORT_V3                                                       0x05
#define SCHEDULE_REMOVE_V3                                                               0x06
#define SCHEDULE_STATE_SET_V3                                                            0x07
#define SCHEDULE_STATE_GET_V3                                                            0x08
#define SCHEDULE_STATE_REPORT_V3                                                         0x09
/* Values used for Schedule Supported Report command */
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_START_TIME_SUPPORT_MASK_V3                 0x3F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_FALLBACK_SUPPORT_BIT_MASK_V3               0x40
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_SUPPORT_ENABLE_DISABLE_BIT_MASK_V3         0x80
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_SUPPORTED_OVERRIDE_TYPES_MASK_V3           0x7F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_OVERRIDE_SUPPORT_BIT_MASK_V3               0x80
/* Values used for Command Schedule Set command */
#define COMMAND_SCHEDULE_SET_PROPERTIES1_START_MONTH_MASK_V3                             0x0F
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RECURRENCE_OFFSET_MASK_V3                       0xF0
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RECURRENCE_OFFSET_SHIFT_V3                      0x04
#define COMMAND_SCHEDULE_SET_PROPERTIES2_START_DAY_OF_MONTH_MASK_V3                      0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RECURRENCE_MODE_MASK_V3                         0x60
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RECURRENCE_MODE_SHIFT_V3                        0x05
#define COMMAND_SCHEDULE_SET_RECURRENCE_MODE_REPEAT_EVERY_N_HOURS_V3                     0x00
#define COMMAND_SCHEDULE_SET_RECURRENCE_MODE_REPEAT_EVERY_N_DAYS_V3                      0x01
#define COMMAND_SCHEDULE_SET_RECURRENCE_MODE_REPEAT_EVERY_N_WEEKS_V3                     0x02
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED1_BIT_MASK_V3                           0x80
#define COMMAND_SCHEDULE_SET_PROPERTIES3_START_WEEKDAY_MASK_V3                           0x7F
#define COMMAND_SCHEDULE_SET_PROPERTIES3_RESERVED2_BIT_MASK_V3                           0x80
#define COMMAND_SCHEDULE_SET_PROPERTIES4_START_HOUR_MASK_V3                              0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_MASK_V3                           0xE0
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_SHIFT_V3                          0x05
#define COMMAND_SCHEDULE_SET_PROPERTIES5_START_MINUTE_MASK_V3                            0x3F
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RELATIVE_BIT_MASK_V3                            0x40
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_BIT_MASK_V3                           0x80
/* Values used for Command Schedule Get command */
#define COMMAND_SCHEDULE_GET_PROPERTIES1_RESERVED_MASK_V3                                0x7F
#define COMMAND_SCHEDULE_GET_PROPERTIES1_AID_RO_CTL_BIT_MASK_V3                          0x80
/* Values used for Command Schedule Report command */
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_START_MONTH_MASK_V3                          0x0F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_AID_RO_MASK_V3                               0xF0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_AID_RO_SHIFT_V3                              0x04
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_START_DAY_OF_MONTH_MASK_V3                   0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RECURRENCE_MODE_MASK_V3                      0x60
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RECURRENCE_MODE_SHIFT_V3                     0x05
#define COMMAND_SCHEDULE_REPORT_RECURRENCE_MODE_REPEAT_EVERY_N_HOURS_V3                  0x00
#define COMMAND_SCHEDULE_REPORT_RECURRENCE_MODE_REPEAT_EVERY_N_DAYS_V3                   0x01
#define COMMAND_SCHEDULE_REPORT_RECURRENCE_MODE_REPEAT_EVERY_N_WEEKS_V3                  0x02
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_AID_RO_CTL_BIT_MASK_V3                       0x80
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_START_WEEKDAY_MASK_V3                        0x7F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_RESERVED1_BIT_MASK_V3                        0x80
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_START_HOUR_MASK_V3                           0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_MASK_V3                        0xE0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_SHIFT_V3                       0x05
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_START_MINUTE_MASK_V3                         0x3F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RELATIVE_BIT_MASK_V3                         0x40
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED2_BIT_MASK_V3                        0x80
/* Values used for Schedule State Report command */
#define SCHEDULE_STATE_REPORT_PROPERTIES1_OVERRIDE_BIT_MASK_V3                           0x01
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK_V3                      0xFE
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_SHIFT_V3                     0x01

/* Schedule command class commands */
#define SCHEDULE_VERSION_V4                                                              0x04
#define SCHEDULE_SUPPORTED_GET_V4                                                        0x01
#define SCHEDULE_SUPPORTED_REPORT_V4                                                     0x02
#define COMMAND_SCHEDULE_SET_V4                                                          0x03
#define COMMAND_SCHEDULE_GET_V4                                                          0x04
#define COMMAND_SCHEDULE_REPORT_V4                                                       0x05
#define SCHEDULE_REMOVE_V4                                                               0x06
#define SCHEDULE_STATE_SET_V4                                                            0x07
#define SCHEDULE_STATE_GET_V4                                                            0x08
#define SCHEDULE_STATE_REPORT_V4                                                         0x09
#define SCHEDULE_SUPPORTED_COMMANDS_GET_V4                                               0x0A
#define SCHEDULE_SUPPORTED_COMMANDS_REPORT_V4                                            0x0B
/* Values used for Schedule Supported Report command */
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_START_TIME_SUPPORT_MASK_V4                 0x3F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_FALLBACK_SUPPORT_BIT_MASK_V4               0x40
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES1_SUPPORT_ENABLE_DISABLE_BIT_MASK_V4         0x80
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_SUPPORTED_OVERRIDE_TYPES_MASK_V4           0x7F
#define SCHEDULE_SUPPORTED_REPORT_PROPERTIES3_OVERRIDE_SUPPORT_BIT_MASK_V4               0x80
/* Values used for Command Schedule Set command */
#define COMMAND_SCHEDULE_SET_PROPERTIES1_START_MONTH_MASK_V4                             0x0F
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RECURRENCE_OFFSET_MASK_V4                       0xF0
#define COMMAND_SCHEDULE_SET_PROPERTIES1_RECURRENCE_OFFSET_SHIFT_V4                      0x04
#define COMMAND_SCHEDULE_SET_PROPERTIES2_START_DAY_OF_MONTH_MASK_V4                      0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RECURRENCE_MODE_MASK_V4                         0x60
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RECURRENCE_MODE_SHIFT_V4                        0x05
#define COMMAND_SCHEDULE_SET_RECURRENCE_MODE_REPEAT_EVERY_N_HOURS_V4                     0x00
#define COMMAND_SCHEDULE_SET_RECURRENCE_MODE_REPEAT_EVERY_N_DAYS_V4                      0x01
#define COMMAND_SCHEDULE_SET_RECURRENCE_MODE_REPEAT_EVERY_N_WEEKS_V4                     0x02
#define COMMAND_SCHEDULE_SET_PROPERTIES2_RESERVED1_BIT_MASK_V4                           0x80
#define COMMAND_SCHEDULE_SET_PROPERTIES3_START_WEEKDAY_MASK_V4                           0x7F
#define COMMAND_SCHEDULE_SET_PROPERTIES3_RESERVED2_BIT_MASK_V4                           0x80
#define COMMAND_SCHEDULE_SET_PROPERTIES4_START_HOUR_MASK_V4                              0x1F
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_MASK_V4                           0xE0
#define COMMAND_SCHEDULE_SET_PROPERTIES4_DURATION_TYPE_SHIFT_V4                          0x05
#define COMMAND_SCHEDULE_SET_PROPERTIES5_START_MINUTE_MASK_V4                            0x3F
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RELATIVE_BIT_MASK_V4                            0x40
#define COMMAND_SCHEDULE_SET_PROPERTIES5_RESERVED3_BIT_MASK_V4                           0x80
/* Values used for Command Schedule Get command */
#define COMMAND_SCHEDULE_GET_PROPERTIES1_RESERVED_MASK_V4                                0x7F
#define COMMAND_SCHEDULE_GET_PROPERTIES1_AID_RO_CTL_BIT_MASK_V4                          0x80
/* Values used for Command Schedule Report command */
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_START_MONTH_MASK_V4                          0x0F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_AID_RO_MASK_V4                               0xF0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES1_AID_RO_SHIFT_V4                              0x04
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_START_DAY_OF_MONTH_MASK_V4                   0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RECURRENCE_MODE_MASK_V4                      0x60
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_RECURRENCE_MODE_SHIFT_V4                     0x05
#define COMMAND_SCHEDULE_REPORT_RECURRENCE_MODE_REPEAT_EVERY_N_HOURS_V4                  0x00
#define COMMAND_SCHEDULE_REPORT_RECURRENCE_MODE_REPEAT_EVERY_N_DAYS_V4                   0x01
#define COMMAND_SCHEDULE_REPORT_RECURRENCE_MODE_REPEAT_EVERY_N_WEEKS_V4                  0x02
#define COMMAND_SCHEDULE_REPORT_PROPERTIES2_AID_RO_CTL_BIT_MASK_V4                       0x80
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_START_WEEKDAY_MASK_V4                        0x7F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES3_RESERVED1_BIT_MASK_V4                        0x80
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_START_HOUR_MASK_V4                           0x1F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_MASK_V4                        0xE0
#define COMMAND_SCHEDULE_REPORT_PROPERTIES4_DURATION_TYPE_SHIFT_V4                       0x05
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_START_MINUTE_MASK_V4                         0x3F
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RELATIVE_BIT_MASK_V4                         0x40
#define COMMAND_SCHEDULE_REPORT_PROPERTIES5_RESERVED2_BIT_MASK_V4                        0x80
/* Values used for Schedule State Report command */
#define SCHEDULE_STATE_REPORT_PROPERTIES1_OVERRIDE_BIT_MASK_V4                           0x01
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_MASK_V4                      0xFE
#define SCHEDULE_STATE_REPORT_PROPERTIES1_REPORTS_TO_FOLLOW_SHIFT_V4                     0x01

/* Network Management Primary command class commands */
#define NETWORK_MANAGEMENT_PRIMARY_VERSION                                               0x01
#define CONTROLLER_CHANGE                                                                0x01
#define CONTROLLER_CHANGE_STATUS                                                         0x02
/* Values used for Controller Change Status command */
#define CONTROLLER_CHANGE_STATUS_PROPERTIES1_Z_WAVE_PROTOCOL_SPECIFIC_PART_1_MASK        0x7F
#define CONTROLLER_CHANGE_STATUS_PROPERTIES1_LISTENING_BIT_MASK                          0x80
#define CONTROLLER_CHANGE_STATUS_PROPERTIES2_Z_WAVE_PROTOCOL_SPECIFIC_PART_2_MASK        0x7F
#define CONTROLLER_CHANGE_STATUS_PROPERTIES2_OPT_BIT_MASK                                0x80

/* Zip Nd command class commands */
#define ZIP_ND_VERSION                                                                   0x01
#define ZIP_NODE_SOLICITATION                                                            0x03
#define ZIP_INV_NODE_SOLICITATION                                                        0x04
#define ZIP_NODE_ADVERTISEMENT                                                           0x01
/* Values used for Zip Inv Node Solicitation command */
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED1_MASK                             0x03
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_LOCAL_BIT_MASK                             0x04
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED2_MASK                             0xF8
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED2_SHIFT                            0x03
/* Values used for Zip Node Advertisement command */
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_VALIDITY_MASK                                 0x03
#define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_OK                                   0x00
#define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_OBSOLETE                             0x01
#define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_NOT_FOUND                            0x02
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_LOCAL_BIT_MASK                                0x04
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_RESERVED_MASK                                 0xF8
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_RESERVED_SHIFT                                0x03

/* Zip Nd command class commands */
#define ZIP_ND_VERSION_V2                                                                0x02
#define ZIP_NODE_SOLICITATION_V2                                                         0x03
#define ZIP_INV_NODE_SOLICITATION_V2                                                     0x04
#define ZIP_NODE_ADVERTISEMENT_V2                                                        0x01
/* Values used for Zip Inv Node Solicitation command */
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED1_MASK_V2                          0x03
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_LOCAL_BIT_MASK_V2                          0x04
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED2_MASK_V2                          0xF8
#define ZIP_INV_NODE_SOLICITATION_PROPERTIES1_RESERVED2_SHIFT_V2                         0x03
/* Values used for Zip Node Advertisement command */
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_VALIDITY_MASK_V2                              0x03
#define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_OK_V2                                0x00
#define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_OBSOLETE_V2                          0x01
#define ZIP_NODE_ADVERTISEMENT_VALIDITY_INFORMATION_NOT_FOUND_V2                         0x02
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_LOCAL_BIT_MASK_V2                             0x04
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_RESERVED_MASK_V2                              0xF8
#define ZIP_NODE_ADVERTISEMENT_PROPERTIES1_RESERVED_SHIFT_V2                             0x03

/* Association Grp Info command class commands */
#define ASSOCIATION_GRP_INFO_VERSION                                                     0x01
#define ASSOCIATION_GROUP_NAME_GET                                                       0x01
#define ASSOCIATION_GROUP_NAME_REPORT                                                    0x02
#define ASSOCIATION_GROUP_INFO_GET                                                       0x03
#define ASSOCIATION_GROUP_INFO_REPORT                                                    0x04
#define ASSOCIATION_GROUP_COMMAND_LIST_GET                                               0x05
#define ASSOCIATION_GROUP_COMMAND_LIST_REPORT                                            0x06
/* Values used for Association Group Info Get command */
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_RESERVED_MASK                             0x3F
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_LIST_MODE_BIT_MASK                        0x40
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_REFRESH_CACHE_BIT_MASK                    0x80
/* Values used for Association Group Info Report command */
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_GROUP_COUNT_MASK                       0x3F
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_DYNAMIC_INFO_BIT_MASK                  0x40
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_LIST_MODE_BIT_MASK                     0x80
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_GENERAL                                0x00
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_CONTROL                                0x20
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_SENSOR                                 0x31
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_NOTIFICATION                           0x71
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_GENERAL_NA                                     0x00
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_GENERAL_LIFELINE                               0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY01                                  0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY02                                  0x02
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY03                                  0x03
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY04                                  0x04
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY05                                  0x05
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY06                                  0x06
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY07                                  0x07
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY08                                  0x08
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY09                                  0x09
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY10                                  0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY11                                  0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY12                                  0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY13                                  0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY14                                  0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY15                                  0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY16                                  0x10
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY17                                  0x11
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY18                                  0x12
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY19                                  0x13
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY20                                  0x14
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY21                                  0x15
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY22                                  0x16
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY23                                  0x17
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY24                                  0x18
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY25                                  0x19
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY26                                  0x1A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY27                                  0x1B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY28                                  0x1C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY29                                  0x1D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY30                                  0x1E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY31                                  0x1F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY32                                  0x20
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SMOKE_ALARM                      0x01
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_C0_ALARM                         0x02
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_CO2_ALARM                        0x03
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HEAT_ALARM                       0x04
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_ALARM                      0x05
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_ACCESS_CONTROL                   0x06
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_SECURITY                    0x07
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_POWER_MANAGEMENT                 0x08
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SYSTEM                           0x09
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_EMERGENCY_ALARM                  0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_CLOCK                            0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_APPLIANCE                        0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_HEALTH                      0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SIREN                            0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_VALVE                      0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WEATHER_ALARM                    0x10
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_IRRIGATION                       0x11
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_GAS_ALARM                        0x12
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_PEST_CONTROL                     0x13
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_LIGHT_SENSOR                     0x14
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_QUALITY_MONITORING         0x15
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_MONITORING                  0x16
/* Values used for Association Group Command List Get command */
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_RESERVED_MASK                     0x7F
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_ALLOW_CACHE_BIT_MASK              0x80

/* Association Grp Info command class commands */
#define ASSOCIATION_GRP_INFO_VERSION_V2                                                  0x02
#define ASSOCIATION_GROUP_NAME_GET_V2                                                    0x01
#define ASSOCIATION_GROUP_NAME_REPORT_V2                                                 0x02
#define ASSOCIATION_GROUP_INFO_GET_V2                                                    0x03
#define ASSOCIATION_GROUP_INFO_REPORT_V2                                                 0x04
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_V2                                            0x05
#define ASSOCIATION_GROUP_COMMAND_LIST_REPORT_V2                                         0x06
/* Values used for Association Group Info Get command */
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_RESERVED_MASK_V2                          0x3F
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_LIST_MODE_BIT_MASK_V2                     0x40
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_REFRESH_CACHE_BIT_MASK_V2                 0x80
/* Values used for Association Group Info Report command */
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_GROUP_COUNT_MASK_V2                    0x3F
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_DYNAMIC_INFO_BIT_MASK_V2               0x40
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_LIST_MODE_BIT_MASK_V2                  0x80
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_GENERAL_V2                             0x00
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_CONTROL_V2                             0x20
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_SENSOR_V2                              0x31
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_NOTIFICATION_V2                        0x71
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_METER_V2                               0x32
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_GENERAL_NA_V2                                  0x00
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_GENERAL_LIFELINE_V2                            0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY01_V2                               0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY02_V2                               0x02
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY03_V2                               0x03
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY04_V2                               0x04
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY05_V2                               0x05
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY06_V2                               0x06
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY07_V2                               0x07
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY08_V2                               0x08
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY09_V2                               0x09
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY10_V2                               0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY11_V2                               0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY12_V2                               0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY13_V2                               0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY14_V2                               0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY15_V2                               0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY16_V2                               0x10
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY17_V2                               0x11
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY18_V2                               0x12
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY19_V2                               0x13
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY20_V2                               0x14
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY21_V2                               0x15
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY22_V2                               0x16
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY23_V2                               0x17
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY24_V2                               0x18
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY25_V2                               0x19
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY26_V2                               0x1A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY27_V2                               0x1B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY28_V2                               0x1C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY29_V2                               0x1D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY30_V2                               0x1E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY31_V2                               0x1F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY32_V2                               0x20
#define ASSOCIATION_GROUP_INFO_REPORT_MULTILEVEL_SENSOR_TYPE_TEMPERATURE_V2              0x01
#define ASSOCIATION_GROUP_INFO_REPORT_MULTILEVEL_SENSOR_TYPE_HUMIDITY_V2                 0x05
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SMOKE_ALARM_V2                   0x01
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_C0_ALARM_V2                      0x02
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_CO2_ALARM_V2                     0x03
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HEAT_ALARM_V2                    0x04
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_ALARM_V2                   0x05
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_ACCESS_CONTROL_V2                0x06
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_SECURITY_V2                 0x07
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_POWER_MANAGEMENT_V2              0x08
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SYSTEM_V2                        0x09
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_EMERGENCY_ALARM_V2               0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_CLOCK_V2                         0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_APPLIANCE_V2                     0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_HEALTH_V2                   0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SIREN_V2                         0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_VALVE_V2                   0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WEATHER_ALARM_V2                 0x10
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_IRRIGATION_V2                    0x11
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_GAS_ALARM_V2                     0x12
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_PEST_CONTROL_V2                  0x13
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_LIGHT_SENSOR_V2                  0x14
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_QUALITY_MONITORING_V2      0x15
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_MONITORING_V2               0x16
#define ASSOCIATION_GROUP_INFO_REPORT_METER_TYPE_ELECTRIC_V2                             0x01
#define ASSOCIATION_GROUP_INFO_REPORT_METER_TYPE_GAS_V2                                  0x02
#define ASSOCIATION_GROUP_INFO_REPORT_METER_TYPE_WATER_V2                                0x03
/* Values used for Association Group Command List Get command */
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_RESERVED_MASK_V2                  0x7F
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_ALLOW_CACHE_BIT_MASK_V2           0x80

/* Association Grp Info command class commands */
#define ASSOCIATION_GRP_INFO_VERSION_V3                                                  0x03
#define ASSOCIATION_GROUP_NAME_GET_V3                                                    0x01
#define ASSOCIATION_GROUP_NAME_REPORT_V3                                                 0x02
#define ASSOCIATION_GROUP_INFO_GET_V3                                                    0x03
#define ASSOCIATION_GROUP_INFO_REPORT_V3                                                 0x04
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_V3                                            0x05
#define ASSOCIATION_GROUP_COMMAND_LIST_REPORT_V3                                         0x06
/* Values used for Association Group Info Get command */
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_RESERVED_MASK_V3                          0x3F
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_LIST_MODE_BIT_MASK_V3                     0x40
#define ASSOCIATION_GROUP_INFO_GET_PROPERTIES1_REFRESH_CACHE_BIT_MASK_V3                 0x80
/* Values used for Association Group Info Report command */
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_GROUP_COUNT_MASK_V3                    0x3F
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_DYNAMIC_INFO_BIT_MASK_V3               0x40
#define ASSOCIATION_GROUP_INFO_REPORT_PROPERTIES1_LIST_MODE_BIT_MASK_V3                  0x80
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_GENERAL_V3                             0x00
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_CONTROL_V3                             0x20
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_SENSOR_V3                              0x31
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_NOTIFICATION_V3                        0x71
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_METER_V3                               0x32
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_PROFILE_IRRIGATION_V3                          0x6B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_GENERAL_NA_V3                                  0x00
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_GENERAL_LIFELINE_V3                            0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY01_V3                               0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY02_V3                               0x02
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY03_V3                               0x03
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY04_V3                               0x04
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY05_V3                               0x05
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY06_V3                               0x06
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY07_V3                               0x07
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY08_V3                               0x08
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY09_V3                               0x09
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY10_V3                               0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY11_V3                               0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY12_V3                               0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY13_V3                               0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY14_V3                               0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY15_V3                               0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY16_V3                               0x10
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY17_V3                               0x11
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY18_V3                               0x12
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY19_V3                               0x13
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY20_V3                               0x14
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY21_V3                               0x15
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY22_V3                               0x16
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY23_V3                               0x17
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY24_V3                               0x18
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY25_V3                               0x19
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY26_V3                               0x1A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY27_V3                               0x1B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY28_V3                               0x1C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY29_V3                               0x1D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY30_V3                               0x1E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY31_V3                               0x1F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_CONTROL_KEY32_V3                               0x20
#define ASSOCIATION_GROUP_INFO_REPORT_MULTILEVEL_SENSOR_TYPE_TEMPERATURE_V3              0x01
#define ASSOCIATION_GROUP_INFO_REPORT_MULTILEVEL_SENSOR_TYPE_HUMIDITY_V3                 0x05
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SMOKE_ALARM_V3                   0x01
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_C0_ALARM_V3                      0x02
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_CO2_ALARM_V3                     0x03
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HEAT_ALARM_V3                    0x04
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_ALARM_V3                   0x05
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_ACCESS_CONTROL_V3                0x06
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_SECURITY_V3                 0x07
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_POWER_MANAGEMENT_V3              0x08
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SYSTEM_V3                        0x09
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_EMERGENCY_ALARM_V3               0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_CLOCK_V3                         0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_APPLIANCE_V3                     0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_HEALTH_V3                   0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_SIREN_V3                         0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_VALVE_V3                   0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WEATHER_ALARM_V3                 0x10
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_IRRIGATION_V3                    0x11
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_GAS_ALARM_V3                     0x12
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_PEST_CONTROL_V3                  0x13
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_LIGHT_SENSOR_V3                  0x14
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_WATER_QUALITY_MONITORING_V3      0x15
#define ASSOCIATION_GROUP_INFO_REPORT_NOTIFICATION_TYPE_HOME_MONITORING_V3               0x16
#define ASSOCIATION_GROUP_INFO_REPORT_METER_TYPE_ELECTRIC_V3                             0x01
#define ASSOCIATION_GROUP_INFO_REPORT_METER_TYPE_GAS_V3                                  0x02
#define ASSOCIATION_GROUP_INFO_REPORT_METER_TYPE_WATER_V3                                0x03
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_01_V3                       0x01
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_02_V3                       0x02
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_03_V3                       0x03
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_04_V3                       0x04
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_05_V3                       0x05
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_06_V3                       0x06
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_07_V3                       0x07
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_08_V3                       0x08
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_09_V3                       0x09
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_10_V3                       0x0A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_11_V3                       0x0B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_12_V3                       0x0C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_13_V3                       0x0D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_14_V3                       0x0E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_15_V3                       0x0F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_16_V3                       0x10
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_17_V3                       0x11
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_18_V3                       0x12
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_19_V3                       0x13
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_20_V3                       0x14
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_21_V3                       0x15
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_22_V3                       0x16
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_23_V3                       0x17
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_24_V3                       0x18
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_25_V3                       0x19
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_26_V3                       0x1A
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_27_V3                       0x1B
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_28_V3                       0x1C
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_29_V3                       0x1D
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_30_V3                       0x1E
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_31_V3                       0x1F
#define ASSOCIATION_GROUP_INFO_REPORT_AGI_IRRIGATION_CHANNEL_32_V3                       0x20
/* Values used for Association Group Command List Get command */
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_RESERVED_MASK_V3                  0x7F
#define ASSOCIATION_GROUP_COMMAND_LIST_GET_PROPERTIES1_ALLOW_CACHE_BIT_MASK_V3           0x80

/* Device Reset Locally command class commands */
#define DEVICE_RESET_LOCALLY_VERSION                                                     0x01
#define DEVICE_RESET_LOCALLY_NOTIFICATION                                                0x01

/* Central Scene command class commands */
#define CENTRAL_SCENE_VERSION                                                            0x01
#define CENTRAL_SCENE_SUPPORTED_GET                                                      0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT                                                   0x02
#define CENTRAL_SCENE_NOTIFICATION                                                       0x03
/* Values used for Central Scene Notification command */
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_KEY_ATTRIBUTES_MASK                       0x07
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_MASK                             0xF8
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_SHIFT                            0x03

/* Central Scene command class commands */
#define CENTRAL_SCENE_VERSION_V2                                                         0x02
#define CENTRAL_SCENE_SUPPORTED_GET_V2                                                   0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT_V2                                                0x02
#define CENTRAL_SCENE_NOTIFICATION_V2                                                    0x03
/* Values used for Central Scene Supported Report command */
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V2                 0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASK_BYTES_MASK_V2      0x06
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASK_BYTES_SHIFT_V2     0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V2                      0xF8
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                     0x03
/* Values used for Central Scene Notification command */
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_KEY_ATTRIBUTES_MASK_V2                    0x07
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_1_TIME_V2                  0x00
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_RELEASED_V2                        0x01
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_HELD_DOWN_V2                       0x02
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_2_TIMES_V2                 0x03
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_3_TIMES_V2                 0x04
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_4_TIMES_V2                 0x05
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_5_TIMES_V2                 0x06
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_MASK_V2                          0xF8
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_SHIFT_V2                         0x03

/* Central Scene command class commands */
#define CENTRAL_SCENE_VERSION_V3                                                         0x03
#define CENTRAL_SCENE_SUPPORTED_GET_V3                                                   0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT_V3                                                0x02
#define CENTRAL_SCENE_NOTIFICATION_V3                                                    0x03
#define CENTRAL_SCENE_CONFIGURATION_SET_V3                                               0x04
#define CENTRAL_SCENE_CONFIGURATION_GET_V3                                               0x05
#define CENTRAL_SCENE_CONFIGURATION_REPORT_V3                                            0x06
/* Values used for Central Scene Supported Report command */
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_IDENTICAL_BIT_MASK_V3                 0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASK_BYTES_MASK_V3      0x06
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_BIT_MASK_BYTES_SHIFT_V3     0x01
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V3                      0x78
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V3                     0x03
#define CENTRAL_SCENE_SUPPORTED_REPORT_PROPERTIES1_SLOW_REFRESH_SUPPORT_BIT_MASK_V3      0x80
/* Values used for Central Scene Notification command */
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_KEY_ATTRIBUTES_MASK_V3                    0x07
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_1_TIME_V3                  0x00
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_RELEASED_V3                        0x01
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_HELD_DOWN_V3                       0x02
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_2_TIMES_V3                 0x03
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_3_TIMES_V3                 0x04
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_4_TIMES_V3                 0x05
#define CENTRAL_SCENE_NOTIFICATION_KEY_ATTRIBUTES_KEY_PRESSED_5_TIMES_V3                 0x06
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_MASK_V3                          0x78
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_RESERVED_SHIFT_V3                         0x03
#define CENTRAL_SCENE_NOTIFICATION_PROPERTIES1_SLOW_REFRESH_BIT_MASK_V3                  0x80
/* Values used for Central Scene Configuration Set command */
#define CENTRAL_SCENE_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK_V3                     0x7F
#define CENTRAL_SCENE_CONFIGURATION_SET_PROPERTIES1_SLOW_REFRESH_BIT_MASK_V3             0x80
/* Values used for Central Scene Configuration Report command */
#define CENTRAL_SCENE_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK_V3                  0x7F
#define CENTRAL_SCENE_CONFIGURATION_REPORT_PROPERTIES1_SLOW_REFRESH_BIT_MASK_V3          0x80

/* Ip Association command class commands */
#define IP_ASSOCIATION_VERSION                                                           0x01
#define IP_ASSOCIATION_SET                                                               0x01
#define IP_ASSOCIATION_GET                                                               0x02
#define IP_ASSOCIATION_REPORT                                                            0x03
#define IP_ASSOCIATION_REMOVE                                                            0x04

/* Antitheft command class commands */
#define ANTITHEFT_VERSION                                                                0x01
#define ANTITHEFT_SET                                                                    0x01
#define ANTITHEFT_GET                                                                    0x02
#define ANTITHEFT_REPORT                                                                 0x03
/* Values used for Antitheft Set command */
#define ANTITHEFT_SET_PROPERTIES1_NUMBER_OF_MAGIC_CODE_BYTES_MASK                        0x7F
#define ANTITHEFT_SET_PROPERTIES1_ENABLE_BIT_MASK                                        0x80

/* Antitheft command class commands */
#define ANTITHEFT_VERSION_V2                                                             0x02
#define ANTITHEFT_SET_V2                                                                 0x01
#define ANTITHEFT_GET_V2                                                                 0x02
#define ANTITHEFT_REPORT_V2                                                              0x03
/* Values used for Antitheft Set command */
#define ANTITHEFT_SET_PROPERTIES1_NUMBER_OF_MAGIC_CODE_BYTES_MASK_V2                     0x7F
#define ANTITHEFT_SET_PROPERTIES1_ENABLE_BIT_MASK_V2                                     0x80
/* Values used for Antitheft Report command */
#define ANTITHEFT_REPORT_RESERVED_V2                                                     0x00
#define ANTITHEFT_REPORT_DISABLED_V2                                                     0x01
#define ANTITHEFT_REPORT_ENABLED_V2                                                      0x02
#define ANTITHEFT_REPORT_NOT_FULLY_ENABLED_V2                                            0x03

/* Antitheft command class commands */
#define ANTITHEFT_VERSION_V3                                                             0x03
#define ANTITHEFT_SET_V3                                                                 0x01
#define ANTITHEFT_GET_V3                                                                 0x02
#define ANTITHEFT_REPORT_V3                                                              0x03
/* Values used for Antitheft Set command */
#define ANTITHEFT_SET_PROPERTIES1_NUMBER_OF_MAGIC_CODE_BYTES_MASK_V3                     0x7F
#define ANTITHEFT_SET_PROPERTIES1_ENABLE_BIT_MASK_V3                                     0x80
/* Values used for Antitheft Report command */
#define ANTITHEFT_REPORT_RESERVED_V3                                                     0x00
#define ANTITHEFT_REPORT_DISABLED_V3                                                     0x01
#define ANTITHEFT_REPORT_ENABLED_V3                                                      0x02
#define ANTITHEFT_REPORT_NOT_FULLY_ENABLED_V3                                            0x03

/* Zwaveplus Info command class commands */
#define ZWAVEPLUS_INFO_VERSION                                                           0x01
#define ZWAVEPLUS_INFO_GET                                                               0x01
#define ZWAVEPLUS_INFO_REPORT                                                            0x02
/* Values used for Zwaveplus Info Report command */
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_CENTRAL_STATIC                        0x00
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_SUB_STATIC                            0x01
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_PORTABLE                              0x02
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_PORTABLE_REPORTING                    0x03
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_PORTABLE                                0x04
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_ALWAYS_ON                               0x05
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_SLEEPING_REPORTING                      0x06
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_SLEEPING_LISTENING                      0x07
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_NODE                                   0x00
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_FOR_IP_ROUTER                          0x01
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_FOR_IP_GATEWAY                         0x02
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_FOR_IP_CLIENT_IP_NODE                  0x03
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_FOR_IP_CLIENT_ZWAVE_NODE               0x04

/* Zwaveplus Info command class commands */
#define ZWAVEPLUS_INFO_VERSION_V2                                                        0x02
#define ZWAVEPLUS_INFO_GET_V2                                                            0x01
#define ZWAVEPLUS_INFO_REPORT_V2                                                         0x02
/* Values used for Zwaveplus Info Report command */
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_CENTRAL_STATIC_V2                     0x00
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_SUB_STATIC_V2                         0x01
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_PORTABLE_V2                           0x02
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_CONTROLLER_PORTABLE_REPORTING_V2                 0x03
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_PORTABLE_V2                             0x04
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_ALWAYS_ON_V2                            0x05
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_SLEEPING_REPORTING_V2                   0x06
#define ZWAVEPLUS_INFO_REPORT_ROLE_TYPE_END_NODE_SLEEPING_LISTENING_V2                   0x07
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_NODE_V2                                0x00
#define ZWAVEPLUS_INFO_REPORT_NODE_TYPE_ZWAVEPLUS_FOR_IP_GATEWAY_V2                      0x02

/* Zip Gateway command class commands */
#define ZIP_GATEWAY_VERSION                                                              0x01
#define GATEWAY_MODE_SET                                                                 0x01
#define GATEWAY_MODE_GET                                                                 0x02
#define GATEWAY_MODE_REPORT                                                              0x03
#define GATEWAY_PEER_SET                                                                 0x04
#define GATEWAY_PEER_GET                                                                 0x05
#define GATEWAY_PEER_REPORT                                                              0x06
#define GATEWAY_LOCK_SET                                                                 0x07
#define UNSOLICITED_DESTINATION_SET                                                      0x08
#define UNSOLICITED_DESTINATION_GET                                                      0x09
#define UNSOLICITED_DESTINATION_REPORT                                                   0x0A
#define COMMAND_APPLICATION_NODE_INFO_SET                                                0x0B
#define COMMAND_APPLICATION_NODE_INFO_GET                                                0x0C
#define COMMAND_APPLICATION_NODE_INFO_REPORT                                             0x0D
/* Values used for Gateway Mode Set command */
#define GATEWAY_MODE_SET_STAND_ALONE                                                     0x01
#define GATEWAY_MODE_SET_PORTAL                                                          0x02
/* Values used for Gateway Mode Report command */
#define GATEWAY_MODE_REPORT_STAND_ALONE                                                  0x01
#define GATEWAY_MODE_REPORT_PORTAL                                                       0x02
/* Values used for Gateway Peer Set command */
#define GATEWAY_PEER_SET_PROPERTIES1_PEER_NAME_LENGTH_MASK                               0x3F
#define GATEWAY_PEER_SET_PROPERTIES1_RESERVED_MASK                                       0xC0
#define GATEWAY_PEER_SET_PROPERTIES1_RESERVED_SHIFT                                      0x06
/* Values used for Gateway Peer Report command */
#define GATEWAY_PEER_REPORT_PROPERTIES1_PEER_NAME_LENGTH_MASK                            0x3F
#define GATEWAY_PEER_REPORT_PROPERTIES1_RESERVED_MASK                                    0xC0
#define GATEWAY_PEER_REPORT_PROPERTIES1_RESERVED_SHIFT                                   0x06
/* Values used for Gateway Lock Set command */
#define GATEWAY_LOCK_SET_PROPERTIES1_LOCK_BIT_MASK                                       0x01
#define GATEWAY_LOCK_SET_PROPERTIES1_SHOW_BIT_MASK                                       0x02
#define GATEWAY_LOCK_SET_PROPERTIES1_RESERVED_MASK                                       0xFC
#define GATEWAY_LOCK_SET_PROPERTIES1_RESERVED_SHIFT                                      0x02
/* Values used for Command Application Node Info Set command */
#define COMMAND_APPLICATION_NODE_INFO_SET_SECURITY_SCHEME_0_MARK                         0xF100
/* Values used for Command Application Node Info Report command */
#define COMMAND_APPLICATION_NODE_INFO_REPORT_SECURITY_SCHEME_0_MARK                      0xF100

/* Zip Portal command class commands */
#define ZIP_PORTAL_VERSION                                                               0x01
#define GATEWAY_CONFIGURATION_SET                                                        0x01
#define GATEWAY_CONFIGURATION_STATUS                                                     0x02
#define GATEWAY_CONFIGURATION_GET                                                        0x03
#define GATEWAY_CONFIGURATION_REPORT                                                     0x04
#define GATEWAY_UNREGISTER                                                               0x05

/* Dmx command class commands */
#define DMX_VERSION                                                                      0x01
#define DMX_ADDRESS_SET                                                                  0x01
#define DMX_ADDRESS_GET                                                                  0x02
#define DMX_ADDRESS_REPORT                                                               0x03
#define DMX_CAPABILITY_GET                                                               0x04
#define DMX_CAPABILITY_REPORT                                                            0x05
#define DMX_DATA                                                                         0x06
/* Values used for Dmx Address Set command */
#define DMX_ADDRESS_SET_PROPERTIES1_PAGE_ID_MASK                                         0x0F
#define DMX_ADDRESS_SET_PROPERTIES1_RESERVED_MASK                                        0xF0
#define DMX_ADDRESS_SET_PROPERTIES1_RESERVED_SHIFT                                       0x04
/* Values used for Dmx Address Report command */
#define DMX_ADDRESS_REPORT_PROPERTIES1_PAGE_ID_MASK                                      0x0F
#define DMX_ADDRESS_REPORT_PROPERTIES1_RESERVED_MASK                                     0xF0
#define DMX_ADDRESS_REPORT_PROPERTIES1_RESERVED_SHIFT                                    0x04
/* Values used for Dmx Data command */
#define DMX_DATA_PROPERTIES1_PAGE_MASK                                                   0x0F
#define DMX_DATA_PROPERTIES1_SEQUENCE_NO_MASK                                            0x30
#define DMX_DATA_PROPERTIES1_SEQUENCE_NO_SHIFT                                           0x04
#define DMX_DATA_PROPERTIES1_RESERVED_MASK                                               0xC0
#define DMX_DATA_PROPERTIES1_RESERVED_SHIFT                                              0x06

/* Barrier Operator command class commands */
#define BARRIER_OPERATOR_VERSION                                                         0x01
#define BARRIER_OPERATOR_SET                                                             0x01
#define BARRIER_OPERATOR_GET                                                             0x02
#define BARRIER_OPERATOR_REPORT                                                          0x03
#define BARRIER_OPERATOR_SIGNAL_SUPPORTED_GET                                            0x04
#define BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT                                         0x05
#define BARRIER_OPERATOR_EVENT_SIGNAL_SET                                                0x06
#define BARRIER_OPERATOR_EVENT_SIGNALING_GET                                             0x07
#define BARRIER_OPERATOR_EVENT_SIGNALING_REPORT                                          0x08
/* Values used for Barrier Operator Set command */
#define BARRIER_OPERATOR_SET_CLOSE                                                       0x00
#define BARRIER_OPERATOR_SET_OPEN                                                        0xFF
/* Values used for Barrier Operator Report command */
#define BARRIER_OPERATOR_REPORT_CLOSED                                                   0x00
#define BARRIER_OPERATOR_REPORT_CLOSING                                                  0xFC
#define BARRIER_OPERATOR_REPORT_STOPPED                                                  0xFD
#define BARRIER_OPERATOR_REPORT_OPENING                                                  0xFE
#define BARRIER_OPERATOR_REPORT_OPEN                                                     0xFF
/* Values used for Barrier Operator Event Signal Set command */
#define BARRIER_OPERATOR_EVENT_SIGNAL_SET_OFF                                            0x00
#define BARRIER_OPERATOR_EVENT_SIGNAL_SET_ON                                             0xFF
/* Values used for Barrier Operator Event Signaling Report command */
#define BARRIER_OPERATOR_EVENT_SIGNALING_REPORT_OFF                                      0x00
#define BARRIER_OPERATOR_EVENT_SIGNALING_REPORT_ON                                       0xFF

/* Network Management Installation Maintenance command class commands */
#define NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_VERSION                              0x01
#define PRIORITY_ROUTE_SET                                                               0x01
#define PRIORITY_ROUTE_GET                                                               0x02
#define PRIORITY_ROUTE_REPORT                                                            0x03
#define STATISTICS_GET                                                                   0x04
#define STATISTICS_REPORT                                                                0x05
#define STATISTICS_CLEAR                                                                 0x06
/* Values used for Priority Route Set command */
#define PRIORITY_ROUTE_SET_9_6_KBIT_SEC                                                  0x01
#define PRIORITY_ROUTE_SET_40_KBIT_SEC                                                   0x02
#define PRIORITY_ROUTE_SET_100_KBIT_SEC                                                  0x03
/* Values used for Priority Route Report command */
#define PRIORITY_ROUTE_REPORT_NONE                                                       0x00
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_LWR                                   0x01
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_NLWR                                  0x02
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_APP_PR                                   0x10
#define PRIORITY_ROUTE_REPORT_9_6_KBIT_SEC                                               0x01
#define PRIORITY_ROUTE_REPORT_40_KBIT_SEC                                                0x02
#define PRIORITY_ROUTE_REPORT_100_KBIT_SEC                                               0x03
/* Values used for Statistics Report command */
#define STATISTICS_REPORT_ROUTE_CHANGES_RC                                               0x00
#define STATISTICS_REPORT_TRANSMISSION_COUNT_TC                                          0x01
#define STATISTICS_REPORT_NEIGHBORS_NB                                                   0x02
#define STATISTICS_REPORT_PACKET_ERROR_COUNT_PEC                                         0x03
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_TS                                   0x04
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_SQURARED_TS2                         0x05

/* Network Management Installation Maintenance command class commands */
#define NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_VERSION_V2                           0x02
#define PRIORITY_ROUTE_SET_V2                                                            0x01
#define PRIORITY_ROUTE_GET_V2                                                            0x02
#define PRIORITY_ROUTE_REPORT_V2                                                         0x03
#define STATISTICS_GET_V2                                                                0x04
#define STATISTICS_REPORT_V2                                                             0x05
#define STATISTICS_CLEAR_V2                                                              0x06
#define RSSI_GET_V2                                                                      0x07
#define RSSI_REPORT_V2                                                                   0x08
/* Values used for Priority Route Set command */
#define PRIORITY_ROUTE_SET_9_6_KBIT_SEC_V2                                               0x01
#define PRIORITY_ROUTE_SET_40_KBIT_SEC_V2                                                0x02
#define PRIORITY_ROUTE_SET_100_KBIT_SEC_V2                                               0x03
/* Values used for Priority Route Report command */
#define PRIORITY_ROUTE_REPORT_NONE_V2                                                    0x00
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_LWR_V2                                0x01
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_NLWR_V2                               0x02
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_APP_PR_V2                                0x10
#define PRIORITY_ROUTE_REPORT_9_6_KBIT_SEC_V2                                            0x01
#define PRIORITY_ROUTE_REPORT_40_KBIT_SEC_V2                                             0x02
#define PRIORITY_ROUTE_REPORT_100_KBIT_SEC_V2                                            0x03
/* Values used for Statistics Report command */
#define STATISTICS_REPORT_ROUTE_CHANGES_RC_V2                                            0x00
#define STATISTICS_REPORT_TRANSMISSION_COUNT_TC_V2                                       0x01
#define STATISTICS_REPORT_NEIGHBORS_NB_V2                                                0x02
#define STATISTICS_REPORT_PACKET_ERROR_COUNT_PEC_V2                                      0x03
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_TS_V2                                0x04
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_SQURARED_TS2_V2                      0x05

/* Network Management Installation Maintenance command class commands */
#define NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_VERSION_V3                           0x03
#define PRIORITY_ROUTE_SET_V3                                                            0x01
#define PRIORITY_ROUTE_GET_V3                                                            0x02
#define PRIORITY_ROUTE_REPORT_V3                                                         0x03
#define STATISTICS_GET_V3                                                                0x04
#define STATISTICS_REPORT_V3                                                             0x05
#define STATISTICS_CLEAR_V3                                                              0x06
#define RSSI_GET_V3                                                                      0x07
#define RSSI_REPORT_V3                                                                   0x08
#define S2_RESYNCHRONIZATION_EVENT_V3                                                    0x09
#define EXTENDED_STATISTICS_GET_V3                                                       0x0B
#define EXTENDED_STATISTICS_REPORT_V3                                                    0x0C
/* Values used for Priority Route Set command */
#define PRIORITY_ROUTE_SET_9_6_KBIT_SEC_V3                                               0x01
#define PRIORITY_ROUTE_SET_40_KBIT_SEC_V3                                                0x02
#define PRIORITY_ROUTE_SET_100_KBIT_SEC_V3                                               0x03
/* Values used for Priority Route Report command */
#define PRIORITY_ROUTE_REPORT_NONE_V3                                                    0x00
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_LWR_V3                                0x01
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_NLWR_V3                               0x02
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_APP_PR_V3                                0x10
#define PRIORITY_ROUTE_REPORT_9_6_KBIT_SEC_V3                                            0x01
#define PRIORITY_ROUTE_REPORT_40_KBIT_SEC_V3                                             0x02
#define PRIORITY_ROUTE_REPORT_100_KBIT_SEC_V3                                            0x03
/* Values used for Statistics Report command */
#define STATISTICS_REPORT_ROUTE_CHANGES_RC_V3                                            0x00
#define STATISTICS_REPORT_TRANSMISSION_COUNT_TC_V3                                       0x01
#define STATISTICS_REPORT_NEIGHBORS_NB_V3                                                0x02
#define STATISTICS_REPORT_PACKET_ERROR_COUNT_PEC_V3                                      0x03
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_TS_V3                                0x04
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_SQURARED_TS2_V3                      0x05
/* Values used for S2 Resynchronization Event command */
#define S2_RESYNCHRONIZATION_EVENT_SOS_EVENT_REASON_UNANSWERED_V3                        0x00

/* Network Management Installation Maintenance command class commands */
#define NETWORK_MANAGEMENT_INSTALLATION_MAINTENANCE_VERSION_V4                           0x04
#define PRIORITY_ROUTE_SET_V4                                                            0x01
#define PRIORITY_ROUTE_GET_V4                                                            0x02
#define PRIORITY_ROUTE_REPORT_V4                                                         0x03
#define STATISTICS_GET_V4                                                                0x04
#define STATISTICS_REPORT_V4                                                             0x05
#define STATISTICS_CLEAR_V4                                                              0x06
#define RSSI_GET_V4                                                                      0x07
#define RSSI_REPORT_V4                                                                   0x08
#define S2_RESYNCHRONIZATION_EVENT_V4                                                    0x09
#define EXTENDED_STATISTICS_GET_V4                                                       0x0B
#define EXTENDED_STATISTICS_REPORT_V4                                                    0x0C
#define ZWAVE_LR_CHANNEL_CONFIGURATION_SET_V4                                            0x0A
#define ZWAVE_LR_CHANNEL_CONFIGURATION_GET_V4                                            0x0D
#define ZWAVE_LR_CHANNEL_CONFIGURATION_REPORT_V4                                         0x0E
/* Values used for Priority Route Set command */
#define PRIORITY_ROUTE_SET_9_6_KBIT_SEC_V4                                               0x01
#define PRIORITY_ROUTE_SET_40_KBIT_SEC_V4                                                0x02
#define PRIORITY_ROUTE_SET_100_KBIT_SEC_V4                                               0x03
/* Values used for Priority Route Report command */
#define PRIORITY_ROUTE_REPORT_NONE_V4                                                    0x00
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_LWR_V4                                0x01
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_ZW_NLWR_V4                               0x02
#define PRIORITY_ROUTE_REPORT_ZW_PRIORITY_ROUTE_APP_PR_V4                                0x10
#define PRIORITY_ROUTE_REPORT_9_6_KBIT_SEC_V4                                            0x01
#define PRIORITY_ROUTE_REPORT_40_KBIT_SEC_V4                                             0x02
#define PRIORITY_ROUTE_REPORT_100_KBIT_SEC_V4                                            0x03
/* Values used for Statistics Report command */
#define STATISTICS_REPORT_ROUTE_CHANGES_RC_V4                                            0x00
#define STATISTICS_REPORT_TRANSMISSION_COUNT_TC_V4                                       0x01
#define STATISTICS_REPORT_NEIGHBORS_NB_V4                                                0x02
#define STATISTICS_REPORT_PACKET_ERROR_COUNT_PEC_V4                                      0x03
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_TS_V4                                0x04
#define STATISTICS_REPORT_SUM_OF_TRANSMISSION_TIMES_SQURARED_TS2_V4                      0x05
/* Values used for S2 Resynchronization Event command */
#define S2_RESYNCHRONIZATION_EVENT_SOS_EVENT_REASON_UNANSWERED_V4                        0x00

/* Zip Naming command class commands */
#define ZIP_NAMING_VERSION                                                               0x01
#define ZIP_NAMING_NAME_SET                                                              0x01
#define ZIP_NAMING_NAME_GET                                                              0x02
#define ZIP_NAMING_NAME_REPORT                                                           0x03
#define ZIP_NAMING_LOCATION_SET                                                          0x04
#define ZIP_NAMING_LOCATION_GET                                                          0x05
#define ZIP_NAMING_LOCATION_REPORT                                                       0x06

/* Mailbox command class commands */
#define MAILBOX_VERSION                                                                  0x01
#define MAILBOX_CONFIGURATION_GET                                                        0x01
#define MAILBOX_CONFIGURATION_SET                                                        0x02
#define MAILBOX_CONFIGURATION_REPORT                                                     0x03
#define MAILBOX_QUEUE                                                                    0x04
#define MAILBOX_WAKEUP_NOTIFICATION                                                      0x05
#define MAILBOX_NODE_FAILING                                                             0x06
/* Values used for Mailbox Configuration Set command */
#define MAILBOX_CONFIGURATION_SET_PROPERTIES1_MODE_MASK                                  0x07
#define MAILBOX_CONFIGURATION_SET_MODE_DISABLE                                           0x00
#define MAILBOX_CONFIGURATION_SET_MODE_ENABLE_MAILBOX_SERVICE                            0x01
#define MAILBOX_CONFIGURATION_SET_MODE_ENABLE_MAILBOX_PROXY                              0x02
#define MAILBOX_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK                              0xF8
#define MAILBOX_CONFIGURATION_SET_PROPERTIES1_RESERVED_SHIFT                             0x03
/* Values used for Mailbox Configuration Report command */
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_MODE_MASK                               0x07
#define MAILBOX_CONFIGURATION_REPORT_MODE_DISABLE                                        0x00
#define MAILBOX_CONFIGURATION_REPORT_MODE_ENABLE_MAILBOX_SERVICE                         0x01
#define MAILBOX_CONFIGURATION_REPORT_MODE_ENABLE_MAILBOX_PROXY                           0x02
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_SUPPORTED_MODES_MASK                    0x18
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_SUPPORTED_MODES_SHIFT                   0x03
#define MAILBOX_CONFIGURATION_REPORT_SUPPORTED_MODES_MAILBOX_SERVICE_SUPPORTED           0x00
#define MAILBOX_CONFIGURATION_REPORT_SUPPORTED_MODES_MAILBOX_PROXY_SUPPORTED             0x01
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK                           0xE0
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT                          0x05
/* Values used for Mailbox Queue command */
#define MAILBOX_QUEUE_PROPERTIES1_OPERATION_MASK                                         0x07
#define MAILBOX_QUEUE_OPERATION_PUSH                                                     0x00
#define MAILBOX_QUEUE_OPERATION_POP                                                      0x01
#define MAILBOX_QUEUE_OPERATION_WAITING                                                  0x02
#define MAILBOX_QUEUE_OPERATION_PING                                                     0x03
#define MAILBOX_QUEUE_OPERATION_ACK                                                      0x04
#define MAILBOX_QUEUE_OPERATION_NACK                                                     0x05
#define MAILBOX_QUEUE_OPERATION_QUEUE_FULL                                               0x06
#define MAILBOX_QUEUE_PROPERTIES1_LAST_BIT_MASK                                          0x08
#define MAILBOX_QUEUE_PROPERTIES1_RESERVED_MASK                                          0xF0
#define MAILBOX_QUEUE_PROPERTIES1_RESERVED_SHIFT                                         0x04

/* Mailbox command class commands */
#define MAILBOX_VERSION_V2                                                               0x02
#define MAILBOX_CONFIGURATION_GET_V2                                                     0x01
#define MAILBOX_CONFIGURATION_SET_V2                                                     0x02
#define MAILBOX_CONFIGURATION_REPORT_V2                                                  0x03
#define MAILBOX_QUEUE_V2                                                                 0x04
#define MAILBOX_WAKEUP_NOTIFICATION_V2                                                   0x05
#define MAILBOX_NODE_FAILING_V2                                                          0x06
/* Values used for Mailbox Configuration Set command */
#define MAILBOX_CONFIGURATION_SET_PROPERTIES1_MODE_MASK_V2                               0x07
#define MAILBOX_CONFIGURATION_SET_MODE_DISABLE_V2                                        0x00
#define MAILBOX_CONFIGURATION_SET_MODE_ENABLE_MAILBOX_SERVICE_V2                         0x01
#define MAILBOX_CONFIGURATION_SET_MODE_ENABLE_MAILBOX_PROXY_V2                           0x02
#define MAILBOX_CONFIGURATION_SET_PROPERTIES1_RESERVED_MASK_V2                           0xF8
#define MAILBOX_CONFIGURATION_SET_PROPERTIES1_RESERVED_SHIFT_V2                          0x03
/* Values used for Mailbox Configuration Report command */
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_MODE_MASK_V2                            0x07
#define MAILBOX_CONFIGURATION_REPORT_MODE_DISABLE_V2                                     0x00
#define MAILBOX_CONFIGURATION_REPORT_MODE_ENABLE_MAILBOX_SERVICE_V2                      0x01
#define MAILBOX_CONFIGURATION_REPORT_MODE_ENABLE_MAILBOX_PROXY_V2                        0x02
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_SUPPORTED_MODES_MASK_V2                 0x18
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_SUPPORTED_MODES_SHIFT_V2                0x03
#define MAILBOX_CONFIGURATION_REPORT_SUPPORTED_MODES_MAILBOX_SERVICE_SUPPORTED_V2        0x00
#define MAILBOX_CONFIGURATION_REPORT_SUPPORTED_MODES_MAILBOX_PROXY_SUPPORTED_V2          0x01
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_MASK_V2                        0xE0
#define MAILBOX_CONFIGURATION_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                       0x05
/* Values used for Mailbox Queue command */
#define MAILBOX_QUEUE_PROPERTIES1_OPERATION_MASK_V2                                      0x07
#define MAILBOX_QUEUE_OPERATION_PUSH_V2                                                  0x00
#define MAILBOX_QUEUE_OPERATION_POP_V2                                                   0x01
#define MAILBOX_QUEUE_OPERATION_WAITING_V2                                               0x02
#define MAILBOX_QUEUE_OPERATION_PING_V2                                                  0x03
#define MAILBOX_QUEUE_OPERATION_ACK_V2                                                   0x04
#define MAILBOX_QUEUE_OPERATION_NACK_V2                                                  0x05
#define MAILBOX_QUEUE_OPERATION_QUEUE_FULL_V2                                            0x06
#define MAILBOX_QUEUE_PROPERTIES1_LAST_BIT_MASK_V2                                       0x08
#define MAILBOX_QUEUE_PROPERTIES1_RESERVED_MASK_V2                                       0xF0
#define MAILBOX_QUEUE_PROPERTIES1_RESERVED_SHIFT_V2                                      0x04

/* Window Covering command class commands */
#define WINDOW_COVERING_VERSION                                                          0x01
#define WINDOW_COVERING_SUPPORTED_GET                                                    0x01
#define WINDOW_COVERING_SUPPORTED_REPORT                                                 0x02
#define WINDOW_COVERING_GET                                                              0x03
#define WINDOW_COVERING_REPORT                                                           0x04
#define WINDOW_COVERING_SET                                                              0x05
#define WINDOW_COVERING_START_LEVEL_CHANGE                                               0x06
#define WINDOW_COVERING_STOP_LEVEL_CHANGE                                                0x07
/* Values used for Window Covering Supported Report command */
#define WINDOW_COVERING_SUPPORTED_REPORT_PROPERTIES1_NUMBER_OF_PARAMETER_MASK_BYTES_MASK 0x0F
#define WINDOW_COVERING_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK                       0xF0
#define WINDOW_COVERING_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT                      0x04
/* Values used for Window Covering Get command */
#define WINDOW_COVERING_GET_OUT_LEFT_1                                                   0x00
#define WINDOW_COVERING_GET_OUT_LEFT_2                                                   0x01
#define WINDOW_COVERING_GET_OUT_RIGHT_1                                                  0x02
#define WINDOW_COVERING_GET_OUT_RIGHT_2                                                  0x03
#define WINDOW_COVERING_GET_IN_LEFT_1                                                    0x04
#define WINDOW_COVERING_GET_IN_LEFT_2                                                    0x05
#define WINDOW_COVERING_GET_IN_RIGHT_1                                                   0x06
#define WINDOW_COVERING_GET_IN_RIGHT_2                                                   0x07
#define WINDOW_COVERING_GET_IN_RIGHT_LEFT_1                                              0x08
#define WINDOW_COVERING_GET_IN_RIGHT_LEFT_2                                              0x09
#define WINDOW_COVERING_GET_VERTICAL_SLATS_ANGLE_1                                       0x0A
#define WINDOW_COVERING_GET_VERTICAL_SLATS_ANGLE_2                                       0x0B
#define WINDOW_COVERING_GET_OUT_BOTTOM_1                                                 0x0C
#define WINDOW_COVERING_GET_OUT_BOTTOM_2                                                 0x0D
#define WINDOW_COVERING_GET_OUT_TOP_1                                                    0x0E
#define WINDOW_COVERING_GET_OUT_TOP_2                                                    0x0F
#define WINDOW_COVERING_GET_IN_BOTTOM_1                                                  0x10
#define WINDOW_COVERING_GET_IN_BOTTOM_2                                                  0x11
#define WINDOW_COVERING_GET_IN_TOP_1                                                     0x12
#define WINDOW_COVERING_GET_IN_TOP_2                                                     0x13
#define WINDOW_COVERING_GET_IN_TOP_BOTTOM_1                                              0x14
#define WINDOW_COVERING_GET_IN_TOP_BOTTOM_2                                              0x15
#define WINDOW_COVERING_GET_HORIZONTAL_SLATS_ANGLE_1                                     0x16
#define WINDOW_COVERING_GET_HORIZONTAL_SLATS_ANGLE_2                                     0x17
/* Values used for Window Covering Report command */
#define WINDOW_COVERING_REPORT_OUT_LEFT_1                                                0x00
#define WINDOW_COVERING_REPORT_OUT_LEFT_2                                                0x01
#define WINDOW_COVERING_REPORT_OUT_RIGHT_1                                               0x02
#define WINDOW_COVERING_REPORT_OUT_RIGHT_2                                               0x03
#define WINDOW_COVERING_REPORT_IN_LEFT_1                                                 0x04
#define WINDOW_COVERING_REPORT_IN_LEFT_2                                                 0x05
#define WINDOW_COVERING_REPORT_IN_RIGHT_1                                                0x06
#define WINDOW_COVERING_REPORT_IN_RIGHT_2                                                0x07
#define WINDOW_COVERING_REPORT_IN_RIGHT_LEFT_1                                           0x08
#define WINDOW_COVERING_REPORT_IN_RIGHT_LEFT_2                                           0x09
#define WINDOW_COVERING_REPORT_VERTICAL_SLATS_ANGLE_1                                    0x0A
#define WINDOW_COVERING_REPORT_VERTICAL_SLATS_ANGLE_2                                    0x0B
#define WINDOW_COVERING_REPORT_OUT_BOTTOM_1                                              0x0C
#define WINDOW_COVERING_REPORT_OUT_BOTTOM_2                                              0x0D
#define WINDOW_COVERING_REPORT_OUT_TOP_1                                                 0x0E
#define WINDOW_COVERING_REPORT_OUT_TOP_2                                                 0x0F
#define WINDOW_COVERING_REPORT_IN_BOTTOM_1                                               0x10
#define WINDOW_COVERING_REPORT_IN_BOTTOM_2                                               0x11
#define WINDOW_COVERING_REPORT_IN_TOP_1                                                  0x12
#define WINDOW_COVERING_REPORT_IN_TOP_2                                                  0x13
#define WINDOW_COVERING_REPORT_IN_TOP_BOTTOM_1                                           0x14
#define WINDOW_COVERING_REPORT_IN_TOP_BOTTOM_2                                           0x15
#define WINDOW_COVERING_REPORT_HORIZONTAL_SLATS_ANGLE_1                                  0x16
#define WINDOW_COVERING_REPORT_HORIZONTAL_SLATS_ANGLE_2                                  0x17
/* Values used for Window Covering Set command */
#define WINDOW_COVERING_SET_PROPERTIES1_PARAMETER_COUNT_MASK                             0x1F
#define WINDOW_COVERING_SET_PROPERTIES1_RESERVED_MASK                                    0xE0
#define WINDOW_COVERING_SET_PROPERTIES1_RESERVED_SHIFT                                   0x05
#define WINDOW_COVERING_SET_OUT_LEFT_1                                                   0x00
#define WINDOW_COVERING_SET_OUT_LEFT_2                                                   0x01
#define WINDOW_COVERING_SET_OUT_RIGHT_1                                                  0x02
#define WINDOW_COVERING_SET_OUT_RIGHT_2                                                  0x03
#define WINDOW_COVERING_SET_IN_LEFT_1                                                    0x04
#define WINDOW_COVERING_SET_IN_LEFT_2                                                    0x05
#define WINDOW_COVERING_SET_IN_RIGHT_1                                                   0x06
#define WINDOW_COVERING_SET_IN_RIGHT_2                                                   0x07
#define WINDOW_COVERING_SET_IN_RIGHT_LEFT_1                                              0x08
#define WINDOW_COVERING_SET_IN_RIGHT_LEFT_2                                              0x09
#define WINDOW_COVERING_SET_VERTICAL_SLATS_ANGLE_1                                       0x0A
#define WINDOW_COVERING_SET_VERTICAL_SLATS_ANGLE_2                                       0x0B
#define WINDOW_COVERING_SET_OUT_BOTTOM_1                                                 0x0C
#define WINDOW_COVERING_SET_OUT_BOTTOM_2                                                 0x0D
#define WINDOW_COVERING_SET_OUT_TOP_1                                                    0x0E
#define WINDOW_COVERING_SET_OUT_TOP_2                                                    0x0F
#define WINDOW_COVERING_SET_IN_BOTTOM_1                                                  0x10
#define WINDOW_COVERING_SET_IN_BOTTOM_2                                                  0x11
#define WINDOW_COVERING_SET_IN_TOP_1                                                     0x12
#define WINDOW_COVERING_SET_IN_TOP_2                                                     0x13
#define WINDOW_COVERING_SET_IN_TOP_BOTTOM_1                                              0x14
#define WINDOW_COVERING_SET_IN_TOP_BOTTOM_2                                              0x15
#define WINDOW_COVERING_SET_HORIZONTAL_SLATS_ANGLE_1                                     0x16
#define WINDOW_COVERING_SET_HORIZONTAL_SLATS_ANGLE_2                                     0x17
/* Values used for Window Covering Start Level Change command */
#define WINDOW_COVERING_START_LEVEL_CHANGE_PROPERTIES1_RES1_MASK                         0x3F
#define WINDOW_COVERING_START_LEVEL_CHANGE_PROPERTIES1_UP_DOWN_BIT_MASK                  0x40
#define WINDOW_COVERING_START_LEVEL_CHANGE_PROPERTIES1_RES2_BIT_MASK                     0x80
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_LEFT_1                                    0x00
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_LEFT_2                                    0x01
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_RIGHT_1                                   0x02
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_RIGHT_2                                   0x03
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_LEFT_1                                     0x04
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_LEFT_2                                     0x05
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_RIGHT_1                                    0x06
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_RIGHT_2                                    0x07
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_RIGHT_LEFT_1                               0x08
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_RIGHT_LEFT_2                               0x09
#define WINDOW_COVERING_START_LEVEL_CHANGE_VERTICAL_SLATS_ANGLE_1                        0x0A
#define WINDOW_COVERING_START_LEVEL_CHANGE_VERTICAL_SLATS_ANGLE_2                        0x0B
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_BOTTOM_1                                  0x0C
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_BOTTOM_2                                  0x0D
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_TOP_1                                     0x0E
#define WINDOW_COVERING_START_LEVEL_CHANGE_OUT_TOP_2                                     0x0F
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_BOTTOM_1                                   0x10
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_BOTTOM_2                                   0x11
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_TOP_1                                      0x12
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_TOP_2                                      0x13
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_TOP_BOTTOM_1                               0x14
#define WINDOW_COVERING_START_LEVEL_CHANGE_IN_TOP_BOTTOM_2                               0x15
#define WINDOW_COVERING_START_LEVEL_CHANGE_HORIZONTAL_SLATS_ANGLE_1                      0x16
#define WINDOW_COVERING_START_LEVEL_CHANGE_HORIZONTAL_SLATS_ANGLE_2                      0x17
/* Values used for Window Covering Stop Level Change command */
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_LEFT_1                                     0x00
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_LEFT_2                                     0x01
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_RIGHT_1                                    0x02
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_RIGHT_2                                    0x03
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_LEFT_1                                      0x04
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_LEFT_2                                      0x05
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_RIGHT_1                                     0x06
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_RIGHT_2                                     0x07
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_RIGHT_LEFT_1                                0x08
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_RIGHT_LEFT_2                                0x09
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_VERTICAL_SLATS_ANGLE_1                         0x0A
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_VERTICAL_SLATS_ANGLE_2                         0x0B
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_BOTTOM_1                                   0x0C
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_BOTTOM_2                                   0x0D
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_TOP_1                                      0x0E
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_OUT_TOP_2                                      0x0F
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_BOTTOM_1                                    0x10
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_BOTTOM_2                                    0x11
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_TOP_1                                       0x12
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_TOP_2                                       0x13
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_TOP_BOTTOM_1                                0x14
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_IN_TOP_BOTTOM_2                                0x15
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_HORIZONTAL_SLATS_ANGLE_1                       0x16
#define WINDOW_COVERING_STOP_LEVEL_CHANGE_HORIZONTAL_SLATS_ANGLE_2                       0x17

/* Security 2 command class commands */
#define SECURITY_2_VERSION                                                               0x01
#define SECURITY_2_NONCE_GET                                                             0x01
#define SECURITY_2_NONCE_REPORT                                                          0x02
#define SECURITY_2_MESSAGE_ENCAPSULATION                                                 0x03
#define KEX_GET                                                                          0x04
#define KEX_REPORT                                                                       0x05
#define KEX_SET                                                                          0x06
#define KEX_FAIL                                                                         0x07
#define PUBLIC_KEY_REPORT                                                                0x08
#define SECURITY_2_NETWORK_KEY_GET                                                       0x09
#define SECURITY_2_NETWORK_KEY_REPORT                                                    0x0A
#define SECURITY_2_NETWORK_KEY_VERIFY                                                    0x0B
#define SECURITY_2_TRANSFER_END                                                          0x0C
#define SECURITY_2_COMMANDS_SUPPORTED_GET                                                0x0D
#define SECURITY_2_COMMANDS_SUPPORTED_REPORT                                             0x0E
/* Values used for Security 2 Nonce Report command */
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_SOS_BIT_MASK                                 0x01
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_MOS_BIT_MASK                                 0x02
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_RESERVED_MASK                                0xFC
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_RESERVED_SHIFT                               0x02
/* Values used for Security 2 Message Encapsulation command */
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_EXTENSION_BIT_MASK                  0x01
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_ENCRYPTED_EXTENSION_BIT_MASK        0x02
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_MASK                       0xFC
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_SHIFT                      0x02
/* Values used for Kex Report command */
#define KEX_REPORT_PROPERTIES1_ECHO_BIT_MASK                                             0x01
#define KEX_REPORT_PROPERTIES1_REQUEST_CSA_BIT_MASK                                      0x02
#define KEX_REPORT_PROPERTIES1_RESERVED_MASK                                             0xFC
#define KEX_REPORT_PROPERTIES1_RESERVED_SHIFT                                            0x02
/* Values used for Kex Set command */
#define KEX_SET_PROPERTIES1_ECHO_BIT_MASK                                                0x01
#define KEX_SET_PROPERTIES1_REQUEST_CSA_BIT_MASK                                         0x02
#define KEX_SET_PROPERTIES1_RESERVED_MASK                                                0xFC
#define KEX_SET_PROPERTIES1_RESERVED_SHIFT                                               0x02
/* Values used for Kex Fail command */
#define KEX_FAIL_KEX_KEY                                                                 0x01
#define KEX_FAIL_KEX_SCHEME                                                              0x02
#define KEX_FAIL_KEX_CURVES                                                              0x03
#define KEX_FAIL_DECRYPT                                                                 0x05
#define KEX_FAIL_CANCEL                                                                  0x06
#define KEX_FAIL_AUTH                                                                    0x07
#define KEX_FAIL_KEY_GET                                                                 0x08
#define KEX_FAIL_KEY_VERIFY                                                              0x09
#define KEX_FAIL_KEY_REPORT                                                              0x0A
/* Values used for Public Key Report command */
#define PUBLIC_KEY_REPORT_PROPERTIES1_INCLUDING_NODE_BIT_MASK                            0x01
#define PUBLIC_KEY_REPORT_PROPERTIES1_RESERVED_MASK                                      0xFE
#define PUBLIC_KEY_REPORT_PROPERTIES1_RESERVED_SHIFT                                     0x01
/* Values used for Security 2 Transfer End command */
#define SECURITY_2_TRANSFER_END_PROPERTIES1_KEY_REQUEST_COMPLETE_BIT_MASK                0x01
#define SECURITY_2_TRANSFER_END_PROPERTIES1_KEY_VERIFIED_BIT_MASK                        0x02
#define SECURITY_2_TRANSFER_END_PROPERTIES1_RESERVED_MASK                                0xFC
#define SECURITY_2_TRANSFER_END_PROPERTIES1_RESERVED_SHIFT                               0x02

/* Security 2 command class commands */
#define SECURITY_2_VERSION_V2                                                            0x02
#define SECURITY_2_NONCE_GET_V2                                                          0x01
#define SECURITY_2_NONCE_REPORT_V2                                                       0x02
#define SECURITY_2_MESSAGE_ENCAPSULATION_V2                                              0x03
#define KEX_GET_V2                                                                       0x04
#define KEX_REPORT_V2                                                                    0x05
#define KEX_SET_V2                                                                       0x06
#define KEX_FAIL_V2                                                                      0x07
#define PUBLIC_KEY_REPORT_V2                                                             0x08
#define SECURITY_2_NETWORK_KEY_GET_V2                                                    0x09
#define SECURITY_2_NETWORK_KEY_REPORT_V2                                                 0x0A
#define SECURITY_2_NETWORK_KEY_VERIFY_V2                                                 0x0B
#define SECURITY_2_TRANSFER_END_V2                                                       0x0C
#define SECURITY_2_COMMANDS_SUPPORTED_GET_V2                                             0x0D
#define SECURITY_2_COMMANDS_SUPPORTED_REPORT_V2                                          0x0E
#define NLS_NODE_LIST_GET_V2                                                             0x0F
#define NLS_NODE_LIST_REPORT_V2                                                          0x10
#define NLS_STATE_GET_V2                                                                 0x11
#define NLS_STATE_REPORT_V2                                                              0x12
#define NLS_STATE_SET_V2                                                                 0x13
/* Values used for Security 2 Nonce Report command */
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_SOS_BIT_MASK_V2                              0x01
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_MOS_BIT_MASK_V2                              0x02
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_RESERVED_MASK_V2                             0xFC
#define SECURITY_2_NONCE_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                            0x02
/* Values used for Security 2 Message Encapsulation command */
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_EXTENSION_BIT_MASK_V2               0x01
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_ENCRYPTED_EXTENSION_BIT_MASK_V2     0x02
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_MASK_V2                    0xFC
#define SECURITY_2_MESSAGE_ENCAPSULATION_PROPERTIES1_RESERVED_SHIFT_V2                   0x02
/* Values used for Kex Report command */
#define KEX_REPORT_PROPERTIES1_ECHO_BIT_MASK_V2                                          0x01
#define KEX_REPORT_PROPERTIES1_REQUEST_CSA_BIT_MASK_V2                                   0x02
#define KEX_REPORT_PROPERTIES1_NLS_SUPPORT_BIT_MASK_V2                                   0x04
#define KEX_REPORT_PROPERTIES1_RESERVED_MASK_V2                                          0xF8
#define KEX_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                         0x03
/* Values used for Kex Set command */
#define KEX_SET_PROPERTIES1_ECHO_BIT_MASK_V2                                             0x01
#define KEX_SET_PROPERTIES1_REQUEST_CSA_BIT_MASK_V2                                      0x02
#define KEX_SET_PROPERTIES1_RESERVED_MASK_V2                                             0xFC
#define KEX_SET_PROPERTIES1_RESERVED_SHIFT_V2                                            0x02
/* Values used for Kex Fail command */
#define KEX_FAIL_KEX_KEY_V2                                                              0x01
#define KEX_FAIL_KEX_SCHEME_V2                                                           0x02
#define KEX_FAIL_KEX_CURVES_V2                                                           0x03
#define KEX_FAIL_DECRYPT_V2                                                              0x05
#define KEX_FAIL_CANCEL_V2                                                               0x06
#define KEX_FAIL_AUTH_V2                                                                 0x07
#define KEX_FAIL_KEY_GET_V2                                                              0x08
#define KEX_FAIL_KEY_VERIFY_V2                                                           0x09
#define KEX_FAIL_KEY_REPORT_V2                                                           0x0A
/* Values used for Public Key Report command */
#define PUBLIC_KEY_REPORT_PROPERTIES1_INCLUDING_NODE_BIT_MASK_V2                         0x01
#define PUBLIC_KEY_REPORT_PROPERTIES1_RESERVED_MASK_V2                                   0xFE
#define PUBLIC_KEY_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                  0x01
/* Values used for Security 2 Transfer End command */
#define SECURITY_2_TRANSFER_END_PROPERTIES1_KEY_REQUEST_COMPLETE_BIT_MASK_V2             0x01
#define SECURITY_2_TRANSFER_END_PROPERTIES1_KEY_VERIFIED_BIT_MASK_V2                     0x02
#define SECURITY_2_TRANSFER_END_PROPERTIES1_RESERVED_MASK_V2                             0xFC
#define SECURITY_2_TRANSFER_END_PROPERTIES1_RESERVED_SHIFT_V2                            0x02
/* Values used for Nls Node List Report command */
#define NLS_NODE_LIST_REPORT_PROPERTIES1_LAST_NODE_BIT_MASK_V2                           0x01
#define NLS_NODE_LIST_REPORT_PROPERTIES1_RESERVED_MASK_V2                                0xFE
#define NLS_NODE_LIST_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                               0x01
/* Values used for Nls State Report command */
#define NLS_STATE_REPORT_PROPERTIES1_CAPABILITY_BIT_MASK_V2                              0x01
#define NLS_STATE_REPORT_PROPERTIES1_NLS_STATE_BIT_MASK_V2                               0x02
#define NLS_STATE_REPORT_PROPERTIES1_RESERVED_MASK_V2                                    0xFC
#define NLS_STATE_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                                   0x02

/* Irrigation command class commands */
#define IRRIGATION_VERSION                                                               0x01
#define IRRIGATION_SYSTEM_INFO_GET                                                       0x01
#define IRRIGATION_SYSTEM_INFO_REPORT                                                    0x02
#define IRRIGATION_SYSTEM_STATUS_GET                                                     0x03
#define IRRIGATION_SYSTEM_STATUS_REPORT                                                  0x04
#define IRRIGATION_SYSTEM_CONFIG_SET                                                     0x05
#define IRRIGATION_SYSTEM_CONFIG_GET                                                     0x06
#define IRRIGATION_SYSTEM_CONFIG_REPORT                                                  0x07
#define IRRIGATION_VALVE_INFO_GET                                                        0x08
#define IRRIGATION_VALVE_INFO_REPORT                                                     0x09
#define IRRIGATION_VALVE_CONFIG_SET                                                      0x0A
#define IRRIGATION_VALVE_CONFIG_GET                                                      0x0B
#define IRRIGATION_VALVE_CONFIG_REPORT                                                   0x0C
#define IRRIGATION_VALVE_RUN                                                             0x0D
#define IRRIGATION_VALVE_TABLE_SET                                                       0x0E
#define IRRIGATION_VALVE_TABLE_GET                                                       0x0F
#define IRRIGATION_VALVE_TABLE_REPORT                                                    0x10
#define IRRIGATION_VALVE_TABLE_RUN                                                       0x11
#define IRRIGATION_SYSTEM_SHUTOFF                                                        0x12
/* Values used for Irrigation System Info Report command */
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_MAIN_VALVE_BIT_MASK                    0x01
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_RESERVED1_MASK                         0x06
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_RESERVED1_SHIFT                        0x01
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_RESERVED2_MASK                         0x18
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_RESERVED2_SHIFT                        0x03
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_RESERVED3_MASK                         0xE0
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES1_RESERVED3_SHIFT                        0x05
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES2_VALVE_TABLE_MAX_SIZE_MASK              0x0F
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES2_RESERVED_MASK                          0xF0
#define IRRIGATION_SYSTEM_INFO_REPORT_PROPERTIES2_RESERVED_SHIFT                         0x04
/* Values used for Irrigation System Status Report command */
#define IRRIGATION_SYSTEM_STATUS_REPORT_FLOW_SENSOR_DETECTED                             0x00
#define IRRIGATION_SYSTEM_STATUS_REPORT_PRESSURE_SENSOR_DETECTED                         0x01
#define IRRIGATION_SYSTEM_STATUS_REPORT_RAIN_SENSOR_DETECTED                             0x02
#define IRRIGATION_SYSTEM_STATUS_REPORT_MOISTURE_SENSOR_DETECTED                         0x03
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES1_FLOW_SIZE_MASK                       0x07
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES1_FLOW_SCALE_MASK                      0x18
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES1_FLOW_SCALE_SHIFT                     0x03
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES1_FLOW_PRECISION_MASK                  0xE0
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES1_FLOW_PRECISION_SHIFT                 0x05
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES2_PRESSURE_SIZE_MASK                   0x07
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES2_PRESSURE_SCALE_MASK                  0x18
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES2_PRESSURE_SCALE_SHIFT                 0x03
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES2_PRESSURE_PRECISION_MASK              0xE0
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES2_PRESSURE_PRECISION_SHIFT             0x05
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES3_MAIN_VALVE_BIT_MASK                  0x01
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES3_RESERVED_MASK                        0xFE
#define IRRIGATION_SYSTEM_STATUS_REPORT_PROPERTIES3_RESERVED_SHIFT                       0x01
/* Values used for Irrigation System Config Set command */
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_SIZE_MASK       0x07
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_SCALE_MASK      0x18
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_SCALE_SHIFT     0x03
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_PRECISION_MASK  0xE0
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_PRECISION_SHIFT 0x05
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES2_LOW_PRESSURE_THRESHOLD_SIZE_MASK        0x07
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES2_LOW_PRESSURE_THRESHOLD_SCALE_MASK       0x18
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES2_LOW_PRESSURE_THRESHOLD_SCALE_SHIFT      0x03
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES2_LOW_PRESSURE_THRESHOLD_PRECISION_MASK   0xE0
#define IRRIGATION_SYSTEM_CONFIG_SET_PROPERTIES2_LOW_PRESSURE_THRESHOLD_PRECISION_SHIFT  0x05
/* Values used for Irrigation System Config Report command */
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_SIZE_MASK    0x07
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_SCALE_MASK   0x18
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_SCALE_SHIFT  0x03
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_PRECISION_MASK 0xE0
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES1_HIGH_PRESSURE_THRESHOLD_PRECISION_SHIFT 0x05
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES2_LOW_PRESSURE_THRESHOLD_SIZE_MASK     0x07
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES2_LOW_PRESSURE_THRESHOLD_SCALE_MASK    0x18
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES2_LOW_PRESSURE_THRESHOLD_SCALE_SHIFT   0x03
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES2_LOW_PRESSURE_THRESHOLD_PRECISION_MASK 0xE0
#define IRRIGATION_SYSTEM_CONFIG_REPORT_PROPERTIES2_LOW_PRESSURE_THRESHOLD_PRECISION_SHIFT 0x05
/* Values used for Irrigation Valve Info Get command */
#define IRRIGATION_VALVE_INFO_GET_PROPERTIES1_MAIN_VALVE_BIT_MASK                        0x01
#define IRRIGATION_VALVE_INFO_GET_PROPERTIES1_RESERVED_MASK                              0xFE
#define IRRIGATION_VALVE_INFO_GET_PROPERTIES1_RESERVED_SHIFT                             0x01
/* Values used for Irrigation Valve Info Report command */
#define IRRIGATION_VALVE_INFO_REPORT_PROPERTIES1_MAIN_BIT_MASK                           0x01
#define IRRIGATION_VALVE_INFO_REPORT_PROPERTIES1_CONNECTED_BIT_MASK                      0x02
#define IRRIGATION_VALVE_INFO_REPORT_PROPERTIES1_RESERVED_MASK                           0xFC
#define IRRIGATION_VALVE_INFO_REPORT_PROPERTIES1_RESERVED_SHIFT                          0x02
/* Values used for Irrigation Valve Config Set command */
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES1_MAIN_VALVE_BIT_MASK                      0x01
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES1_RESERVED_MASK                            0xFE
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES1_RESERVED_SHIFT                           0x01
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES2_MAXIMUM_FLOW_SIZE_MASK                   0x07
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES2_MAXIMUM_FLOW_SCALE_MASK                  0x18
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES2_MAXIMUM_FLOW_SCALE_SHIFT                 0x03
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES2_MAXIMUM_FLOW_PRECISION_MASK              0xE0
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES2_MAXIMUM_FLOW_PRECISION_SHIFT             0x05
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES3_FLOW_HIGH_THRESHOLD_SIZE_MASK            0x07
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES3_FLOW_HIGH_THRESHOLD_SCALE_MASK           0x18
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES3_FLOW_HIGH_THRESHOLD_SCALE_SHIFT          0x03
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES3_FLOW_HIGH_THRESHOLD_PRECISION_MASK       0xE0
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES3_FLOW_HIGH_THRESHOLD_PRECISION_SHIFT      0x05
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES4_FLOW_LOW_THRESHOLD_SIZE_MASK             0x07
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES4_FLOW_LOW_THRESHOLD_SCALE_MASK            0x18
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES4_FLOW_LOW_THRESHOLD_SCALE_SHIFT           0x03
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES4_FLOW_LOW_THRESHOLD_PRECISION_MASK        0xE0
#define IRRIGATION_VALVE_CONFIG_SET_PROPERTIES4_FLOW_LOW_THRESHOLD_PRECISION_SHIFT       0x05
/* Values used for Irrigation Valve Config Get command */
#define IRRIGATION_VALVE_CONFIG_GET_PROPERTIES1_MAIN_VALVE_BIT_MASK                      0x01
#define IRRIGATION_VALVE_CONFIG_GET_PROPERTIES1_RESERVED_MASK                            0xFE
#define IRRIGATION_VALVE_CONFIG_GET_PROPERTIES1_RESERVED_SHIFT                           0x01
/* Values used for Irrigation Valve Config Report command */
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES1_MAIN_VALVE_BIT_MASK                   0x01
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES1_RESERVED_MASK                         0xFE
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES1_RESERVED_SHIFT                        0x01
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES2_MAXIMUM_FLOW_SIZE_MASK                0x07
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES2_MAXIMUM_FLOW_SCALE_MASK               0x18
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES2_MAXIMUM_FLOW_SCALE_SHIFT              0x03
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES2_MAXIMUM_FLOW_PRECISION_MASK           0xE0
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES2_MAXIMUM_FLOW_PRECISION_SHIFT          0x05
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES3_FLOW_HIGH_THRESHOLD_SIZE_MASK         0x07
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES3_FLOW_HIGH_THRESHOLD_SCALE_MASK        0x18
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES3_FLOW_HIGH_THRESHOLD_SCALE_SHIFT       0x03
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES3_FLOW_HIGH_THRESHOLD_PRECISION_MASK    0xE0
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES3_FLOW_HIGH_THRESHOLD_PRECISION_SHIFT   0x05
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES4_FLOW_LOW_THRESHOLD_SIZE_MASK          0x07
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES4_FLOW_LOW_THRESHOLD_SCALE_MASK         0x18
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES4_FLOW_LOW_THRESHOLD_SCALE_SHIFT        0x03
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES4_FLOW_LOW_THRESHOLD_PRECISION_MASK     0xE0
#define IRRIGATION_VALVE_CONFIG_REPORT_PROPERTIES4_FLOW_LOW_THRESHOLD_PRECISION_SHIFT    0x05
/* Values used for Irrigation Valve Run command */
#define IRRIGATION_VALVE_RUN_PROPERTIES1_MAIN_VALVE_BIT_MASK                             0x01
#define IRRIGATION_VALVE_RUN_PROPERTIES1_RESERVED_MASK                                   0xFE
#define IRRIGATION_VALVE_RUN_PROPERTIES1_RESERVED_SHIFT                                  0x01

/* Supervision command class commands */
#define SUPERVISION_VERSION                                                              0x01
#define SUPERVISION_GET                                                                  0x01
#define SUPERVISION_REPORT                                                               0x02
/* Values used for Supervision Get command */
#define SUPERVISION_GET_PROPERTIES1_SESSION_ID_MASK                                      0x3F
#define SUPERVISION_GET_PROPERTIES1_RESERVED_BIT_MASK                                    0x40
#define SUPERVISION_GET_PROPERTIES1_STATUS_UPDATES_BIT_MASK                              0x80
/* Values used for Supervision Report command */
#define SUPERVISION_REPORT_PROPERTIES1_SESSION_ID_MASK                                   0x3F
#define SUPERVISION_REPORT_PROPERTIES1_RESERVED_BIT_MASK                                 0x40
#define SUPERVISION_REPORT_PROPERTIES1_MORE_STATUS_UPDATES_BIT_MASK                      0x80
#define SUPERVISION_REPORT_NO_SUPPORT                                                    0x00
#define SUPERVISION_REPORT_WORKING                                                       0x01
#define SUPERVISION_REPORT_FAIL                                                          0x02
#define SUPERVISION_REPORT_BUSY                                                          0x03
#define SUPERVISION_REPORT_SUCCESS                                                       0xFF

/* Supervision command class commands */
#define SUPERVISION_VERSION_V2                                                           0x02
#define SUPERVISION_GET_V2                                                               0x01
#define SUPERVISION_REPORT_V2                                                            0x02
/* Values used for Supervision Get command */
#define SUPERVISION_GET_PROPERTIES1_SESSION_ID_MASK_V2                                   0x3F
#define SUPERVISION_GET_PROPERTIES1_RESERVED_BIT_MASK_V2                                 0x40
#define SUPERVISION_GET_PROPERTIES1_STATUS_UPDATES_BIT_MASK_V2                           0x80
/* Values used for Supervision Report command */
#define SUPERVISION_REPORT_PROPERTIES1_SESSION_ID_MASK_V2                                0x3F
#define SUPERVISION_REPORT_PROPERTIES1_WAKE_UP_REQUEST_BIT_MASK_V2                       0x40
#define SUPERVISION_REPORT_PROPERTIES1_MORE_STATUS_UPDATES_BIT_MASK_V2                   0x80
#define SUPERVISION_REPORT_NO_SUPPORT_V2                                                 0x00
#define SUPERVISION_REPORT_WORKING_V2                                                    0x01
#define SUPERVISION_REPORT_FAIL_V2                                                       0x02
#define SUPERVISION_REPORT_BUSY_V2                                                       0x03
#define SUPERVISION_REPORT_SUCCESS_V2                                                    0xFF

/* Humidity Control Setpoint command class commands */
#define HUMIDITY_CONTROL_SETPOINT_VERSION                                                0x01
#define HUMIDITY_CONTROL_SETPOINT_SET                                                    0x01
#define HUMIDITY_CONTROL_SETPOINT_GET                                                    0x02
#define HUMIDITY_CONTROL_SETPOINT_REPORT                                                 0x03
#define HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET                                          0x04
#define HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT                                       0x05
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET                                    0x06
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT                                 0x07
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET                                       0x08
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT                                    0x09
/* Values used for Humidity Control Setpoint Set command */
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES1_SETPOINT_TYPE_MASK                     0x0F
#define HUMIDITY_CONTROL_SETPOINT_SET_SETPOINT_TYPE_HUMIDIFIER                           0x01
#define HUMIDITY_CONTROL_SETPOINT_SET_SETPOINT_TYPE_DEHUMIDIFIER                         0x02
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES1_RESERVED_MASK                          0xF0
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES1_RESERVED_SHIFT                         0x04
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_SIZE_MASK                              0x07
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_SCALE_MASK                             0x18
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_SCALE_SHIFT                            0x03
#define HUMIDITY_CONTROL_SETPOINT_SET_SCALE_PERCENTAGE                                   0x00
#define HUMIDITY_CONTROL_SETPOINT_SET_SCALE_ABSOLUTE                                     0x01
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_PRECISION_MASK                         0xE0
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_PRECISION_SHIFT                        0x05
/* Values used for Humidity Control Setpoint Get command */
#define HUMIDITY_CONTROL_SETPOINT_GET_PROPERTIES1_SETPOINT_TYPE_MASK                     0x0F
#define HUMIDITY_CONTROL_SETPOINT_GET_SETPOINT_TYPE_HUMIDIFIER                           0x01
#define HUMIDITY_CONTROL_SETPOINT_GET_SETPOINT_TYPE_DEHUMIDIFIER                         0x02
#define HUMIDITY_CONTROL_SETPOINT_GET_PROPERTIES1_RESERVED_MASK                          0xF0
#define HUMIDITY_CONTROL_SETPOINT_GET_PROPERTIES1_RESERVED_SHIFT                         0x04
/* Values used for Humidity Control Setpoint Report command */
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES1_SETPOINT_TYPE_MASK                  0x0F
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SETPOINT_TYPE_HUMIDIFIER                        0x01
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SETPOINT_TYPE_DEHUMIDIFIER                      0x02
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES1_RESERVED_MASK                       0xF0
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES1_RESERVED_SHIFT                      0x04
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_SIZE_MASK                           0x07
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_SCALE_MASK                          0x18
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_SCALE_SHIFT                         0x03
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SCALE_PERCENTAGE                                0x00
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SCALE_ABSOLUTE                                  0x01
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_PRECISION_MASK                      0xE0
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_PRECISION_SHIFT                     0x05
/* Values used for Humidity Control Setpoint Scale Supported Get command */
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_PROPERTIES1_SETPOINT_TYPE_MASK     0x0F
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_SETPOINT_TYPE_HUMIDIFIER           0x01
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_SETPOINT_TYPE_DEHUMIDIFIER         0x02
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_PROPERTIES1_RESERVED_MASK          0xF0
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_PROPERTIES1_RESERVED_SHIFT         0x04
/* Values used for Humidity Control Setpoint Scale Supported Report command */
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK 0x0F
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_SCALE_BIT_MASK_PERCENTAGE       0x00
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_SCALE_BIT_MASK_ABSOLUTE         0x01
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK       0xF0
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT      0x04
/* Values used for Humidity Control Setpoint Capabilities Get command */
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_PROPERTIES1_SETPOINT_TYPE_MASK        0x0F
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_HUMIDIFIER              0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_DEHUMIDIFIER            0x02
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_PROPERTIES1_RESERVED_MASK             0xF0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_PROPERTIES1_RESERVED_SHIFT            0x04
/* Values used for Humidity Control Setpoint Capabilities Report command */
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_SETPOINT_TYPE_MASK     0x0F
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_HUMIDIFIER           0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_DEHUMIDIFIER         0x02
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK          0xF0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_SHIFT         0x04
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SIZE1_MASK             0x07
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SCALE1_MASK            0x18
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SCALE1_SHIFT           0x03
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE1_PERCENTAGE                  0x00
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE1_ABSOLUTE                    0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_PRECISION1_MASK        0xE0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_PRECISION1_SHIFT       0x05
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SIZE2_MASK             0x07
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SCALE2_MASK            0x18
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SCALE2_SHIFT           0x03
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE2_PERCENTAGE                  0x00
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE2_ABSOLUTE                    0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_PRECISION2_MASK        0xE0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_PRECISION2_SHIFT       0x05

/* Humidity Control Setpoint command class commands */
#define HUMIDITY_CONTROL_SETPOINT_VERSION_V2                                             0x02
#define HUMIDITY_CONTROL_SETPOINT_SET_V2                                                 0x01
#define HUMIDITY_CONTROL_SETPOINT_GET_V2                                                 0x02
#define HUMIDITY_CONTROL_SETPOINT_REPORT_V2                                              0x03
#define HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_V2                                       0x04
#define HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_V2                                    0x05
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_V2                                 0x06
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_V2                              0x07
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_V2                                    0x08
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_V2                                 0x09
/* Values used for Humidity Control Setpoint Set command */
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES1_SETPOINT_TYPE_MASK_V2                  0x0F
#define HUMIDITY_CONTROL_SETPOINT_SET_SETPOINT_TYPE_HUMIDIFIER_V2                        0x01
#define HUMIDITY_CONTROL_SETPOINT_SET_SETPOINT_TYPE_DEHUMIDIFIER_V2                      0x02
#define HUMIDITY_CONTROL_SETPOINT_SET_SETPOINT_TYPE_AUTO_V2                              0x03
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES1_RESERVED_MASK_V2                       0xF0
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES1_RESERVED_SHIFT_V2                      0x04
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_SIZE_MASK_V2                           0x07
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_SCALE_MASK_V2                          0x18
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_SCALE_SHIFT_V2                         0x03
#define HUMIDITY_CONTROL_SETPOINT_SET_SCALE_PERCENTAGE_V2                                0x00
#define HUMIDITY_CONTROL_SETPOINT_SET_SCALE_ABSOLUTE_V2                                  0x01
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_PRECISION_MASK_V2                      0xE0
#define HUMIDITY_CONTROL_SETPOINT_SET_PROPERTIES2_PRECISION_SHIFT_V2                     0x05
/* Values used for Humidity Control Setpoint Get command */
#define HUMIDITY_CONTROL_SETPOINT_GET_PROPERTIES1_SETPOINT_TYPE_MASK_V2                  0x0F
#define HUMIDITY_CONTROL_SETPOINT_GET_SETPOINT_TYPE_HUMIDIFIER_V2                        0x01
#define HUMIDITY_CONTROL_SETPOINT_GET_SETPOINT_TYPE_DEHUMIDIFIER_V2                      0x02
#define HUMIDITY_CONTROL_SETPOINT_GET_SETPOINT_TYPE_AUTO_V2                              0x03
#define HUMIDITY_CONTROL_SETPOINT_GET_PROPERTIES1_RESERVED_MASK_V2                       0xF0
#define HUMIDITY_CONTROL_SETPOINT_GET_PROPERTIES1_RESERVED_SHIFT_V2                      0x04
/* Values used for Humidity Control Setpoint Report command */
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES1_SETPOINT_TYPE_MASK_V2               0x0F
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SETPOINT_TYPE_HUMIDIFIER_V2                     0x01
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SETPOINT_TYPE_DEHUMIDIFIER_V2                   0x02
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SETPOINT_TYPE_AUTO_V2                           0x03
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES1_RESERVED_MASK_V2                    0xF0
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                   0x04
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_SIZE_MASK_V2                        0x07
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_SCALE_MASK_V2                       0x18
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_SCALE_SHIFT_V2                      0x03
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SCALE_PERCENTAGE_V2                             0x00
#define HUMIDITY_CONTROL_SETPOINT_REPORT_SCALE_ABSOLUTE_V2                               0x01
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_PRECISION_MASK_V2                   0xE0
#define HUMIDITY_CONTROL_SETPOINT_REPORT_PROPERTIES2_PRECISION_SHIFT_V2                  0x05
/* Values used for Humidity Control Setpoint Scale Supported Get command */
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_PROPERTIES1_SETPOINT_TYPE_MASK_V2  0x0F
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_SETPOINT_TYPE_HUMIDIFIER_V2        0x01
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_SETPOINT_TYPE_DEHUMIDIFIER_V2      0x02
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_SETPOINT_TYPE_AUTO_V2              0x03
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_PROPERTIES1_RESERVED_MASK_V2       0xF0
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_PROPERTIES1_RESERVED_SHIFT_V2      0x04
/* Values used for Humidity Control Setpoint Scale Supported Report command */
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_PROPERTIES1_SCALE_BIT_MASK_MASK_V2 0x0F
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_SCALE_BIT_MASK_PERCENTAGE_V2    0x00
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_SCALE_BIT_MASK_ABSOLUTE_V2      0x01
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_MASK_V2    0xF0
#define HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_PROPERTIES1_RESERVED_SHIFT_V2   0x04
/* Values used for Humidity Control Setpoint Capabilities Get command */
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_PROPERTIES1_SETPOINT_TYPE_MASK_V2     0x0F
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_HUMIDIFIER_V2           0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_DEHUMIDIFIER_V2         0x02
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_SETPOINT_TYPE_AUTO_V2                 0x03
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_PROPERTIES1_RESERVED_MASK_V2          0xF0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_PROPERTIES1_RESERVED_SHIFT_V2         0x04
/* Values used for Humidity Control Setpoint Capabilities Report command */
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_SETPOINT_TYPE_MASK_V2  0x0F
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_HUMIDIFIER_V2        0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_DEHUMIDIFIER_V2      0x02
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SETPOINT_TYPE_AUTO_V2              0x03
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK_V2       0xF0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_SHIFT_V2      0x04
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SIZE1_MASK_V2          0x07
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SCALE1_MASK_V2         0x18
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_SCALE1_SHIFT_V2        0x03
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE1_PERCENTAGE_V2               0x00
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE1_ABSOLUTE_V2                 0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_PRECISION1_MASK_V2     0xE0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES2_PRECISION1_SHIFT_V2    0x05
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SIZE2_MASK_V2          0x07
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SCALE2_MASK_V2         0x18
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_SCALE2_SHIFT_V2        0x03
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE2_PERCENTAGE_V2               0x00
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_SCALE2_ABSOLUTE_V2                 0x01
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_PRECISION2_MASK_V2     0xE0
#define HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_PROPERTIES3_PRECISION2_SHIFT_V2    0x05

/* Humidity Control Mode command class commands */
#define HUMIDITY_CONTROL_MODE_VERSION                                                    0x01
#define HUMIDITY_CONTROL_MODE_SET                                                        0x01
#define HUMIDITY_CONTROL_MODE_GET                                                        0x02
#define HUMIDITY_CONTROL_MODE_REPORT                                                     0x03
#define HUMIDITY_CONTROL_MODE_SUPPORTED_GET                                              0x04
#define HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT                                           0x05
/* Values used for Humidity Control Mode Set command */
#define HUMIDITY_CONTROL_MODE_SET_PROPERTIES1_MODE_MASK                                  0x0F
#define HUMIDITY_CONTROL_MODE_SET_MODE_OFF                                               0x00
#define HUMIDITY_CONTROL_MODE_SET_MODE_HUMIDIFY                                          0x01
#define HUMIDITY_CONTROL_MODE_SET_MODE_DEHUMIDIFY                                        0x02
#define HUMIDITY_CONTROL_MODE_SET_PROPERTIES1_RESERVED_MASK                              0xF0
#define HUMIDITY_CONTROL_MODE_SET_PROPERTIES1_RESERVED_SHIFT                             0x04
/* Values used for Humidity Control Mode Report command */
#define HUMIDITY_CONTROL_MODE_REPORT_PROPERTIES1_MODE_MASK                               0x0F
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_OFF                                            0x00
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_HUMIDIFY                                       0x01
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_DEHUMIDIFY                                     0x02
#define HUMIDITY_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_MASK                           0xF0
#define HUMIDITY_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT                          0x04

/* Humidity Control Mode command class commands */
#define HUMIDITY_CONTROL_MODE_VERSION_V2                                                 0x02
#define HUMIDITY_CONTROL_MODE_SET_V2                                                     0x01
#define HUMIDITY_CONTROL_MODE_GET_V2                                                     0x02
#define HUMIDITY_CONTROL_MODE_REPORT_V2                                                  0x03
#define HUMIDITY_CONTROL_MODE_SUPPORTED_GET_V2                                           0x04
#define HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_V2                                        0x05
/* Values used for Humidity Control Mode Set command */
#define HUMIDITY_CONTROL_MODE_SET_PROPERTIES1_MODE_MASK_V2                               0x0F
#define HUMIDITY_CONTROL_MODE_SET_MODE_OFF_V2                                            0x00
#define HUMIDITY_CONTROL_MODE_SET_MODE_HUMIDIFY_V2                                       0x01
#define HUMIDITY_CONTROL_MODE_SET_MODE_DEHUMIDIFY_V2                                     0x02
#define HUMIDITY_CONTROL_MODE_SET_MODE_AUTO_V2                                           0x03
#define HUMIDITY_CONTROL_MODE_SET_PROPERTIES1_RESERVED_MASK_V2                           0xF0
#define HUMIDITY_CONTROL_MODE_SET_PROPERTIES1_RESERVED_SHIFT_V2                          0x04
/* Values used for Humidity Control Mode Report command */
#define HUMIDITY_CONTROL_MODE_REPORT_PROPERTIES1_MODE_MASK_V2                            0x0F
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_OFF_V2                                         0x00
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_HUMIDIFY_V2                                    0x01
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_DEHUMIDIFY_V2                                  0x02
#define HUMIDITY_CONTROL_MODE_REPORT_MODE_AUTO_V2                                        0x03
#define HUMIDITY_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_MASK_V2                        0xF0
#define HUMIDITY_CONTROL_MODE_REPORT_PROPERTIES1_RESERVED_SHIFT_V2                       0x04

/* Humidity Control Operating State command class commands */
#define HUMIDITY_CONTROL_OPERATING_STATE_VERSION                                         0x01
#define HUMIDITY_CONTROL_OPERATING_STATE_GET                                             0x01
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT                                          0x02
/* Values used for Humidity Control Operating State Report command */
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT_PROPERTIES1_OPERATING_STATE_MASK         0x0F
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT_OPERATING_STATE_IDLE                     0x00
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT_OPERATING_STATE_HUMIDIFYING              0x01
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT_OPERATING_STATE_DEHUMIDIFYING            0x02
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT_PROPERTIES1_RESERVED_MASK                0xF0
#define HUMIDITY_CONTROL_OPERATING_STATE_REPORT_PROPERTIES1_RESERVED_SHIFT               0x04

/* Entry Control command class commands */
#define ENTRY_CONTROL_VERSION                                                            0x01
#define ENTRY_CONTROL_NOTIFICATION                                                       0x01
#define ENTRY_CONTROL_KEY_SUPPORTED_GET                                                  0x02
#define ENTRY_CONTROL_KEY_SUPPORTED_REPORT                                               0x03
#define ENTRY_CONTROL_EVENT_SUPPORTED_GET                                                0x04
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT                                             0x05
#define ENTRY_CONTROL_CONFIGURATION_SET                                                  0x06
#define ENTRY_CONTROL_CONFIGURATION_GET                                                  0x07
#define ENTRY_CONTROL_CONFIGURATION_REPORT                                               0x08
/* Values used for Entry Control Notification command */
#define ENTRY_CONTROL_NOTIFICATION_PROPERTIES1_DATA_TYPE_MASK                            0x03
#define ENTRY_CONTROL_NOTIFICATION_DATA_TYPE_NA                                          0x00
#define ENTRY_CONTROL_NOTIFICATION_DATA_TYPE_RAW                                         0x01
#define ENTRY_CONTROL_NOTIFICATION_DATA_TYPE_ASCII                                       0x02
#define ENTRY_CONTROL_NOTIFICATION_DATA_TYPE_MD5                                         0x03
#define ENTRY_CONTROL_NOTIFICATION_PROPERTIES1_RESERVED_MASK                             0xFC
#define ENTRY_CONTROL_NOTIFICATION_PROPERTIES1_RESERVED_SHIFT                            0x02
#define ENTRY_CONTROL_NOTIFICATION_CACHING                                               0x00
#define ENTRY_CONTROL_NOTIFICATION_CACHED_KEYS                                           0x01
#define ENTRY_CONTROL_NOTIFICATION_ENTER                                                 0x02
#define ENTRY_CONTROL_NOTIFICATION_DISARM_ALL                                            0x03
#define ENTRY_CONTROL_NOTIFICATION_ARM_ALL                                               0x04
#define ENTRY_CONTROL_NOTIFICATION_ARM_AWAY                                              0x05
#define ENTRY_CONTROL_NOTIFICATION_ARM_HOME                                              0x06
#define ENTRY_CONTROL_NOTIFICATION_EXIT_DELAY                                            0x07
#define ENTRY_CONTROL_NOTIFICATION_ARM_1                                                 0x08
#define ENTRY_CONTROL_NOTIFICATION_ARM_2                                                 0x09
#define ENTRY_CONTROL_NOTIFICATION_ARM_3                                                 0x0A
#define ENTRY_CONTROL_NOTIFICATION_ARM_4                                                 0x0B
#define ENTRY_CONTROL_NOTIFICATION_ARM_5                                                 0x0C
#define ENTRY_CONTROL_NOTIFICATION_ARM_6                                                 0x0D
#define ENTRY_CONTROL_NOTIFICATION_RFID                                                  0x0E
#define ENTRY_CONTROL_NOTIFICATION_BELL                                                  0x0F
#define ENTRY_CONTROL_NOTIFICATION_FIRE                                                  0x10
#define ENTRY_CONTROL_NOTIFICATION_POLICE                                                0x11
#define ENTRY_CONTROL_NOTIFICATION_ALERT_PANIC                                           0x12
#define ENTRY_CONTROL_NOTIFICATION_ALERT_MEDICAL                                         0x13
#define ENTRY_CONTROL_NOTIFICATION_GATE_OPEN                                             0x14
#define ENTRY_CONTROL_NOTIFICATION_GATE_CLOSE                                            0x15
#define ENTRY_CONTROL_NOTIFICATION_LOCK                                                  0x16
#define ENTRY_CONTROL_NOTIFICATION_UNLOCK                                                0x17
#define ENTRY_CONTROL_NOTIFICATION_TEST                                                  0x18
#define ENTRY_CONTROL_NOTIFICATION_CANCEL                                                0x19
/* Values used for Entry Control Event Supported Report command */
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_PROPERTIES1_DATA_TYPE_SUPPORTED_BIT_MASK_LENGTH_MASK 0x03
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_MASK                  0xFC
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_PROPERTIES1_RESERVED1_SHIFT                 0x02
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_PROPERTIES2_EVENT_SUPPORTED_BIT_MASK_LENGTH_MASK 0x1F
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_MASK                  0xE0
#define ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_PROPERTIES2_RESERVED2_SHIFT                 0x05

/* Inclusion Controller command class commands */
#define INCLUSION_CONTROLLER_VERSION                                                     0x01
#define INITIATE                                                                         0x01
#define COMPLETE                                                                         0x02
/* Values used for Initiate command */
#define INITIATE_PROXY_INCLUSION                                                         0x01
#define INITIATE_S0_INCLUSION                                                            0x02
#define INITIATE_PROXY_INCLUSION_REPLACE                                                 0x03
/* Values used for Complete command */
#define COMPLETE_PROXY_INCLUSION                                                         0x01
#define COMPLETE_S0_INCLUSION                                                            0x02
#define COMPLETE_PROXY_INCLUSION_REPLACE                                                 0x03
#define COMPLETE_STEP_OK                                                                 0x01
#define COMPLETE_STEP_USER_REJECTED                                                      0x02
#define COMPLETE_STEP_FAILED                                                             0x03
#define COMPLETE_STEP_NOT_SUPPORTED                                                      0x04

/* Node Provisioning command class commands */
#define NODE_PROVISIONING_VERSION                                                        0x01
#define NODE_PROVISIONING_SET                                                            0x01
#define NODE_PROVISIONING_DELETE                                                         0x02
#define NODE_PROVISIONING_LIST_ITERATION_GET                                             0x03
#define NODE_PROVISIONING_LIST_ITERATION_REPORT                                          0x04
#define NODE_PROVISIONING_GET                                                            0x05
#define NODE_PROVISIONING_REPORT                                                         0x06
/* Values used for Node Provisioning Set command */
#define NODE_PROVISIONING_SET_PROPERTIES1_DSK_LENGTH_MASK                                0x1F
#define NODE_PROVISIONING_SET_PROPERTIES1_RESERVED1_MASK                                 0xE0
#define NODE_PROVISIONING_SET_PROPERTIES1_RESERVED1_SHIFT                                0x05
/* Values used for Node Provisioning Delete command */
#define NODE_PROVISIONING_DELETE_PROPERTIES1_DSK_LENGTH_MASK                             0x1F
#define NODE_PROVISIONING_DELETE_PROPERTIES1_RESERVED1_MASK                              0xE0
#define NODE_PROVISIONING_DELETE_PROPERTIES1_RESERVED1_SHIFT                             0x05
/* Values used for Node Provisioning List Iteration Report command */
#define NODE_PROVISIONING_LIST_ITERATION_REPORT_PROPERTIES1_DSK_LENGTH_MASK              0x1F
#define NODE_PROVISIONING_LIST_ITERATION_REPORT_PROPERTIES1_RESERVED1_MASK               0xE0
#define NODE_PROVISIONING_LIST_ITERATION_REPORT_PROPERTIES1_RESERVED1_SHIFT              0x05
/* Values used for Node Provisioning Get command */
#define NODE_PROVISIONING_GET_PROPERTIES1_DSK_LENGTH_MASK                                0x1F
#define NODE_PROVISIONING_GET_PROPERTIES1_RESERVED1_MASK                                 0xE0
#define NODE_PROVISIONING_GET_PROPERTIES1_RESERVED1_SHIFT                                0x05
/* Values used for Node Provisioning Report command */
#define NODE_PROVISIONING_REPORT_PROPERTIES1_DSK_LENGTH_MASK                             0x1F
#define NODE_PROVISIONING_REPORT_PROPERTIES1_RESERVED_MASK                               0xE0
#define NODE_PROVISIONING_REPORT_PROPERTIES1_RESERVED_SHIFT                              0x05

/* Sound Switch command class commands */
#define SOUND_SWITCH_VERSION                                                             0x01
#define SOUND_SWITCH_TONES_NUMBER_GET                                                    0x01
#define SOUND_SWITCH_TONES_NUMBER_REPORT                                                 0x02
#define SOUND_SWITCH_TONE_INFO_GET                                                       0x03
#define SOUND_SWITCH_TONE_INFO_REPORT                                                    0x04
#define SOUND_SWITCH_CONFIGURATION_SET                                                   0x05
#define SOUND_SWITCH_CONFIGURATION_GET                                                   0x06
#define SOUND_SWITCH_CONFIGURATION_REPORT                                                0x07
#define SOUND_SWITCH_TONE_PLAY_SET                                                       0x08
#define SOUND_SWITCH_TONE_PLAY_GET                                                       0x09
#define SOUND_SWITCH_TONE_PLAY_REPORT                                                    0x0A

/* Sound Switch command class commands */
#define SOUND_SWITCH_VERSION_V2                                                          0x02
#define SOUND_SWITCH_TONES_NUMBER_GET_V2                                                 0x01
#define SOUND_SWITCH_TONES_NUMBER_REPORT_V2                                              0x02
#define SOUND_SWITCH_TONE_INFO_GET_V2                                                    0x03
#define SOUND_SWITCH_TONE_INFO_REPORT_V2                                                 0x04
#define SOUND_SWITCH_CONFIGURATION_SET_V2                                                0x05
#define SOUND_SWITCH_CONFIGURATION_GET_V2                                                0x06
#define SOUND_SWITCH_CONFIGURATION_REPORT_V2                                             0x07
#define SOUND_SWITCH_TONE_PLAY_SET_V2                                                    0x08
#define SOUND_SWITCH_TONE_PLAY_GET_V2                                                    0x09
#define SOUND_SWITCH_TONE_PLAY_REPORT_V2                                                 0x0A

/* Ir Repeater command class commands */
#define IR_REPEATER_VERSION                                                              0x01
#define IR_REPEATER_CAPABILITIES_GET                                                     0x01
#define IR_REPEATER_CAPABILITIES_REPORT                                                  0x02
#define IR_REPEATER_IR_CODE_LEARNING_START                                               0x03
#define IR_REPEATER_IR_CODE_LEARNING_STOP                                                0x04
#define IR_REPEATER_IR_CODE_LEARNING_STATUS                                              0x05
#define IR_REPEATER_LEARNT_IR_CODE_REMOVE                                                0x06
#define IR_REPEATER_LEARNT_IR_CODE_GET                                                   0x07
#define IR_REPEATER_LEARNT_IR_CODE_REPORT                                                0x08
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_GET                                          0x09
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT                                       0x0A
#define IR_REPEATER_CONFIGURATION_SET                                                    0x0B
#define IR_REPEATER_CONFIGURATION_GET                                                    0x0C
#define IR_REPEATER_CONFIGURATION_REPORT                                                 0x0D
#define IR_REPEATER_REPEAT_LEARNT_CODE                                                   0x0E
#define IR_REPEATER_REPEAT                                                               0x0F
/* Values used for Ir Repeater Capabilities Report command */
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES1_DUTY_CYCLE_BITMASK_MASK              0x07
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES1_BES_BIT_MASK                         0x08
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES1_PES_BIT_MASK                         0x10
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES1_RLC_BIT_MASK                         0x20
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES1_LCR_BIT_MASK                         0x40
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES1_IRR_BIT_MASK                         0x80
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES2_MAXIMUM_PULSE_TIME_UNIT_MSB_MASK     0x0F
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES2_MINIMUM_PULSE_TIME_UNIT_LSB_MASK     0xF0
#define IR_REPEATER_CAPABILITIES_REPORT_PROPERTIES2_MINIMUM_PULSE_TIME_UNIT_LSB_SHIFT    0x04
/* Values used for Ir Repeater Ir Code Learning Start command */
#define IR_REPEATER_IR_CODE_LEARNING_START_PROPERTIES1_PULSE_TIME_UNIT_MSB_MASK          0x0F
#define IR_REPEATER_IR_CODE_LEARNING_START_PROPERTIES1_RESERVED1_MASK                    0xF0
#define IR_REPEATER_IR_CODE_LEARNING_START_PROPERTIES1_RESERVED1_SHIFT                   0x04
/* Values used for Ir Repeater Ir Code Learning Status command */
#define IR_REPEATER_IR_CODE_LEARNING_STATUS_LEARNING_BUFFER_OVERFLOW                     0x00
#define IR_REPEATER_IR_CODE_LEARNING_STATUS_FORCED_LEARNING_STOP                         0x01
#define IR_REPEATER_IR_CODE_LEARNING_STATUS_TIMEOUT                                      0x02
#define IR_REPEATER_IR_CODE_LEARNING_STATUS_SUCCESS                                      0xFF
/* Values used for Ir Repeater Learnt Ir Code Report command */
#define IR_REPEATER_LEARNT_IR_CODE_REPORT_PROPERTIES1_IR_CODE_IDENFIER_STATUS_LENGTH_MASK 0x1F
#define IR_REPEATER_LEARNT_IR_CODE_REPORT_PROPERTIES1_RESERVED_MASK                      0xE0
#define IR_REPEATER_LEARNT_IR_CODE_REPORT_PROPERTIES1_RESERVED_SHIFT                     0x05
/* Values used for Ir Repeater Learnt Ir Code Readback Get command */
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_GET_PROPERTIES1_REPORT_NUMBER_MSB_MASK       0x7F
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_GET_PROPERTIES1_RESERVED1_BIT_MASK           0x80
/* Values used for Ir Repeater Learnt Ir Code Readback Report command */
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES1_PULSE_TIME_UNIT_MSB_MASK  0x0F
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES1_DUTY_CYCLE_MASK           0x30
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES1_DUTY_CYCLE_SHIFT          0x04
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_DUTY_CYCLE_1_2_DUTY_CYCLE             0x00
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_DUTY_CYCLE_1_3_DUTY_CYCLE             0x01
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_DUTY_CYCLE_1_4_DUTY_CYCLE             0x02
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_DUTY_CYCLE_RESERVED                   0x03
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES1_RESERVED1_MASK            0xC0
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES1_RESERVED1_SHIFT           0x06
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES2_REPORT_NUMBER_MSB_MASK    0x7F
#define IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_PROPERTIES2_LAST_BIT_MASK             0x80
/* Values used for Ir Repeater Configuration Set command */
#define IR_REPEATER_CONFIGURATION_SET_PROPERTIES1_PERIOD_LSB_MASK                        0x0F
#define IR_REPEATER_CONFIGURATION_SET_PROPERTIES1_RESERVED1_MASK                         0xF0
#define IR_REPEATER_CONFIGURATION_SET_PROPERTIES1_RESERVED1_SHIFT                        0x04
/* Values used for Ir Repeater Configuration Report command */
#define IR_REPEATER_CONFIGURATION_REPORT_PROPERTIES1_PERIOD_LSB_MASK                     0x0F
#define IR_REPEATER_CONFIGURATION_REPORT_PROPERTIES1_RESERVED1_MASK                      0xF0
#define IR_REPEATER_CONFIGURATION_REPORT_PROPERTIES1_RESERVED1_SHIFT                     0x04
/* Values used for Ir Repeater Repeat command */
#define IR_REPEATER_REPEAT_PROPERTIES1_PULSE_TIME_UNIT_MSB_MASK                          0x0F
#define IR_REPEATER_REPEAT_PROPERTIES1_DUTY_CYCLE_MASK                                   0x30
#define IR_REPEATER_REPEAT_PROPERTIES1_DUTY_CYCLE_SHIFT                                  0x04
#define IR_REPEATER_REPEAT_DUTY_CYCLE_1_2_DUTY_CYCLE                                     0x00
#define IR_REPEATER_REPEAT_DUTY_CYCLE_1_3_DUTY_CYCLE                                     0x01
#define IR_REPEATER_REPEAT_DUTY_CYCLE_1_4_DUTY_CYCLE                                     0x02
#define IR_REPEATER_REPEAT_DUTY_CYCLE_RESERVED                                           0x03
#define IR_REPEATER_REPEAT_PROPERTIES1_RESERVED1_MASK                                    0xC0
#define IR_REPEATER_REPEAT_PROPERTIES1_RESERVED1_SHIFT                                   0x06
#define IR_REPEATER_REPEAT_PROPERTIES2_REPORT_NUMBER_MSB_MASK                            0x7F
#define IR_REPEATER_REPEAT_PROPERTIES2_LAST_BIT_MASK                                     0x80

/* Authentication command class commands */
#define AUTHENTICATION_VERSION                                                           0x01
#define AUTHENTICATION_CAPABILITY_GET                                                    0x01
#define AUTHENTICATION_CAPABILITY_REPORT                                                 0x02
#define AUTHENTICATION_DATA_SET                                                          0x03
#define AUTHENTICATION_DATA_GET                                                          0x04
#define AUTHENTICATION_DATA_REPORT                                                       0x05
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET                                      0x06
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET                                      0x07
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT                                   0x08
#define AUTHENTICATION_CHECKSUM_GET                                                      0x09
#define AUTHENTICATION_CHECKSUM_REPORT                                                   0x0A
/* Values used for Authentication Capability Report command */
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES1_SUPPORTED_AUTHENTICATION_TECHNOLOGY_TYPE_BIT_MASK_LENGTH_MASK 0x0F
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES1_RESERVED1_BIT_MASK                  0x10
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES1_OR_BIT_MASK                         0x20
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES1_MADR_BIT_MASK                       0x40
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES1_MAR_BIT_MASK                        0x80
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES2_SUPPORTED_FALLBACK_STATUS_BIT_MASK_LENGTH_MASK 0x1F
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES2_RESERVED2_MASK                      0xE0
#define AUTHENTICATION_CAPABILITY_REPORT_PROPERTIES2_RESERVED2_SHIFT                     0x05
/* Values used for Authentication Data Set command */
#define AUTHENTICATION_DATA_SET_PROPERTIES1_AUTHENTICATION_TECHNOLOGY_TYPE_MASK          0x0F
#define AUTHENTICATION_DATA_SET_AUTHENTICATION_TECHNOLOGY_TYPE_RESERVED0                 0x00
#define AUTHENTICATION_DATA_SET_AUTHENTICATION_TECHNOLOGY_TYPE_RFID_TAG                  0x01
#define AUTHENTICATION_DATA_SET_AUTHENTICATION_TECHNOLOGY_TYPE_MAGNETIC_CARD             0x02
#define AUTHENTICATION_DATA_SET_PROPERTIES1_RESERVED1_MASK                               0xF0
#define AUTHENTICATION_DATA_SET_PROPERTIES1_RESERVED1_SHIFT                              0x04
/* Values used for Authentication Data Get command */
#define AUTHENTICATION_DATA_GET_PROPERTIES1_REPORT_MORE_BIT_MASK                         0x01
#define AUTHENTICATION_DATA_GET_PROPERTIES1_RESERVED1_MASK                               0xFE
#define AUTHENTICATION_DATA_GET_PROPERTIES1_RESERVED1_SHIFT                              0x01
/* Values used for Authentication Technologies Combination Set command */
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_AVAILABLE                            0x00
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_ENABLED                              0x01
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_DISABLED                             0x02
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_MESSAGING                            0x03
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_PASSAGE_MODE                         0x04
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_PROPERTIES1_NUMBER_OF_AUTHENTICATION_DATA_IDS_MASK 0x7F
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_PROPERTIES1_OR_LOGIC_BIT_MASK        0x80
/* Values used for Authentication Technologies Combination Get command */
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET_PROPERTIES1_REPORT_MORE_BIT_MASK     0x01
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET_PROPERTIES1_RESERVED1_MASK           0xFE
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET_PROPERTIES1_RESERVED1_SHIFT          0x01
/* Values used for Authentication Technologies Combination Report command */
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_AVAILABLE                         0x00
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_ENABLED                           0x01
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_DISABLED                          0x02
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_MESSAGING                         0x03
#define AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_PASSAGE_MODE                      0x04
/* Values used for Authentication Checksum Get command */
#define AUTHENTICATION_CHECKSUM_GET_PROPERTIES1_AUTHENTICATION_TECHNOLOGY_TYPE_MASK      0x0F
#define AUTHENTICATION_CHECKSUM_GET_AUTHENTICATION_TECHNOLOGY_TYPE_RESERVED0             0x00
#define AUTHENTICATION_CHECKSUM_GET_AUTHENTICATION_TECHNOLOGY_TYPE_RFID_TAG              0x01
#define AUTHENTICATION_CHECKSUM_GET_AUTHENTICATION_TECHNOLOGY_TYPE_MAGNETIC_CARD         0x02
#define AUTHENTICATION_CHECKSUM_GET_PROPERTIES1_CHECKSUM_TYPE_MASK                       0x70
#define AUTHENTICATION_CHECKSUM_GET_PROPERTIES1_CHECKSUM_TYPE_SHIFT                      0x04
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_AUTHENTICATION_DATA                    0x00
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_COMBINATION_ENTRIES                    0x01
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_RESERVED2                              0x02
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_RESERVED3                              0x03
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_RESERVED4                              0x04
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_RESERVED5                              0x05
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_RESERVED6                              0x06
#define AUTHENTICATION_CHECKSUM_GET_CHECKSUM_TYPE_RESERVED7                              0x07
#define AUTHENTICATION_CHECKSUM_GET_PROPERTIES1_RESERVED1_BIT_MASK                       0x80
/* Values used for Authentication Checksum Report command */
#define AUTHENTICATION_CHECKSUM_REPORT_PROPERTIES1_AUTHENTICATION_TECHNOLOGY_TYPE_MASK   0x0F
#define AUTHENTICATION_CHECKSUM_REPORT_AUTHENTICATION_TECHNOLOGY_TYPE_RESERVED0          0x00
#define AUTHENTICATION_CHECKSUM_REPORT_AUTHENTICATION_TECHNOLOGY_TYPE_RFID_TAG           0x01
#define AUTHENTICATION_CHECKSUM_REPORT_AUTHENTICATION_TECHNOLOGY_TYPE_MAGNETIC_CARD      0x02
#define AUTHENTICATION_CHECKSUM_REPORT_PROPERTIES1_CHECKSUM_TYPE_MASK                    0x70
#define AUTHENTICATION_CHECKSUM_REPORT_PROPERTIES1_CHECKSUM_TYPE_SHIFT                   0x04
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_AUTHENTICATION_DATA                 0x00
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_COMBINATION_ENTRIES                 0x01
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_RESERVED2                           0x02
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_RESERVED3                           0x03
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_RESERVED4                           0x04
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_RESERVED5                           0x05
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_RESERVED6                           0x06
#define AUTHENTICATION_CHECKSUM_REPORT_CHECKSUM_TYPE_RESERVED7                           0x07
#define AUTHENTICATION_CHECKSUM_REPORT_PROPERTIES1_RESERVED1_BIT_MASK                    0x80

/* Authentication Media Write command class commands */
#define AUTHENTICATION_MEDIA_WRITE_VERSION                                               0x01
#define AUTHENTICATION_MEDIA_CAPABILITY_GET                                              0x01
#define AUTHENTICATION_MEDIA_CAPABILITY_REPORT                                           0x02
#define AUTHENTICATION_MEDIA_WRITE_START                                                 0x03
#define AUTHENTICATION_MEDIA_WRITE_STOP                                                  0x04
#define AUTHENTICATION_MEDIA_WRITE_STATUS                                                0x05
/* Values used for Authentication Media Capability Report command */
#define AUTHENTICATION_MEDIA_CAPABILITY_REPORT_PROPERTIES1_DGS_BIT_MASK                  0x01
#define AUTHENTICATION_MEDIA_CAPABILITY_REPORT_PROPERTIES1_RESERVED1_MASK                0xFE
#define AUTHENTICATION_MEDIA_CAPABILITY_REPORT_PROPERTIES1_RESERVED1_SHIFT               0x01
/* Values used for Authentication Media Write Start command */
#define AUTHENTICATION_MEDIA_WRITE_START_PROPERTIES1_RESERVED1_MASK                      0x7F
#define AUTHENTICATION_MEDIA_WRITE_START_PROPERTIES1_GENERATE_DATA_BIT_MASK              0x80
/* Values used for Authentication Media Write Status command */
#define AUTHENTICATION_MEDIA_WRITE_STATUS_WRITE_OPERATION_NOT_SUPPORTED                  0x00
#define AUTHENTICATION_MEDIA_WRITE_STATUS_FORCED_STOP                                    0x01
#define AUTHENTICATION_MEDIA_WRITE_STATUS_TIMEOUT                                        0x02
#define AUTHENTICATION_MEDIA_WRITE_STATUS_ANOTHER_OPERATION_IS_ONGOING                   0x03
#define AUTHENTICATION_MEDIA_WRITE_STATUS_ABORTED                                        0x04
#define AUTHENTICATION_MEDIA_WRITE_STATUS_PROPRIETARY_HEX_DATA_RESTRICTION               0x05
#define AUTHENTICATION_MEDIA_WRITE_STATUS_NON_RE_WRITABLE_TARGET                         0x06
#define AUTHENTICATION_MEDIA_WRITE_STATUS_COMPLETED_WITH_NO_STATUS                       0x07
#define AUTHENTICATION_MEDIA_WRITE_STATUS_SUCCESS                                        0x08

/* Generic Schedule command class commands */
#define GENERIC_SCHEDULE_VERSION                                                         0x01
#define GENERIC_SCHEDULE_CAPABILITIES_GET                                                0x01
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT                                             0x02
#define GENERIC_SCHEDULE_TIME_RANGE_SET                                                  0x03
#define GENERIC_SCHEDULE_TIME_RANGE_GET                                                  0x04
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT                                               0x05
#define GENERIC_SCHEDULE_SET                                                             0x06
#define GENERIC_SCHEDULE_GET                                                             0x07
#define GENERIC_SCHEDULE_REPORT                                                          0x08
/* Values used for Generic Schedule Capabilities Report command */
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES1_NUMBER_OF_SUPPORTED_TIME_RANGE_IDS_1_MASK 0x7F
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES1_RESERVED1_BIT_MASK              0x80
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES2_HOUR_MINUTE_BIT_MASK            0x01
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES2_DATE_BIT_MASK                   0x02
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES2_WEEKDAYS_BIT_MASK               0x04
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES2_RESERVED2_MASK                  0xF8
#define GENERIC_SCHEDULE_CAPABILITIES_REPORT_PROPERTIES2_RESERVED2_SHIFT                 0x03
/* Values used for Generic Schedule Time Range Set command */
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES1_TIME_RANGE_ID_1_MASK                 0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES1_RESERVED1_BIT_MASK                   0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES2_WEEKDAY_BITMASK_MASK                 0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES2_IN_USE_1_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES3_START_YEAR_1_MASK                    0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES3_IN_USE_2_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES4_STOP_YEAR_1_MASK                     0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES4_IN_USE_3_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES5_START_MONTH_MASK                     0x0F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES5_RESERVED2_MASK                       0x70
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES5_RESERVED2_SHIFT                      0x04
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES5_IN_USE_4_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES6_STOP_MONTH_MASK                      0x0F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES6_RESERVED3_MASK                       0x70
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES6_RESERVED3_SHIFT                      0x04
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES6_IN_USE_5_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES7_START_DAY_MASK                       0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES7_RESERVED4_MASK                       0x60
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES7_RESERVED4_SHIFT                      0x05
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES7_IN_USE_6_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES8_STOP_DAY_MASK                        0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES8_RESERVED5_MASK                       0x60
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES8_RESERVED5_SHIFT                      0x05
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES8_IN_USE_7_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES9_START_HOUR_MASK                      0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES9_RESERVED6_MASK                       0x60
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES9_RESERVED6_SHIFT                      0x05
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES9_IN_USE_8_BIT_MASK                    0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES10_STOP_HOUR_MASK                      0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES10_RESERVED7_MASK                      0x60
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES10_RESERVED7_SHIFT                     0x05
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES10_IN_USE_9_BIT_MASK                   0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES11_START_MINUTE_MASK                   0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES11_RESERVED8_BIT_MASK                  0x40
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES11_IN_USE_10_BIT_MASK                  0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES12_STOP_MINUTE_MASK                    0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES12_RESERVED9_BIT_MASK                  0x40
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES12_IN_USE_11_BIT_MASK                  0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES13_DAILY_START_HOUR_MASK               0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES13_RESERVED10_MASK                     0x60
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES13_RESERVED10_SHIFT                    0x05
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES13_IN_USE_12_BIT_MASK                  0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES14_DAILY_STOP_HOUR_MASK                0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES14_RESERVED11_MASK                     0x60
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES14_RESERVED11_SHIFT                    0x05
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES14_IN_USE_13_BIT_MASK                  0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES15_DAILY_START_MINUTE_MASK             0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES15_RESERVED12_BIT_MASK                 0x40
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES15_IN_USE_14_BIT_MASK                  0x80
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES16_DAILY_STOP_MINUTE_MASK              0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES16_RESERVED13_BIT_MASK                 0x40
#define GENERIC_SCHEDULE_TIME_RANGE_SET_PROPERTIES16_IN_USE_15_BIT_MASK                  0x80
/* Values used for Generic Schedule Time Range Get command */
#define GENERIC_SCHEDULE_TIME_RANGE_GET_PROPERTIES1_TIME_RANGE_ID_1_MASK                 0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_GET_PROPERTIES1_RESERVED1_BIT_MASK                   0x80
/* Values used for Generic Schedule Time Range Report command */
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES1_TIME_RANGE_ID_1_MASK              0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES1_RESERVED1_BIT_MASK                0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES2_WEEKDAY_BITMASK_MASK              0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES2_IN_USE_1_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES3_START_YEAR_1_MASK                 0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES3_IN_USE_2_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES4_STOP_YEAR_1_MASK                  0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES4_IN_USE_3_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES5_START_MONTH_MASK                  0x0F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES5_RESERVED2_MASK                    0x70
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES5_RESERVED2_SHIFT                   0x04
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES5_IN_USE_4_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES6_STOP_MONTH_MASK                   0x0F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES6_RESERVED3_MASK                    0x70
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES6_RESERVED3_SHIFT                   0x04
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES6_IN_USE_5_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES7_START_DAY_MASK                    0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES7_RESERVED4_MASK                    0x60
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES7_RESERVED4_SHIFT                   0x05
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES7_IN_USE_6_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES8_STOP_DAY_MASK                     0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES8_RESERVED5_MASK                    0x60
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES8_RESERVED5_SHIFT                   0x05
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES8_IN_USE_7_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES9_START_HOUR_MASK                   0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES9_RESERVED6_MASK                    0x60
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES9_RESERVED6_SHIFT                   0x05
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES9_IN_USE_8_BIT_MASK                 0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES10_STOP_HOUR_MASK                   0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES10_RESERVED7_MASK                   0x60
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES10_RESERVED7_SHIFT                  0x05
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES10_IN_USE_9_BIT_MASK                0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES11_START_MINUTE_MASK                0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES11_RESERVED8_BIT_MASK               0x40
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES11_IN_USE_10_BIT_MASK               0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES12_STOP_MINUTE_MASK                 0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES12_RESERVED9_BIT_MASK               0x40
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES12_IN_USE_11_BIT_MASK               0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES13_DAILY_START_HOUR_MASK            0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES13_RESERVED10_MASK                  0x60
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES13_RESERVED10_SHIFT                 0x05
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES13_IN_USE_12_BIT_MASK               0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES14_DAILY_STOP_HOUR_MASK             0x1F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES14_RESERVED11_MASK                  0x60
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES14_RESERVED11_SHIFT                 0x05
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES14_IN_USE_13_BIT_MASK               0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES15_DAILY_START_MINUTE_MASK          0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES15_RESERVED12_BIT_MASK              0x40
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES15_IN_USE_14_BIT_MASK               0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES16_DAILY_STOP_MINUTE_MASK           0x3F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES16_RESERVED13_BIT_MASK              0x40
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES16_IN_USE_15_BIT_MASK               0x80
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES17_NEXT_TIME_RANGE_ID_1_MASK        0x7F
#define GENERIC_SCHEDULE_TIME_RANGE_REPORT_PROPERTIES17_RESERVED14_BIT_MASK              0x80

/* Antitheft Unlock command class commands */
#define ANTITHEFT_UNLOCK_VERSION                                                         0x01
#define ANTITHEFT_UNLOCK_STATE_GET                                                       0x01
#define ANTITHEFT_UNLOCK_STATE_REPORT                                                    0x02
#define ANTITHEFT_UNLOCK_SET                                                             0x03
/* Values used for Antitheft Unlock State Report command */
#define ANTITHEFT_UNLOCK_STATE_REPORT_PROPERTIES1_STATE_BIT_MASK                         0x01
#define ANTITHEFT_UNLOCK_STATE_REPORT_PROPERTIES1_RESTRICTED_BIT_MASK                    0x02
#define ANTITHEFT_UNLOCK_STATE_REPORT_PROPERTIES1_ANTI_THEFT_HINT_LENGTH_MASK            0x3C
#define ANTITHEFT_UNLOCK_STATE_REPORT_PROPERTIES1_ANTI_THEFT_HINT_LENGTH_SHIFT           0x02
#define ANTITHEFT_UNLOCK_STATE_REPORT_PROPERTIES1_RESERVED_MASK                          0xC0
#define ANTITHEFT_UNLOCK_STATE_REPORT_PROPERTIES1_RESERVED_SHIFT                         0x06
/* Values used for Antitheft Unlock Set command */
#define ANTITHEFT_UNLOCK_SET_PROPERTIES1_MAGIC_CODE_LENGTH_MASK                          0x0F
#define ANTITHEFT_UNLOCK_SET_PROPERTIES1_RESERVED_MASK                                   0xF0
#define ANTITHEFT_UNLOCK_SET_PROPERTIES1_RESERVED_SHIFT                                  0x04

/* User Credential command class commands */
#define USER_CREDENTIAL_VERSION                                                          0x01
#define USER_CAPABILITIES_GET                                                            0x01
#define USER_CAPABILITIES_REPORT                                                         0x02
#define CREDENTIAL_CAPABILITIES_GET                                                      0x03
#define CREDENTIAL_CAPABILITIES_REPORT                                                   0x04
#define USER_SET                                                                         0x05
#define USER_GET                                                                         0x06
#define USER_REPORT                                                                      0x07
#define CREDENTIAL_SET                                                                   0x0A
#define CREDENTIAL_GET                                                                   0x0B
#define CREDENTIAL_REPORT                                                                0x0C
#define CREDENTIAL_LEARN_START                                                           0x0F
#define CREDENTIAL_LEARN_CANCEL                                                          0x10
#define CREDENTIAL_LEARN_REPORT                                                          0x11
#define USER_CREDENTIAL_ASSOCIATION_SET                                                  0x12
#define USER_CREDENTIAL_ASSOCIATION_REPORT                                               0x13
#define ALL_USERS_CHECKSUM_GET                                                           0x14
#define ALL_USERS_CHECKSUM_REPORT                                                        0x15
#define USER_CHECKSUM_GET                                                                0x16
#define USER_CHECKSUM_REPORT                                                             0x17
#define CREDENTIAL_CHECKSUM_GET                                                          0x18
#define CREDENTIAL_CHECKSUM_REPORT                                                       0x19
#define ADMIN_PIN_CODE_SET                                                               0x1A
#define ADMIN_PIN_CODE_GET                                                               0x1B
#define ADMIN_PIN_CODE_REPORT                                                            0x1C
/* Values used for User Capabilities Report command */
#define USER_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK                               0x1F
#define USER_CAPABILITIES_REPORT_PROPERTIES1_USER_CHECKSUM_SUPPORT_BIT_MASK              0x20
#define USER_CAPABILITIES_REPORT_PROPERTIES1_ALL_USERS_CHECKSUM_SUPPORT_BIT_MASK         0x40
#define USER_CAPABILITIES_REPORT_PROPERTIES1_USER_SCHEDULE_SUPPORT_BIT_MASK              0x80
/* Values used for Credential Capabilities Report command */
#define CREDENTIAL_CAPABILITIES_REPORT_PROPERTIES1_RESERVED_MASK                         0x1F
#define CREDENTIAL_CAPABILITIES_REPORT_PROPERTIES1_ADMIN_CODE_DEACTIVATION_SUPPORT_BIT_MASK 0x20
#define CREDENTIAL_CAPABILITIES_REPORT_PROPERTIES1_ADMIN_CODE_SUPPORT_BIT_MASK           0x40
#define CREDENTIAL_CAPABILITIES_REPORT_PROPERTIES1_CREDENTIAL_CHECKSUM_SUPPORT_BIT_MASK  0x80
/* Values used for User Set command */
#define USER_SET_PROPERTIES1_OPERATION_TYPE_MASK                                         0x03
#define USER_SET_OPERATION_TYPE_ADD                                                      0x00
#define USER_SET_OPERATION_TYPE_MODIFY                                                   0x01
#define USER_SET_OPERATION_TYPE_DELETE                                                   0x02
#define USER_SET_PROPERTIES1_RESERVED_MASK                                               0xFC
#define USER_SET_PROPERTIES1_RESERVED_SHIFT                                              0x02
#define USER_SET_GENERAL_USER                                                            0x00
#define USER_SET_PROGRAMMING_USER                                                        0x03
#define USER_SET_NON_ACCESS_USER                                                         0x04
#define USER_SET_DURESS_USER                                                             0x05
#define USER_SET_DISPOSABLE_USER                                                         0x06
#define USER_SET_EXPIRING_USER                                                           0x07
#define USER_SET_REMOTE_ONLY_USER                                                        0x09
#define USER_SET_PROPERTIES2_USER_ACTIVE_STATE_BIT_MASK                                  0x01
#define USER_SET_PROPERTIES2_RESERVED2_MASK                                              0xFE
#define USER_SET_PROPERTIES2_RESERVED2_SHIFT                                             0x01
#define USER_SET_PROPERTIES3_USER_NAME_ENCODING_MASK                                     0x07
#define USER_SET_USER_NAME_ENCODING_USING_STANDARD_ASCII_CODES                           0x00
#define USER_SET_USER_NAME_ENCODING_USING_STANDARD_AND_OEM_EXTENDED_ASCII_CODES          0x01
#define USER_SET_USER_NAME_ENCODING_UNICODE_UTF_16                                       0x02
#define USER_SET_PROPERTIES3_RESERVED3_MASK                                              0xF8
#define USER_SET_PROPERTIES3_RESERVED3_SHIFT                                             0x03
/* Values used for User Report command */
#define USER_REPORT_ADDED                                                                0x00
#define USER_REPORT_MODIFIED                                                             0x01
#define USER_REPORT_DELETED                                                              0x02
#define USER_REPORT_UNCHANGED                                                            0x03
#define USER_REPORT_RESPONSE_TO_GET                                                      0x04
#define USER_REPORT_ADD_AGAINST_OCCUPIED                                                 0x05
#define USER_REPORT_MODIFY_AGAINST_EMPTY                                                 0x06
#define USER_REPORT_ZERO_EXPIRING_MINUTES_INVALID                                        0x07
#define USER_REPORT_DNE                                                                  0x00
#define USER_REPORT_UNKNOWN                                                              0x01
#define USER_REPORT_Z_WAVE                                                               0x02
#define USER_REPORT_LOCALLY                                                              0x03
#define USER_REPORT_MOBILE_APP_OR_OTHER_IOT_TECHNOLOGY                                   0x04
#define USER_REPORT_GENERAL_USER                                                         0x00
#define USER_REPORT_PROGRAMMING_USER                                                     0x03
#define USER_REPORT_NON_ACCESS_USER                                                      0x04
#define USER_REPORT_DURESS_USER                                                          0x05
#define USER_REPORT_DISPOSABLE_USER                                                      0x06
#define USER_REPORT_EXPIRING_USER                                                        0x07
#define USER_REPORT_REMOTE_ONLY_USER                                                     0x09
#define USER_REPORT_PROPERTIES1_USER_ACTIVE_STATE_BIT_MASK                               0x01
#define USER_REPORT_PROPERTIES1_RESERVED_MASK                                            0xFE
#define USER_REPORT_PROPERTIES1_RESERVED_SHIFT                                           0x01
#define USER_REPORT_PROPERTIES2_USER_NAME_ENCODING_MASK                                  0x07
#define USER_REPORT_USER_NAME_ENCODING_USING_STANDARD_ASCII_CODES                        0x00
#define USER_REPORT_USER_NAME_ENCODING_USING_STANDARD_AND_OEM_EXTENDED_ASCII_CODES       0x01
#define USER_REPORT_USER_NAME_ENCODING_UNICODE_UTF_16                                    0x02
#define USER_REPORT_PROPERTIES2_RESERVED2_MASK                                           0xF8
#define USER_REPORT_PROPERTIES2_RESERVED2_SHIFT                                          0x03
/* Values used for Credential Set command */
#define CREDENTIAL_SET_PIN_CODE                                                          0x01
#define CREDENTIAL_SET_PASSWORD                                                          0x02
#define CREDENTIAL_SET_RFID_CODE                                                         0x03
#define CREDENTIAL_SET_BLE                                                               0x04
#define CREDENTIAL_SET_NFC                                                               0x05
#define CREDENTIAL_SET_UWB                                                               0x06
#define CREDENTIAL_SET_EYE_BIOMETRIC                                                     0x07
#define CREDENTIAL_SET_FACE_BIOMETRIC                                                    0x08
#define CREDENTIAL_SET_FINGER_BIOMETRIC                                                  0x09
#define CREDENTIAL_SET_HAND_BIOMETRIC                                                    0x0A
#define CREDENTIAL_SET_UNSPECIFIED_BIOMETRIC                                             0x0B
#define CREDENTIAL_SET_PROPERTIES1_OPERATION_TYPE_MASK                                   0x03
#define CREDENTIAL_SET_OPERATION_TYPE_ADD                                                0x00
#define CREDENTIAL_SET_OPERATION_TYPE_MODIFY                                             0x01
#define CREDENTIAL_SET_OPERATION_TYPE_DELETE                                             0x02
#define CREDENTIAL_SET_PROPERTIES1_RESERVED_MASK                                         0xFC
#define CREDENTIAL_SET_PROPERTIES1_RESERVED_SHIFT                                        0x02
/* Values used for Credential Get command */
#define CREDENTIAL_GET_PIN_CODE                                                          0x01
#define CREDENTIAL_GET_PASSWORD                                                          0x02
#define CREDENTIAL_GET_RFID_CODE                                                         0x03
#define CREDENTIAL_GET_BLE                                                               0x04
#define CREDENTIAL_GET_NFC                                                               0x05
#define CREDENTIAL_GET_UWB                                                               0x06
#define CREDENTIAL_GET_EYE_BIOMETRIC                                                     0x07
#define CREDENTIAL_GET_FACE_BIOMETRIC                                                    0x08
#define CREDENTIAL_GET_FINGER_BIOMETRIC                                                  0x09
#define CREDENTIAL_GET_HAND_BIOMETRIC                                                    0x0A
#define CREDENTIAL_GET_UNSPECIFIED_BIOMETRIC                                             0x0B
/* Values used for Credential Report command */
#define CREDENTIAL_REPORT_ADDED                                                          0x00
#define CREDENTIAL_REPORT_MODIFIED                                                       0x01
#define CREDENTIAL_REPORT_DELETED                                                        0x02
#define CREDENTIAL_REPORT_UNCHANGED                                                      0x03
#define CREDENTIAL_REPORT_RESPONSE_TO_GET                                                0x04
#define CREDENTIAL_REPORT_ADD_AGAINST_OCCUPIED                                           0x05
#define CREDENTIAL_REPORT_MODIFY_AGAINST_EMPTY                                           0x06
#define CREDENTIAL_REPORT_DUPLICATE                                                      0x07
#define CREDENTIAL_REPORT_MANUFACTURER_SECURITY_RULES                                    0x08
#define CREDENTIAL_REPORT_WRONG_USER_UNIQUE_IDENTIFIER                                   0x09
#define CREDENTIAL_REPORT_DUPLICATE_ADMIN_PIN_CODE                                       0x0A
#define CREDENTIAL_REPORT_PIN_CODE                                                       0x01
#define CREDENTIAL_REPORT_PASSWORD                                                       0x02
#define CREDENTIAL_REPORT_RFID_CODE                                                      0x03
#define CREDENTIAL_REPORT_BLE                                                            0x04
#define CREDENTIAL_REPORT_NFC                                                            0x05
#define CREDENTIAL_REPORT_UWB                                                            0x06
#define CREDENTIAL_REPORT_EYE_BIOMETRIC                                                  0x07
#define CREDENTIAL_REPORT_FACE_BIOMETRIC                                                 0x08
#define CREDENTIAL_REPORT_FINGER_BIOMETRIC                                               0x09
#define CREDENTIAL_REPORT_HAND_BIOMETRIC                                                 0x0A
#define CREDENTIAL_REPORT_UNSPECIFIED_BIOMETRIC                                          0x0B
#define CREDENTIAL_REPORT_PROPERTIES1_RESERVED_MASK                                      0x7F
#define CREDENTIAL_REPORT_PROPERTIES1_CRB_BIT_MASK                                       0x80
#define CREDENTIAL_REPORT_DNE                                                            0x00
#define CREDENTIAL_REPORT_UNKNOWN                                                        0x01
#define CREDENTIAL_REPORT_Z_WAVE                                                         0x02
#define CREDENTIAL_REPORT_LOCALLY                                                        0x03
#define CREDENTIAL_REPORT_MOBILE_APP_OR_OTHER_IOT_TECHNOLOGY                             0x04
#define CREDENTIAL_REPORT_NONE                                                           0x00
#define CREDENTIAL_REPORT_PIN_CODE                                                       0x01
#define CREDENTIAL_REPORT_PASSWORD                                                       0x02
#define CREDENTIAL_REPORT_RFID_CODE                                                      0x03
#define CREDENTIAL_REPORT_BLE                                                            0x04
#define CREDENTIAL_REPORT_NFC                                                            0x05
#define CREDENTIAL_REPORT_UWB                                                            0x06
#define CREDENTIAL_REPORT_EYE_BIOMETRIC                                                  0x07
#define CREDENTIAL_REPORT_FACE_BIOMETRIC                                                 0x08
#define CREDENTIAL_REPORT_FINGER_BIOMETRIC                                               0x09
#define CREDENTIAL_REPORT_HAND_BIOMETRIC                                                 0x0A
#define CREDENTIAL_REPORT_UNSPECIFIED_BIOMETRIC                                          0x0B
/* Values used for Credential Learn Start command */
#define CREDENTIAL_LEARN_START_PIN_CODE                                                  0x01
#define CREDENTIAL_LEARN_START_PASSWORD                                                  0x02
#define CREDENTIAL_LEARN_START_RFID_CODE                                                 0x03
#define CREDENTIAL_LEARN_START_BLE                                                       0x04
#define CREDENTIAL_LEARN_START_NFC                                                       0x05
#define CREDENTIAL_LEARN_START_UWB                                                       0x06
#define CREDENTIAL_LEARN_START_EYE_BIOMETRIC                                             0x07
#define CREDENTIAL_LEARN_START_FACE_BIOMETRIC                                            0x08
#define CREDENTIAL_LEARN_START_FINGER_BIOMETRIC                                          0x09
#define CREDENTIAL_LEARN_START_HAND_BIOMETRIC                                            0x0A
#define CREDENTIAL_LEARN_START_UNSPECIFIED_BIOMETRIC                                     0x0B
#define CREDENTIAL_LEARN_START_PROPERTIES1_OPERATION_TYPE_MASK                           0x03
#define CREDENTIAL_LEARN_START_OPERATION_TYPE_CREDENTIALLEARNADD                         0x00
#define CREDENTIAL_LEARN_START_OPERATION_TYPE_CREDENTIALLEARNMODIFY                      0x01
#define CREDENTIAL_LEARN_START_PROPERTIES1_RESERVED_MASK                                 0xFC
#define CREDENTIAL_LEARN_START_PROPERTIES1_RESERVED_SHIFT                                0x02
/* Values used for Credential Learn Report command */
#define CREDENTIAL_LEARN_REPORT_STARTED                                                  0x00
#define CREDENTIAL_LEARN_REPORT_SUCCESS                                                  0x01
#define CREDENTIAL_LEARN_REPORT_ALREADY_IN_PROGRESS                                      0x02
#define CREDENTIAL_LEARN_REPORT_ENDED_NOT_DUE_TO_TIMEOUT                                 0x03
#define CREDENTIAL_LEARN_REPORT_TIMEOUT                                                  0x04
#define CREDENTIAL_LEARN_REPORT_CREDENTIAL_LEARN_STEP_RETRY                              0x05
#define CREDENTIAL_LEARN_REPORT_INVALID_CREDENTIAL_LEARN_ADD_OPERATION_TYPE              0xFE
#define CREDENTIAL_LEARN_REPORT_INVALID_CREDENTIAL_LEARN_MODIFY_OPERATION_TYPE           0xFF
#define CREDENTIAL_LEARN_REPORT_PIN_CODE                                                 0x01
#define CREDENTIAL_LEARN_REPORT_PASSWORD                                                 0x02
#define CREDENTIAL_LEARN_REPORT_RFID_CODE                                                0x03
#define CREDENTIAL_LEARN_REPORT_BLE                                                      0x04
#define CREDENTIAL_LEARN_REPORT_NFC                                                      0x05
#define CREDENTIAL_LEARN_REPORT_UWB                                                      0x06
#define CREDENTIAL_LEARN_REPORT_EYE_BIOMETRIC                                            0x07
#define CREDENTIAL_LEARN_REPORT_FACE_BIOMETRIC                                           0x08
#define CREDENTIAL_LEARN_REPORT_FINGER_BIOMETRIC                                         0x09
#define CREDENTIAL_LEARN_REPORT_HAND_BIOMETRIC                                           0x0A
#define CREDENTIAL_LEARN_REPORT_UNSPECIFIED_BIOMETRIC                                    0x0B
/* Values used for User Credential Association Set command */
#define USER_CREDENTIAL_ASSOCIATION_SET_PIN_CODE                                         0x01
#define USER_CREDENTIAL_ASSOCIATION_SET_PASSWORD                                         0x02
#define USER_CREDENTIAL_ASSOCIATION_SET_RFID_CODE                                        0x03
#define USER_CREDENTIAL_ASSOCIATION_SET_BLE                                              0x04
#define USER_CREDENTIAL_ASSOCIATION_SET_NFC                                              0x05
#define USER_CREDENTIAL_ASSOCIATION_SET_UWB                                              0x06
#define USER_CREDENTIAL_ASSOCIATION_SET_EYE_BIOMETRIC                                    0x07
#define USER_CREDENTIAL_ASSOCIATION_SET_FACE_BIOMETRIC                                   0x08
#define USER_CREDENTIAL_ASSOCIATION_SET_FINGER_BIOMETRIC                                 0x09
#define USER_CREDENTIAL_ASSOCIATION_SET_HAND_BIOMETRIC                                   0x0A
#define USER_CREDENTIAL_ASSOCIATION_SET_UNSPECIFIED_BIOMETRIC                            0x0B
/* Values used for User Credential Association Report command */
#define USER_CREDENTIAL_ASSOCIATION_REPORT_PIN_CODE                                      0x01
#define USER_CREDENTIAL_ASSOCIATION_REPORT_PASSWORD                                      0x02
#define USER_CREDENTIAL_ASSOCIATION_REPORT_RFID_CODE                                     0x03
#define USER_CREDENTIAL_ASSOCIATION_REPORT_BLE                                           0x04
#define USER_CREDENTIAL_ASSOCIATION_REPORT_NFC                                           0x05
#define USER_CREDENTIAL_ASSOCIATION_REPORT_UWB                                           0x06
#define USER_CREDENTIAL_ASSOCIATION_REPORT_EYE_BIOMETRIC                                 0x07
#define USER_CREDENTIAL_ASSOCIATION_REPORT_FACE_BIOMETRIC                                0x08
#define USER_CREDENTIAL_ASSOCIATION_REPORT_FINGER_BIOMETRIC                              0x09
#define USER_CREDENTIAL_ASSOCIATION_REPORT_HAND_BIOMETRIC                                0x0A
#define USER_CREDENTIAL_ASSOCIATION_REPORT_UNSPECIFIED_BIOMETRIC                         0x0B
#define USER_CREDENTIAL_ASSOCIATION_REPORT_SUCCESS                                       0x00
#define USER_CREDENTIAL_ASSOCIATION_REPORT_CREDENTIAL_TYPE_INVALID                       0x01
#define USER_CREDENTIAL_ASSOCIATION_REPORT_SOURCE_CREDENTIAL_SLOT_INVALID                0x02
#define USER_CREDENTIAL_ASSOCIATION_REPORT_SOURCE_CREDENTIAL_SLOT_EMPTY                  0x03
#define USER_CREDENTIAL_ASSOCIATION_REPORT_DESTINATION_USER_UNIQUE_IDENTIFIER_INVALID    0x04
#define USER_CREDENTIAL_ASSOCIATION_REPORT_DESTINATION_USER_UNIQUE_IDENTIFIER_NONEXISTENT 0x05
#define USER_CREDENTIAL_ASSOCIATION_REPORT_DESTINATION_CREDENTIAL_SLOT_INVALID           0x06
#define USER_CREDENTIAL_ASSOCIATION_REPORT_DESTINATION_CREDENTIAL_SLOT_OCCUPIED          0x07
/* Values used for Credential Checksum Get command */
#define CREDENTIAL_CHECKSUM_GET_PIN_CODE                                                 0x01
#define CREDENTIAL_CHECKSUM_GET_PASSWORD                                                 0x02
#define CREDENTIAL_CHECKSUM_GET_RFID_CODE                                                0x03
#define CREDENTIAL_CHECKSUM_GET_BLE                                                      0x04
#define CREDENTIAL_CHECKSUM_GET_NFC                                                      0x05
#define CREDENTIAL_CHECKSUM_GET_UWB                                                      0x06
#define CREDENTIAL_CHECKSUM_GET_EYE_BIOMETRIC                                            0x07
#define CREDENTIAL_CHECKSUM_GET_FACE_BIOMETRIC                                           0x08
#define CREDENTIAL_CHECKSUM_GET_FINGER_BIOMETRIC                                         0x09
#define CREDENTIAL_CHECKSUM_GET_HAND_BIOMETRIC                                           0x0A
#define CREDENTIAL_CHECKSUM_GET_UNSPECIFIED_BIOMETRIC                                    0x0B
/* Values used for Credential Checksum Report command */
#define CREDENTIAL_CHECKSUM_REPORT_PIN_CODE                                              0x01
#define CREDENTIAL_CHECKSUM_REPORT_PASSWORD                                              0x02
#define CREDENTIAL_CHECKSUM_REPORT_RFID_CODE                                             0x03
#define CREDENTIAL_CHECKSUM_REPORT_BLE                                                   0x04
#define CREDENTIAL_CHECKSUM_REPORT_NFC                                                   0x05
#define CREDENTIAL_CHECKSUM_REPORT_UWB                                                   0x06
#define CREDENTIAL_CHECKSUM_REPORT_EYE_BIOMETRIC                                         0x07
#define CREDENTIAL_CHECKSUM_REPORT_FACE_BIOMETRIC                                        0x08
#define CREDENTIAL_CHECKSUM_REPORT_FINGER_BIOMETRIC                                      0x09
#define CREDENTIAL_CHECKSUM_REPORT_HAND_BIOMETRIC                                        0x0A
#define CREDENTIAL_CHECKSUM_REPORT_UNSPECIFIED_BIOMETRIC                                 0x0B
/* Values used for Admin Pin Code Set command */
#define ADMIN_PIN_CODE_SET_PROPERTIES1_ADMIN_PIN_CODE_LENGTH_MASK                        0x0F
#define ADMIN_PIN_CODE_SET_PROPERTIES1_RESERVED_MASK                                     0xF0
#define ADMIN_PIN_CODE_SET_PROPERTIES1_RESERVED_SHIFT                                    0x04
/* Values used for Admin Pin Code Report command */
#define ADMIN_PIN_CODE_REPORT_PROPERTIES1_ADMIN_PIN_CODE_LENGTH_MASK                     0x0F
#define ADMIN_PIN_CODE_REPORT_PROPERTIES1_ADMIN_PIN_CODE_OPERATION_RESULT_MASK           0xF0
#define ADMIN_PIN_CODE_REPORT_PROPERTIES1_ADMIN_PIN_CODE_OPERATION_RESULT_SHIFT          0x04


/* Max. frame size to allow routing over 4 hops */
#define META_DATA_MAX_DATA_SIZE                      48

/* Max frame that can be transmitted */
#define TX_DATA_MAX_DATA_SIZE                        170

/************************************************************/
/* Structs and unions that can be used by the application   */
/* to construct the frames to be sent                       */
/************************************************************/

/************************************************************/
/* Common for all command classes                           */
/************************************************************/
typedef struct _ZW_COMMON_FRAME_
{
  uint8_t        cmdClass;  /* The command class */
  uint8_t        cmd;       /* The command */
} ZW_COMMON_FRAME;

/************************************************************/
/* Alarm Get command class structs */                       
/************************************************************/
typedef struct _ZW_ALARM_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
} ZW_ALARM_GET_FRAME;

/************************************************************/
/* Alarm Report command class structs */                    
/************************************************************/
typedef struct _ZW_ALARM_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
    uint8_t   alarmLevel;                   /**/
} ZW_ALARM_REPORT_FRAME;

/************************************************************/
/* Alarm Get V2 command class structs */                    
/************************************************************/
typedef struct _ZW_ALARM_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
    uint8_t   zwaveAlarmType;               /**/
} ZW_ALARM_GET_V2_FRAME;

/************************************************************/
/* Alarm Report 1byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_ALARM_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
    uint8_t   alarmLevel;                   /**/
    uint8_t   zensorNetSourceNodeId;        /**/
    uint8_t   zwaveAlarmStatus;             /**/
    uint8_t   zwaveAlarmType;               /**/
    uint8_t   zwaveAlarmEvent;              /**/
    uint8_t   numberOfEventParameters;      /**/
    uint8_t   eventParameter1;              
} ZW_ALARM_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Alarm Report 2byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_ALARM_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
    uint8_t   alarmLevel;                   /**/
    uint8_t   zensorNetSourceNodeId;        /**/
    uint8_t   zwaveAlarmStatus;             /**/
    uint8_t   zwaveAlarmType;               /**/
    uint8_t   zwaveAlarmEvent;              /**/
    uint8_t   numberOfEventParameters;      /**/
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
} ZW_ALARM_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Alarm Report 3byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_ALARM_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
    uint8_t   alarmLevel;                   /**/
    uint8_t   zensorNetSourceNodeId;        /**/
    uint8_t   zwaveAlarmStatus;             /**/
    uint8_t   zwaveAlarmType;               /**/
    uint8_t   zwaveAlarmEvent;              /**/
    uint8_t   numberOfEventParameters;      /**/
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
} ZW_ALARM_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Alarm Report 4byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_ALARM_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmType;                    /**/
    uint8_t   alarmLevel;                   /**/
    uint8_t   zensorNetSourceNodeId;        /**/
    uint8_t   zwaveAlarmStatus;             /**/
    uint8_t   zwaveAlarmType;               /**/
    uint8_t   zwaveAlarmEvent;              /**/
    uint8_t   numberOfEventParameters;      /**/
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
} ZW_ALARM_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Alarm Set V2 command class structs */                    
/************************************************************/
typedef struct _ZW_ALARM_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zwaveAlarmType;               /**/
    uint8_t   zwaveAlarmStatus;             /**/
} ZW_ALARM_SET_V2_FRAME;

/************************************************************/
/* Alarm Type Supported Get V2 command class structs */     
/************************************************************/
typedef struct _ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ALARM_TYPE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Alarm Type Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_ALARM_TYPE_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Alarm Type Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_ALARM_TYPE_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Alarm Type Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_ALARM_TYPE_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Alarm Type Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_ALARM_TYPE_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Notification Get V3 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V3_FRAME;

/************************************************************/
/* Notification Report 1byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Notification Report 2byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Notification Report 3byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Notification Report 4byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Notification Set V3 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V3_FRAME;

/************************************************************/
/* Notification Supported Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Event Supported Get V3 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Event Supported Report 1byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Event Supported Report 2byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Event Supported Report 3byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Event Supported Report 4byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Notification Get V4 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V4_FRAME;

/************************************************************/
/* Notification Report 1byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Notification Report 2byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Notification Report 3byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Notification Report 4byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Notification Set V4 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V4_FRAME;

/************************************************************/
/* Notification Supported Get V4 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Event Supported Get V4 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Event Supported Report 1byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Event Supported Report 2byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Event Supported Report 3byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Event Supported Report 4byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Notification Get V5 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V5_FRAME;

/************************************************************/
/* Notification Report 1byte V5 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Notification Report 2byte V5 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Notification Report 3byte V5 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Notification Report 4byte V5 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Notification Set V5 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V5_FRAME;

/************************************************************/
/* Notification Supported Get V5 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V5_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Event Supported Get V5 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V5_FRAME;

/************************************************************/
/* Event Supported Report 1byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Event Supported Report 2byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Event Supported Report 3byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Event Supported Report 4byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Notification Get V6 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V6_FRAME;

/************************************************************/
/* Notification Report 1byte V6 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Notification Report 2byte V6 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Notification Report 3byte V6 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Notification Report 4byte V6 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Notification Set V6 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V6_FRAME;

/************************************************************/
/* Notification Supported Get V6 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V6_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V6 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V6 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V6 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V6 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Event Supported Get V6 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V6_FRAME;

/************************************************************/
/* Event Supported Report 1byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Event Supported Report 2byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Event Supported Report 3byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Event Supported Report 4byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Notification Get V7 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V7_FRAME;

/************************************************************/
/* Notification Report 1byte V7 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Notification Report 2byte V7 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Notification Report 3byte V7 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Notification Report 4byte V7 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Notification Set V7 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V7_FRAME;

/************************************************************/
/* Notification Supported Get V7 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V7_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V7 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V7 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V7 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V7 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Event Supported Get V7 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V7_FRAME;

/************************************************************/
/* Event Supported Report 1byte V7 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Event Supported Report 2byte V7 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Event Supported Report 3byte V7 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Event Supported Report 4byte V7 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Notification Get V8 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V8_FRAME;

/************************************************************/
/* Notification Report 1byte V8 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Notification Report 2byte V8 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Notification Report 3byte V8 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Notification Report 4byte V8 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Notification Set V8 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V8_FRAME;

/************************************************************/
/* Notification Supported Get V8 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V8_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V8 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V8 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V8 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V8 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Event Supported Get V8 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V8_FRAME;

/************************************************************/
/* Event Supported Report 1byte V8 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Event Supported Report 2byte V8 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Event Supported Report 3byte V8 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Event Supported Report 4byte V8 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Notification Get V9 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_GET_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
} ZW_NOTIFICATION_GET_V9_FRAME;

/************************************************************/
/* Notification Report 1byte V9 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_1BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_1BYTE_V9_FRAME;

/************************************************************/
/* Notification Report 2byte V9 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_2BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_2BYTE_V9_FRAME;

/************************************************************/
/* Notification Report 3byte V9 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_3BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_3BYTE_V9_FRAME;

/************************************************************/
/* Notification Report 4byte V9 command class structs */    
/************************************************************/
typedef struct _ZW_NOTIFICATION_REPORT_4BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   v1AlarmType;                  /**/
    uint8_t   v1AlarmLevel;                 /**/
    uint8_t   reserved;                     /**/
    uint8_t   notificationStatus;           /**/
    uint8_t   notificationType;             /**/
    uint8_t   mevent;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventParameter1;              /* MSB */
    uint8_t   eventParameter2;              
    uint8_t   eventParameter3;              
    uint8_t   eventParameter4;              /* LSB */
    uint8_t   sequenceNumber;               /**/
} ZW_NOTIFICATION_REPORT_4BYTE_V9_FRAME;

/************************************************************/
/* Notification Set V9 command class structs */             
/************************************************************/
typedef struct _ZW_NOTIFICATION_SET_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   notificationStatus;           /**/
} ZW_NOTIFICATION_SET_V9_FRAME;

/************************************************************/
/* Notification Supported Get V9 command class structs */   
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_GET_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NOTIFICATION_SUPPORTED_GET_V9_FRAME;

/************************************************************/
/* Notification Supported Report 1byte V9 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_NOTIFICATION_SUPPORTED_REPORT_1BYTE_V9_FRAME;

/************************************************************/
/* Notification Supported Report 2byte V9 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_2BYTE_V9_FRAME;

/************************************************************/
/* Notification Supported Report 3byte V9 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_3BYTE_V9_FRAME;

/************************************************************/
/* Notification Supported Report 4byte V9 command class structs */
/************************************************************/
typedef struct _ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_NOTIFICATION_SUPPORTED_REPORT_4BYTE_V9_FRAME;

/************************************************************/
/* Event Supported Get V9 command class structs */          
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_GET_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
} ZW_EVENT_SUPPORTED_GET_V9_FRAME;

/************************************************************/
/* Event Supported Report 1byte V9 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_1BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_EVENT_SUPPORTED_REPORT_1BYTE_V9_FRAME;

/************************************************************/
/* Event Supported Report 2byte V9 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_2BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_2BYTE_V9_FRAME;

/************************************************************/
/* Event Supported Report 3byte V9 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_3BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_3BYTE_V9_FRAME;

/************************************************************/
/* Event Supported Report 4byte V9 command class structs */ 
/************************************************************/
typedef struct _ZW_EVENT_SUPPORTED_REPORT_4BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   notificationType;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_EVENT_SUPPORTED_REPORT_4BYTE_V9_FRAME;

/************************************************************/
/* Application Busy command class structs */                
/************************************************************/
typedef struct _ZW_APPLICATION_BUSY_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /*The status field*/
    uint8_t   waitTime;                     /**/
} ZW_APPLICATION_BUSY_FRAME;

/************************************************************/
/* Application Rejected Request command class structs */    
/************************************************************/
typedef struct _ZW_APPLICATION_REJECTED_REQUEST_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_APPLICATION_REJECTED_REQUEST_FRAME;

/************************************************************/
/* Command Configuration Get command class structs */       
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
} ZW_COMMAND_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Command Configuration Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 
} ZW_COMMAND_CONFIGURATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Command Configuration Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 /* LSB */
} ZW_COMMAND_CONFIGURATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Command Configuration Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 /* LSB */
} ZW_COMMAND_CONFIGURATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Command Configuration Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 
    uint8_t   commandByte4;                 /* LSB */
} ZW_COMMAND_CONFIGURATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Command Configuration Set 1byte command class structs */ 
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 
} ZW_COMMAND_CONFIGURATION_SET_1BYTE_FRAME;

/************************************************************/
/* Command Configuration Set 2byte command class structs */ 
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 /* LSB */
} ZW_COMMAND_CONFIGURATION_SET_2BYTE_FRAME;

/************************************************************/
/* Command Configuration Set 3byte command class structs */ 
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 /* LSB */
} ZW_COMMAND_CONFIGURATION_SET_3BYTE_FRAME;

/************************************************************/
/* Command Configuration Set 4byte command class structs */ 
/************************************************************/
typedef struct _ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId;                       /**/
    uint8_t   commandLength;                /**/
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 
    uint8_t   commandByte4;                 /* LSB */
} ZW_COMMAND_CONFIGURATION_SET_4BYTE_FRAME;

/************************************************************/
/* Command Records Supported Get command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_COMMAND_RECORDS_SUPPORTED_GET_FRAME;

/************************************************************/
/* Command Records Supported Report command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   freeCommandRecords1;          /* MSB */
    uint8_t   freeCommandRecords2;          /* LSB */
    uint8_t   maxCommandRecords1;           /* MSB */
    uint8_t   maxCommandRecords2;           /* LSB */
} ZW_COMMAND_RECORDS_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Association Get command class structs */                 
/************************************************************/
typedef struct _ZW_ASSOCIATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GET_FRAME;

/************************************************************/
/* Association Groupings Get command class structs */       
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_GROUPINGS_GET_FRAME;

/************************************************************/
/* Association Groupings Report command class structs */    
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_ASSOCIATION_GROUPINGS_REPORT_FRAME;

/************************************************************/
/* Association Remove 1byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_REMOVE_1BYTE_FRAME;

/************************************************************/
/* Association Remove 2byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_2BYTE_FRAME;

/************************************************************/
/* Association Remove 3byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_3BYTE_FRAME;

/************************************************************/
/* Association Remove 4byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_4BYTE_FRAME;

/************************************************************/
/* Association Report 1byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      
} ZW_ASSOCIATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Association Report 2byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      /* LSB */
} ZW_ASSOCIATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Association Report 3byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      /* LSB */
} ZW_ASSOCIATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Association Report 4byte command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      
    uint8_t   nodeid4;                      /* LSB */
} ZW_ASSOCIATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Association Set 1byte command class structs */           
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_SET_1BYTE_FRAME;

/************************************************************/
/* Association Set 2byte command class structs */           
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_SET_2BYTE_FRAME;

/************************************************************/
/* Association Set 3byte command class structs */           
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_SET_3BYTE_FRAME;

/************************************************************/
/* Association Set 4byte command class structs */           
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_SET_4BYTE_FRAME;

/************************************************************/
/* Association Get V2 command class structs */              
/************************************************************/
typedef struct _ZW_ASSOCIATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GET_V2_FRAME;

/************************************************************/
/* Association Groupings Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_GROUPINGS_GET_V2_FRAME;

/************************************************************/
/* Association Groupings Report V2 command class structs */ 
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME;

/************************************************************/
/* Association Remove 1byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_REMOVE_1BYTE_V2_FRAME;

/************************************************************/
/* Association Remove 2byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_2BYTE_V2_FRAME;

/************************************************************/
/* Association Remove 3byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_3BYTE_V2_FRAME;

/************************************************************/
/* Association Remove 4byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_4BYTE_V2_FRAME;

/************************************************************/
/* Association Report 1byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      
} ZW_ASSOCIATION_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Association Report 2byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      /* LSB */
} ZW_ASSOCIATION_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Association Report 3byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      /* LSB */
} ZW_ASSOCIATION_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Association Report 4byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      
    uint8_t   nodeid4;                      /* LSB */
} ZW_ASSOCIATION_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Association Set 1byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Association Set 2byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Association Set 3byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Association Set 4byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Association Specific Group Get V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V2_FRAME;

/************************************************************/
/* Association Specific Group Report V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   group;                        /**/
} ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V2_FRAME;

/************************************************************/
/* Association Get V3 command class structs */              
/************************************************************/
typedef struct _ZW_ASSOCIATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GET_V3_FRAME;

/************************************************************/
/* Association Groupings Get V3 command class structs */    
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_GROUPINGS_GET_V3_FRAME;

/************************************************************/
/* Association Groupings Report V3 command class structs */ 
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_ASSOCIATION_GROUPINGS_REPORT_V3_FRAME;

/************************************************************/
/* Association Remove 1byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_REMOVE_1BYTE_V3_FRAME;

/************************************************************/
/* Association Remove 2byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_2BYTE_V3_FRAME;

/************************************************************/
/* Association Remove 3byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_3BYTE_V3_FRAME;

/************************************************************/
/* Association Remove 4byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_4BYTE_V3_FRAME;

/************************************************************/
/* Association Report 1byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      
} ZW_ASSOCIATION_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Association Report 2byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      /* LSB */
} ZW_ASSOCIATION_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Association Report 3byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      /* LSB */
} ZW_ASSOCIATION_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Association Report 4byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      
    uint8_t   nodeid4;                      /* LSB */
} ZW_ASSOCIATION_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Association Set 1byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Association Set 2byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Association Set 3byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Association Set 4byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Association Specific Group Get V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V3_FRAME;

/************************************************************/
/* Association Specific Group Report V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   group;                        /**/
} ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V3_FRAME;

/************************************************************/
/* Association Get V4 command class structs */              
/************************************************************/
typedef struct _ZW_ASSOCIATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GET_V4_FRAME;

/************************************************************/
/* Association Groupings Get V4 command class structs */    
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_GROUPINGS_GET_V4_FRAME;

/************************************************************/
/* Association Groupings Report V4 command class structs */ 
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUPINGS_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_ASSOCIATION_GROUPINGS_REPORT_V4_FRAME;

/************************************************************/
/* Association Remove 1byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_REMOVE_1BYTE_V4_FRAME;

/************************************************************/
/* Association Remove 2byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_2BYTE_V4_FRAME;

/************************************************************/
/* Association Remove 3byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_3BYTE_V4_FRAME;

/************************************************************/
/* Association Remove 4byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REMOVE_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_REMOVE_4BYTE_V4_FRAME;

/************************************************************/
/* Association Report 1byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      
} ZW_ASSOCIATION_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Association Report 2byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      /* LSB */
} ZW_ASSOCIATION_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Association Report 3byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      /* LSB */
} ZW_ASSOCIATION_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Association Report 4byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_ASSOCIATION_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeid1;                      /* MSB */
    uint8_t   nodeid2;                      
    uint8_t   nodeid3;                      
    uint8_t   nodeid4;                      /* LSB */
} ZW_ASSOCIATION_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Association Set 1byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
} ZW_ASSOCIATION_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Association Set 2byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
} ZW_ASSOCIATION_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Association Set 3byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
} ZW_ASSOCIATION_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Association Set 4byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_ASSOCIATION_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
} ZW_ASSOCIATION_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Association Specific Group Get V4 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ASSOCIATION_SPECIFIC_GROUP_GET_V4_FRAME;

/************************************************************/
/* Association Specific Group Report V4 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   group;                        /**/
} ZW_ASSOCIATION_SPECIFIC_GROUP_REPORT_V4_FRAME;

/************************************************************/
/* Av Content Browse Md By Letter Get command class structs */
/************************************************************/
typedef struct _ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_GET_FRAME;

/************************************************************/
/* Av Content Browse Md By Letter Report command class structs */
/************************************************************/
typedef struct _ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_BROWSE_MD_BY_LETTER_REPORT_FRAME;

/************************************************************/
/* Av Content Browse Md Child Count Get command class structs */
/************************************************************/
typedef struct _ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_GET_FRAME;

/************************************************************/
/* Av Content Browse Md Child Count Report command class structs */
/************************************************************/
typedef struct _ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_BROWSE_MD_CHILD_COUNT_REPORT_FRAME;

/************************************************************/
/* Av Content Browse Md Get command class structs */        
/************************************************************/
typedef struct _ZW_AV_CONTENT_BROWSE_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_BROWSE_MD_GET_FRAME;

/************************************************************/
/* Av Content Browse Md Report command class structs */     
/************************************************************/
typedef struct _ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_BROWSE_MD_REPORT_FRAME;

/************************************************************/
/* Av Match Item To Renderer Md Get command class structs */
/************************************************************/
typedef struct _ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_MATCH_ITEM_TO_RENDERER_MD_GET_FRAME;

/************************************************************/
/* Av Match Item To Renderer Md Report command class structs */
/************************************************************/
typedef struct _ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_MATCH_ITEM_TO_RENDERER_MD_REPORT_FRAME;

/************************************************************/
/* Av Content Search Md Get command class structs */        
/************************************************************/
typedef struct _ZW_AV_CONTENT_SEARCH_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_SEARCH_MD_GET_FRAME;

/************************************************************/
/* Av Content Search Md Report command class structs */     
/************************************************************/
typedef struct _ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_CONTENT_SEARCH_MD_REPORT_FRAME;

/************************************************************/
/* Av Renderer Status Get command class structs */          
/************************************************************/
typedef struct _ZW_AV_RENDERER_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_RENDERER_STATUS_GET_FRAME;

/************************************************************/
/* Av Renderer Status Report command class structs */       
/************************************************************/
typedef struct _ZW_AV_RENDERER_STATUS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_RENDERER_STATUS_REPORT_FRAME;

/************************************************************/
/* Av Tagging Md Get command class structs */               
/************************************************************/
typedef struct _ZW_AV_TAGGING_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_TAGGING_MD_GET_FRAME;

/************************************************************/
/* Av Tagging Md Report command class structs */            
/************************************************************/
typedef struct _ZW_AV_TAGGING_MD_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AV_TAGGING_MD_REPORT_FRAME;

/************************************************************/
/* Basic Tariff Info Get command class structs */           
/************************************************************/
typedef struct _ZW_BASIC_TARIFF_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BASIC_TARIFF_INFO_GET_FRAME;

/************************************************************/
/* Basic Tariff Info Report command class structs */        
/************************************************************/
typedef struct _ZW_BASIC_TARIFF_INFO_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   e1RateConsumptionRegister1;   /* MSB */
    uint8_t   e1RateConsumptionRegister2;   
    uint8_t   e1RateConsumptionRegister3;   
    uint8_t   e1RateConsumptionRegister4;   /* LSB */
    uint8_t   e1TimeForNextRateHours;       /**/
    uint8_t   e1TimeForNextRateMinutes;     /**/
    uint8_t   e1TimeForNextRateSeconds;     /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   e2RateConsumptionRegister1;   /* MSB */
    uint8_t   e2RateConsumptionRegister2;   
    uint8_t   e2RateConsumptionRegister3;   
    uint8_t   e2RateConsumptionRegister4;   /* LSB */
} ZW_BASIC_TARIFF_INFO_REPORT_FRAME;

/************************************************************/
/* Basic Window Covering Start Level Change command class structs */
/************************************************************/
typedef struct _ZW_BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_BASIC_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Basic Window Covering Stop Level Change command class structs */
/************************************************************/
typedef struct _ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BASIC_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Basic Get command class structs */                       
/************************************************************/
typedef struct _ZW_BASIC_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BASIC_GET_FRAME;

/************************************************************/
/* Basic Report command class structs */                    
/************************************************************/
typedef struct _ZW_BASIC_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_BASIC_REPORT_FRAME;

/************************************************************/
/* Basic Set command class structs */                       
/************************************************************/
typedef struct _ZW_BASIC_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_BASIC_SET_FRAME;

/************************************************************/
/* Basic Get V2 command class structs */                    
/************************************************************/
typedef struct _ZW_BASIC_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BASIC_GET_V2_FRAME;

/************************************************************/
/* Basic Report V2 command class structs */                 
/************************************************************/
typedef struct _ZW_BASIC_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   currentValue;                 /**/
    uint8_t   targetValue;                  /**/
    uint8_t   duration;                     /**/
} ZW_BASIC_REPORT_V2_FRAME;

/************************************************************/
/* Basic Set V2 command class structs */                    
/************************************************************/
typedef struct _ZW_BASIC_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_BASIC_SET_V2_FRAME;

/************************************************************/
/* Battery Get command class structs */                     
/************************************************************/
typedef struct _ZW_BATTERY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BATTERY_GET_FRAME;

/************************************************************/
/* Battery Report command class structs */                  
/************************************************************/
typedef struct _ZW_BATTERY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   batteryLevel;                 /**/
} ZW_BATTERY_REPORT_FRAME;

/************************************************************/
/* Battery Get V2 command class structs */                  
/************************************************************/
typedef struct _ZW_BATTERY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BATTERY_GET_V2_FRAME;

/************************************************************/
/* Battery Report V2 command class structs */               
/************************************************************/
typedef struct _ZW_BATTERY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   batteryLevel;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_BATTERY_REPORT_V2_FRAME;

/************************************************************/
/* Battery Health Get V2 command class structs */           
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BATTERY_HEALTH_GET_V2_FRAME;

/************************************************************/
/* Battery Health Report 1byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          
} ZW_BATTERY_HEALTH_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Battery Health Report 2byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          /* MSB */
    uint8_t   batteryTemperature2;          /* LSB */
} ZW_BATTERY_HEALTH_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Battery Health Report 3byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          /* MSB */
    uint8_t   batteryTemperature2;          
    uint8_t   batteryTemperature3;          /* LSB */
} ZW_BATTERY_HEALTH_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Battery Health Report 4byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          /* MSB */
    uint8_t   batteryTemperature2;          
    uint8_t   batteryTemperature3;          
    uint8_t   batteryTemperature4;          /* LSB */
} ZW_BATTERY_HEALTH_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Battery Get V3 command class structs */                  
/************************************************************/
typedef struct _ZW_BATTERY_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BATTERY_GET_V3_FRAME;

/************************************************************/
/* Battery Report V3 command class structs */               
/************************************************************/
typedef struct _ZW_BATTERY_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   batteryLevel;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_BATTERY_REPORT_V3_FRAME;

/************************************************************/
/* Battery Health Get V3 command class structs */           
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BATTERY_HEALTH_GET_V3_FRAME;

/************************************************************/
/* Battery Health Report 1byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          
} ZW_BATTERY_HEALTH_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Battery Health Report 2byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          /* MSB */
    uint8_t   batteryTemperature2;          /* LSB */
} ZW_BATTERY_HEALTH_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Battery Health Report 3byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          /* MSB */
    uint8_t   batteryTemperature2;          
    uint8_t   batteryTemperature3;          /* LSB */
} ZW_BATTERY_HEALTH_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Battery Health Report 4byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_BATTERY_HEALTH_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumCapacity;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   batteryTemperature1;          /* MSB */
    uint8_t   batteryTemperature2;          
    uint8_t   batteryTemperature3;          
    uint8_t   batteryTemperature4;          /* LSB */
} ZW_BATTERY_HEALTH_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Chimney Fan Alarm Log Get command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_ALARM_LOG_GET_FRAME;

/************************************************************/
/* Chimney Fan Alarm Log Report command class structs */    
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmEvent1;                  /* masked byte */
    uint8_t   alarmEvent2;                  /* masked byte */
    uint8_t   alarmEvent3;                  /* masked byte */
    uint8_t   alarmEvent4;                  /* masked byte */
    uint8_t   alarmEvent5;                  /* masked byte */
} ZW_CHIMNEY_FAN_ALARM_LOG_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Alarm Log Set command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   message;                      /**/
} ZW_CHIMNEY_FAN_ALARM_LOG_SET_FRAME;

/************************************************************/
/* Chimney Fan Alarm Status Get command class structs */    
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_ALARM_STATUS_GET_FRAME;

/************************************************************/
/* Chimney Fan Alarm Status Report command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   alarmStatus;                  /* masked byte */
} ZW_CHIMNEY_FAN_ALARM_STATUS_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Alarm Status Set command class structs */    
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   message;                      /* masked byte */
} ZW_CHIMNEY_FAN_ALARM_STATUS_SET_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Get command class structs */      
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_ALARM_TEMP_GET_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_ALARM_TEMP_REPORT_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_ALARM_TEMP_SET_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_ALARM_TEMP_SET_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_ALARM_TEMP_SET_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Alarm Temp Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_ALARM_TEMP_SET_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Boost Time Get command class structs */      
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_BOOST_TIME_GET_FRAME;

/************************************************************/
/* Chimney Fan Boost Time Report command class structs */   
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   time;                         /**/
} ZW_CHIMNEY_FAN_BOOST_TIME_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Boost Time Set command class structs */      
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   time;                         /**/
} ZW_CHIMNEY_FAN_BOOST_TIME_SET_FRAME;

/************************************************************/
/* Chimney Fan Default Set command class structs */         
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_DEFAULT_SET_FRAME;

/************************************************************/
/* Chimney Fan Min Speed Get command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_MIN_SPEED_GET_FRAME;

/************************************************************/
/* Chimney Fan Min Speed Report command class structs */    
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   minSpeed;                     /**/
} ZW_CHIMNEY_FAN_MIN_SPEED_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Min Speed Set command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   minSpeed;                     /**/
} ZW_CHIMNEY_FAN_MIN_SPEED_SET_FRAME;

/************************************************************/
/* Chimney Fan Mode Get command class structs */            
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_MODE_GET_FRAME;

/************************************************************/
/* Chimney Fan Mode Report command class structs */         
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_CHIMNEY_FAN_MODE_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Mode Set command class structs */            
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_CHIMNEY_FAN_MODE_SET_FRAME;

/************************************************************/
/* Chimney Fan Setup Get command class structs */           
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_SETUP_GET_FRAME;

/************************************************************/
/* Chimney Fan Setup Report 1byte command class structs */  
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       
} ZW_CHIMNEY_FAN_SETUP_REPORT_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Report 2byte command class structs */  
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            /* MSB */
    uint8_t   startTemperature2;            /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             /* MSB */
    uint8_t   stopTemperature2;             /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       /* MSB */
    uint8_t   alarmTemperatureValue2;       /* LSB */
} ZW_CHIMNEY_FAN_SETUP_REPORT_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Report 3byte command class structs */  
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            /* MSB */
    uint8_t   startTemperature2;            
    uint8_t   startTemperature3;            /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             /* MSB */
    uint8_t   stopTemperature2;             
    uint8_t   stopTemperature3;             /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       /* MSB */
    uint8_t   alarmTemperatureValue2;       
    uint8_t   alarmTemperatureValue3;       /* LSB */
} ZW_CHIMNEY_FAN_SETUP_REPORT_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Report 4byte command class structs */  
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            /* MSB */
    uint8_t   startTemperature2;            
    uint8_t   startTemperature3;            
    uint8_t   startTemperature4;            /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             /* MSB */
    uint8_t   stopTemperature2;             
    uint8_t   stopTemperature3;             
    uint8_t   stopTemperature4;             /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       /* MSB */
    uint8_t   alarmTemperatureValue2;       
    uint8_t   alarmTemperatureValue3;       
    uint8_t   alarmTemperatureValue4;       /* LSB */
} ZW_CHIMNEY_FAN_SETUP_REPORT_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Set 1byte command class structs */     
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       
} ZW_CHIMNEY_FAN_SETUP_SET_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Set 2byte command class structs */     
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            /* MSB */
    uint8_t   startTemperature2;            /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             /* MSB */
    uint8_t   stopTemperature2;             /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       /* MSB */
    uint8_t   alarmTemperatureValue2;       /* LSB */
} ZW_CHIMNEY_FAN_SETUP_SET_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Set 3byte command class structs */     
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            /* MSB */
    uint8_t   startTemperature2;            
    uint8_t   startTemperature3;            /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             /* MSB */
    uint8_t   stopTemperature2;             
    uint8_t   stopTemperature3;             /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       /* MSB */
    uint8_t   alarmTemperatureValue2;       
    uint8_t   alarmTemperatureValue3;       /* LSB */
} ZW_CHIMNEY_FAN_SETUP_SET_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Setup Set 4byte command class structs */     
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   boostTime;                    /**/
    uint8_t   stopTime;                     /**/
    uint8_t   minSpeed;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startTemperature1;            /* MSB */
    uint8_t   startTemperature2;            
    uint8_t   startTemperature3;            
    uint8_t   startTemperature4;            /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   stopTemperature1;             /* MSB */
    uint8_t   stopTemperature2;             
    uint8_t   stopTemperature3;             
    uint8_t   stopTemperature4;             /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   alarmTemperatureValue1;       /* MSB */
    uint8_t   alarmTemperatureValue2;       
    uint8_t   alarmTemperatureValue3;       
    uint8_t   alarmTemperatureValue4;       /* LSB */
} ZW_CHIMNEY_FAN_SETUP_SET_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Speed Get command class structs */           
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SPEED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_SPEED_GET_FRAME;

/************************************************************/
/* Chimney Fan Speed Report command class structs */        
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   speed;                        /**/
} ZW_CHIMNEY_FAN_SPEED_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Speed Set command class structs */           
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_SPEED_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   speed;                        /**/
} ZW_CHIMNEY_FAN_SPEED_SET_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Get command class structs */      
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_START_TEMP_GET_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_START_TEMP_REPORT_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_START_TEMP_REPORT_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_START_TEMP_REPORT_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_START_TEMP_REPORT_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_START_TEMP_SET_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_START_TEMP_SET_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_START_TEMP_SET_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Start Temp Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_START_TEMP_SET_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan State Get command class structs */           
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_STATE_GET_FRAME;

/************************************************************/
/* Chimney Fan State Report command class structs */        
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
} ZW_CHIMNEY_FAN_STATE_REPORT_FRAME;

/************************************************************/
/* Chimney Fan State Set command class structs */           
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
} ZW_CHIMNEY_FAN_STATE_SET_FRAME;

/************************************************************/
/* Chimney Fan Status Get command class structs */          
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_STATUS_GET_FRAME;

/************************************************************/
/* Chimney Fan Status Report 1byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
    uint8_t   speed;                        /**/
    uint8_t   alarmStatus;                  /* masked byte */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_STATUS_REPORT_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Status Report 2byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
    uint8_t   speed;                        /**/
    uint8_t   alarmStatus;                  /* masked byte */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_STATUS_REPORT_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Status Report 3byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
    uint8_t   speed;                        /**/
    uint8_t   alarmStatus;                  /* masked byte */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_STATUS_REPORT_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Status Report 4byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
    uint8_t   speed;                        /**/
    uint8_t   alarmStatus;                  /* masked byte */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_STATUS_REPORT_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Get command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_STOP_TEMP_GET_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_STOP_TEMP_REPORT_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Set 1byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_CHIMNEY_FAN_STOP_TEMP_SET_1BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Set 2byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_CHIMNEY_FAN_STOP_TEMP_SET_2BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Set 3byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_CHIMNEY_FAN_STOP_TEMP_SET_3BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Temp Set 4byte command class structs */ 
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_CHIMNEY_FAN_STOP_TEMP_SET_4BYTE_FRAME;

/************************************************************/
/* Chimney Fan Stop Time Get command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CHIMNEY_FAN_STOP_TIME_GET_FRAME;

/************************************************************/
/* Chimney Fan Stop Time Report command class structs */    
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   time;                         /**/
} ZW_CHIMNEY_FAN_STOP_TIME_REPORT_FRAME;

/************************************************************/
/* Chimney Fan Stop Time Set command class structs */       
/************************************************************/
typedef struct _ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   time;                         /**/
} ZW_CHIMNEY_FAN_STOP_TIME_SET_FRAME;

/************************************************************/
/* Schedule Changed Get command class structs */            
/************************************************************/
typedef struct _ZW_SCHEDULE_CHANGED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_CHANGED_GET_FRAME;

/************************************************************/
/* Schedule Changed Report command class structs */         
/************************************************************/
typedef struct _ZW_SCHEDULE_CHANGED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   changecounter;                /**/
} ZW_SCHEDULE_CHANGED_REPORT_FRAME;

/************************************************************/
/* Schedule Get command class structs */                    
/************************************************************/
typedef struct _ZW_SCHEDULE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_SCHEDULE_GET_FRAME;

/************************************************************/
/* Schedule Override Get command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_OVERRIDE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_OVERRIDE_GET_FRAME;

/************************************************************/
/* Schedule Override Report command class structs */        
/************************************************************/
typedef struct _ZW_SCHEDULE_OVERRIDE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   overrideState;                /**/
} ZW_SCHEDULE_OVERRIDE_REPORT_FRAME;

/************************************************************/
/* Schedule Override Set command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_OVERRIDE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   overrideState;                /**/
} ZW_SCHEDULE_OVERRIDE_SET_FRAME;

/************************************************************/
/* Schedule Report command class structs */                 
/************************************************************/
typedef struct _ZW_SCHEDULE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   switchpoint01;                /* MSB */
    uint8_t   switchpoint02;                
    uint8_t   switchpoint03;                /* LSB */
    uint8_t   switchpoint11;                /* MSB */
    uint8_t   switchpoint12;                
    uint8_t   switchpoint13;                /* LSB */
    uint8_t   switchpoint21;                /* MSB */
    uint8_t   switchpoint22;                
    uint8_t   switchpoint23;                /* LSB */
    uint8_t   switchpoint31;                /* MSB */
    uint8_t   switchpoint32;                
    uint8_t   switchpoint33;                /* LSB */
    uint8_t   switchpoint41;                /* MSB */
    uint8_t   switchpoint42;                
    uint8_t   switchpoint43;                /* LSB */
    uint8_t   switchpoint51;                /* MSB */
    uint8_t   switchpoint52;                
    uint8_t   switchpoint53;                /* LSB */
    uint8_t   switchpoint61;                /* MSB */
    uint8_t   switchpoint62;                
    uint8_t   switchpoint63;                /* LSB */
    uint8_t   switchpoint71;                /* MSB */
    uint8_t   switchpoint72;                
    uint8_t   switchpoint73;                /* LSB */
    uint8_t   switchpoint81;                /* MSB */
    uint8_t   switchpoint82;                
    uint8_t   switchpoint83;                /* LSB */
} ZW_SCHEDULE_REPORT_FRAME;

/************************************************************/
/* Schedule Set command class structs */                    
/************************************************************/
typedef struct _ZW_SCHEDULE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   switchpoint01;                /* MSB */
    uint8_t   switchpoint02;                
    uint8_t   switchpoint03;                /* LSB */
    uint8_t   switchpoint11;                /* MSB */
    uint8_t   switchpoint12;                
    uint8_t   switchpoint13;                /* LSB */
    uint8_t   switchpoint21;                /* MSB */
    uint8_t   switchpoint22;                
    uint8_t   switchpoint23;                /* LSB */
    uint8_t   switchpoint31;                /* MSB */
    uint8_t   switchpoint32;                
    uint8_t   switchpoint33;                /* LSB */
    uint8_t   switchpoint41;                /* MSB */
    uint8_t   switchpoint42;                
    uint8_t   switchpoint43;                /* LSB */
    uint8_t   switchpoint51;                /* MSB */
    uint8_t   switchpoint52;                
    uint8_t   switchpoint53;                /* LSB */
    uint8_t   switchpoint61;                /* MSB */
    uint8_t   switchpoint62;                
    uint8_t   switchpoint63;                /* LSB */
    uint8_t   switchpoint71;                /* MSB */
    uint8_t   switchpoint72;                
    uint8_t   switchpoint73;                /* LSB */
    uint8_t   switchpoint81;                /* MSB */
    uint8_t   switchpoint82;                
    uint8_t   switchpoint83;                /* LSB */
} ZW_SCHEDULE_SET_FRAME;

/************************************************************/
/* Clock Get command class structs */                       
/************************************************************/
typedef struct _ZW_CLOCK_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CLOCK_GET_FRAME;

/************************************************************/
/* Clock Report command class structs */                    
/************************************************************/
typedef struct _ZW_CLOCK_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minute;                       /**/
} ZW_CLOCK_REPORT_FRAME;

/************************************************************/
/* Clock Set command class structs */                       
/************************************************************/
typedef struct _ZW_CLOCK_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minute;                       /**/
} ZW_CLOCK_SET_FRAME;

/************************************************************/
/* Configuration Get command class structs */               
/************************************************************/
typedef struct _ZW_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
} ZW_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Configuration Report 1byte command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Configuration Report 2byte command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Configuration Report 3byte command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Configuration Report 4byte command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Configuration Set 1byte command class structs */         
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_SET_1BYTE_FRAME;

/************************************************************/
/* Configuration Set 2byte command class structs */         
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_SET_2BYTE_FRAME;

/************************************************************/
/* Configuration Set 3byte command class structs */         
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_SET_3BYTE_FRAME;

/************************************************************/
/* Configuration Set 4byte command class structs */         
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_SET_4BYTE_FRAME;

/************************************************************/
/* Configuration Bulk Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
} ZW_CONFIGURATION_BULK_GET_V2_FRAME;

/************************************************************/
/* Configuration Bulk Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VG_
{
    uint8_t   parameter1;                   
} VG_CONFIGURATION_BULK_REPORT_1BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_2BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_3BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   
    uint8_t   parameter4;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
} ZW_CONFIGURATION_BULK_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup2;                /**/
} ZW_CONFIGURATION_BULK_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup3;                /**/
} ZW_CONFIGURATION_BULK_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V2_VG variantgroup4;                /**/
} ZW_CONFIGURATION_BULK_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG_
{
    uint8_t   parameter1;                   
} VG_CONFIGURATION_BULK_SET_1BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_2BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_3BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   
    uint8_t   parameter4;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG;

/************************************************************/
/* Configuration Bulk Set 1byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
} ZW_CONFIGURATION_BULK_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Set 2byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup2;                /**/
} ZW_CONFIGURATION_BULK_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Set 3byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup3;                /**/
} ZW_CONFIGURATION_BULK_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Set 4byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup3;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V2_VG variantgroup4;                /**/
} ZW_CONFIGURATION_BULK_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Configuration Get V2 command class structs */            
/************************************************************/
typedef struct _ZW_CONFIGURATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
} ZW_CONFIGURATION_GET_V2_FRAME;

/************************************************************/
/* Configuration Report 1byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Configuration Report 2byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Configuration Report 3byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Configuration Report 4byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Configuration Set 1byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Configuration Set 2byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Configuration Set 3byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Configuration Set 4byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Configuration Bulk Get V3 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
} ZW_CONFIGURATION_BULK_GET_V3_FRAME;

/************************************************************/
/* Configuration Bulk Report V3 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_1BYTE_V3_VG_
{
    uint8_t   parameter1;                   
} VG_CONFIGURATION_BULK_REPORT_1BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Report V3 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_2BYTE_V3_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_2BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Report V3 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_3BYTE_V3_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_3BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Report V3 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   
    uint8_t   parameter4;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup1;                /**/
} ZW_CONFIGURATION_BULK_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup2;                /**/
} ZW_CONFIGURATION_BULK_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup3;                /**/
} ZW_CONFIGURATION_BULK_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup3;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V3_VG variantgroup4;                /**/
} ZW_CONFIGURATION_BULK_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Set V3 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_1BYTE_V3_VG_
{
    uint8_t   parameter1;                   
} VG_CONFIGURATION_BULK_SET_1BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Set V3 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_2BYTE_V3_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_2BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Set V3 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_3BYTE_V3_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_3BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Set V3 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   
    uint8_t   parameter4;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG;

/************************************************************/
/* Configuration Bulk Set 1byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup1;                /**/
} ZW_CONFIGURATION_BULK_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Set 2byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup2;                /**/
} ZW_CONFIGURATION_BULK_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Set 3byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup3;                /**/
} ZW_CONFIGURATION_BULK_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Set 4byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup3;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V3_VG variantgroup4;                /**/
} ZW_CONFIGURATION_BULK_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Get V3 command class structs */            
/************************************************************/
typedef struct _ZW_CONFIGURATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
} ZW_CONFIGURATION_GET_V3_FRAME;

/************************************************************/
/* Configuration Report 1byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Report 2byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Report 3byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Report 4byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Set 1byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Set 2byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Set 3byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Set 4byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Name Get V3 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
} ZW_CONFIGURATION_NAME_GET_V3_FRAME;

/************************************************************/
/* Configuration Name Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        
} ZW_CONFIGURATION_NAME_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Name Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_CONFIGURATION_NAME_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Name Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_CONFIGURATION_NAME_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Name Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_CONFIGURATION_NAME_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Info Get V3 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
} ZW_CONFIGURATION_INFO_GET_V3_FRAME;

/************************************************************/
/* Configuration Info Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        
} ZW_CONFIGURATION_INFO_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Info Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        /* MSB */
    uint8_t   info2;                        /* LSB */
} ZW_CONFIGURATION_INFO_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Info Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        /* MSB */
    uint8_t   info2;                        
    uint8_t   info3;                        /* LSB */
} ZW_CONFIGURATION_INFO_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Info Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        /* MSB */
    uint8_t   info2;                        
    uint8_t   info3;                        
    uint8_t   info4;                        /* LSB */
} ZW_CONFIGURATION_INFO_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Properties Get V3 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
} ZW_CONFIGURATION_PROPERTIES_GET_V3_FRAME;

/************************************************************/
/* Configuration Properties Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    
    uint8_t   maxValue1;                    
    uint8_t   defaultValue1;                
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
} ZW_CONFIGURATION_PROPERTIES_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Configuration Properties Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    /* LSB */
    uint8_t   maxValue1;                    /* MSB */
    uint8_t   maxValue2;                    /* LSB */
    uint8_t   defaultValue1;                /* MSB */
    uint8_t   defaultValue2;                /* LSB */
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
} ZW_CONFIGURATION_PROPERTIES_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Configuration Properties Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    
    uint8_t   minValue3;                    /* LSB */
    uint8_t   maxValue1;                    /* MSB */
    uint8_t   maxValue2;                    
    uint8_t   maxValue3;                    /* LSB */
    uint8_t   defaultValue1;                /* MSB */
    uint8_t   defaultValue2;                
    uint8_t   defaultValue3;                /* LSB */
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
} ZW_CONFIGURATION_PROPERTIES_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Configuration Properties Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    
    uint8_t   minValue3;                    
    uint8_t   minValue4;                    /* LSB */
    uint8_t   maxValue1;                    /* MSB */
    uint8_t   maxValue2;                    
    uint8_t   maxValue3;                    
    uint8_t   maxValue4;                    /* LSB */
    uint8_t   defaultValue1;                /* MSB */
    uint8_t   defaultValue2;                
    uint8_t   defaultValue3;                
    uint8_t   defaultValue4;                /* LSB */
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
} ZW_CONFIGURATION_PROPERTIES_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Configuration Bulk Get V4 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
} ZW_CONFIGURATION_BULK_GET_V4_FRAME;

/************************************************************/
/* Configuration Bulk Report V4 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_1BYTE_V4_VG_
{
    uint8_t   parameter1;                   
} VG_CONFIGURATION_BULK_REPORT_1BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Report V4 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_2BYTE_V4_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_2BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Report V4 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_3BYTE_V4_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_3BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Report V4 variant group structs */    
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   
    uint8_t   parameter4;                   /* LSB */
} VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup1;                /**/
} ZW_CONFIGURATION_BULK_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup2;                /**/
} ZW_CONFIGURATION_BULK_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup3;                /**/
} ZW_CONFIGURATION_BULK_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup3;                /**/
    VG_CONFIGURATION_BULK_REPORT_4BYTE_V4_VG variantgroup4;                /**/
} ZW_CONFIGURATION_BULK_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Set V4 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_1BYTE_V4_VG_
{
    uint8_t   parameter1;                   
} VG_CONFIGURATION_BULK_SET_1BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Set V4 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_2BYTE_V4_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_2BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Set V4 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_3BYTE_V4_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_3BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Set V4 variant group structs */       
/************************************************************/
typedef struct _VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG_
{
    uint8_t   parameter1;                   /* MSB */
    uint8_t   parameter2;                   
    uint8_t   parameter3;                   
    uint8_t   parameter4;                   /* LSB */
} VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG;

/************************************************************/
/* Configuration Bulk Set 1byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup1;                /**/
} ZW_CONFIGURATION_BULK_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Set 2byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup2;                /**/
} ZW_CONFIGURATION_BULK_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Set 3byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup3;                /**/
} ZW_CONFIGURATION_BULK_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Bulk Set 4byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_BULK_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterOffset1;             /* MSB */
    uint8_t   parameterOffset2;             /* LSB */
    uint8_t   numberOfParameters;           /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup1;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup2;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup3;                /**/
    VG_CONFIGURATION_BULK_SET_4BYTE_V4_VG variantgroup4;                /**/
} ZW_CONFIGURATION_BULK_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Get V4 command class structs */            
/************************************************************/
typedef struct _ZW_CONFIGURATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
} ZW_CONFIGURATION_GET_V4_FRAME;

/************************************************************/
/* Configuration Report 1byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Report 2byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Report 3byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Report 4byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_CONFIGURATION_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Set 1byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          
} ZW_CONFIGURATION_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Set 2byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          /* LSB */
} ZW_CONFIGURATION_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Set 3byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          /* LSB */
} ZW_CONFIGURATION_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Set 4byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_CONFIGURATION_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   configurationValue1;          /* MSB */
    uint8_t   configurationValue2;          
    uint8_t   configurationValue3;          
    uint8_t   configurationValue4;          /* LSB */
} ZW_CONFIGURATION_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Name Get V4 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
} ZW_CONFIGURATION_NAME_GET_V4_FRAME;

/************************************************************/
/* Configuration Name Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        
} ZW_CONFIGURATION_NAME_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Name Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_CONFIGURATION_NAME_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Name Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_CONFIGURATION_NAME_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Name Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_NAME_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_CONFIGURATION_NAME_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Info Get V4 command class structs */       
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
} ZW_CONFIGURATION_INFO_GET_V4_FRAME;

/************************************************************/
/* Configuration Info Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        
} ZW_CONFIGURATION_INFO_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Info Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        /* MSB */
    uint8_t   info2;                        /* LSB */
} ZW_CONFIGURATION_INFO_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Info Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        /* MSB */
    uint8_t   info2;                        
    uint8_t   info3;                        /* LSB */
} ZW_CONFIGURATION_INFO_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Info Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_INFO_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   info1;                        /* MSB */
    uint8_t   info2;                        
    uint8_t   info3;                        
    uint8_t   info4;                        /* LSB */
} ZW_CONFIGURATION_INFO_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Properties Get V4 command class structs */ 
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
} ZW_CONFIGURATION_PROPERTIES_GET_V4_FRAME;

/************************************************************/
/* Configuration Properties Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    
    uint8_t   maxValue1;                    
    uint8_t   defaultValue1;                
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
} ZW_CONFIGURATION_PROPERTIES_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Configuration Properties Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    /* LSB */
    uint8_t   maxValue1;                    /* MSB */
    uint8_t   maxValue2;                    /* LSB */
    uint8_t   defaultValue1;                /* MSB */
    uint8_t   defaultValue2;                /* LSB */
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
} ZW_CONFIGURATION_PROPERTIES_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Configuration Properties Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    
    uint8_t   minValue3;                    /* LSB */
    uint8_t   maxValue1;                    /* MSB */
    uint8_t   maxValue2;                    
    uint8_t   maxValue3;                    /* LSB */
    uint8_t   defaultValue1;                /* MSB */
    uint8_t   defaultValue2;                
    uint8_t   defaultValue3;                /* LSB */
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
} ZW_CONFIGURATION_PROPERTIES_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Configuration Properties Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_CONFIGURATION_PROPERTIES_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber1;             /* MSB */
    uint8_t   parameterNumber2;             /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    
    uint8_t   minValue3;                    
    uint8_t   minValue4;                    /* LSB */
    uint8_t   maxValue1;                    /* MSB */
    uint8_t   maxValue2;                    
    uint8_t   maxValue3;                    
    uint8_t   maxValue4;                    /* LSB */
    uint8_t   defaultValue1;                /* MSB */
    uint8_t   defaultValue2;                
    uint8_t   defaultValue3;                
    uint8_t   defaultValue4;                /* LSB */
    uint8_t   nextParameterNumber1;         /* MSB */
    uint8_t   nextParameterNumber2;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
} ZW_CONFIGURATION_PROPERTIES_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Configuration Default Reset V4 command class structs */  
/************************************************************/
typedef struct _ZW_CONFIGURATION_DEFAULT_RESET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CONFIGURATION_DEFAULT_RESET_V4_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Group command class structs */ 
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   groupId;                      /**/
    uint8_t   nodeId;                       /**/
} ZW_CTRL_REPLICATION_TRANSFER_GROUP_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Group Name 1byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   groupId;                      /**/
    uint8_t   groupName1;                   
} ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_1BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Group Name 2byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   groupId;                      /**/
    uint8_t   groupName1;                   /* MSB */
    uint8_t   groupName2;                   /* LSB */
} ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_2BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Group Name 3byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   groupId;                      /**/
    uint8_t   groupName1;                   /* MSB */
    uint8_t   groupName2;                   
    uint8_t   groupName3;                   /* LSB */
} ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_3BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Group Name 4byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   groupId;                      /**/
    uint8_t   groupName1;                   /* MSB */
    uint8_t   groupName2;                   
    uint8_t   groupName3;                   
    uint8_t   groupName4;                   /* LSB */
} ZW_CTRL_REPLICATION_TRANSFER_GROUP_NAME_4BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Scene command class structs */ 
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   sceneId;                      /**/
    uint8_t   nodeId;                       /**/
    uint8_t   level;                        /**/
} ZW_CTRL_REPLICATION_TRANSFER_SCENE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Scene Name 1byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   sceneId;                      /**/
    uint8_t   sceneName1;                   
} ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_1BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Scene Name 2byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   sceneId;                      /**/
    uint8_t   sceneName1;                   /* MSB */
    uint8_t   sceneName2;                   /* LSB */
} ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_2BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Scene Name 3byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   sceneId;                      /**/
    uint8_t   sceneName1;                   /* MSB */
    uint8_t   sceneName2;                   
    uint8_t   sceneName3;                   /* LSB */
} ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_3BYTE_FRAME;

/************************************************************/
/* Ctrl Replication Transfer Scene Name 4byte command class structs */
/************************************************************/
typedef struct _ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   sceneId;                      /**/
    uint8_t   sceneName1;                   /* MSB */
    uint8_t   sceneName2;                   
    uint8_t   sceneName3;                   
    uint8_t   sceneName4;                   /* LSB */
} ZW_CTRL_REPLICATION_TRANSFER_SCENE_NAME_4BYTE_FRAME;

/************************************************************/
/* Crc 16 Encap 1byte command class structs */              
/************************************************************/
typedef struct _ZW_CRC_16_ENCAP_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   command;                      /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_CRC_16_ENCAP_1BYTE_FRAME;

/************************************************************/
/* Crc 16 Encap 2byte command class structs */              
/************************************************************/
typedef struct _ZW_CRC_16_ENCAP_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   command;                      /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_CRC_16_ENCAP_2BYTE_FRAME;

/************************************************************/
/* Crc 16 Encap 3byte command class structs */              
/************************************************************/
typedef struct _ZW_CRC_16_ENCAP_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   command;                      /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_CRC_16_ENCAP_3BYTE_FRAME;

/************************************************************/
/* Crc 16 Encap 4byte command class structs */              
/************************************************************/
typedef struct _ZW_CRC_16_ENCAP_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   command;                      /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_CRC_16_ENCAP_4BYTE_FRAME;

/************************************************************/
/* Dcp List Remove command class structs */                 
/************************************************************/
typedef struct _ZW_DCP_LIST_REMOVE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} ZW_DCP_LIST_REMOVE_FRAME;

/************************************************************/
/* Dcp List Set variant group structs */                    
/************************************************************/
typedef struct _VG_DCP_LIST_SET_VG_
{
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
} VG_DCP_LIST_SET_VG;

/************************************************************/
/* Dcp List Set 1byte command class structs */              
/************************************************************/
typedef struct _ZW_DCP_LIST_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpRateId;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_SET_VG variantgroup1;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_SET_1BYTE_FRAME;

/************************************************************/
/* Dcp List Set 2byte command class structs */              
/************************************************************/
typedef struct _ZW_DCP_LIST_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpRateId;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_SET_VG variantgroup1;                /**/
    VG_DCP_LIST_SET_VG variantgroup2;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_SET_2BYTE_FRAME;

/************************************************************/
/* Dcp List Set 3byte command class structs */              
/************************************************************/
typedef struct _ZW_DCP_LIST_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpRateId;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_SET_VG variantgroup1;                /**/
    VG_DCP_LIST_SET_VG variantgroup2;                /**/
    VG_DCP_LIST_SET_VG variantgroup3;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_SET_3BYTE_FRAME;

/************************************************************/
/* Dcp List Set 4byte command class structs */              
/************************************************************/
typedef struct _ZW_DCP_LIST_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpRateId;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_SET_VG variantgroup1;                /**/
    VG_DCP_LIST_SET_VG variantgroup2;                /**/
    VG_DCP_LIST_SET_VG variantgroup3;                /**/
    VG_DCP_LIST_SET_VG variantgroup4;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_SET_4BYTE_FRAME;

/************************************************************/
/* Dcp List Supported Get command class structs */          
/************************************************************/
typedef struct _ZW_DCP_LIST_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DCP_LIST_SUPPORTED_GET_FRAME;

/************************************************************/
/* Dcp List Supported Report command class structs */       
/************************************************************/
typedef struct _ZW_DCP_LIST_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   dcpListSize;                  /**/
    uint8_t   freeDcpListEntries;           /**/
} ZW_DCP_LIST_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Dcp Event Status Get command class structs */            
/************************************************************/
typedef struct _ZW_DCP_EVENT_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} ZW_DCP_EVENT_STATUS_GET_FRAME;

/************************************************************/
/* Dcp Event Status Report command class structs */         
/************************************************************/
typedef struct _ZW_DCP_EVENT_STATUS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   eventStatus;                  /**/
} ZW_DCP_EVENT_STATUS_REPORT_FRAME;

/************************************************************/
/* Dcp List Get command class structs */                    
/************************************************************/
typedef struct _ZW_DCP_LIST_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DCP_LIST_GET_FRAME;

/************************************************************/
/* Dcp List Report variant group structs */                 
/************************************************************/
typedef struct _VG_DCP_LIST_REPORT_VG_
{
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
} VG_DCP_LIST_REPORT_VG;

/************************************************************/
/* Dcp List Report 1byte command class structs */           
/************************************************************/
typedef struct _ZW_DCP_LIST_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpId;                        /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_REPORT_1BYTE_FRAME;

/************************************************************/
/* Dcp List Report 2byte command class structs */           
/************************************************************/
typedef struct _ZW_DCP_LIST_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpId;                        /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
    VG_DCP_LIST_REPORT_VG variantgroup2;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_REPORT_2BYTE_FRAME;

/************************************************************/
/* Dcp List Report 3byte command class structs */           
/************************************************************/
typedef struct _ZW_DCP_LIST_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpId;                        /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
    VG_DCP_LIST_REPORT_VG variantgroup2;                /**/
    VG_DCP_LIST_REPORT_VG variantgroup3;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_REPORT_3BYTE_FRAME;

/************************************************************/
/* Dcp List Report 4byte command class structs */           
/************************************************************/
typedef struct _ZW_DCP_LIST_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   dcpId;                        /**/
    uint8_t   properties1;                  /* masked byte */
    VG_DCP_LIST_REPORT_VG variantgroup1;                /**/
    VG_DCP_LIST_REPORT_VG variantgroup2;                /**/
    VG_DCP_LIST_REPORT_VG variantgroup3;                /**/
    VG_DCP_LIST_REPORT_VG variantgroup4;                /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   durationHourTime;             /**/
    uint8_t   durationMinuteTime;           /**/
    uint8_t   durationSecondTime;           /**/
    uint8_t   eventPriority;                /**/
    uint8_t   loadShedding;                 /**/
    uint8_t   startAssociationGroup;        /**/
    uint8_t   stopAssociationGroup;         /**/
    uint8_t   randomizationInterval;        /**/
} ZW_DCP_LIST_REPORT_4BYTE_FRAME;

/************************************************************/
/* Door Lock Logging Records Supported Get command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_GET_FRAME;

/************************************************************/
/* Door Lock Logging Records Supported Report command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maxRecordsStored;             /**/
} ZW_DOOR_LOCK_LOGGING_RECORDS_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Record Get command class structs */                      
/************************************************************/
typedef struct _ZW_RECORD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   recordNumber;                 /**/
} ZW_RECORD_GET_FRAME;

/************************************************************/
/* Record Report 1byte command class structs */             
/************************************************************/
typedef struct _ZW_RECORD_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   recordNumber;                 /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   eventType;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   userCodeLength;               /**/
    uint8_t   userCode1;                    
} ZW_RECORD_REPORT_1BYTE_FRAME;

/************************************************************/
/* Record Report 2byte command class structs */             
/************************************************************/
typedef struct _ZW_RECORD_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   recordNumber;                 /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   eventType;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   userCodeLength;               /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} ZW_RECORD_REPORT_2BYTE_FRAME;

/************************************************************/
/* Record Report 3byte command class structs */             
/************************************************************/
typedef struct _ZW_RECORD_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   recordNumber;                 /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   eventType;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   userCodeLength;               /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} ZW_RECORD_REPORT_3BYTE_FRAME;

/************************************************************/
/* Record Report 4byte command class structs */             
/************************************************************/
typedef struct _ZW_RECORD_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   recordNumber;                 /**/
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   eventType;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   userCodeLength;               /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} ZW_RECORD_REPORT_4BYTE_FRAME;

/************************************************************/
/* Door Lock Configuration Get command class structs */     
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Door Lock Configuration Report command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
} ZW_DOOR_LOCK_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Door Lock Configuration Set command class structs */     
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
} ZW_DOOR_LOCK_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Door Lock Operation Get command class structs */         
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_OPERATION_GET_FRAME;

/************************************************************/
/* Door Lock Operation Report command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   doorLockMode;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   doorCondition;                /**/
    uint8_t   remainingLockTimeMinutes;     /**/
    uint8_t   remainingLockTimeSeconds;     /**/
} ZW_DOOR_LOCK_OPERATION_REPORT_FRAME;

/************************************************************/
/* Door Lock Operation Set command class structs */         
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   doorLockMode;                 /**/
} ZW_DOOR_LOCK_OPERATION_SET_FRAME;

/************************************************************/
/* Door Lock Configuration Get V2 command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_CONFIGURATION_GET_V2_FRAME;

/************************************************************/
/* Door Lock Configuration Report V2 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
} ZW_DOOR_LOCK_CONFIGURATION_REPORT_V2_FRAME;

/************************************************************/
/* Door Lock Configuration Set V2 command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
} ZW_DOOR_LOCK_CONFIGURATION_SET_V2_FRAME;

/************************************************************/
/* Door Lock Operation Get V2 command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_OPERATION_GET_V2_FRAME;

/************************************************************/
/* Door Lock Operation Report V2 command class structs */   
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   doorLockMode;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   doorCondition;                /**/
    uint8_t   remainingLockTimeMinutes;     /**/
    uint8_t   remainingLockTimeSeconds;     /**/
} ZW_DOOR_LOCK_OPERATION_REPORT_V2_FRAME;

/************************************************************/
/* Door Lock Operation Set V2 command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   doorLockMode;                 /**/
} ZW_DOOR_LOCK_OPERATION_SET_V2_FRAME;

/************************************************************/
/* Door Lock Configuration Get V3 command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_CONFIGURATION_GET_V3_FRAME;

/************************************************************/
/* Door Lock Configuration Report V3 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
} ZW_DOOR_LOCK_CONFIGURATION_REPORT_V3_FRAME;

/************************************************************/
/* Door Lock Configuration Set V3 command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
} ZW_DOOR_LOCK_CONFIGURATION_SET_V3_FRAME;

/************************************************************/
/* Door Lock Operation Get V3 command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_OPERATION_GET_V3_FRAME;

/************************************************************/
/* Door Lock Operation Report V3 command class structs */   
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   currentDoorLockMode;          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   doorCondition;                /**/
    uint8_t   remainingLockTimeMinutes;     /**/
    uint8_t   remainingLockTimeSeconds;     /**/
    uint8_t   targetDoorLockMode;           /**/
    uint8_t   duration;                     /**/
} ZW_DOOR_LOCK_OPERATION_REPORT_V3_FRAME;

/************************************************************/
/* Door Lock Operation Set V3 command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   doorLockMode;                 /**/
} ZW_DOOR_LOCK_OPERATION_SET_V3_FRAME;

/************************************************************/
/* Door Lock Configuration Get V4 command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_CONFIGURATION_GET_V4_FRAME;

/************************************************************/
/* Door Lock Configuration Report V4 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
    uint8_t   autoRelockTime1;              /* MSB */
    uint8_t   autoRelockTime2;              /* LSB */
    uint8_t   holdAndReleaseTime1;          /* MSB */
    uint8_t   holdAndReleaseTime2;          /* LSB */
    uint8_t   properties2;                  /* masked byte */
} ZW_DOOR_LOCK_CONFIGURATION_REPORT_V4_FRAME;

/************************************************************/
/* Door Lock Configuration Set V4 command class structs */  
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CONFIGURATION_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   operationType;                /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   lockTimeoutMinutes;           /**/
    uint8_t   lockTimeoutSeconds;           /**/
    uint8_t   autoRelockTime1;              /* MSB */
    uint8_t   autoRelockTime2;              /* LSB */
    uint8_t   holdAndReleaseTime1;          /* MSB */
    uint8_t   holdAndReleaseTime2;          /* LSB */
    uint8_t   properties2;                  /* masked byte */
} ZW_DOOR_LOCK_CONFIGURATION_SET_V4_FRAME;

/************************************************************/
/* Door Lock Operation Get V4 command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_OPERATION_GET_V4_FRAME;

/************************************************************/
/* Door Lock Operation Report V4 command class structs */   
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   currentDoorLockMode;          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   doorCondition;                /**/
    uint8_t   remainingLockTimeMinutes;     /**/
    uint8_t   remainingLockTimeSeconds;     /**/
    uint8_t   targetDoorLockMode;           /**/
    uint8_t   duration;                     /**/
} ZW_DOOR_LOCK_OPERATION_REPORT_V4_FRAME;

/************************************************************/
/* Door Lock Operation Set V4 command class structs */      
/************************************************************/
typedef struct _ZW_DOOR_LOCK_OPERATION_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   doorLockMode;                 /**/
} ZW_DOOR_LOCK_OPERATION_SET_V4_FRAME;

/************************************************************/
/* Door Lock Capabilities Get V4 command class structs */   
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CAPABILITIES_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DOOR_LOCK_CAPABILITIES_GET_V4_FRAME;

/************************************************************/
/* Door Lock Capabilities Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CAPABILITIES_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedOperationTypeBitMask1;
    uint8_t   supportedDoorLockModeListLength;/**/
    uint8_t   supportedDoorLockMode1;       
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedDoorComponents;      /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_DOOR_LOCK_CAPABILITIES_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Door Lock Capabilities Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CAPABILITIES_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedOperationTypeBitMask1;/* MSB */
    uint8_t   supportedOperationTypeBitMask2;/* LSB */
    uint8_t   supportedDoorLockModeListLength;/**/
    uint8_t   supportedDoorLockMode1;       /* MSB */
    uint8_t   supportedDoorLockMode2;       /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedDoorComponents;      /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_DOOR_LOCK_CAPABILITIES_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Door Lock Capabilities Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CAPABILITIES_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedOperationTypeBitMask1;/* MSB */
    uint8_t   supportedOperationTypeBitMask2;
    uint8_t   supportedOperationTypeBitMask3;/* LSB */
    uint8_t   supportedDoorLockModeListLength;/**/
    uint8_t   supportedDoorLockMode1;       /* MSB */
    uint8_t   supportedDoorLockMode2;       
    uint8_t   supportedDoorLockMode3;       /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedDoorComponents;      /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_DOOR_LOCK_CAPABILITIES_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Door Lock Capabilities Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_DOOR_LOCK_CAPABILITIES_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedOperationTypeBitMask1;/* MSB */
    uint8_t   supportedOperationTypeBitMask2;
    uint8_t   supportedOperationTypeBitMask3;
    uint8_t   supportedOperationTypeBitMask4;/* LSB */
    uint8_t   supportedDoorLockModeListLength;/**/
    uint8_t   supportedDoorLockMode1;       /* MSB */
    uint8_t   supportedDoorLockMode2;       
    uint8_t   supportedDoorLockMode3;       
    uint8_t   supportedDoorLockMode4;       /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedDoorComponents;      /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_DOOR_LOCK_CAPABILITIES_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Energy Production Get command class structs */           
/************************************************************/
typedef struct _ZW_ENERGY_PRODUCTION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
} ZW_ENERGY_PRODUCTION_GET_FRAME;

/************************************************************/
/* Energy Production Report 1byte command class structs */  
/************************************************************/
typedef struct _ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   value1;                       
} ZW_ENERGY_PRODUCTION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Energy Production Report 2byte command class structs */  
/************************************************************/
typedef struct _ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_ENERGY_PRODUCTION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Energy Production Report 3byte command class structs */  
/************************************************************/
typedef struct _ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_ENERGY_PRODUCTION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Energy Production Report 4byte command class structs */  
/************************************************************/
typedef struct _ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterNumber;              /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_ENERGY_PRODUCTION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Firmware Md Get command class structs */                 
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_FRAME;

/************************************************************/
/* Firmware Md Report command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_MD_REPORT_FRAME;

/************************************************************/
/* Firmware Update Md Get command class structs */          
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte command class structs */ 
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte command class structs */ 
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte command class structs */ 
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte command class structs */ 
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_FRAME;

/************************************************************/
/* Firmware Update Md Request Get command class structs */  
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_FRAME;

/************************************************************/
/* Firmware Update Md Request Report command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_FRAME;

/************************************************************/
/* Firmware Update Md Status Report command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_FRAME;

/************************************************************/
/* Firmware Md Get V2 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V2_FRAME;

/************************************************************/
/* Firmware Md Report V2 command class structs */           
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_MD_REPORT_V2_FRAME;

/************************************************************/
/* Firmware Update Md Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V2_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V2_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V2_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V2 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V2_FRAME;

/************************************************************/
/* Firmware Md Get V3 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V3_FRAME;

/************************************************************/
/* Firmware Md Report V3 variant group structs */           
/************************************************************/
typedef struct _VG_FIRMWARE_MD_REPORT_V3_VG_
{
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
} VG_FIRMWARE_MD_REPORT_V3_VG;

/************************************************************/
/* Firmware Md Report 1byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup1;                /**/
} ZW_FIRMWARE_MD_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Firmware Md Report 2byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup2;                /**/
} ZW_FIRMWARE_MD_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Firmware Md Report 3byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup3;                /**/
} ZW_FIRMWARE_MD_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Firmware Md Report 4byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup3;                /**/
    VG_FIRMWARE_MD_REPORT_V3_VG variantgroup4;                /**/
} ZW_FIRMWARE_MD_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Firmware Update Md Get V3 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V3_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V3_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V3_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V3 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   waittime1;                    /* MSB */
    uint8_t   waittime2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V3_FRAME;

/************************************************************/
/* Firmware Md Get V4 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V4_FRAME;

/************************************************************/
/* Firmware Md Report V4 variant group structs */           
/************************************************************/
typedef struct _VG_FIRMWARE_MD_REPORT_V4_VG_
{
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
} VG_FIRMWARE_MD_REPORT_V4_VG;

/************************************************************/
/* Firmware Md Report 1byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup1;                /**/
} ZW_FIRMWARE_MD_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Firmware Md Report 2byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup2;                /**/
} ZW_FIRMWARE_MD_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Firmware Md Report 3byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup3;                /**/
} ZW_FIRMWARE_MD_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Firmware Md Report 4byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup3;                /**/
    VG_FIRMWARE_MD_REPORT_V4_VG variantgroup4;                /**/
} ZW_FIRMWARE_MD_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Firmware Update Md Get V4 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V4_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V4_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V4_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   waittime1;                    /* MSB */
    uint8_t   waittime2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V4_FRAME;

/************************************************************/
/* Firmware Update Activation Set V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V4_FRAME;

/************************************************************/
/* Firmware Update Activation Status Report V4 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   firmwareUpdateStatus;         /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V4_FRAME;

/************************************************************/
/* Firmware Md Get V5 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V5_FRAME;

/************************************************************/
/* Firmware Md Report V5 variant group structs */           
/************************************************************/
typedef struct _VG_FIRMWARE_MD_REPORT_V5_VG_
{
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
} VG_FIRMWARE_MD_REPORT_V5_VG;

/************************************************************/
/* Firmware Md Report 1byte V5 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup1;                /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_MD_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Firmware Md Report 2byte V5 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup2;                /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_MD_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Firmware Md Report 3byte V5 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup3;                /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_MD_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Firmware Md Report 4byte V5 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup3;                /**/
    VG_FIRMWARE_MD_REPORT_V5_VG variantgroup4;                /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_MD_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Firmware Update Md Get V5 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V5_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V5_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V5_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   waittime1;                    /* MSB */
    uint8_t   waittime2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V5_FRAME;

/************************************************************/
/* Firmware Update Activation Set V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V5_FRAME;

/************************************************************/
/* Firmware Update Activation Status Report V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   firmwareUpdateStatus;         /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V5_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Get V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V5_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Report V5 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   firmwareChecksum1;            /* MSB */
    uint8_t   firmwareChecksum2;            /* LSB */
} ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V5_FRAME;

/************************************************************/
/* Firmware Md Get V6 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V6_FRAME;

/************************************************************/
/* Firmware Md Report V6 variant group structs */           
/************************************************************/
typedef struct _VG_FIRMWARE_MD_REPORT_V6_VG_
{
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
} VG_FIRMWARE_MD_REPORT_V6_VG;

/************************************************************/
/* Firmware Md Report 1byte V6 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup1;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Firmware Md Report 2byte V6 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup2;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Firmware Md Report 3byte V6 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup3;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Firmware Md Report 4byte V6 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup3;                /**/
    VG_FIRMWARE_MD_REPORT_V6_VG variantgroup4;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Firmware Update Md Get V6 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V6_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V6_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V6_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   waittime1;                    /* MSB */
    uint8_t   waittime2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V6_FRAME;

/************************************************************/
/* Firmware Update Activation Set V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V6_FRAME;

/************************************************************/
/* Firmware Update Activation Status Report V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   firmwareUpdateStatus;         /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V6_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Get V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V6_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Report V6 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   firmwareChecksum1;            /* MSB */
    uint8_t   firmwareChecksum2;            /* LSB */
} ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V6_FRAME;

/************************************************************/
/* Firmware Md Get V7 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V7_FRAME;

/************************************************************/
/* Firmware Md Report V7 variant group structs */           
/************************************************************/
typedef struct _VG_FIRMWARE_MD_REPORT_V7_VG_
{
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
} VG_FIRMWARE_MD_REPORT_V7_VG;

/************************************************************/
/* Firmware Md Report 1byte V7 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup1;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Firmware Md Report 2byte V7 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup2;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Firmware Md Report 3byte V7 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup3;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Firmware Md Report 4byte V7 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup3;                /**/
    VG_FIRMWARE_MD_REPORT_V7_VG variantgroup4;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Firmware Update Md Get V7 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V7_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V7_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V7_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   waittime1;                    /* MSB */
    uint8_t   waittime2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V7_FRAME;

/************************************************************/
/* Firmware Update Activation Set V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V7_FRAME;

/************************************************************/
/* Firmware Update Activation Status Report V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   firmwareUpdateStatus;         /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V7_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Get V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V7_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Report V7 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   firmwareChecksum1;            /* MSB */
    uint8_t   firmwareChecksum2;            /* LSB */
} ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V7_FRAME;

/************************************************************/
/* Firmware Md Get V8 command class structs */              
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_FIRMWARE_MD_GET_V8_FRAME;

/************************************************************/
/* Firmware Md Report V8 variant group structs */           
/************************************************************/
typedef struct _VG_FIRMWARE_MD_REPORT_V8_VG_
{
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
} VG_FIRMWARE_MD_REPORT_V8_VG;

/************************************************************/
/* Firmware Md Report 1byte V8 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup1;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Firmware Md Report 2byte V8 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup2;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Firmware Md Report 3byte V8 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup3;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Firmware Md Report 4byte V8 command class structs */     
/************************************************************/
typedef struct _ZW_FIRMWARE_MD_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmware0Id1;                 /* MSB */
    uint8_t   firmware0Id2;                 /* LSB */
    uint8_t   firmware0Checksum1;           /* MSB */
    uint8_t   firmware0Checksum2;           /* LSB */
    uint8_t   firmwareUpgradable;           /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    uint8_t   maxFragmentSize1;             /* MSB */
    uint8_t   maxFragmentSize2;             /* LSB */
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup1;                /**/
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup2;                /**/
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup3;                /**/
    VG_FIRMWARE_MD_REPORT_V8_VG variantgroup4;                /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_MD_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Firmware Update Md Get V8 command class structs */       
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
} ZW_FIRMWARE_UPDATE_MD_GET_V8_FRAME;

/************************************************************/
/* Firmware Update Md Report 1byte V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Firmware Update Md Report 2byte V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Firmware Update Md Report 3byte V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Firmware Update Md Report 4byte V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumber2;                /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Firmware Update Md Request Get V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_REQUEST_GET_V8_FRAME;

/************************************************************/
/* Firmware Update Md Request Report V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_FIRMWARE_UPDATE_MD_REQUEST_REPORT_V8_FRAME;

/************************************************************/
/* Firmware Update Md Status Report V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   waittime1;                    /* MSB */
    uint8_t   waittime2;                    /* LSB */
} ZW_FIRMWARE_UPDATE_MD_STATUS_REPORT_V8_FRAME;

/************************************************************/
/* Firmware Update Activation Set V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_SET_V8_FRAME;

/************************************************************/
/* Firmware Update Activation Status Report V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   firmwareUpdateStatus;         /**/
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_ACTIVATION_STATUS_REPORT_V8_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Get V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   firmwareId1;                  /* MSB */
    uint8_t   firmwareId2;                  /* LSB */
    uint8_t   firmwareTarget;               /**/
    uint8_t   fragmentSize1;                /* MSB */
    uint8_t   fragmentSize2;                /* LSB */
    uint8_t   hardwareVersion;              /**/
} ZW_FIRMWARE_UPDATE_MD_PREPARE_GET_V8_FRAME;

/************************************************************/
/* Firmware Update Md Prepare Report V8 command class structs */
/************************************************************/
typedef struct _ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
    uint8_t   firmwareChecksum1;            /* MSB */
    uint8_t   firmwareChecksum2;            /* LSB */
} ZW_FIRMWARE_UPDATE_MD_PREPARE_REPORT_V8_FRAME;

/************************************************************/
/* Geographic Location Get command class structs */         
/************************************************************/
typedef struct _ZW_GEOGRAPHIC_LOCATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_GEOGRAPHIC_LOCATION_GET_FRAME;

/************************************************************/
/* Geographic Location Report command class structs */      
/************************************************************/
typedef struct _ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   longitudeDegrees;             /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   latitudeDegrees;              /**/
    uint8_t   level2;                       /* masked byte */
} ZW_GEOGRAPHIC_LOCATION_REPORT_FRAME;

/************************************************************/
/* Geographic Location Set command class structs */         
/************************************************************/
typedef struct _ZW_GEOGRAPHIC_LOCATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   longitudeDegrees;             /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   latitudeDegrees;              /**/
    uint8_t   level2;                       /* masked byte */
} ZW_GEOGRAPHIC_LOCATION_SET_FRAME;

/************************************************************/
/* Grouping Name Get command class structs */               
/************************************************************/
typedef struct _ZW_GROUPING_NAME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_GROUPING_NAME_GET_FRAME;

/************************************************************/
/* Grouping Name Report command class structs */            
/************************************************************/
typedef struct _ZW_GROUPING_NAME_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingName1;                /* MSB */
    uint8_t   groupingName2;                
    uint8_t   groupingName3;                
    uint8_t   groupingName4;                
    uint8_t   groupingName5;                
    uint8_t   groupingName6;                
    uint8_t   groupingName7;                
    uint8_t   groupingName8;                
    uint8_t   groupingName9;                
    uint8_t   groupingName10;               
    uint8_t   groupingName11;               
    uint8_t   groupingName12;               
    uint8_t   groupingName13;               
    uint8_t   groupingName14;               
    uint8_t   groupingName15;               
    uint8_t   groupingName16;               /* LSB */
} ZW_GROUPING_NAME_REPORT_FRAME;

/************************************************************/
/* Grouping Name Set command class structs */               
/************************************************************/
typedef struct _ZW_GROUPING_NAME_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingName1;                /* MSB */
    uint8_t   groupingName2;                
    uint8_t   groupingName3;                
    uint8_t   groupingName4;                
    uint8_t   groupingName5;                
    uint8_t   groupingName6;                
    uint8_t   groupingName7;                
    uint8_t   groupingName8;                
    uint8_t   groupingName9;                
    uint8_t   groupingName10;               
    uint8_t   groupingName11;               
    uint8_t   groupingName12;               
    uint8_t   groupingName13;               
    uint8_t   groupingName14;               
    uint8_t   groupingName15;               
    uint8_t   groupingName16;               /* LSB */
} ZW_GROUPING_NAME_SET_FRAME;

/************************************************************/
/* Hail command class structs */                            
/************************************************************/
typedef struct _ZW_HAIL_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HAIL_FRAME;

/************************************************************/
/* Hrv Control Bypass Get command class structs */          
/************************************************************/
typedef struct _ZW_HRV_CONTROL_BYPASS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HRV_CONTROL_BYPASS_GET_FRAME;

/************************************************************/
/* Hrv Control Bypass Report command class structs */       
/************************************************************/
typedef struct _ZW_HRV_CONTROL_BYPASS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bypass;                       /**/
} ZW_HRV_CONTROL_BYPASS_REPORT_FRAME;

/************************************************************/
/* Hrv Control Bypass Set command class structs */          
/************************************************************/
typedef struct _ZW_HRV_CONTROL_BYPASS_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bypass;                       /**/
} ZW_HRV_CONTROL_BYPASS_SET_FRAME;

/************************************************************/
/* Hrv Control Mode Get command class structs */            
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HRV_CONTROL_MODE_GET_FRAME;

/************************************************************/
/* Hrv Control Mode Report command class structs */         
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HRV_CONTROL_MODE_REPORT_FRAME;

/************************************************************/
/* Hrv Control Mode Set command class structs */            
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HRV_CONTROL_MODE_SET_FRAME;

/************************************************************/
/* Hrv Control Mode Supported Get command class structs */  
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HRV_CONTROL_MODE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Hrv Control Mode Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     
} ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Hrv Control Mode Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Hrv Control Mode Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Hrv Control Mode Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_HRV_CONTROL_MODE_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Hrv Control Ventilation Rate Get command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_VENTILATION_RATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HRV_CONTROL_VENTILATION_RATE_GET_FRAME;

/************************************************************/
/* Hrv Control Ventilation Rate Report command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_VENTILATION_RATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   ventilationRate;              /**/
} ZW_HRV_CONTROL_VENTILATION_RATE_REPORT_FRAME;

/************************************************************/
/* Hrv Control Ventilation Rate Set command class structs */
/************************************************************/
typedef struct _ZW_HRV_CONTROL_VENTILATION_RATE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   ventilationRate;              /**/
} ZW_HRV_CONTROL_VENTILATION_RATE_SET_FRAME;

/************************************************************/
/* Hrv Status Get command class structs */                  
/************************************************************/
typedef struct _ZW_HRV_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusParameter;              /**/
} ZW_HRV_STATUS_GET_FRAME;

/************************************************************/
/* Hrv Status Report 1byte command class structs */         
/************************************************************/
typedef struct _ZW_HRV_STATUS_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusParameter;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_HRV_STATUS_REPORT_1BYTE_FRAME;

/************************************************************/
/* Hrv Status Report 2byte command class structs */         
/************************************************************/
typedef struct _ZW_HRV_STATUS_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusParameter;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_HRV_STATUS_REPORT_2BYTE_FRAME;

/************************************************************/
/* Hrv Status Report 3byte command class structs */         
/************************************************************/
typedef struct _ZW_HRV_STATUS_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusParameter;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_HRV_STATUS_REPORT_3BYTE_FRAME;

/************************************************************/
/* Hrv Status Report 4byte command class structs */         
/************************************************************/
typedef struct _ZW_HRV_STATUS_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusParameter;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_HRV_STATUS_REPORT_4BYTE_FRAME;

/************************************************************/
/* Hrv Status Supported Get command class structs */        
/************************************************************/
typedef struct _ZW_HRV_STATUS_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HRV_STATUS_SUPPORTED_GET_FRAME;

/************************************************************/
/* Hrv Status Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_HRV_STATUS_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Hrv Status Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_HRV_STATUS_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Hrv Status Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_HRV_STATUS_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Hrv Status Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_HRV_STATUS_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Indicator Get command class structs */                   
/************************************************************/
typedef struct _ZW_INDICATOR_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_INDICATOR_GET_FRAME;

/************************************************************/
/* Indicator Report command class structs */                
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_INDICATOR_REPORT_FRAME;

/************************************************************/
/* Indicator Set command class structs */                   
/************************************************************/
typedef struct _ZW_INDICATOR_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_INDICATOR_SET_FRAME;

/************************************************************/
/* Indicator Get V2 command class structs */                
/************************************************************/
typedef struct _ZW_INDICATOR_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_GET_V2_FRAME;

/************************************************************/
/* Indicator Report V2 variant group structs */             
/************************************************************/
typedef struct _VG_INDICATOR_REPORT_V2_VG_
{
    uint8_t   indicatorId;                  /**/
    uint8_t   propertyId;                   /**/
    uint8_t   value;                        /**/
} VG_INDICATOR_REPORT_V2_VG;

/************************************************************/
/* Indicator Report 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V2_VG variantgroup1;                /**/
} ZW_INDICATOR_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Indicator Report 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V2_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V2_VG variantgroup2;                /**/
} ZW_INDICATOR_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Indicator Report 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V2_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V2_VG variantgroup2;                /**/
    VG_INDICATOR_REPORT_V2_VG variantgroup3;                /**/
} ZW_INDICATOR_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Indicator Report 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V2_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V2_VG variantgroup2;                /**/
    VG_INDICATOR_REPORT_V2_VG variantgroup3;                /**/
    VG_INDICATOR_REPORT_V2_VG variantgroup4;                /**/
} ZW_INDICATOR_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Indicator Set V2 variant group structs */                
/************************************************************/
typedef struct _VG_INDICATOR_SET_V2_VG_
{
    uint8_t   indicatorId;                  /**/
    uint8_t   propertyId;                   /**/
    uint8_t   value;                        /**/
} VG_INDICATOR_SET_V2_VG;

/************************************************************/
/* Indicator Set 1byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V2_VG variantgroup1;                /**/
} ZW_INDICATOR_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Indicator Set 2byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V2_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V2_VG variantgroup2;                /**/
} ZW_INDICATOR_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Indicator Set 3byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V2_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V2_VG variantgroup2;                /**/
    VG_INDICATOR_SET_V2_VG variantgroup3;                /**/
} ZW_INDICATOR_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Indicator Set 4byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V2_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V2_VG variantgroup2;                /**/
    VG_INDICATOR_SET_V2_VG variantgroup3;                /**/
    VG_INDICATOR_SET_V2_VG variantgroup4;                /**/
} ZW_INDICATOR_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Indicator Supported Get V2 command class structs */      
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Indicator Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    
} ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Indicator Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Indicator Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    
    uint8_t   propertySupportedBitMask3;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Indicator Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    
    uint8_t   propertySupportedBitMask3;    
    uint8_t   propertySupportedBitMask4;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Indicator Get V3 command class structs */                
/************************************************************/
typedef struct _ZW_INDICATOR_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_GET_V3_FRAME;

/************************************************************/
/* Indicator Report V3 variant group structs */             
/************************************************************/
typedef struct _VG_INDICATOR_REPORT_V3_VG_
{
    uint8_t   indicatorId;                  /**/
    uint8_t   propertyId;                   /**/
    uint8_t   value;                        /**/
} VG_INDICATOR_REPORT_V3_VG;

/************************************************************/
/* Indicator Report 1byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V3_VG variantgroup1;                /**/
} ZW_INDICATOR_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Indicator Report 2byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V3_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V3_VG variantgroup2;                /**/
} ZW_INDICATOR_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Indicator Report 3byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V3_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V3_VG variantgroup2;                /**/
    VG_INDICATOR_REPORT_V3_VG variantgroup3;                /**/
} ZW_INDICATOR_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Indicator Report 4byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V3_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V3_VG variantgroup2;                /**/
    VG_INDICATOR_REPORT_V3_VG variantgroup3;                /**/
    VG_INDICATOR_REPORT_V3_VG variantgroup4;                /**/
} ZW_INDICATOR_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Indicator Set V3 variant group structs */                
/************************************************************/
typedef struct _VG_INDICATOR_SET_V3_VG_
{
    uint8_t   indicatorId;                  /**/
    uint8_t   propertyId;                   /**/
    uint8_t   value;                        /**/
} VG_INDICATOR_SET_V3_VG;

/************************************************************/
/* Indicator Set 1byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V3_VG variantgroup1;                /**/
} ZW_INDICATOR_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Indicator Set 2byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V3_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V3_VG variantgroup2;                /**/
} ZW_INDICATOR_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Indicator Set 3byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V3_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V3_VG variantgroup2;                /**/
    VG_INDICATOR_SET_V3_VG variantgroup3;                /**/
} ZW_INDICATOR_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Indicator Set 4byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V3_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V3_VG variantgroup2;                /**/
    VG_INDICATOR_SET_V3_VG variantgroup3;                /**/
    VG_INDICATOR_SET_V3_VG variantgroup4;                /**/
} ZW_INDICATOR_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Indicator Supported Get V3 command class structs */      
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Indicator Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    
} ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Indicator Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Indicator Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    
    uint8_t   propertySupportedBitMask3;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Indicator Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    
    uint8_t   propertySupportedBitMask3;    
    uint8_t   propertySupportedBitMask4;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Indicator Get V4 command class structs */                
/************************************************************/
typedef struct _ZW_INDICATOR_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_GET_V4_FRAME;

/************************************************************/
/* Indicator Report V4 variant group structs */             
/************************************************************/
typedef struct _VG_INDICATOR_REPORT_V4_VG_
{
    uint8_t   indicatorId;                  /**/
    uint8_t   propertyId;                   /**/
    uint8_t   value;                        /**/
} VG_INDICATOR_REPORT_V4_VG;

/************************************************************/
/* Indicator Report 1byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V4_VG variantgroup1;                /**/
} ZW_INDICATOR_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Indicator Report 2byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V4_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V4_VG variantgroup2;                /**/
} ZW_INDICATOR_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Indicator Report 3byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V4_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V4_VG variantgroup2;                /**/
    VG_INDICATOR_REPORT_V4_VG variantgroup3;                /**/
} ZW_INDICATOR_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Indicator Report 4byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_INDICATOR_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_REPORT_V4_VG variantgroup1;                /**/
    VG_INDICATOR_REPORT_V4_VG variantgroup2;                /**/
    VG_INDICATOR_REPORT_V4_VG variantgroup3;                /**/
    VG_INDICATOR_REPORT_V4_VG variantgroup4;                /**/
} ZW_INDICATOR_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Indicator Set V4 variant group structs */                
/************************************************************/
typedef struct _VG_INDICATOR_SET_V4_VG_
{
    uint8_t   indicatorId;                  /**/
    uint8_t   propertyId;                   /**/
    uint8_t   value;                        /**/
} VG_INDICATOR_SET_V4_VG;

/************************************************************/
/* Indicator Set 1byte V4 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V4_VG variantgroup1;                /**/
} ZW_INDICATOR_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Indicator Set 2byte V4 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V4_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V4_VG variantgroup2;                /**/
} ZW_INDICATOR_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Indicator Set 3byte V4 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V4_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V4_VG variantgroup2;                /**/
    VG_INDICATOR_SET_V4_VG variantgroup3;                /**/
} ZW_INDICATOR_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Indicator Set 4byte V4 command class structs */          
/************************************************************/
typedef struct _ZW_INDICATOR_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicator0Value;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_INDICATOR_SET_V4_VG variantgroup1;                /**/
    VG_INDICATOR_SET_V4_VG variantgroup2;                /**/
    VG_INDICATOR_SET_V4_VG variantgroup3;                /**/
    VG_INDICATOR_SET_V4_VG variantgroup4;                /**/
} ZW_INDICATOR_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Indicator Supported Get V4 command class structs */      
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Indicator Supported Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    
} ZW_INDICATOR_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Indicator Supported Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Indicator Supported Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    
    uint8_t   propertySupportedBitMask3;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Indicator Supported Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   nextIndicatorId;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   propertySupportedBitMask1;    /* MSB */
    uint8_t   propertySupportedBitMask2;    
    uint8_t   propertySupportedBitMask3;    
    uint8_t   propertySupportedBitMask4;    /* LSB */
} ZW_INDICATOR_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Indicator Description Get V4 command class structs */    
/************************************************************/
typedef struct _ZW_INDICATOR_DESCRIPTION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
} ZW_INDICATOR_DESCRIPTION_GET_V4_FRAME;

/************************************************************/
/* Indicator Description Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_DESCRIPTION_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   descriptionLength;            /**/
    uint8_t   description1;                 
} ZW_INDICATOR_DESCRIPTION_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Indicator Description Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_DESCRIPTION_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   descriptionLength;            /**/
    uint8_t   description1;                 /* MSB */
    uint8_t   description2;                 /* LSB */
} ZW_INDICATOR_DESCRIPTION_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Indicator Description Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_DESCRIPTION_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   descriptionLength;            /**/
    uint8_t   description1;                 /* MSB */
    uint8_t   description2;                 
    uint8_t   description3;                 /* LSB */
} ZW_INDICATOR_DESCRIPTION_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Indicator Description Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_INDICATOR_DESCRIPTION_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   indicatorId;                  /**/
    uint8_t   descriptionLength;            /**/
    uint8_t   description1;                 /* MSB */
    uint8_t   description2;                 
    uint8_t   description3;                 
    uint8_t   description4;                 /* LSB */
} ZW_INDICATOR_DESCRIPTION_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Ip Configuration Get command class structs */            
/************************************************************/
typedef struct _ZW_IP_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IP_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Ip Configuration Release command class structs */        
/************************************************************/
typedef struct _ZW_IP_CONFIGURATION_RELEASE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IP_CONFIGURATION_RELEASE_FRAME;

/************************************************************/
/* Ip Configuration Renew command class structs */          
/************************************************************/
typedef struct _ZW_IP_CONFIGURATION_RENEW_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IP_CONFIGURATION_RENEW_FRAME;

/************************************************************/
/* Ip Configuration Report command class structs */         
/************************************************************/
typedef struct _ZW_IP_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ipAddress1;                   /* MSB */
    uint8_t   ipAddress2;                   
    uint8_t   ipAddress3;                   
    uint8_t   ipAddress4;                   /* LSB */
    uint8_t   subnetMask1;                  /* MSB */
    uint8_t   subnetMask2;                  
    uint8_t   subnetMask3;                  
    uint8_t   subnetMask4;                  /* LSB */
    uint8_t   gateway1;                     /* MSB */
    uint8_t   gateway2;                     
    uint8_t   gateway3;                     
    uint8_t   gateway4;                     /* LSB */
    uint8_t   dns11;                        /* MSB */
    uint8_t   dns12;                        
    uint8_t   dns13;                        
    uint8_t   dns14;                        /* LSB */
    uint8_t   dns21;                        /* MSB */
    uint8_t   dns22;                        
    uint8_t   dns23;                        
    uint8_t   dns24;                        /* LSB */
    uint8_t   leasetime1;                   /* MSB */
    uint8_t   leasetime2;                   
    uint8_t   leasetime3;                   
    uint8_t   leasetime4;                   /* LSB */
} ZW_IP_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Ip Configuration Set command class structs */            
/************************************************************/
typedef struct _ZW_IP_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ipAddress1;                   /* MSB */
    uint8_t   ipAddress2;                   
    uint8_t   ipAddress3;                   
    uint8_t   ipAddress4;                   /* LSB */
    uint8_t   subnetMask1;                  /* MSB */
    uint8_t   subnetMask2;                  
    uint8_t   subnetMask3;                  
    uint8_t   subnetMask4;                  /* LSB */
    uint8_t   gateway1;                     /* MSB */
    uint8_t   gateway2;                     
    uint8_t   gateway3;                     
    uint8_t   gateway4;                     /* LSB */
    uint8_t   dns11;                        /* MSB */
    uint8_t   dns12;                        
    uint8_t   dns13;                        
    uint8_t   dns14;                        /* LSB */
    uint8_t   dns21;                        /* MSB */
    uint8_t   dns22;                        
    uint8_t   dns23;                        
    uint8_t   dns24;                        /* LSB */
} ZW_IP_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Language Get command class structs */                    
/************************************************************/
typedef struct _ZW_LANGUAGE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_LANGUAGE_GET_FRAME;

/************************************************************/
/* Language Report command class structs */                 
/************************************************************/
typedef struct _ZW_LANGUAGE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   language1;                    /* MSB */
    uint8_t   language2;                    
    uint8_t   language3;                    /* LSB */
    uint8_t   country1;                     /* MSB */
    uint8_t   country2;                     /* LSB */
} ZW_LANGUAGE_REPORT_FRAME;

/************************************************************/
/* Language Set command class structs */                    
/************************************************************/
typedef struct _ZW_LANGUAGE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   language1;                    /* MSB */
    uint8_t   language2;                    
    uint8_t   language3;                    /* LSB */
    uint8_t   country1;                     /* MSB */
    uint8_t   country2;                     /* LSB */
} ZW_LANGUAGE_SET_FRAME;

/************************************************************/
/* Manufacturer Specific Get command class structs */       
/************************************************************/
typedef struct _ZW_MANUFACTURER_SPECIFIC_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MANUFACTURER_SPECIFIC_GET_FRAME;

/************************************************************/
/* Manufacturer Specific Report command class structs */    
/************************************************************/
typedef struct _ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   productTypeId1;               /* MSB */
    uint8_t   productTypeId2;               /* LSB */
    uint8_t   productId1;                   /* MSB */
    uint8_t   productId2;                   /* LSB */
} ZW_MANUFACTURER_SPECIFIC_REPORT_FRAME;

/************************************************************/
/* Manufacturer Specific Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MANUFACTURER_SPECIFIC_GET_V2_FRAME;

/************************************************************/
/* Manufacturer Specific Report V2 command class structs */ 
/************************************************************/
typedef struct _ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   productTypeId1;               /* MSB */
    uint8_t   productTypeId2;               /* LSB */
    uint8_t   productId1;                   /* MSB */
    uint8_t   productId2;                   /* LSB */
} ZW_MANUFACTURER_SPECIFIC_REPORT_V2_FRAME;

/************************************************************/
/* Device Specific Get V2 command class structs */          
/************************************************************/
typedef struct _ZW_DEVICE_SPECIFIC_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_DEVICE_SPECIFIC_GET_V2_FRAME;

/************************************************************/
/* Device Specific Report 1byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   deviceIdData1;                
} ZW_DEVICE_SPECIFIC_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Device Specific Report 2byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   deviceIdData1;                /* MSB */
    uint8_t   deviceIdData2;                /* LSB */
} ZW_DEVICE_SPECIFIC_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Device Specific Report 3byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   deviceIdData1;                /* MSB */
    uint8_t   deviceIdData2;                
    uint8_t   deviceIdData3;                /* LSB */
} ZW_DEVICE_SPECIFIC_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Device Specific Report 4byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   deviceIdData1;                /* MSB */
    uint8_t   deviceIdData2;                
    uint8_t   deviceIdData3;                
    uint8_t   deviceIdData4;                /* LSB */
} ZW_DEVICE_SPECIFIC_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Pulse Get command class structs */                 
/************************************************************/
typedef struct _ZW_METER_PULSE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_PULSE_GET_FRAME;

/************************************************************/
/* Meter Pulse Report command class structs */              
/************************************************************/
typedef struct _ZW_METER_PULSE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   pulseCount1;                  /* MSB */
    uint8_t   pulseCount2;                  
    uint8_t   pulseCount3;                  
    uint8_t   pulseCount4;                  /* LSB */
} ZW_METER_PULSE_REPORT_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;
} ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_1BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_2BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_3BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;
    uint8_t   meterPointAdmNumberCharacter4;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_SET_4BYTE_FRAME;

/************************************************************/
/* Meter Tbl Status Report variant group structs */         
/************************************************************/
typedef struct _VG_METER_TBL_STATUS_REPORT_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} VG_METER_TBL_STATUS_REPORT_VG;

/************************************************************/
/* Meter Tbl Status Report 1byte command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
} ZW_METER_TBL_STATUS_REPORT_1BYTE_FRAME;

/************************************************************/
/* Meter Tbl Status Report 2byte command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_VG variantgroup2;                /**/
} ZW_METER_TBL_STATUS_REPORT_2BYTE_FRAME;

/************************************************************/
/* Meter Tbl Status Report 3byte command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_VG variantgroup2;                /**/
    VG_METER_TBL_STATUS_REPORT_VG variantgroup3;                /**/
} ZW_METER_TBL_STATUS_REPORT_3BYTE_FRAME;

/************************************************************/
/* Meter Tbl Status Report 4byte command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_VG variantgroup2;                /**/
    VG_METER_TBL_STATUS_REPORT_VG variantgroup3;                /**/
    VG_METER_TBL_STATUS_REPORT_VG variantgroup4;                /**/
} ZW_METER_TBL_STATUS_REPORT_4BYTE_FRAME;

/************************************************************/
/* Meter Tbl Status Date Get command class structs */       
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_DATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_METER_TBL_STATUS_DATE_GET_FRAME;

/************************************************************/
/* Meter Tbl Status Depth Get command class structs */      
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_DEPTH_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusEventLogDepth;          /**/
} ZW_METER_TBL_STATUS_DEPTH_GET_FRAME;

/************************************************************/
/* Meter Tbl Status Supported Get command class structs */  
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_STATUS_SUPPORTED_GET_FRAME;

/************************************************************/
/* Meter Tbl Status Supported Report command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedOperatingStatus1;    /* MSB */
    uint8_t   supportedOperatingStatus2;    
    uint8_t   supportedOperatingStatus3;    /* LSB */
    uint8_t   statusEventLogDepth;          /**/
} ZW_METER_TBL_STATUS_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Meter Tbl Current Data Get command class structs */      
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   datasetRequested1;            /* MSB */
    uint8_t   datasetRequested2;            
    uint8_t   datasetRequested3;            /* LSB */
} ZW_METER_TBL_CURRENT_DATA_GET_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report variant group structs */   
/************************************************************/
typedef struct _VG_METER_TBL_CURRENT_DATA_REPORT_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   currentValue1;                /* MSB */
    uint8_t   currentValue2;                
    uint8_t   currentValue3;                
    uint8_t   currentValue4;                /* LSB */
} VG_METER_TBL_CURRENT_DATA_REPORT_VG;

/************************************************************/
/* Meter Tbl Current Data Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_VG variantgroup4;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Get command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   historicalDatasetRequested1;  /* MSB */
    uint8_t   historicalDatasetRequested2;  
    uint8_t   historicalDatasetRequested3;  /* LSB */
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_METER_TBL_HISTORICAL_DATA_GET_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report variant group structs */
/************************************************************/
typedef struct _VG_METER_TBL_HISTORICAL_DATA_REPORT_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   historicalValue1;             /* MSB */
    uint8_t   historicalValue2;             
    uint8_t   historicalValue3;             
    uint8_t   historicalValue4;             /* LSB */
} VG_METER_TBL_HISTORICAL_DATA_REPORT_VG;

/************************************************************/
/* Meter Tbl Historical Data Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_VG variantgroup4;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Capability Report command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datasetSupported1;            /* MSB */
    uint8_t   datasetSupported2;            
    uint8_t   datasetSupported3;            /* LSB */
    uint8_t   datasetHistorySupported1;     /* MSB */
    uint8_t   datasetHistorySupported2;     
    uint8_t   datasetHistorySupported3;     /* LSB */
    uint8_t   dataHistorySupported1;        /* MSB */
    uint8_t   dataHistorySupported2;        
    uint8_t   dataHistorySupported3;        /* LSB */
} ZW_METER_TBL_TABLE_CAPABILITY_REPORT_FRAME;

/************************************************************/
/* Meter Tbl Table Capability Get command class structs */  
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_CAPABILITY_GET_FRAME;

/************************************************************/
/* Meter Tbl Table Id Get command class structs */          
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_ID_GET_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 1byte command class structs */ 
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            
} ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 2byte command class structs */ 
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 3byte command class structs */ 
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            
    uint8_t   meterIdCharacter3;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 4byte command class structs */ 
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            
    uint8_t   meterIdCharacter3;            
    uint8_t   meterIdCharacter4;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Get command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;
    uint8_t   meterPointAdmNumberCharacter4;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_FRAME;

/************************************************************/
/* Meter Tbl Status Report V2 variant group structs */      
/************************************************************/
typedef struct _VG_METER_TBL_STATUS_REPORT_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} VG_METER_TBL_STATUS_REPORT_V2_VG;

/************************************************************/
/* Meter Tbl Status Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
} ZW_METER_TBL_STATUS_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup2;                /**/
} ZW_METER_TBL_STATUS_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup2;                /**/
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup3;                /**/
} ZW_METER_TBL_STATUS_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup2;                /**/
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup3;                /**/
    VG_METER_TBL_STATUS_REPORT_V2_VG variantgroup4;                /**/
} ZW_METER_TBL_STATUS_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Date Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_METER_TBL_STATUS_DATE_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Depth Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusEventLogDepth;          /**/
} ZW_METER_TBL_STATUS_DEPTH_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_STATUS_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Supported Report V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedOperatingStatus1;    /* MSB */
    uint8_t   supportedOperatingStatus2;    
    uint8_t   supportedOperatingStatus3;    /* LSB */
    uint8_t   statusEventLogDepth;          /**/
} ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Meter Tbl Current Data Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   datasetRequested1;            /* MSB */
    uint8_t   datasetRequested2;            
    uint8_t   datasetRequested3;            /* LSB */
} ZW_METER_TBL_CURRENT_DATA_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report V2 variant group structs */
/************************************************************/
typedef struct _VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   currentValue1;                /* MSB */
    uint8_t   currentValue2;                
    uint8_t   currentValue3;                
    uint8_t   currentValue4;                /* LSB */
} VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG;

/************************************************************/
/* Meter Tbl Current Data Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup2;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup2;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup3;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup2;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup3;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V2_VG variantgroup4;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Get V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   historicalDatasetRequested1;  /* MSB */
    uint8_t   historicalDatasetRequested2;  
    uint8_t   historicalDatasetRequested3;  /* LSB */
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_METER_TBL_HISTORICAL_DATA_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report V2 variant group structs */
/************************************************************/
typedef struct _VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   historicalValue1;             /* MSB */
    uint8_t   historicalValue2;             
    uint8_t   historicalValue3;             
    uint8_t   historicalValue4;             /* LSB */
} VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG;

/************************************************************/
/* Meter Tbl Historical Data Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup2;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup2;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup3;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup2;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup3;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V2_VG variantgroup4;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Capability Report V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datasetSupported1;            /* MSB */
    uint8_t   datasetSupported2;            
    uint8_t   datasetSupported3;            /* LSB */
    uint8_t   datasetHistorySupported1;     /* MSB */
    uint8_t   datasetHistorySupported2;     
    uint8_t   datasetHistorySupported3;     /* LSB */
    uint8_t   dataHistorySupported1;        /* MSB */
    uint8_t   dataHistorySupported2;        
    uint8_t   dataHistorySupported3;        /* LSB */
} ZW_METER_TBL_TABLE_CAPABILITY_REPORT_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Capability Get V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_CAPABILITY_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Id Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_ID_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            
} ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            
    uint8_t   meterIdCharacter3;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            
    uint8_t   meterIdCharacter3;            
    uint8_t   meterIdCharacter4;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Get V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;
    uint8_t   meterPointAdmNumberCharacter4;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Tbl Status Report V3 variant group structs */      
/************************************************************/
typedef struct _VG_METER_TBL_STATUS_REPORT_V3_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} VG_METER_TBL_STATUS_REPORT_V3_VG;

/************************************************************/
/* Meter Tbl Status Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup1;                /**/
} ZW_METER_TBL_STATUS_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup2;                /**/
} ZW_METER_TBL_STATUS_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup2;                /**/
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup3;                /**/
} ZW_METER_TBL_STATUS_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   currentOperatingStatus1;      /* MSB */
    uint8_t   currentOperatingStatus2;      
    uint8_t   currentOperatingStatus3;      /* LSB */
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup2;                /**/
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup3;                /**/
    VG_METER_TBL_STATUS_REPORT_V3_VG variantgroup4;                /**/
} ZW_METER_TBL_STATUS_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Date Get V3 command class structs */    
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_DATE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_METER_TBL_STATUS_DATE_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Depth Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_DEPTH_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   statusEventLogDepth;          /**/
} ZW_METER_TBL_STATUS_DEPTH_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_STATUS_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Status Supported Report V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedOperatingStatus1;    /* MSB */
    uint8_t   supportedOperatingStatus2;    
    uint8_t   supportedOperatingStatus3;    /* LSB */
    uint8_t   statusEventLogDepth;          /**/
} ZW_METER_TBL_STATUS_SUPPORTED_REPORT_V3_FRAME;

/************************************************************/
/* Meter Tbl Current Data Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   datasetRequested1;            /* MSB */
    uint8_t   datasetRequested2;            
    uint8_t   datasetRequested3;            /* LSB */
} ZW_METER_TBL_CURRENT_DATA_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report V3 variant group structs */
/************************************************************/
typedef struct _VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   currentValue1;                /* MSB */
    uint8_t   currentValue2;                
    uint8_t   currentValue3;                
    uint8_t   currentValue4;                /* LSB */
} VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG;

/************************************************************/
/* Meter Tbl Current Data Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup1;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup2;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup2;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup3;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Current Data Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup2;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup3;                /**/
    VG_METER_TBL_CURRENT_DATA_REPORT_V3_VG variantgroup4;                /**/
} ZW_METER_TBL_CURRENT_DATA_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Get V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   historicalDatasetRequested1;  /* MSB */
    uint8_t   historicalDatasetRequested2;  
    uint8_t   historicalDatasetRequested3;  /* LSB */
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_METER_TBL_HISTORICAL_DATA_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report V3 variant group structs */
/************************************************************/
typedef struct _VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   historicalValue1;             /* MSB */
    uint8_t   historicalValue2;             
    uint8_t   historicalValue3;             
    uint8_t   historicalValue4;             /* LSB */
} VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG;

/************************************************************/
/* Meter Tbl Historical Data Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup1;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup2;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup2;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup3;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Historical Data Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup1;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup2;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup3;                /**/
    VG_METER_TBL_HISTORICAL_DATA_REPORT_V3_VG variantgroup4;                /**/
} ZW_METER_TBL_HISTORICAL_DATA_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Capability Report V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datasetSupported1;            /* MSB */
    uint8_t   datasetSupported2;            
    uint8_t   datasetSupported3;            /* LSB */
    uint8_t   datasetHistorySupported1;     /* MSB */
    uint8_t   datasetHistorySupported2;     
    uint8_t   datasetHistorySupported3;     /* LSB */
    uint8_t   dataHistorySupported1;        /* MSB */
    uint8_t   dataHistorySupported2;        
    uint8_t   dataHistorySupported3;        /* LSB */
} ZW_METER_TBL_TABLE_CAPABILITY_REPORT_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Capability Get V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_CAPABILITY_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_CAPABILITY_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Id Get V3 command class structs */       
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_ID_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            
} ZW_METER_TBL_TABLE_ID_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            
    uint8_t   meterIdCharacter3;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Id Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterIdCharacter1;            /* MSB */
    uint8_t   meterIdCharacter2;            
    uint8_t   meterIdCharacter3;            
    uint8_t   meterIdCharacter4;            /* LSB */
} ZW_METER_TBL_TABLE_ID_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Get V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_GET_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Table Point Adm No Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterPointAdmNumberCharacter1;/* MSB */
    uint8_t   meterPointAdmNumberCharacter2;
    uint8_t   meterPointAdmNumberCharacter3;
    uint8_t   meterPointAdmNumberCharacter4;/* LSB */
} ZW_METER_TBL_TABLE_POINT_ADM_NO_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Meter Tbl Push Configuration Get command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_PUSH_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_TBL_PUSH_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Meter Tbl Push Configuration Report command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_PUSH_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pushDataset1;                 /* MSB */
    uint8_t   pushDataset2;                 
    uint8_t   pushDataset3;                 /* LSB */
    uint8_t   intervalMonths;               /**/
    uint8_t   intervalDays;                 /**/
    uint8_t   intervalHours;                /**/
    uint8_t   intervalMinutes;              /**/
    uint8_t   pushNodeId;                   /**/
} ZW_METER_TBL_PUSH_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Meter Tbl Push Configuration Set command class structs */
/************************************************************/
typedef struct _ZW_METER_TBL_PUSH_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pushDataset1;                 /* MSB */
    uint8_t   pushDataset2;                 
    uint8_t   pushDataset3;                 /* LSB */
    uint8_t   intervalMonths;               /**/
    uint8_t   intervalDays;                 /**/
    uint8_t   intervalHours;                /**/
    uint8_t   intervalMinutes;              /**/
    uint8_t   pushNodeId;                   /**/
} ZW_METER_TBL_PUSH_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Meter Get command class structs */                       
/************************************************************/
typedef struct _ZW_METER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_GET_FRAME;

/************************************************************/
/* Meter Report 1byte command class structs */              
/************************************************************/
typedef struct _ZW_METER_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   meterType;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterValue1;                  
} ZW_METER_REPORT_1BYTE_FRAME;

/************************************************************/
/* Meter Report 2byte command class structs */              
/************************************************************/
typedef struct _ZW_METER_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   meterType;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
} ZW_METER_REPORT_2BYTE_FRAME;

/************************************************************/
/* Meter Report 3byte command class structs */              
/************************************************************/
typedef struct _ZW_METER_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   meterType;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
} ZW_METER_REPORT_3BYTE_FRAME;

/************************************************************/
/* Meter Report 4byte command class structs */              
/************************************************************/
typedef struct _ZW_METER_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   meterType;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
} ZW_METER_REPORT_4BYTE_FRAME;

/************************************************************/
/* Meter Get V2 command class structs */                    
/************************************************************/
typedef struct _ZW_METER_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_METER_GET_V2_FRAME;

/************************************************************/
/* Meter Report 1byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          
} ZW_METER_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Meter Report 2byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          /* LSB */
} ZW_METER_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Meter Report 3byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          /* LSB */
} ZW_METER_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Meter Report 4byte V2 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          
    uint8_t   previousMeterValue4;          /* LSB */
} ZW_METER_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Meter Reset V2 command class structs */                  
/************************************************************/
typedef struct _ZW_METER_RESET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_RESET_V2_FRAME;

/************************************************************/
/* Meter Supported Get V2 command class structs */          
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Meter Supported Report V2 command class structs */       
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_METER_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Meter Get V3 command class structs */                    
/************************************************************/
typedef struct _ZW_METER_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_METER_GET_V3_FRAME;

/************************************************************/
/* Meter Report 1byte V3 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          
} ZW_METER_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Meter Report 2byte V3 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          /* LSB */
} ZW_METER_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Meter Report 3byte V3 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          /* LSB */
} ZW_METER_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Meter Report 4byte V3 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          
    uint8_t   previousMeterValue4;          /* LSB */
} ZW_METER_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Meter Reset V3 command class structs */                  
/************************************************************/
typedef struct _ZW_METER_RESET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_RESET_V3_FRAME;

/************************************************************/
/* Meter Supported Get V3 command class structs */          
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Meter Supported Report V3 command class structs */       
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   scaleSupported;               /**/
} ZW_METER_SUPPORTED_REPORT_V3_FRAME;

/************************************************************/
/* Meter Get V4 command class structs */                    
/************************************************************/
typedef struct _ZW_METER_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   scale2;                       /**/
} ZW_METER_GET_V4_FRAME;

/************************************************************/
/* Meter Report 1byte V4 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Meter Report 2byte V4 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Meter Report 3byte V4 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Meter Report 4byte V4 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          
    uint8_t   previousMeterValue4;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Meter Reset V4 command class structs */                  
/************************************************************/
typedef struct _ZW_METER_RESET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_RESET_V4_FRAME;

/************************************************************/
/* Meter Supported Get V4 command class structs */          
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Meter Supported Report 1byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              
} ZW_METER_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Meter Supported Report 2byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Meter Supported Report 3byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              
    uint8_t   scaleSupported3;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Meter Supported Report 4byte V4 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              
    uint8_t   scaleSupported3;              
    uint8_t   scaleSupported4;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Meter Get V5 command class structs */                    
/************************************************************/
typedef struct _ZW_METER_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   scale2;                       /**/
} ZW_METER_GET_V5_FRAME;

/************************************************************/
/* Meter Report 1byte V5 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Meter Report 2byte V5 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Meter Report 3byte V5 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Meter Report 4byte V5 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          
    uint8_t   previousMeterValue4;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Meter Reset V5 command class structs */                  
/************************************************************/
typedef struct _ZW_METER_RESET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_RESET_V5_FRAME;

/************************************************************/
/* Meter Supported Get V5 command class structs */          
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_SUPPORTED_GET_V5_FRAME;

/************************************************************/
/* Meter Supported Report 1byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              
} ZW_METER_SUPPORTED_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Meter Supported Report 2byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Meter Supported Report 3byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              
    uint8_t   scaleSupported3;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Meter Supported Report 4byte V5 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              
    uint8_t   scaleSupported3;              
    uint8_t   scaleSupported4;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Meter Get V6 command class structs */                    
/************************************************************/
typedef struct _ZW_METER_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   scale2;                       /**/
} ZW_METER_GET_V6_FRAME;

/************************************************************/
/* Meter Report 1byte V6 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Meter Report 2byte V6 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Meter Report 3byte V6 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Meter Report 4byte V6 command class structs */           
/************************************************************/
typedef struct _ZW_METER_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
    uint8_t   deltaTime1;                   /* MSB */
    uint8_t   deltaTime2;                   /* LSB */
    uint8_t   previousMeterValue1;          /* MSB */
    uint8_t   previousMeterValue2;          
    uint8_t   previousMeterValue3;          
    uint8_t   previousMeterValue4;          /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Meter Reset 1byte V6 command class structs */            
/************************************************************/
typedef struct _ZW_METER_RESET_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  
    uint8_t   scale2;                       /**/
} ZW_METER_RESET_1BYTE_V6_FRAME;

/************************************************************/
/* Meter Reset 2byte V6 command class structs */            
/************************************************************/
typedef struct _ZW_METER_RESET_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_RESET_2BYTE_V6_FRAME;

/************************************************************/
/* Meter Reset 3byte V6 command class structs */            
/************************************************************/
typedef struct _ZW_METER_RESET_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_RESET_3BYTE_V6_FRAME;

/************************************************************/
/* Meter Reset 4byte V6 command class structs */            
/************************************************************/
typedef struct _ZW_METER_RESET_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   meterValue1;                  /* MSB */
    uint8_t   meterValue2;                  
    uint8_t   meterValue3;                  
    uint8_t   meterValue4;                  /* LSB */
    uint8_t   scale2;                       /**/
} ZW_METER_RESET_4BYTE_V6_FRAME;

/************************************************************/
/* Meter Supported Get V6 command class structs */          
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_METER_SUPPORTED_GET_V6_FRAME;

/************************************************************/
/* Meter Supported Report 1byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              
} ZW_METER_SUPPORTED_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Meter Supported Report 2byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Meter Supported Report 3byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              
    uint8_t   scaleSupported3;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Meter Supported Report 4byte V6 command class structs */ 
/************************************************************/
typedef struct _ZW_METER_SUPPORTED_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   numberOfScaleSupportedBytesToFollow;/**/
    uint8_t   scaleSupported1;              /* MSB */
    uint8_t   scaleSupported2;              
    uint8_t   scaleSupported3;              
    uint8_t   scaleSupported4;              /* LSB */
} ZW_METER_SUPPORTED_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Move To Position Get command class structs */            
/************************************************************/
typedef struct _ZW_MOVE_TO_POSITION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MOVE_TO_POSITION_GET_FRAME;

/************************************************************/
/* Move To Position Report command class structs */         
/************************************************************/
typedef struct _ZW_MOVE_TO_POSITION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_MOVE_TO_POSITION_REPORT_FRAME;

/************************************************************/
/* Move To Position Set command class structs */            
/************************************************************/
typedef struct _ZW_MOVE_TO_POSITION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_MOVE_TO_POSITION_SET_FRAME;

/************************************************************/
/* Multi Channel Association Get V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GET_V2_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Get V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V2_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Report V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V2_FRAME;

/************************************************************/
/* Multi Channel Association Remove V2 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG;

/************************************************************/
/* Multi Channel Association Remove 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Remove 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Remove 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Remove 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V2_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Report V2 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG;

/************************************************************/
/* Multi Channel Association Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V2_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Set V2 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG;

/************************************************************/
/* Multi Channel Association Set 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Set 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Set 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Set 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V2_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Association Get V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GET_V3_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Get V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V3_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Report V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V3_FRAME;

/************************************************************/
/* Multi Channel Association Remove V3 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG;

/************************************************************/
/* Multi Channel Association Remove 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Remove 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Remove 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Remove 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V3_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Report V3 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG;

/************************************************************/
/* Multi Channel Association Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V3_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Set V3 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG;

/************************************************************/
/* Multi Channel Association Set 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Set 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Set 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Set 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V3_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Association Get V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GET_V4_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Get V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V4_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Report V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V4_FRAME;

/************************************************************/
/* Multi Channel Association Remove V4 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG;

/************************************************************/
/* Multi Channel Association Remove 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Remove 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Remove 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Remove 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V4_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Report V4 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG;

/************************************************************/
/* Multi Channel Association Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V4_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Set V4 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG;

/************************************************************/
/* Multi Channel Association Set 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Set 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Set 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Set 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V4_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Association Get V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GET_V5_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Get V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_GET_V5_FRAME;

/************************************************************/
/* Multi Channel Association Groupings Report V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_GROUPINGS_REPORT_V5_FRAME;

/************************************************************/
/* Multi Channel Association Remove V5 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG;

/************************************************************/
/* Multi Channel Association Remove 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_1BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Remove 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_2BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Remove 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_3BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Remove 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REMOVE_V5_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REMOVE_4BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Report V5 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG;

/************************************************************/
/* Multi Channel Association Report 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Report 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Report 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Report 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_REPORT_V5_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Set V5 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG_
{
    uint8_t   multiChannelNodeId;           /**/
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG;

/************************************************************/
/* Multi Channel Association Set 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_1BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Set 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_2BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Set 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_3BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Association Set 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_ASSOCIATION_SET_V5_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_ASSOCIATION_SET_4BYTE_V5_FRAME;

/************************************************************/
/* Multi Channel Capability Get V2 command class structs */ 
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME;

/************************************************************/
/* Multi Channel Capability Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Capability Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Capability Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel Capability Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Find V2 command class structs */ 
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report V2 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG;

/************************************************************/
/* Multi Channel End Point Find Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V2_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Get V2 command class structs */  
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_END_POINT_GET_V2_FRAME;

/************************************************************/
/* Multi Channel End Point Report V2 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME;

/************************************************************/
/* Multi Instance Get V2 command class structs */           
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
} ZW_MULTI_INSTANCE_GET_V2_FRAME;

/************************************************************/
/* Multi Instance Report V2 command class structs */        
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_INSTANCE_REPORT_V2_FRAME;

/************************************************************/
/* Multi Channel Capability Get V3 command class structs */ 
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME;

/************************************************************/
/* Multi Channel Capability Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Capability Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Capability Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel Capability Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Find V3 command class structs */ 
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report V3 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG_
{
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG;

/************************************************************/
/* Multi Channel End Point Find Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V3_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Get V3 command class structs */  
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_END_POINT_GET_V3_FRAME;

/************************************************************/
/* Multi Channel End Point Report V3 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME;

/************************************************************/
/* Multi Instance Get V3 command class structs */           
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
} ZW_MULTI_INSTANCE_GET_V3_FRAME;

/************************************************************/
/* Multi Instance Report V3 command class structs */        
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_INSTANCE_REPORT_V3_FRAME;

/************************************************************/
/* Multi Channel Capability Get V4 command class structs */ 
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_CHANNEL_CAPABILITY_GET_V4_FRAME;

/************************************************************/
/* Multi Channel Capability Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Capability Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Capability Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Capability Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Find V4 command class structs */ 
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report V4 variant group structs */
/************************************************************/
typedef struct _VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG_
{
    uint8_t   properties1;                  /* masked byte */
} VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG;

/************************************************************/
/* Multi Channel End Point Find Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup1;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup2;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup3;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Find Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup1;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup2;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup3;                /**/
    VG_MULTI_CHANNEL_END_POINT_FIND_REPORT_V4_VG variantgroup4;                /**/
} ZW_MULTI_CHANNEL_END_POINT_FIND_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Get V4 command class structs */  
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_CHANNEL_END_POINT_GET_V4_FRAME;

/************************************************************/
/* Multi Channel End Point Report V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_END_POINT_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
} ZW_MULTI_CHANNEL_END_POINT_REPORT_V4_FRAME;

/************************************************************/
/* Multi Instance Get V4 command class structs */           
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
} ZW_MULTI_INSTANCE_GET_V4_FRAME;

/************************************************************/
/* Multi Instance Report V4 command class structs */        
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_INSTANCE_REPORT_V4_FRAME;

/************************************************************/
/* Multi Channel Aggregated Members Get V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4_FRAME;

/************************************************************/
/* Multi Channel Aggregated Members Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   aggregatedMembersBitMask1;    
} ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Aggregated Members Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   aggregatedMembersBitMask1;    /* MSB */
    uint8_t   aggregatedMembersBitMask2;    /* LSB */
} ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Aggregated Members Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   aggregatedMembersBitMask1;    /* MSB */
    uint8_t   aggregatedMembersBitMask2;    
    uint8_t   aggregatedMembersBitMask3;    /* LSB */
} ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Multi Channel Aggregated Members Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   aggregatedMembersBitMask1;    /* MSB */
    uint8_t   aggregatedMembersBitMask2;    
    uint8_t   aggregatedMembersBitMask3;    
    uint8_t   aggregatedMembersBitMask4;    /* LSB */
} ZW_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Multi Instance Association Get command class structs */  
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_GET_FRAME;

/************************************************************/
/* Multi Instance Association Groupings Get command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_GET_FRAME;

/************************************************************/
/* Multi Instance Association Groupings Report command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedGroupings;           /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_GROUPINGS_REPORT_FRAME;

/************************************************************/
/* Multi Instance Association Remove variant group structs */
/************************************************************/
typedef struct _VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG_
{
    uint8_t   multiInstanceNodeId;          /**/
    uint8_t   instance;                     /**/
} VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG;

/************************************************************/
/* Multi Instance Association Remove 1byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_1BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Remove 2byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup2;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_2BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Remove 3byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup2;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup3;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_3BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Remove 4byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup2;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup3;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REMOVE_VG variantgroup4;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REMOVE_4BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Report variant group structs */
/************************************************************/
typedef struct _VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG_
{
    uint8_t   multiInstanceNodeId;          /**/
    uint8_t   instance;                     /**/
} VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG;

/************************************************************/
/* Multi Instance Association Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup2;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup2;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup3;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   maxNodesSupported;            /**/
    uint8_t   reportsToFollow;              /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup2;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup3;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_REPORT_VG variantgroup4;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Set variant group structs */  
/************************************************************/
typedef struct _VG_MULTI_INSTANCE_ASSOCIATION_SET_VG_
{
    uint8_t   multiInstanceNodeId;          /**/
    uint8_t   instance;                     /**/
} VG_MULTI_INSTANCE_ASSOCIATION_SET_VG;

/************************************************************/
/* Multi Instance Association Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_SET_1BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup2;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_SET_2BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup2;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup3;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_SET_3BYTE_FRAME;

/************************************************************/
/* Multi Instance Association Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   nodeId1;                      /* MSB */
    uint8_t   nodeId2;                      
    uint8_t   nodeId3;                      
    uint8_t   nodeId4;                      /* LSB */
    uint8_t   marker;                       /*This marker identifier is used to separate between nodes without and with end points attached. This field can be omitted in case no Multi Channel node follows.*/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup1;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup2;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup3;                /**/
    VG_MULTI_INSTANCE_ASSOCIATION_SET_VG variantgroup4;                /**/
} ZW_MULTI_INSTANCE_ASSOCIATION_SET_4BYTE_FRAME;

/************************************************************/
/* Multi Instance Get command class structs */              
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
} ZW_MULTI_INSTANCE_GET_FRAME;

/************************************************************/
/* Multi Instance Report command class structs */           
/************************************************************/
typedef struct _ZW_MULTI_INSTANCE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass;                 /**/
    uint8_t   instances;                    /**/
} ZW_MULTI_INSTANCE_REPORT_FRAME;

/************************************************************/
/* Node Info Cached Get command class structs */            
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
} ZW_NODE_INFO_CACHED_GET_FRAME;

/************************************************************/
/* Node Info Cached Report 1byte command class structs */   
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   reserved;                     /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NODE_INFO_CACHED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Node Info Cached Report 2byte command class structs */   
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   reserved;                     /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Node Info Cached Report 3byte command class structs */   
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   reserved;                     /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Node Info Cached Report 4byte command class structs */   
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   reserved;                     /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Node List Get command class structs */                   
/************************************************************/
typedef struct _ZW_NODE_LIST_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_NODE_LIST_GET_FRAME;

/************************************************************/
/* Node List Report 1byte command class structs */          
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                
} ZW_NODE_LIST_REPORT_1BYTE_FRAME;

/************************************************************/
/* Node List Report 2byte command class structs */          
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                /* LSB */
} ZW_NODE_LIST_REPORT_2BYTE_FRAME;

/************************************************************/
/* Node List Report 3byte command class structs */          
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                /* LSB */
} ZW_NODE_LIST_REPORT_3BYTE_FRAME;

/************************************************************/
/* Node List Report 4byte command class structs */          
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                
    uint8_t   nodeListData4;                /* LSB */
} ZW_NODE_LIST_REPORT_4BYTE_FRAME;

/************************************************************/
/* Node Info Cached Get V2 command class structs */         
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
} ZW_NODE_INFO_CACHED_GET_V2_FRAME;

/************************************************************/
/* Node Info Cached Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NODE_INFO_CACHED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Node Info Cached Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Node Info Cached Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Node Info Cached Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Node List Get V2 command class structs */                
/************************************************************/
typedef struct _ZW_NODE_LIST_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_NODE_LIST_GET_V2_FRAME;

/************************************************************/
/* Node List Report 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                
} ZW_NODE_LIST_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Node List Report 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                /* LSB */
} ZW_NODE_LIST_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Node List Report 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                /* LSB */
} ZW_NODE_LIST_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Node List Report 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                
    uint8_t   nodeListData4;                /* LSB */
} ZW_NODE_LIST_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel End Point Get V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_END_POINT_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
} ZW_NM_MULTI_CHANNEL_END_POINT_GET_V2_FRAME;

/************************************************************/
/* Nm Multi Channel End Point Report V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Get V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Get V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report V2 variant group structs */
/************************************************************/
typedef struct _VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
} VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup1;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup2;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup2;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup3;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup2;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup3;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V2_VG variantgroup4;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Node Info Cached Get V3 command class structs */         
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
} ZW_NODE_INFO_CACHED_GET_V3_FRAME;

/************************************************************/
/* Node Info Cached Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NODE_INFO_CACHED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Node Info Cached Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Node Info Cached Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Node Info Cached Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Node List Get V3 command class structs */                
/************************************************************/
typedef struct _ZW_NODE_LIST_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_NODE_LIST_GET_V3_FRAME;

/************************************************************/
/* Node List Report 1byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                
} ZW_NODE_LIST_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Node List Report 2byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                /* LSB */
} ZW_NODE_LIST_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Node List Report 3byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                /* LSB */
} ZW_NODE_LIST_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Node List Report 4byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                
    uint8_t   nodeListData4;                /* LSB */
} ZW_NODE_LIST_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel End Point Get V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_END_POINT_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
} ZW_NM_MULTI_CHANNEL_END_POINT_GET_V3_FRAME;

/************************************************************/
/* Nm Multi Channel End Point Report V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Get V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Get V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report V3 variant group structs */
/************************************************************/
typedef struct _VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG_
{
    uint8_t   properties1;                  /* masked byte */
} VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup1;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup2;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup2;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup3;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup2;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup3;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V3_VG variantgroup4;                /**/
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Failed Node List Get V3 command class structs */         
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_FAILED_NODE_LIST_GET_V3_FRAME;

/************************************************************/
/* Failed Node List Report V3 command class structs */      
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   failedNodeListData1;          /* MSB */
    uint8_t   failedNodeListData2;          
    uint8_t   failedNodeListData3;          
    uint8_t   failedNodeListData4;          
    uint8_t   failedNodeListData5;          
    uint8_t   failedNodeListData6;          
    uint8_t   failedNodeListData7;          
    uint8_t   failedNodeListData8;          
    uint8_t   failedNodeListData9;          
    uint8_t   failedNodeListData10;         
    uint8_t   failedNodeListData11;         
    uint8_t   failedNodeListData12;         
    uint8_t   failedNodeListData13;         
    uint8_t   failedNodeListData14;         
    uint8_t   failedNodeListData15;         
    uint8_t   failedNodeListData16;         
    uint8_t   failedNodeListData17;         
    uint8_t   failedNodeListData18;         
    uint8_t   failedNodeListData19;         
    uint8_t   failedNodeListData20;         
    uint8_t   failedNodeListData21;         
    uint8_t   failedNodeListData22;         
    uint8_t   failedNodeListData23;         
    uint8_t   failedNodeListData24;         
    uint8_t   failedNodeListData25;         
    uint8_t   failedNodeListData26;         
    uint8_t   failedNodeListData27;         
    uint8_t   failedNodeListData28;         
    uint8_t   failedNodeListData29;         /* LSB */
} ZW_FAILED_NODE_LIST_REPORT_V3_FRAME;

/************************************************************/
/* Node Info Cached Get V4 command class structs */         
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NODE_INFO_CACHED_GET_V4_FRAME;

/************************************************************/
/* Node Info Cached Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NODE_INFO_CACHED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Node Info Cached Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Node Info Cached Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Node Info Cached Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NODE_INFO_CACHED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NODE_INFO_CACHED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Node List Get V4 command class structs */                
/************************************************************/
typedef struct _ZW_NODE_LIST_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_NODE_LIST_GET_V4_FRAME;

/************************************************************/
/* Node List Report 1byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                
    uint8_t   extendedNodeListLength1;      /* MSB */
    uint8_t   extendedNodeListLength2;      /* LSB */
    uint8_t   extendedNodeList1;            
} ZW_NODE_LIST_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Node List Report 2byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                /* LSB */
    uint8_t   extendedNodeListLength1;      /* MSB */
    uint8_t   extendedNodeListLength2;      /* LSB */
    uint8_t   extendedNodeList1;            /* MSB */
    uint8_t   extendedNodeList2;            /* LSB */
} ZW_NODE_LIST_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Node List Report 3byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                /* LSB */
    uint8_t   extendedNodeListLength1;      /* MSB */
    uint8_t   extendedNodeListLength2;      /* LSB */
    uint8_t   extendedNodeList1;            /* MSB */
    uint8_t   extendedNodeList2;            
    uint8_t   extendedNodeList3;            /* LSB */
} ZW_NODE_LIST_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Node List Report 4byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_LIST_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeListControllerId;         /**/
    uint8_t   nodeListData1;                /* MSB */
    uint8_t   nodeListData2;                
    uint8_t   nodeListData3;                
    uint8_t   nodeListData4;                /* LSB */
    uint8_t   extendedNodeListLength1;      /* MSB */
    uint8_t   extendedNodeListLength2;      /* LSB */
    uint8_t   extendedNodeList1;            /* MSB */
    uint8_t   extendedNodeList2;            
    uint8_t   extendedNodeList3;            
    uint8_t   extendedNodeList4;            /* LSB */
} ZW_NODE_LIST_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel End Point Get V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_END_POINT_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_END_POINT_GET_V4_FRAME;

/************************************************************/
/* Nm Multi Channel End Point Report V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_END_POINT_REPORT_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Get V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_GET_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Capability Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   commandClassLength;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_CAPABILITY_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Get V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_GET_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report V4 variant group structs */
/************************************************************/
typedef struct _VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG_
{
    uint8_t   properties1;                  /* masked byte */
} VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup1;                /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup2;                /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup2;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup3;                /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Nm Multi Channel Aggregated Members Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeid;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfMembers;              /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup1;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup2;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup3;                /**/
    VG_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_V4_VG variantgroup4;                /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NM_MULTI_CHANNEL_AGGREGATED_MEMBERS_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Failed Node List Get V4 command class structs */         
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_FAILED_NODE_LIST_GET_V4_FRAME;

/************************************************************/
/* Failed Node List Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   failedNodeListData1;          /* MSB */
    uint8_t   failedNodeListData2;          
    uint8_t   failedNodeListData3;          
    uint8_t   failedNodeListData4;          
    uint8_t   failedNodeListData5;          
    uint8_t   failedNodeListData6;          
    uint8_t   failedNodeListData7;          
    uint8_t   failedNodeListData8;          
    uint8_t   failedNodeListData9;          
    uint8_t   failedNodeListData10;         
    uint8_t   failedNodeListData11;         
    uint8_t   failedNodeListData12;         
    uint8_t   failedNodeListData13;         
    uint8_t   failedNodeListData14;         
    uint8_t   failedNodeListData15;         
    uint8_t   failedNodeListData16;         
    uint8_t   failedNodeListData17;         
    uint8_t   failedNodeListData18;         
    uint8_t   failedNodeListData19;         
    uint8_t   failedNodeListData20;         
    uint8_t   failedNodeListData21;         
    uint8_t   failedNodeListData22;         
    uint8_t   failedNodeListData23;         
    uint8_t   failedNodeListData24;         
    uint8_t   failedNodeListData25;         
    uint8_t   failedNodeListData26;         
    uint8_t   failedNodeListData27;         
    uint8_t   failedNodeListData28;         
    uint8_t   failedNodeListData29;         /* LSB */
    uint8_t   extendedFailedNodeListLength1;/* MSB */
    uint8_t   extendedFailedNodeListLength2;/* LSB */
    uint8_t   extendedFailedNodeList1;      
} ZW_FAILED_NODE_LIST_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Failed Node List Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   failedNodeListData1;          /* MSB */
    uint8_t   failedNodeListData2;          
    uint8_t   failedNodeListData3;          
    uint8_t   failedNodeListData4;          
    uint8_t   failedNodeListData5;          
    uint8_t   failedNodeListData6;          
    uint8_t   failedNodeListData7;          
    uint8_t   failedNodeListData8;          
    uint8_t   failedNodeListData9;          
    uint8_t   failedNodeListData10;         
    uint8_t   failedNodeListData11;         
    uint8_t   failedNodeListData12;         
    uint8_t   failedNodeListData13;         
    uint8_t   failedNodeListData14;         
    uint8_t   failedNodeListData15;         
    uint8_t   failedNodeListData16;         
    uint8_t   failedNodeListData17;         
    uint8_t   failedNodeListData18;         
    uint8_t   failedNodeListData19;         
    uint8_t   failedNodeListData20;         
    uint8_t   failedNodeListData21;         
    uint8_t   failedNodeListData22;         
    uint8_t   failedNodeListData23;         
    uint8_t   failedNodeListData24;         
    uint8_t   failedNodeListData25;         
    uint8_t   failedNodeListData26;         
    uint8_t   failedNodeListData27;         
    uint8_t   failedNodeListData28;         
    uint8_t   failedNodeListData29;         /* LSB */
    uint8_t   extendedFailedNodeListLength1;/* MSB */
    uint8_t   extendedFailedNodeListLength2;/* LSB */
    uint8_t   extendedFailedNodeList1;      /* MSB */
    uint8_t   extendedFailedNodeList2;      /* LSB */
} ZW_FAILED_NODE_LIST_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Failed Node List Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   failedNodeListData1;          /* MSB */
    uint8_t   failedNodeListData2;          
    uint8_t   failedNodeListData3;          
    uint8_t   failedNodeListData4;          
    uint8_t   failedNodeListData5;          
    uint8_t   failedNodeListData6;          
    uint8_t   failedNodeListData7;          
    uint8_t   failedNodeListData8;          
    uint8_t   failedNodeListData9;          
    uint8_t   failedNodeListData10;         
    uint8_t   failedNodeListData11;         
    uint8_t   failedNodeListData12;         
    uint8_t   failedNodeListData13;         
    uint8_t   failedNodeListData14;         
    uint8_t   failedNodeListData15;         
    uint8_t   failedNodeListData16;         
    uint8_t   failedNodeListData17;         
    uint8_t   failedNodeListData18;         
    uint8_t   failedNodeListData19;         
    uint8_t   failedNodeListData20;         
    uint8_t   failedNodeListData21;         
    uint8_t   failedNodeListData22;         
    uint8_t   failedNodeListData23;         
    uint8_t   failedNodeListData24;         
    uint8_t   failedNodeListData25;         
    uint8_t   failedNodeListData26;         
    uint8_t   failedNodeListData27;         
    uint8_t   failedNodeListData28;         
    uint8_t   failedNodeListData29;         /* LSB */
    uint8_t   extendedFailedNodeListLength1;/* MSB */
    uint8_t   extendedFailedNodeListLength2;/* LSB */
    uint8_t   extendedFailedNodeList1;      /* MSB */
    uint8_t   extendedFailedNodeList2;      
    uint8_t   extendedFailedNodeList3;      /* LSB */
} ZW_FAILED_NODE_LIST_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Failed Node List Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_FAILED_NODE_LIST_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   failedNodeListData1;          /* MSB */
    uint8_t   failedNodeListData2;          
    uint8_t   failedNodeListData3;          
    uint8_t   failedNodeListData4;          
    uint8_t   failedNodeListData5;          
    uint8_t   failedNodeListData6;          
    uint8_t   failedNodeListData7;          
    uint8_t   failedNodeListData8;          
    uint8_t   failedNodeListData9;          
    uint8_t   failedNodeListData10;         
    uint8_t   failedNodeListData11;         
    uint8_t   failedNodeListData12;         
    uint8_t   failedNodeListData13;         
    uint8_t   failedNodeListData14;         
    uint8_t   failedNodeListData15;         
    uint8_t   failedNodeListData16;         
    uint8_t   failedNodeListData17;         
    uint8_t   failedNodeListData18;         
    uint8_t   failedNodeListData19;         
    uint8_t   failedNodeListData20;         
    uint8_t   failedNodeListData21;         
    uint8_t   failedNodeListData22;         
    uint8_t   failedNodeListData23;         
    uint8_t   failedNodeListData24;         
    uint8_t   failedNodeListData25;         
    uint8_t   failedNodeListData26;         
    uint8_t   failedNodeListData27;         
    uint8_t   failedNodeListData28;         
    uint8_t   failedNodeListData29;         /* LSB */
    uint8_t   extendedFailedNodeListLength1;/* MSB */
    uint8_t   extendedFailedNodeListLength2;/* LSB */
    uint8_t   extendedFailedNodeList1;      /* MSB */
    uint8_t   extendedFailedNodeList2;      
    uint8_t   extendedFailedNodeList3;      
    uint8_t   extendedFailedNodeList4;      /* LSB */
} ZW_FAILED_NODE_LIST_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Learn Mode Set command class structs */                  
/************************************************************/
typedef struct _ZW_LEARN_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
} ZW_LEARN_MODE_SET_FRAME;

/************************************************************/
/* Learn Mode Set Status command class structs */           
/************************************************************/
typedef struct _ZW_LEARN_MODE_SET_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
} ZW_LEARN_MODE_SET_STATUS_FRAME;

/************************************************************/
/* Node Information Send command class structs */           
/************************************************************/
typedef struct _ZW_NODE_INFORMATION_SEND_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   destinationNodeId;            /**/
    uint8_t   txOptions;                    /**/
} ZW_NODE_INFORMATION_SEND_FRAME;

/************************************************************/
/* Network Update Request command class structs */          
/************************************************************/
typedef struct _ZW_NETWORK_UPDATE_REQUEST_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_NETWORK_UPDATE_REQUEST_FRAME;

/************************************************************/
/* Network Update Request Status command class structs */   
/************************************************************/
typedef struct _ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_NETWORK_UPDATE_REQUEST_STATUS_FRAME;

/************************************************************/
/* Default Set command class structs */                     
/************************************************************/
typedef struct _ZW_DEFAULT_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_DEFAULT_SET_FRAME;

/************************************************************/
/* Default Set Complete command class structs */            
/************************************************************/
typedef struct _ZW_DEFAULT_SET_COMPLETE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_DEFAULT_SET_COMPLETE_FRAME;

/************************************************************/
/* Learn Mode Set V2 command class structs */               
/************************************************************/
typedef struct _ZW_LEARN_MODE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   mode;                         /**/
} ZW_LEARN_MODE_SET_V2_FRAME;

/************************************************************/
/* Learn Mode Set Status V2 command class structs */        
/************************************************************/
typedef struct _ZW_LEARN_MODE_SET_STATUS_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         
    uint8_t   dsk5;                         
    uint8_t   dsk6;                         
    uint8_t   dsk7;                         
    uint8_t   dsk8;                         
    uint8_t   dsk9;                         
    uint8_t   dsk10;                        
    uint8_t   dsk11;                        
    uint8_t   dsk12;                        
    uint8_t   dsk13;                        
    uint8_t   dsk14;                        
    uint8_t   dsk15;                        
    uint8_t   dsk16;                        /* LSB */
} ZW_LEARN_MODE_SET_STATUS_V2_FRAME;

/************************************************************/
/* Node Information Send V2 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_INFORMATION_SEND_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   destinationNodeId;            /**/
    uint8_t   txOptions;                    /**/
} ZW_NODE_INFORMATION_SEND_V2_FRAME;

/************************************************************/
/* Network Update Request V2 command class structs */       
/************************************************************/
typedef struct _ZW_NETWORK_UPDATE_REQUEST_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_NETWORK_UPDATE_REQUEST_V2_FRAME;

/************************************************************/
/* Network Update Request Status V2 command class structs */
/************************************************************/
typedef struct _ZW_NETWORK_UPDATE_REQUEST_STATUS_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_NETWORK_UPDATE_REQUEST_STATUS_V2_FRAME;

/************************************************************/
/* Default Set V2 command class structs */                  
/************************************************************/
typedef struct _ZW_DEFAULT_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
} ZW_DEFAULT_SET_V2_FRAME;

/************************************************************/
/* Default Set Complete V2 command class structs */         
/************************************************************/
typedef struct _ZW_DEFAULT_SET_COMPLETE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_DEFAULT_SET_COMPLETE_V2_FRAME;

/************************************************************/
/* Dsk Get V2 command class structs */                      
/************************************************************/
typedef struct _ZW_DSK_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_DSK_GET_V2_FRAME;

/************************************************************/
/* Dsk Report V2 command class structs */                   
/************************************************************/
typedef struct _ZW_DSK_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         
    uint8_t   dsk5;                         
    uint8_t   dsk6;                         
    uint8_t   dsk7;                         
    uint8_t   dsk8;                         
    uint8_t   dsk9;                         
    uint8_t   dsk10;                        
    uint8_t   dsk11;                        
    uint8_t   dsk12;                        
    uint8_t   dsk13;                        
    uint8_t   dsk14;                        
    uint8_t   dsk15;                        
    uint8_t   dsk16;                        /* LSB */
} ZW_DSK_REPORT_V2_FRAME;

/************************************************************/
/* Failed Node Remove command class structs */              
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REMOVE_FRAME;

/************************************************************/
/* Failed Node Remove Status command class structs */       
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REMOVE_STATUS_FRAME;

/************************************************************/
/* Node Add command class structs */                        
/************************************************************/
typedef struct _ZW_NODE_ADD_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
    uint8_t   txOptions;                    /**/
} ZW_NODE_ADD_FRAME;

/************************************************************/
/* Node Add Status 1byte command class structs */           
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_NODE_ADD_STATUS_1BYTE_FRAME;

/************************************************************/
/* Node Add Status 2byte command class structs */           
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_NODE_ADD_STATUS_2BYTE_FRAME;

/************************************************************/
/* Node Add Status 3byte command class structs */           
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_NODE_ADD_STATUS_3BYTE_FRAME;

/************************************************************/
/* Node Add Status 4byte command class structs */           
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_NODE_ADD_STATUS_4BYTE_FRAME;

/************************************************************/
/* Node Remove command class structs */                     
/************************************************************/
typedef struct _ZW_NODE_REMOVE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
} ZW_NODE_REMOVE_FRAME;

/************************************************************/
/* Node Remove Status command class structs */              
/************************************************************/
typedef struct _ZW_NODE_REMOVE_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeid;                       /**/
} ZW_NODE_REMOVE_STATUS_FRAME;

/************************************************************/
/* Failed Node Replace command class structs */             
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
    uint8_t   txOptions;                    /**/
    uint8_t   mode;                         /**/
} ZW_FAILED_NODE_REPLACE_FRAME;

/************************************************************/
/* Failed Node Replace Status command class structs */      
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REPLACE_STATUS_FRAME;

/************************************************************/
/* Node Neighbor Update Request command class structs */    
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_REQUEST_FRAME;

/************************************************************/
/* Node Neighbor Update Status command class structs */     
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_STATUS_FRAME;

/************************************************************/
/* Return Route Assign command class structs */             
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   sourceNodeId;                 /**/
    uint8_t   destinationNodeId;            /**/
} ZW_RETURN_ROUTE_ASSIGN_FRAME;

/************************************************************/
/* Return Route Assign Complete command class structs */    
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_ASSIGN_COMPLETE_FRAME;

/************************************************************/
/* Return Route Delete command class structs */             
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_RETURN_ROUTE_DELETE_FRAME;

/************************************************************/
/* Return Route Delete Complete command class structs */    
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_DELETE_COMPLETE_FRAME;

/************************************************************/
/* Failed Node Remove V2 command class structs */           
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REMOVE_V2_FRAME;

/************************************************************/
/* Failed Node Remove Status V2 command class structs */    
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_STATUS_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REMOVE_STATUS_V2_FRAME;

/************************************************************/
/* Node Add V2 command class structs */                     
/************************************************************/
typedef struct _ZW_NODE_ADD_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
    uint8_t   txOptions;                    /**/
} ZW_NODE_ADD_V2_FRAME;

/************************************************************/
/* Node Add Status 1byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_NODE_ADD_STATUS_1BYTE_V2_FRAME;

/************************************************************/
/* Node Add Status 2byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_NODE_ADD_STATUS_2BYTE_V2_FRAME;

/************************************************************/
/* Node Add Status 3byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_NODE_ADD_STATUS_3BYTE_V2_FRAME;

/************************************************************/
/* Node Add Status 4byte V2 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_NODE_ADD_STATUS_4BYTE_V2_FRAME;

/************************************************************/
/* Node Remove V2 command class structs */                  
/************************************************************/
typedef struct _ZW_NODE_REMOVE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
} ZW_NODE_REMOVE_V2_FRAME;

/************************************************************/
/* Node Remove Status V2 command class structs */           
/************************************************************/
typedef struct _ZW_NODE_REMOVE_STATUS_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeid;                       /**/
} ZW_NODE_REMOVE_STATUS_V2_FRAME;

/************************************************************/
/* Failed Node Replace V2 command class structs */          
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
    uint8_t   txOptions;                    /**/
    uint8_t   mode;                         /**/
} ZW_FAILED_NODE_REPLACE_V2_FRAME;

/************************************************************/
/* Failed Node Replace Status V2 command class structs */   
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_STATUS_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_FAILED_NODE_REPLACE_STATUS_V2_FRAME;

/************************************************************/
/* Node Neighbor Update Request V2 command class structs */ 
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V2_FRAME;

/************************************************************/
/* Node Neighbor Update Status V2 command class structs */  
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_STATUS_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_STATUS_V2_FRAME;

/************************************************************/
/* Return Route Assign V2 command class structs */          
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   sourceNodeId;                 /**/
    uint8_t   destinationNodeId;            /**/
} ZW_RETURN_ROUTE_ASSIGN_V2_FRAME;

/************************************************************/
/* Return Route Assign Complete V2 command class structs */ 
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V2_FRAME;

/************************************************************/
/* Return Route Delete V2 command class structs */          
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_RETURN_ROUTE_DELETE_V2_FRAME;

/************************************************************/
/* Return Route Delete Complete V2 command class structs */ 
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_COMPLETE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_DELETE_COMPLETE_V2_FRAME;

/************************************************************/
/* Node Add Keys Report V2 command class structs */         
/************************************************************/
typedef struct _ZW_NODE_ADD_KEYS_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   requestedKeys;                /**/
} ZW_NODE_ADD_KEYS_REPORT_V2_FRAME;

/************************************************************/
/* Node Add Keys Set V2 command class structs */            
/************************************************************/
typedef struct _ZW_NODE_ADD_KEYS_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
} ZW_NODE_ADD_KEYS_SET_V2_FRAME;

/************************************************************/
/* Node Add Dsk Report V2 command class structs */          
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         
    uint8_t   dsk5;                         
    uint8_t   dsk6;                         
    uint8_t   dsk7;                         
    uint8_t   dsk8;                         
    uint8_t   dsk9;                         
    uint8_t   dsk10;                        
    uint8_t   dsk11;                        
    uint8_t   dsk12;                        
    uint8_t   dsk13;                        
    uint8_t   dsk14;                        
    uint8_t   dsk15;                        
    uint8_t   dsk16;                        /* LSB */
} ZW_NODE_ADD_DSK_REPORT_V2_FRAME;

/************************************************************/
/* Node Add Dsk Set 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    
} ZW_NODE_ADD_DSK_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Node Add Dsk Set 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Node Add Dsk Set 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    
    uint8_t   inputDsk3;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Node Add Dsk Set 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    
    uint8_t   inputDsk3;                    
    uint8_t   inputDsk4;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Failed Node Remove V3 command class structs */           
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REMOVE_V3_FRAME;

/************************************************************/
/* Failed Node Remove Status V3 command class structs */    
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_STATUS_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
} ZW_FAILED_NODE_REMOVE_STATUS_V3_FRAME;

/************************************************************/
/* Node Add V3 command class structs */                     
/************************************************************/
typedef struct _ZW_NODE_ADD_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
    uint8_t   txOptions;                    /**/
} ZW_NODE_ADD_V3_FRAME;

/************************************************************/
/* Node Add Status 1byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_NODE_ADD_STATUS_1BYTE_V3_FRAME;

/************************************************************/
/* Node Add Status 2byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_NODE_ADD_STATUS_2BYTE_V3_FRAME;

/************************************************************/
/* Node Add Status 3byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_NODE_ADD_STATUS_3BYTE_V3_FRAME;

/************************************************************/
/* Node Add Status 4byte V3 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_NODE_ADD_STATUS_4BYTE_V3_FRAME;

/************************************************************/
/* Node Remove V3 command class structs */                  
/************************************************************/
typedef struct _ZW_NODE_REMOVE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
} ZW_NODE_REMOVE_V3_FRAME;

/************************************************************/
/* Node Remove Status V3 command class structs */           
/************************************************************/
typedef struct _ZW_NODE_REMOVE_STATUS_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeid;                       /**/
} ZW_NODE_REMOVE_STATUS_V3_FRAME;

/************************************************************/
/* Failed Node Replace V3 command class structs */          
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
    uint8_t   txOptions;                    /**/
    uint8_t   mode;                         /**/
} ZW_FAILED_NODE_REPLACE_V3_FRAME;

/************************************************************/
/* Failed Node Replace Status V3 command class structs */   
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_STATUS_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_FAILED_NODE_REPLACE_STATUS_V3_FRAME;

/************************************************************/
/* Node Neighbor Update Request V3 command class structs */ 
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V3_FRAME;

/************************************************************/
/* Node Neighbor Update Status V3 command class structs */  
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_STATUS_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_STATUS_V3_FRAME;

/************************************************************/
/* Return Route Assign V3 command class structs */          
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   sourceNodeId;                 /**/
    uint8_t   destinationNodeId;            /**/
} ZW_RETURN_ROUTE_ASSIGN_V3_FRAME;

/************************************************************/
/* Return Route Assign Complete V3 command class structs */ 
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V3_FRAME;

/************************************************************/
/* Return Route Delete V3 command class structs */          
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_RETURN_ROUTE_DELETE_V3_FRAME;

/************************************************************/
/* Return Route Delete Complete V3 command class structs */ 
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_COMPLETE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_DELETE_COMPLETE_V3_FRAME;

/************************************************************/
/* Node Add Keys Report V3 command class structs */         
/************************************************************/
typedef struct _ZW_NODE_ADD_KEYS_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   requestedKeys;                /**/
} ZW_NODE_ADD_KEYS_REPORT_V3_FRAME;

/************************************************************/
/* Node Add Keys Set V3 command class structs */            
/************************************************************/
typedef struct _ZW_NODE_ADD_KEYS_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
} ZW_NODE_ADD_KEYS_SET_V3_FRAME;

/************************************************************/
/* Node Add Dsk Report V3 command class structs */          
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         
    uint8_t   dsk5;                         
    uint8_t   dsk6;                         
    uint8_t   dsk7;                         
    uint8_t   dsk8;                         
    uint8_t   dsk9;                         
    uint8_t   dsk10;                        
    uint8_t   dsk11;                        
    uint8_t   dsk12;                        
    uint8_t   dsk13;                        
    uint8_t   dsk14;                        
    uint8_t   dsk15;                        
    uint8_t   dsk16;                        /* LSB */
} ZW_NODE_ADD_DSK_REPORT_V3_FRAME;

/************************************************************/
/* Node Add Dsk Set 1byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    
} ZW_NODE_ADD_DSK_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Node Add Dsk Set 2byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Node Add Dsk Set 3byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    
    uint8_t   inputDsk3;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Node Add Dsk Set 4byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    
    uint8_t   inputDsk3;                    
    uint8_t   inputDsk4;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Smart Start Join Started Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_SMART_START_JOIN_STARTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Smart Start Join Started Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_SMART_START_JOIN_STARTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Smart Start Join Started Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_SMART_START_JOIN_STARTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Smart Start Join Started Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_SMART_START_JOIN_STARTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Included Nif Report 1byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_INCLUDED_NIF_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Included Nif Report 2byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_INCLUDED_NIF_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Included Nif Report 3byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_INCLUDED_NIF_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Included Nif Report 4byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_INCLUDED_NIF_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Failed Node Remove V4 command class structs */           
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_FAILED_NODE_REMOVE_V4_FRAME;

/************************************************************/
/* Failed Node Remove Status V4 command class structs */    
/************************************************************/
typedef struct _ZW_FAILED_NODE_REMOVE_STATUS_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_FAILED_NODE_REMOVE_STATUS_V4_FRAME;

/************************************************************/
/* Node Add V4 command class structs */                     
/************************************************************/
typedef struct _ZW_NODE_ADD_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
    uint8_t   txOptions;                    /**/
} ZW_NODE_ADD_V4_FRAME;

/************************************************************/
/* Node Add Status 1byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_NODE_ADD_STATUS_1BYTE_V4_FRAME;

/************************************************************/
/* Node Add Status 2byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_NODE_ADD_STATUS_2BYTE_V4_FRAME;

/************************************************************/
/* Node Add Status 3byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_NODE_ADD_STATUS_3BYTE_V4_FRAME;

/************************************************************/
/* Node Add Status 4byte V4 command class structs */        
/************************************************************/
typedef struct _ZW_NODE_ADD_STATUS_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved1;                    /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_NODE_ADD_STATUS_4BYTE_V4_FRAME;

/************************************************************/
/* Node Remove V4 command class structs */                  
/************************************************************/
typedef struct _ZW_NODE_REMOVE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
} ZW_NODE_REMOVE_V4_FRAME;

/************************************************************/
/* Node Remove Status V4 command class structs */           
/************************************************************/
typedef struct _ZW_NODE_REMOVE_STATUS_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeid;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_NODE_REMOVE_STATUS_V4_FRAME;

/************************************************************/
/* Failed Node Replace V4 command class structs */          
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
    uint8_t   txOptions;                    /**/
    uint8_t   mode;                         /**/
} ZW_FAILED_NODE_REPLACE_V4_FRAME;

/************************************************************/
/* Failed Node Replace Status V4 command class structs */   
/************************************************************/
typedef struct _ZW_FAILED_NODE_REPLACE_STATUS_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   nodeId;                       /**/
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_FAILED_NODE_REPLACE_STATUS_V4_FRAME;

/************************************************************/
/* Node Neighbor Update Request V4 command class structs */ 
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_REQUEST_V4_FRAME;

/************************************************************/
/* Node Neighbor Update Status V4 command class structs */  
/************************************************************/
typedef struct _ZW_NODE_NEIGHBOR_UPDATE_STATUS_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_NODE_NEIGHBOR_UPDATE_STATUS_V4_FRAME;

/************************************************************/
/* Return Route Assign V4 command class structs */          
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   sourceNodeId;                 /**/
    uint8_t   destinationNodeId;            /**/
} ZW_RETURN_ROUTE_ASSIGN_V4_FRAME;

/************************************************************/
/* Return Route Assign Complete V4 command class structs */ 
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_ASSIGN_COMPLETE_V4_FRAME;

/************************************************************/
/* Return Route Delete V4 command class structs */          
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   nodeId;                       /**/
} ZW_RETURN_ROUTE_DELETE_V4_FRAME;

/************************************************************/
/* Return Route Delete Complete V4 command class structs */ 
/************************************************************/
typedef struct _ZW_RETURN_ROUTE_DELETE_COMPLETE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
} ZW_RETURN_ROUTE_DELETE_COMPLETE_V4_FRAME;

/************************************************************/
/* Node Add Keys Report V4 command class structs */         
/************************************************************/
typedef struct _ZW_NODE_ADD_KEYS_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   requestedKeys;                /**/
} ZW_NODE_ADD_KEYS_REPORT_V4_FRAME;

/************************************************************/
/* Node Add Keys Set V4 command class structs */            
/************************************************************/
typedef struct _ZW_NODE_ADD_KEYS_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   grantedKeys;                  /**/
} ZW_NODE_ADD_KEYS_SET_V4_FRAME;

/************************************************************/
/* Node Add Dsk Report V4 command class structs */          
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         
    uint8_t   dsk5;                         
    uint8_t   dsk6;                         
    uint8_t   dsk7;                         
    uint8_t   dsk8;                         
    uint8_t   dsk9;                         
    uint8_t   dsk10;                        
    uint8_t   dsk11;                        
    uint8_t   dsk12;                        
    uint8_t   dsk13;                        
    uint8_t   dsk14;                        
    uint8_t   dsk15;                        
    uint8_t   dsk16;                        /* LSB */
} ZW_NODE_ADD_DSK_REPORT_V4_FRAME;

/************************************************************/
/* Node Add Dsk Set 1byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    
} ZW_NODE_ADD_DSK_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Node Add Dsk Set 2byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Node Add Dsk Set 3byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    
    uint8_t   inputDsk3;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Node Add Dsk Set 4byte V4 command class structs */       
/************************************************************/
typedef struct _ZW_NODE_ADD_DSK_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   inputDsk1;                    /* MSB */
    uint8_t   inputDsk2;                    
    uint8_t   inputDsk3;                    
    uint8_t   inputDsk4;                    /* LSB */
} ZW_NODE_ADD_DSK_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Smart Start Join Started Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_SMART_START_JOIN_STARTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Smart Start Join Started Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_SMART_START_JOIN_STARTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Smart Start Join Started Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_SMART_START_JOIN_STARTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Smart Start Join Started Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SMART_START_JOIN_STARTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_SMART_START_JOIN_STARTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Included Nif Report 1byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_INCLUDED_NIF_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Included Nif Report 2byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_INCLUDED_NIF_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Included Nif Report 3byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_INCLUDED_NIF_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Included Nif Report 4byte V4 command class structs */    
/************************************************************/
typedef struct _ZW_INCLUDED_NIF_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_INCLUDED_NIF_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Extended Node Add Status 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_NODE_ADD_STATUS_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   assignedNodeid1;              /* MSB */
    uint8_t   assignedNodeid2;              /* LSB */
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_EXTENDED_NODE_ADD_STATUS_1BYTE_V4_FRAME;

/************************************************************/
/* Extended Node Add Status 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_NODE_ADD_STATUS_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   assignedNodeid1;              /* MSB */
    uint8_t   assignedNodeid2;              /* LSB */
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_EXTENDED_NODE_ADD_STATUS_2BYTE_V4_FRAME;

/************************************************************/
/* Extended Node Add Status 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_NODE_ADD_STATUS_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   assignedNodeid1;              /* MSB */
    uint8_t   assignedNodeid2;              /* LSB */
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_EXTENDED_NODE_ADD_STATUS_3BYTE_V4_FRAME;

/************************************************************/
/* Extended Node Add Status 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_NODE_ADD_STATUS_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   assignedNodeid1;              /* MSB */
    uint8_t   assignedNodeid2;              /* LSB */
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
    uint8_t   grantedKeys;                  /**/
    uint8_t   kexFailType;                  /**/
} ZW_EXTENDED_NODE_ADD_STATUS_4BYTE_V4_FRAME;

/************************************************************/
/* Node Naming Node Location Report command class structs */
/************************************************************/
typedef struct _ZW_NODE_NAMING_NODE_LOCATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   nodeLocationChar1;            /* MSB */
    uint8_t   nodeLocationChar2;            
    uint8_t   nodeLocationChar3;            
    uint8_t   nodeLocationChar4;            
    uint8_t   nodeLocationChar5;            
    uint8_t   nodeLocationChar6;            
    uint8_t   nodeLocationChar7;            
    uint8_t   nodeLocationChar8;            
    uint8_t   nodeLocationChar9;            
    uint8_t   nodeLocationChar10;           
    uint8_t   nodeLocationChar11;           
    uint8_t   nodeLocationChar12;           
    uint8_t   nodeLocationChar13;           
    uint8_t   nodeLocationChar14;           
    uint8_t   nodeLocationChar15;           
    uint8_t   nodeLocationChar16;           /* LSB */
} ZW_NODE_NAMING_NODE_LOCATION_REPORT_FRAME;

/************************************************************/
/* Node Naming Node Location Set command class structs */   
/************************************************************/
typedef struct _ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   nodeLocationChar1;            /* MSB */
    uint8_t   nodeLocationChar2;            
    uint8_t   nodeLocationChar3;            
    uint8_t   nodeLocationChar4;            
    uint8_t   nodeLocationChar5;            
    uint8_t   nodeLocationChar6;            
    uint8_t   nodeLocationChar7;            
    uint8_t   nodeLocationChar8;            
    uint8_t   nodeLocationChar9;            
    uint8_t   nodeLocationChar10;           
    uint8_t   nodeLocationChar11;           
    uint8_t   nodeLocationChar12;           
    uint8_t   nodeLocationChar13;           
    uint8_t   nodeLocationChar14;           
    uint8_t   nodeLocationChar15;           
    uint8_t   nodeLocationChar16;           /* LSB */
} ZW_NODE_NAMING_NODE_LOCATION_SET_FRAME;

/************************************************************/
/* Node Naming Node Location Get command class structs */   
/************************************************************/
typedef struct _ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NODE_NAMING_NODE_LOCATION_GET_FRAME;

/************************************************************/
/* Node Naming Node Name Get command class structs */       
/************************************************************/
typedef struct _ZW_NODE_NAMING_NODE_NAME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NODE_NAMING_NODE_NAME_GET_FRAME;

/************************************************************/
/* Node Naming Node Name Report command class structs */    
/************************************************************/
typedef struct _ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   nodeNameChar1;                /* MSB */
    uint8_t   nodeNameChar2;                
    uint8_t   nodeNameChar3;                
    uint8_t   nodeNameChar4;                
    uint8_t   nodeNameChar5;                
    uint8_t   nodeNameChar6;                
    uint8_t   nodeNameChar7;                
    uint8_t   nodeNameChar8;                
    uint8_t   nodeNameChar9;                
    uint8_t   nodeNameChar10;               
    uint8_t   nodeNameChar11;               
    uint8_t   nodeNameChar12;               
    uint8_t   nodeNameChar13;               
    uint8_t   nodeNameChar14;               
    uint8_t   nodeNameChar15;               
    uint8_t   nodeNameChar16;               /* LSB */
} ZW_NODE_NAMING_NODE_NAME_REPORT_FRAME;

/************************************************************/
/* Node Naming Node Name Set command class structs */       
/************************************************************/
typedef struct _ZW_NODE_NAMING_NODE_NAME_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   nodeNameChar1;                /* MSB */
    uint8_t   nodeNameChar2;                
    uint8_t   nodeNameChar3;                
    uint8_t   nodeNameChar4;                
    uint8_t   nodeNameChar5;                
    uint8_t   nodeNameChar6;                
    uint8_t   nodeNameChar7;                
    uint8_t   nodeNameChar8;                
    uint8_t   nodeNameChar9;                
    uint8_t   nodeNameChar10;               
    uint8_t   nodeNameChar11;               
    uint8_t   nodeNameChar12;               
    uint8_t   nodeNameChar13;               
    uint8_t   nodeNameChar14;               
    uint8_t   nodeNameChar15;               
    uint8_t   nodeNameChar16;               /* LSB */
} ZW_NODE_NAMING_NODE_NAME_SET_FRAME;

/************************************************************/
/* Powerlevel Get command class structs */                  
/************************************************************/
typedef struct _ZW_POWERLEVEL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_POWERLEVEL_GET_FRAME;

/************************************************************/
/* Powerlevel Report command class structs */               
/************************************************************/
typedef struct _ZW_POWERLEVEL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   powerLevel;                   /**/
    uint8_t   timeout;                      /**/
} ZW_POWERLEVEL_REPORT_FRAME;

/************************************************************/
/* Powerlevel Set command class structs */                  
/************************************************************/
typedef struct _ZW_POWERLEVEL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   powerLevel;                   /**/
    uint8_t   timeout;                      /**/
} ZW_POWERLEVEL_SET_FRAME;

/************************************************************/
/* Powerlevel Test Node Get command class structs */        
/************************************************************/
typedef struct _ZW_POWERLEVEL_TEST_NODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_POWERLEVEL_TEST_NODE_GET_FRAME;

/************************************************************/
/* Powerlevel Test Node Report command class structs */     
/************************************************************/
typedef struct _ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   testNodeid;                   /**/
    uint8_t   statusOfOperation;            /**/
    uint8_t   testFrameCount1;              /* MSB */
    uint8_t   testFrameCount2;              /* LSB */
} ZW_POWERLEVEL_TEST_NODE_REPORT_FRAME;

/************************************************************/
/* Powerlevel Test Node Set command class structs */        
/************************************************************/
typedef struct _ZW_POWERLEVEL_TEST_NODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   testNodeid;                   /**/
    uint8_t   powerLevel;                   /**/
    uint8_t   testFrameCount1;              /* MSB */
    uint8_t   testFrameCount2;              /* LSB */
} ZW_POWERLEVEL_TEST_NODE_SET_FRAME;

/************************************************************/
/* Cmd Encapsulation 1byte command class structs */         
/************************************************************/
typedef struct _ZW_CMD_ENCAPSULATION_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        
} ZW_CMD_ENCAPSULATION_1BYTE_FRAME;

/************************************************************/
/* Cmd Encapsulation 2byte command class structs */         
/************************************************************/
typedef struct _ZW_CMD_ENCAPSULATION_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_CMD_ENCAPSULATION_2BYTE_FRAME;

/************************************************************/
/* Cmd Encapsulation 3byte command class structs */         
/************************************************************/
typedef struct _ZW_CMD_ENCAPSULATION_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_CMD_ENCAPSULATION_3BYTE_FRAME;

/************************************************************/
/* Cmd Encapsulation 4byte command class structs */         
/************************************************************/
typedef struct _ZW_CMD_ENCAPSULATION_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_CMD_ENCAPSULATION_4BYTE_FRAME;

/************************************************************/
/* Prepayment Balance Get command class structs */          
/************************************************************/
typedef struct _ZW_PREPAYMENT_BALANCE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_PREPAYMENT_BALANCE_GET_FRAME;

/************************************************************/
/* Prepayment Balance Report command class structs */       
/************************************************************/
typedef struct _ZW_PREPAYMENT_BALANCE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   balanceValue1;                /* MSB */
    uint8_t   balanceValue2;                
    uint8_t   balanceValue3;                
    uint8_t   balanceValue4;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   debt1;                        /* MSB */
    uint8_t   debt2;                        
    uint8_t   debt3;                        
    uint8_t   debt4;                        /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   emerCredit1;                  /* MSB */
    uint8_t   emerCredit2;                  
    uint8_t   emerCredit3;                  
    uint8_t   emerCredit4;                  /* LSB */
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   debtRecoveryPercentage;       /**/
} ZW_PREPAYMENT_BALANCE_REPORT_FRAME;

/************************************************************/
/* Prepayment Supported Get command class structs */        
/************************************************************/
typedef struct _ZW_PREPAYMENT_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_PREPAYMENT_SUPPORTED_GET_FRAME;

/************************************************************/
/* Prepayment Supported Report command class structs */     
/************************************************************/
typedef struct _ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_PREPAYMENT_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Proprietary Get 1byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_GET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        
} ZW_PROPRIETARY_GET_1BYTE_FRAME;

/************************************************************/
/* Proprietary Get 2byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_GET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_PROPRIETARY_GET_2BYTE_FRAME;

/************************************************************/
/* Proprietary Get 3byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_GET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_PROPRIETARY_GET_3BYTE_FRAME;

/************************************************************/
/* Proprietary Get 4byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_GET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_PROPRIETARY_GET_4BYTE_FRAME;

/************************************************************/
/* Proprietary Report 1byte command class structs */        
/************************************************************/
typedef struct _ZW_PROPRIETARY_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        
} ZW_PROPRIETARY_REPORT_1BYTE_FRAME;

/************************************************************/
/* Proprietary Report 2byte command class structs */        
/************************************************************/
typedef struct _ZW_PROPRIETARY_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_PROPRIETARY_REPORT_2BYTE_FRAME;

/************************************************************/
/* Proprietary Report 3byte command class structs */        
/************************************************************/
typedef struct _ZW_PROPRIETARY_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_PROPRIETARY_REPORT_3BYTE_FRAME;

/************************************************************/
/* Proprietary Report 4byte command class structs */        
/************************************************************/
typedef struct _ZW_PROPRIETARY_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_PROPRIETARY_REPORT_4BYTE_FRAME;

/************************************************************/
/* Proprietary Set 1byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        
} ZW_PROPRIETARY_SET_1BYTE_FRAME;

/************************************************************/
/* Proprietary Set 2byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_PROPRIETARY_SET_2BYTE_FRAME;

/************************************************************/
/* Proprietary Set 3byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_PROPRIETARY_SET_3BYTE_FRAME;

/************************************************************/
/* Proprietary Set 4byte command class structs */           
/************************************************************/
typedef struct _ZW_PROPRIETARY_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_PROPRIETARY_SET_4BYTE_FRAME;

/************************************************************/
/* Protection Get command class structs */                  
/************************************************************/
typedef struct _ZW_PROTECTION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_PROTECTION_GET_FRAME;

/************************************************************/
/* Protection Report command class structs */               
/************************************************************/
typedef struct _ZW_PROTECTION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   protectionState;              /**/
} ZW_PROTECTION_REPORT_FRAME;

/************************************************************/
/* Protection Set command class structs */                  
/************************************************************/
typedef struct _ZW_PROTECTION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   protectionState;              /**/
} ZW_PROTECTION_SET_FRAME;

/************************************************************/
/* Protection Ec Get V2 command class structs */            
/************************************************************/
typedef struct _ZW_PROTECTION_EC_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_PROTECTION_EC_GET_V2_FRAME;

/************************************************************/
/* Protection Ec Report V2 command class structs */         
/************************************************************/
typedef struct _ZW_PROTECTION_EC_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeId;                       /**/
} ZW_PROTECTION_EC_REPORT_V2_FRAME;

/************************************************************/
/* Protection Ec Set V2 command class structs */            
/************************************************************/
typedef struct _ZW_PROTECTION_EC_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeId;                       /**/
} ZW_PROTECTION_EC_SET_V2_FRAME;

/************************************************************/
/* Protection Get V2 command class structs */               
/************************************************************/
typedef struct _ZW_PROTECTION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_PROTECTION_GET_V2_FRAME;

/************************************************************/
/* Protection Report V2 command class structs */            
/************************************************************/
typedef struct _ZW_PROTECTION_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
} ZW_PROTECTION_REPORT_V2_FRAME;

/************************************************************/
/* Protection Set V2 command class structs */               
/************************************************************/
typedef struct _ZW_PROTECTION_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
} ZW_PROTECTION_SET_V2_FRAME;

/************************************************************/
/* Protection Supported Get V2 command class structs */     
/************************************************************/
typedef struct _ZW_PROTECTION_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_PROTECTION_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Protection Supported Report V2 command class structs */  
/************************************************************/
typedef struct _ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   localProtectionState1;        /* MSB */
    uint8_t   localProtectionState2;        /* LSB */
    uint8_t   rfProtectionState1;           /* MSB */
    uint8_t   rfProtectionState2;           /* LSB */
} ZW_PROTECTION_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Protection Timeout Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_PROTECTION_TIMEOUT_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_PROTECTION_TIMEOUT_GET_V2_FRAME;

/************************************************************/
/* Protection Timeout Report V2 command class structs */    
/************************************************************/
typedef struct _ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   timeout;                      /**/
} ZW_PROTECTION_TIMEOUT_REPORT_V2_FRAME;

/************************************************************/
/* Protection Timeout Set V2 command class structs */       
/************************************************************/
typedef struct _ZW_PROTECTION_TIMEOUT_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   timeout;                      /**/
} ZW_PROTECTION_TIMEOUT_SET_V2_FRAME;

/************************************************************/
/* Rate Tbl Remove 1byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REMOVE_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          
} ZW_RATE_TBL_REMOVE_1BYTE_FRAME;

/************************************************************/
/* Rate Tbl Remove 2byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REMOVE_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          /* MSB */
    uint8_t   rateParameterSetId2;          /* LSB */
} ZW_RATE_TBL_REMOVE_2BYTE_FRAME;

/************************************************************/
/* Rate Tbl Remove 3byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REMOVE_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          /* MSB */
    uint8_t   rateParameterSetId2;          
    uint8_t   rateParameterSetId3;          /* LSB */
} ZW_RATE_TBL_REMOVE_3BYTE_FRAME;

/************************************************************/
/* Rate Tbl Remove 4byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REMOVE_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          /* MSB */
    uint8_t   rateParameterSetId2;          
    uint8_t   rateParameterSetId3;          
    uint8_t   rateParameterSetId4;          /* LSB */
} ZW_RATE_TBL_REMOVE_4BYTE_FRAME;

/************************************************************/
/* Rate Tbl Set 1byte command class structs */              
/************************************************************/
typedef struct _ZW_RATE_TBL_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_SET_1BYTE_FRAME;

/************************************************************/
/* Rate Tbl Set 2byte command class structs */              
/************************************************************/
typedef struct _ZW_RATE_TBL_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               /* MSB */
    uint8_t   rateCharacter2;               /* LSB */
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_SET_2BYTE_FRAME;

/************************************************************/
/* Rate Tbl Set 3byte command class structs */              
/************************************************************/
typedef struct _ZW_RATE_TBL_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               /* MSB */
    uint8_t   rateCharacter2;               
    uint8_t   rateCharacter3;               /* LSB */
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_SET_3BYTE_FRAME;

/************************************************************/
/* Rate Tbl Set 4byte command class structs */              
/************************************************************/
typedef struct _ZW_RATE_TBL_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               /* MSB */
    uint8_t   rateCharacter2;               
    uint8_t   rateCharacter3;               
    uint8_t   rateCharacter4;               /* LSB */
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_SET_4BYTE_FRAME;

/************************************************************/
/* Rate Tbl Active Rate Get command class structs */        
/************************************************************/
typedef struct _ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_RATE_TBL_ACTIVE_RATE_GET_FRAME;

/************************************************************/
/* Rate Tbl Active Rate Report command class structs */     
/************************************************************/
typedef struct _ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
} ZW_RATE_TBL_ACTIVE_RATE_REPORT_FRAME;

/************************************************************/
/* Rate Tbl Current Data Get command class structs */       
/************************************************************/
typedef struct _ZW_RATE_TBL_CURRENT_DATA_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   datasetRequested1;            /* MSB */
    uint8_t   datasetRequested2;            
    uint8_t   datasetRequested3;            /* LSB */
} ZW_RATE_TBL_CURRENT_DATA_GET_FRAME;

/************************************************************/
/* Rate Tbl Current Data Report variant group structs */    
/************************************************************/
typedef struct _VG_RATE_TBL_CURRENT_DATA_REPORT_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   currentValue1;                /* MSB */
    uint8_t   currentValue2;                
    uint8_t   currentValue3;                
    uint8_t   currentValue4;                /* LSB */
} VG_RATE_TBL_CURRENT_DATA_REPORT_VG;

/************************************************************/
/* Rate Tbl Current Data Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
} ZW_RATE_TBL_CURRENT_DATA_REPORT_1BYTE_FRAME;

/************************************************************/
/* Rate Tbl Current Data Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
} ZW_RATE_TBL_CURRENT_DATA_REPORT_2BYTE_FRAME;

/************************************************************/
/* Rate Tbl Current Data Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
} ZW_RATE_TBL_CURRENT_DATA_REPORT_3BYTE_FRAME;

/************************************************************/
/* Rate Tbl Current Data Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup1;                /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup2;                /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup3;                /**/
    VG_RATE_TBL_CURRENT_DATA_REPORT_VG variantgroup4;                /**/
} ZW_RATE_TBL_CURRENT_DATA_REPORT_4BYTE_FRAME;

/************************************************************/
/* Rate Tbl Get command class structs */                    
/************************************************************/
typedef struct _ZW_RATE_TBL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
} ZW_RATE_TBL_GET_FRAME;

/************************************************************/
/* Rate Tbl Historical Data Get command class structs */    
/************************************************************/
typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   maximumReports;               /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   datasetRequested1;            /* MSB */
    uint8_t   datasetRequested2;            
    uint8_t   datasetRequested3;            /* LSB */
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   startSecondLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   stopSecondLocalTime;          /**/
} ZW_RATE_TBL_HISTORICAL_DATA_GET_FRAME;

/************************************************************/
/* Rate Tbl Historical Data Report variant group structs */ 
/************************************************************/
typedef struct _VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   historicalValue1;             /* MSB */
    uint8_t   historicalValue2;             
    uint8_t   historicalValue3;             
    uint8_t   historicalValue4;             /* LSB */
} VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG;

/************************************************************/
/* Rate Tbl Historical Data Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
} ZW_RATE_TBL_HISTORICAL_DATA_REPORT_1BYTE_FRAME;

/************************************************************/
/* Rate Tbl Historical Data Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
} ZW_RATE_TBL_HISTORICAL_DATA_REPORT_2BYTE_FRAME;

/************************************************************/
/* Rate Tbl Historical Data Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
} ZW_RATE_TBL_HISTORICAL_DATA_REPORT_3BYTE_FRAME;

/************************************************************/
/* Rate Tbl Historical Data Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   rateParameterSetId;           /**/
    uint8_t   dataset1;                     /* MSB */
    uint8_t   dataset2;                     
    uint8_t   dataset3;                     /* LSB */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup1;                /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup2;                /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup3;                /**/
    VG_RATE_TBL_HISTORICAL_DATA_REPORT_VG variantgroup4;                /**/
} ZW_RATE_TBL_HISTORICAL_DATA_REPORT_4BYTE_FRAME;

/************************************************************/
/* Rate Tbl Report 1byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_REPORT_1BYTE_FRAME;

/************************************************************/
/* Rate Tbl Report 2byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               /* MSB */
    uint8_t   rateCharacter2;               /* LSB */
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_REPORT_2BYTE_FRAME;

/************************************************************/
/* Rate Tbl Report 3byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               /* MSB */
    uint8_t   rateCharacter2;               
    uint8_t   rateCharacter3;               /* LSB */
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_REPORT_3BYTE_FRAME;

/************************************************************/
/* Rate Tbl Report 4byte command class structs */           
/************************************************************/
typedef struct _ZW_RATE_TBL_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateCharacter1;               /* MSB */
    uint8_t   rateCharacter2;               
    uint8_t   rateCharacter3;               
    uint8_t   rateCharacter4;               /* LSB */
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   durationMinute1;              /* MSB */
    uint8_t   durationMinute2;              /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minConsumptionValue1;         /* MSB */
    uint8_t   minConsumptionValue2;         
    uint8_t   minConsumptionValue3;         
    uint8_t   minConsumptionValue4;         /* LSB */
    uint8_t   maxConsumptionValue1;         /* MSB */
    uint8_t   maxConsumptionValue2;         
    uint8_t   maxConsumptionValue3;         
    uint8_t   maxConsumptionValue4;         /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxDemandValue1;              /* MSB */
    uint8_t   maxDemandValue2;              
    uint8_t   maxDemandValue3;              
    uint8_t   maxDemandValue4;              /* LSB */
    uint8_t   dcpRateId;                    /**/
} ZW_RATE_TBL_REPORT_4BYTE_FRAME;

/************************************************************/
/* Rate Tbl Supported Get command class structs */          
/************************************************************/
typedef struct _ZW_RATE_TBL_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_RATE_TBL_SUPPORTED_GET_FRAME;

/************************************************************/
/* Rate Tbl Supported Report command class structs */       
/************************************************************/
typedef struct _ZW_RATE_TBL_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   ratesSupported;               /**/
    uint8_t   parameterSetSupportedBitMask1;/* MSB */
    uint8_t   parameterSetSupportedBitMask2;/* LSB */
} ZW_RATE_TBL_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Remote Association Activate command class structs */     
/************************************************************/
typedef struct _ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_REMOTE_ASSOCIATION_ACTIVATE_FRAME;

/************************************************************/
/* Remote Association Configuration Get command class structs */
/************************************************************/
typedef struct _ZW_REMOTE_ASSOCIATION_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   localGroupingIdentifier;      /**/
} ZW_REMOTE_ASSOCIATION_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Remote Association Configuration Report command class structs */
/************************************************************/
typedef struct _ZW_REMOTE_ASSOCIATION_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   localGroupingIdentifier;      /**/
    uint8_t   remoteNodeid;                 /**/
    uint8_t   remoteGroupingIdentifier;     /**/
} ZW_REMOTE_ASSOCIATION_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Remote Association Configuration Set command class structs */
/************************************************************/
typedef struct _ZW_REMOTE_ASSOCIATION_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   localGroupingIdentifier;      /**/
    uint8_t   remoteNodeid;                 /**/
    uint8_t   remoteGroupingIdentifier;     /**/
} ZW_REMOTE_ASSOCIATION_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Scene Activation Set command class structs */            
/************************************************************/
typedef struct _ZW_SCENE_ACTIVATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sceneId;                      /**/
    uint8_t   dimmingDuration;              /**/
} ZW_SCENE_ACTIVATION_SET_FRAME;

/************************************************************/
/* Scene Actuator Conf Get command class structs */         
/************************************************************/
typedef struct _ZW_SCENE_ACTUATOR_CONF_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sceneId;                      /**/
} ZW_SCENE_ACTUATOR_CONF_GET_FRAME;

/************************************************************/
/* Scene Actuator Conf Report command class structs */      
/************************************************************/
typedef struct _ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sceneId;                      /**/
    uint8_t   level;                        /**/
    uint8_t   dimmingDuration;              /**/
} ZW_SCENE_ACTUATOR_CONF_REPORT_FRAME;

/************************************************************/
/* Scene Actuator Conf Set command class structs */         
/************************************************************/
typedef struct _ZW_SCENE_ACTUATOR_CONF_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sceneId;                      /**/
    uint8_t   dimmingDuration;              /**/
    uint8_t   level2;                       /* masked byte */
    uint8_t   level;                        /**/
} ZW_SCENE_ACTUATOR_CONF_SET_FRAME;

/************************************************************/
/* Scene Controller Conf Get command class structs */       
/************************************************************/
typedef struct _ZW_SCENE_CONTROLLER_CONF_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupId;                      /**/
} ZW_SCENE_CONTROLLER_CONF_GET_FRAME;

/************************************************************/
/* Scene Controller Conf Report command class structs */    
/************************************************************/
typedef struct _ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupId;                      /**/
    uint8_t   sceneId;                      /**/
    uint8_t   dimmingDuration;              /**/
} ZW_SCENE_CONTROLLER_CONF_REPORT_FRAME;

/************************************************************/
/* Scene Controller Conf Set command class structs */       
/************************************************************/
typedef struct _ZW_SCENE_CONTROLLER_CONF_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupId;                      /**/
    uint8_t   sceneId;                      /**/
    uint8_t   dimmingDuration;              /**/
} ZW_SCENE_CONTROLLER_CONF_SET_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable All Set command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable Set command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Get command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Report command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Set command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Get command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Report command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Set command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Get command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Report command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSlotsWeekDay;         /**/
    uint8_t   numberOfSlotsYearDay;         /**/
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable All Set V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable Set V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Set V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Set V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Set V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V2_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSlotsWeekDay;         /**/
    uint8_t   numberOfSlotsYearDay;         /**/
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable All Set V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable Set V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Set V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Set V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Set V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V3_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSlotsWeekDay;         /**/
    uint8_t   numberOfSlotsYearDay;         /**/
    uint8_t   numberOfSlotsDailyRepeating;  /**/
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Daily Repeating Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Daily Repeating Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   weekDayBitmask;               /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   durationHour;                 /**/
    uint8_t   durationMinute;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Daily Repeating Set V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   weekDayBitmask;               /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   durationHour;                 /**/
    uint8_t   durationMinute;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V3_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable All Set V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_ALL_SET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Enable Set V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   enabled;                      /**/
} ZW_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_GET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Report V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_REPORT_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Time Offset Set V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
} ZW_SCHEDULE_ENTRY_LOCK_TIME_OFFSET_SET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_GET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Report V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_REPORT_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Week Day Set V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_GET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Report V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_REPORT_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Year Day Set V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SET_V4_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Schedule Entry Type Supported Report V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSlotsWeekDay;         /**/
    uint8_t   numberOfSlotsYearDay;         /**/
    uint8_t   numberOfSlotsDailyRepeating;  /**/
} ZW_SCHEDULE_ENTRY_TYPE_SUPPORTED_REPORT_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Daily Repeating Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Daily Repeating Report V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   weekDayBitmask;               /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   durationHour;                 /**/
    uint8_t   durationMinute;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4_FRAME;

/************************************************************/
/* Schedule Entry Lock Daily Repeating Set V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   weekDayBitmask;               /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   durationHour;                 /**/
    uint8_t   durationMinute;               /**/
} ZW_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Enable Set V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_ENABLE_SET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Week Day Schedule Set V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_SET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Week Day Schedule Get V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_GET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Week Day Schedule Report V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   dayOfWeek;                    /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_WEEK_DAY_SCHEDULE_REPORT_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Year Day Schedule Set V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_SET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Year Day Schedule Get V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_GET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Year Day Schedule Report V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   stopYear;                     /**/
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHour;                     /**/
    uint8_t   stopMinute;                   /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_YEAR_DAY_SCHEDULE_REPORT_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Daily Repeating Set V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setAction;                    /**/
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   weekDayBitmask;               /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   durationHour;                 /**/
    uint8_t   durationMinute;               /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_SET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Daily Repeating Get V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_GET_V4_FRAME;

/************************************************************/
/* Extended Schedule Entry Lock Daily Repeating Report V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifierMsb;            /**/
    uint8_t   userIdentifierLsb;            /**/
    uint8_t   scheduleSlotId;               /**/
    uint8_t   weekDayBitmask;               /**/
    uint8_t   startHour;                    /**/
    uint8_t   startMinute;                  /**/
    uint8_t   durationHour;                 /**/
    uint8_t   durationMinute;               /**/
} ZW_EXTENDED_SCHEDULE_ENTRY_LOCK_DAILY_REPEATING_REPORT_V4_FRAME;

/************************************************************/
/* Screen Attributes Get command class structs */           
/************************************************************/
typedef struct _ZW_SCREEN_ATTRIBUTES_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCREEN_ATTRIBUTES_GET_FRAME;

/************************************************************/
/* Screen Attributes Report command class structs */        
/************************************************************/
typedef struct _ZW_SCREEN_ATTRIBUTES_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfCharactersPerLine;    /**/
    uint8_t   sizeOfLineBuffer;             /**/
    uint8_t   numericalPresentationOfACharacter;/**/
} ZW_SCREEN_ATTRIBUTES_REPORT_FRAME;

/************************************************************/
/* Screen Attributes Get V2 command class structs */        
/************************************************************/
typedef struct _ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCREEN_ATTRIBUTES_GET_V2_FRAME;

/************************************************************/
/* Screen Attributes Report V2 command class structs */     
/************************************************************/
typedef struct _ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfCharactersPerLine;    /**/
    uint8_t   sizeOfLineBuffer;             /**/
    uint8_t   numericalPresentationOfACharacter;/**/
    uint8_t   screenTimeout;                /**/
} ZW_SCREEN_ATTRIBUTES_REPORT_V2_FRAME;

/************************************************************/
/* Screen Attributes Report Legacy V2 command class structs */
/************************************************************/
typedef struct _ZW_SCREEN_ATTRIBUTES_REPORT_LEGACY_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfCharactersPerLine;    /**/
    uint8_t   sizeOfLineBuffer;             /**/
    uint8_t   numericalPresentationOfACharacter;/**/
    uint8_t   screenTimeout;                /**/
} ZW_SCREEN_ATTRIBUTES_REPORT_LEGACY_V2_FRAME;

/************************************************************/
/* Screen Md Get command class structs */                   
/************************************************************/
typedef struct _ZW_SCREEN_MD_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   nodeId;                       /**/
} ZW_SCREEN_MD_GET_FRAME;

/************************************************************/
/* Screen Md Report variant group structs */                
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_1BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   
} VG_SCREEN_MD_REPORT_1BYTE_VG;

/************************************************************/
/* Screen Md Report variant group structs */                
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_2BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   /* LSB */
} VG_SCREEN_MD_REPORT_2BYTE_VG;

/************************************************************/
/* Screen Md Report variant group structs */                
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_3BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   
    uint8_t   character3;                   /* LSB */
} VG_SCREEN_MD_REPORT_3BYTE_VG;

/************************************************************/
/* Screen Md Report variant group structs */                
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_4BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   
    uint8_t   character3;                   
    uint8_t   character4;                   /* LSB */
} VG_SCREEN_MD_REPORT_4BYTE_VG;

/************************************************************/
/* Screen Md Report 1byte command class structs */          
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_SCREEN_MD_REPORT_1BYTE_FRAME;

/************************************************************/
/* Screen Md Report 2byte command class structs */          
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_SCREEN_MD_REPORT_2BYTE_FRAME;

/************************************************************/
/* Screen Md Report 3byte command class structs */          
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_SCREEN_MD_REPORT_3BYTE_FRAME;

/************************************************************/
/* Screen Md Report 4byte command class structs */          
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_SCREEN_MD_REPORT_4BYTE_FRAME;

/************************************************************/
/* Screen Md Get V2 command class structs */                
/************************************************************/
typedef struct _ZW_SCREEN_MD_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
    uint8_t   nodeId;                       /**/
} ZW_SCREEN_MD_GET_V2_FRAME;

/************************************************************/
/* Screen Md Report V2 variant group structs */             
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_1BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   
} VG_SCREEN_MD_REPORT_1BYTE_V2_VG;

/************************************************************/
/* Screen Md Report V2 variant group structs */             
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_2BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   /* LSB */
} VG_SCREEN_MD_REPORT_2BYTE_V2_VG;

/************************************************************/
/* Screen Md Report V2 variant group structs */             
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_3BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   
    uint8_t   character3;                   /* LSB */
} VG_SCREEN_MD_REPORT_3BYTE_V2_VG;

/************************************************************/
/* Screen Md Report V2 variant group structs */             
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_4BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   
    uint8_t   character3;                   
    uint8_t   character4;                   /* LSB */
} VG_SCREEN_MD_REPORT_4BYTE_V2_VG;

/************************************************************/
/* Screen Md Report 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    VG_SCREEN_MD_REPORT_4BYTE_V2_VG variantgroup4;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report Legacy V2 variant group structs */      
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_LEGACY_1BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   
} VG_SCREEN_MD_REPORT_LEGACY_1BYTE_V2_VG;

/************************************************************/
/* Screen Md Report Legacy V2 variant group structs */      
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_LEGACY_2BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   /* LSB */
} VG_SCREEN_MD_REPORT_LEGACY_2BYTE_V2_VG;

/************************************************************/
/* Screen Md Report Legacy V2 variant group structs */      
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_LEGACY_3BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   
    uint8_t   character3;                   /* LSB */
} VG_SCREEN_MD_REPORT_LEGACY_3BYTE_V2_VG;

/************************************************************/
/* Screen Md Report Legacy V2 variant group structs */      
/************************************************************/
typedef struct _VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   characterPosition;            /**/
    uint8_t   numberOfCharacters;           /**/
    uint8_t   character1;                   /* MSB */
    uint8_t   character2;                   
    uint8_t   character3;                   
    uint8_t   character4;                   /* LSB */
} VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG;

/************************************************************/
/* Screen Md Report Legacy 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_LEGACY_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup1;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_LEGACY_1BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report Legacy 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_LEGACY_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup2;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_LEGACY_2BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report Legacy 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_LEGACY_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup2;                /**/
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup3;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_LEGACY_3BYTE_V2_FRAME;

/************************************************************/
/* Screen Md Report Legacy 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup1;                /**/
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup2;                /**/
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup3;                /**/
    VG_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_VG variantgroup4;                /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_SCREEN_MD_REPORT_LEGACY_4BYTE_V2_FRAME;

/************************************************************/
/* Security Panel Mode Get command class structs */         
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_PANEL_MODE_GET_FRAME;

/************************************************************/
/* Security Panel Mode Report command class structs */      
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_SECURITY_PANEL_MODE_REPORT_FRAME;

/************************************************************/
/* Security Panel Mode Set command class structs */         
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_SECURITY_PANEL_MODE_SET_FRAME;

/************************************************************/
/* Security Panel Mode Supported Get command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_PANEL_MODE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Security Panel Mode Supported Report command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_MODE_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedModeBitMask1;        /* MSB */
    uint8_t   supportedModeBitMask2;        /* LSB */
} ZW_SECURITY_PANEL_MODE_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Security Panel Zone Sensor Installed Report command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   numberOfSensors;              /**/
} ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_REPORT_FRAME;

/************************************************************/
/* Security Panel Zone Sensor Type Get command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   sensorNumber;                 /**/
} ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_GET_FRAME;

/************************************************************/
/* Security Panel Zone Sensor Type Report command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   sensorNumber;                 /**/
    uint8_t   zwaveAlarmType;               /**/
} ZW_SECURITY_PANEL_ZONE_SENSOR_TYPE_REPORT_FRAME;

/************************************************************/
/* Security Panel Zone Sensor Installed Get command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
} ZW_SECURITY_PANEL_ZONE_SENSOR_INSTALLED_GET_FRAME;

/************************************************************/
/* Security Panel Zone Sensor State Get command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   sensorNumber;                 /**/
} ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_GET_FRAME;

/************************************************************/
/* Security Panel Zone Sensor State Report command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   sensorNumber;                 /**/
    uint8_t   zwaveAlarmType;               /**/
    uint8_t   zwaveAlarmEvent;              /**/
    uint8_t   eventParameters;              /**/
} ZW_SECURITY_PANEL_ZONE_SENSOR_STATE_REPORT_FRAME;

/************************************************************/
/* Security Panel Zone Number Supported Get command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_PANEL_ZONE_NUMBER_SUPPORTED_GET_FRAME;

/************************************************************/
/* Security Panel Zone State Get command class structs */   
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
} ZW_SECURITY_PANEL_ZONE_STATE_GET_FRAME;

/************************************************************/
/* Security Panel Zone State Report command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   zoneState;                    /**/
} ZW_SECURITY_PANEL_ZONE_STATE_REPORT_FRAME;

/************************************************************/
/* Security Panel Zone Supported Report command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameters1;                  /* masked byte */
} ZW_SECURITY_PANEL_ZONE_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Security Panel Zone Type Get command class structs */    
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
} ZW_SECURITY_PANEL_ZONE_TYPE_GET_FRAME;

/************************************************************/
/* Security Panel Zone Type Report command class structs */ 
/************************************************************/
typedef struct _ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zoneNumber;                   /**/
    uint8_t   zoneType;                     /**/
} ZW_SECURITY_PANEL_ZONE_TYPE_REPORT_FRAME;

/************************************************************/
/* Network Key Set 1byte command class structs */           
/************************************************************/
typedef struct _ZW_NETWORK_KEY_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   networkKeyByte1;              
} ZW_NETWORK_KEY_SET_1BYTE_FRAME;

/************************************************************/
/* Network Key Set 2byte command class structs */           
/************************************************************/
typedef struct _ZW_NETWORK_KEY_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   networkKeyByte1;              /* MSB */
    uint8_t   networkKeyByte2;              /* LSB */
} ZW_NETWORK_KEY_SET_2BYTE_FRAME;

/************************************************************/
/* Network Key Set 3byte command class structs */           
/************************************************************/
typedef struct _ZW_NETWORK_KEY_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   networkKeyByte1;              /* MSB */
    uint8_t   networkKeyByte2;              
    uint8_t   networkKeyByte3;              /* LSB */
} ZW_NETWORK_KEY_SET_3BYTE_FRAME;

/************************************************************/
/* Network Key Set 4byte command class structs */           
/************************************************************/
typedef struct _ZW_NETWORK_KEY_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   networkKeyByte1;              /* MSB */
    uint8_t   networkKeyByte2;              
    uint8_t   networkKeyByte3;              
    uint8_t   networkKeyByte4;              /* LSB */
} ZW_NETWORK_KEY_SET_4BYTE_FRAME;

/************************************************************/
/* Network Key Verify command class structs */              
/************************************************************/
typedef struct _ZW_NETWORK_KEY_VERIFY_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NETWORK_KEY_VERIFY_FRAME;

/************************************************************/
/* Security Commands Supported Get command class structs */ 
/************************************************************/
typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_COMMANDS_SUPPORTED_GET_FRAME;

/************************************************************/
/* Security Commands Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   commandClassSupport1;         
    uint8_t   commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all preceding command classes are supported and all following command classes are controlled.*/
    uint8_t   commandClassControl1;         
} ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Security Commands Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   commandClassSupport1;         /* MSB */
    uint8_t   commandClassSupport2;         /* LSB */
    uint8_t   commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all preceding command classes are supported and all following command classes are controlled.*/
    uint8_t   commandClassControl1;         /* MSB */
    uint8_t   commandClassControl2;         /* LSB */
} ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Security Commands Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   commandClassSupport1;         /* MSB */
    uint8_t   commandClassSupport2;         
    uint8_t   commandClassSupport3;         /* LSB */
    uint8_t   commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all preceding command classes are supported and all following command classes are controlled.*/
    uint8_t   commandClassControl1;         /* MSB */
    uint8_t   commandClassControl2;         
    uint8_t   commandClassControl3;         /* LSB */
} ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Security Commands Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    uint8_t   commandClassSupport1;         /* MSB */
    uint8_t   commandClassSupport2;         
    uint8_t   commandClassSupport3;         
    uint8_t   commandClassSupport4;         /* LSB */
    uint8_t   commandClassMark;             /*The COMMAND_CLASS_MARK is used to indicate that all preceding command classes are supported and all following command classes are controlled.*/
    uint8_t   commandClassControl1;         /* MSB */
    uint8_t   commandClassControl2;         
    uint8_t   commandClassControl3;         
    uint8_t   commandClassControl4;         /* LSB */
} ZW_SECURITY_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation 1byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_1BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation 2byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 /* LSB */
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_2BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation 3byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 /* LSB */
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_3BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation 4byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 
    uint8_t   commandByte4;                 /* LSB */
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_4BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation Nonce Get 1byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_1BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation Nonce Get 2byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 /* LSB */
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_2BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation Nonce Get 3byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 /* LSB */
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_3BYTE_FRAME;

/************************************************************/
/* Security Message Encapsulation Nonce Get 4byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   initializationVectorByte1;    /* MSB */
    uint8_t   initializationVectorByte2;    
    uint8_t   initializationVectorByte3;    
    uint8_t   initializationVectorByte4;    
    uint8_t   initializationVectorByte5;    
    uint8_t   initializationVectorByte6;    
    uint8_t   initializationVectorByte7;    
    uint8_t   initializationVectorByte8;    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   commandClassIdentifier;       /**/
    uint8_t   commandIdentifier;            /**/
    uint8_t   commandByte1;                 /* MSB */
    uint8_t   commandByte2;                 
    uint8_t   commandByte3;                 
    uint8_t   commandByte4;                 /* LSB */
    uint8_t   receiversNonceIdentifier;     /**/
    uint8_t   messageAuthenticationCodeByte1;/* MSB */
    uint8_t   messageAuthenticationCodeByte2;
    uint8_t   messageAuthenticationCodeByte3;
    uint8_t   messageAuthenticationCodeByte4;
    uint8_t   messageAuthenticationCodeByte5;
    uint8_t   messageAuthenticationCodeByte6;
    uint8_t   messageAuthenticationCodeByte7;
    uint8_t   messageAuthenticationCodeByte8;/* LSB */
} ZW_SECURITY_MESSAGE_ENCAPSULATION_NONCE_GET_4BYTE_FRAME;

/************************************************************/
/* Security Nonce Get command class structs */              
/************************************************************/
typedef struct _ZW_SECURITY_NONCE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_NONCE_GET_FRAME;

/************************************************************/
/* Security Nonce Report command class structs */           
/************************************************************/
typedef struct _ZW_SECURITY_NONCE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonceByte1;                   /* MSB */
    uint8_t   nonceByte2;                   
    uint8_t   nonceByte3;                   
    uint8_t   nonceByte4;                   
    uint8_t   nonceByte5;                   
    uint8_t   nonceByte6;                   
    uint8_t   nonceByte7;                   
    uint8_t   nonceByte8;                   /* LSB */
} ZW_SECURITY_NONCE_REPORT_FRAME;

/************************************************************/
/* Security Scheme Get command class structs */             
/************************************************************/
typedef struct _ZW_SECURITY_SCHEME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedSecuritySchemes;     /**/
} ZW_SECURITY_SCHEME_GET_FRAME;

/************************************************************/
/* Security Scheme Inherit command class structs */         
/************************************************************/
typedef struct _ZW_SECURITY_SCHEME_INHERIT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedSecuritySchemes;     /**/
} ZW_SECURITY_SCHEME_INHERIT_FRAME;

/************************************************************/
/* Security Scheme Report command class structs */          
/************************************************************/
typedef struct _ZW_SECURITY_SCHEME_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedSecuritySchemes;     /**/
} ZW_SECURITY_SCHEME_REPORT_FRAME;

/************************************************************/
/* Sensor Alarm Get command class structs */                
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_ALARM_GET_FRAME;

/************************************************************/
/* Sensor Alarm Report command class structs */             
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sourceNodeId;                 /**/
    uint8_t   sensorType;                   /**/
    uint8_t   sensorState;                  /**/
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     /* LSB */
} ZW_SENSOR_ALARM_REPORT_FRAME;

/************************************************************/
/* Sensor Alarm Supported Get command class structs */      
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_ALARM_SUPPORTED_GET_FRAME;

/************************************************************/
/* Sensor Alarm Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     
} ZW_SENSOR_ALARM_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Sensor Alarm Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_ALARM_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Sensor Alarm Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_ALARM_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Sensor Alarm Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_ALARM_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Sensor Binary Get command class structs */               
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_BINARY_GET_FRAME;

/************************************************************/
/* Sensor Binary Report command class structs */            
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorValue;                  /**/
} ZW_SENSOR_BINARY_REPORT_FRAME;

/************************************************************/
/* Sensor Binary Get V2 command class structs */            
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_BINARY_GET_V2_FRAME;

/************************************************************/
/* Sensor Binary Report V2 command class structs */         
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorValue;                  /**/
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_BINARY_REPORT_V2_FRAME;

/************************************************************/
/* Sensor Binary Supported Get Sensor V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_BINARY_SUPPORTED_GET_SENSOR_V2_FRAME;

/************************************************************/
/* Sensor Binary Supported Sensor Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Sensor Binary Supported Sensor Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Sensor Binary Supported Sensor Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Sensor Binary Supported Sensor Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_BINARY_SUPPORTED_SENSOR_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Sensor Trigger Level Get command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_TRIGGER_LEVEL_GET_FRAME;

/************************************************************/
/* Sensor Trigger Level Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   triggerValue1;                
} ZW_SENSOR_TRIGGER_LEVEL_REPORT_1BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   triggerValue1;                /* MSB */
    uint8_t   triggerValue2;                /* LSB */
} ZW_SENSOR_TRIGGER_LEVEL_REPORT_2BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   triggerValue1;                /* MSB */
    uint8_t   triggerValue2;                
    uint8_t   triggerValue3;                /* LSB */
} ZW_SENSOR_TRIGGER_LEVEL_REPORT_3BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   triggerValue1;                /* MSB */
    uint8_t   triggerValue2;                
    uint8_t   triggerValue3;                
    uint8_t   triggerValue4;                /* LSB */
} ZW_SENSOR_TRIGGER_LEVEL_REPORT_4BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Set 1byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sensorType;                   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   triggerValue1;                
} ZW_SENSOR_TRIGGER_LEVEL_SET_1BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Set 2byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sensorType;                   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   triggerValue1;                /* MSB */
    uint8_t   triggerValue2;                /* LSB */
} ZW_SENSOR_TRIGGER_LEVEL_SET_2BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Set 3byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sensorType;                   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   triggerValue1;                /* MSB */
    uint8_t   triggerValue2;                
    uint8_t   triggerValue3;                /* LSB */
} ZW_SENSOR_TRIGGER_LEVEL_SET_3BYTE_FRAME;

/************************************************************/
/* Sensor Trigger Level Set 4byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sensorType;                   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   triggerValue1;                /* MSB */
    uint8_t   triggerValue2;                
    uint8_t   triggerValue3;                
    uint8_t   triggerValue4;                /* LSB */
} ZW_SENSOR_TRIGGER_LEVEL_SET_4BYTE_FRAME;

/************************************************************/
/* Sensor Multilevel Get command class structs */           
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_GET_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte command class structs */  
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_FRAME;

/************************************************************/
/* Sensor Multilevel Get V2 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_GET_V2_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Sensor Multilevel Get V3 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_GET_V3_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Sensor Multilevel Get V4 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_GET_V4_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Sensor Multilevel Get V5 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V5 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V5_FRAME;

/************************************************************/
/* Sensor Multilevel Get V6 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V6 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V6_FRAME;

/************************************************************/
/* Sensor Multilevel Get V7 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V7 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V7_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V7_FRAME;

/************************************************************/
/* Sensor Multilevel Get V8 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V8 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V8_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V8_FRAME;

/************************************************************/
/* Sensor Multilevel Get V9 command class structs */        
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V9 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V9_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V9_FRAME;

/************************************************************/
/* Sensor Multilevel Get V10 command class structs */       
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V10 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V10_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V10_FRAME;

/************************************************************/
/* Sensor Multilevel Get V11 command class structs */       
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_GET_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_GET_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Report 1byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 
} ZW_SENSOR_MULTILEVEL_REPORT_1BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Report 2byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_2BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Report 3byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_3BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Report 4byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   level;                        /* masked byte */
    uint8_t   sensorValue1;                 /* MSB */
    uint8_t   sensorValue2;                 
    uint8_t   sensorValue3;                 
    uint8_t   sensorValue4;                 /* LSB */
} ZW_SENSOR_MULTILEVEL_REPORT_4BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Sensor V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SENSOR_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 1byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_1BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 2byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_2BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 3byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_3BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Sensor Report 4byte V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SENSOR_REPORT_4BYTE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Get Scale V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
} ZW_SENSOR_MULTILEVEL_SUPPORTED_GET_SCALE_V11_FRAME;

/************************************************************/
/* Sensor Multilevel Supported Scale Report V11 command class structs */
/************************************************************/
typedef struct _ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V11_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sensorType;                   /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_SENSOR_MULTILEVEL_SUPPORTED_SCALE_REPORT_V11_FRAME;

/************************************************************/
/* Sensor Alarm Set 1byte command class structs */          
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     /* LSB */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     
} ZW_SENSOR_ALARM_SET_1BYTE_FRAME;

/************************************************************/
/* Sensor Alarm Set 2byte command class structs */          
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     /* LSB */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SENSOR_ALARM_SET_2BYTE_FRAME;

/************************************************************/
/* Sensor Alarm Set 3byte command class structs */          
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     /* LSB */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SENSOR_ALARM_SET_3BYTE_FRAME;

/************************************************************/
/* Sensor Alarm Set 4byte command class structs */          
/************************************************************/
typedef struct _ZW_SENSOR_ALARM_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     /* LSB */
    uint8_t   numberOfBitMasks;             /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SENSOR_ALARM_SET_4BYTE_FRAME;

/************************************************************/
/* Simple Av Control Get command class structs */           
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SIMPLE_AV_CONTROL_GET_FRAME;

/************************************************************/
/* Simple Av Control Report command class structs */        
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
} ZW_SIMPLE_AV_CONTROL_REPORT_FRAME;

/************************************************************/
/* Simple Av Control Set variant group structs */           
/************************************************************/
typedef struct _VG_SIMPLE_AV_CONTROL_SET_VG_
{
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} VG_SIMPLE_AV_CONTROL_SET_VG;

/************************************************************/
/* Simple Av Control Set 1byte command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_1BYTE_FRAME;

/************************************************************/
/* Simple Av Control Set 2byte command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup2;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_2BYTE_FRAME;

/************************************************************/
/* Simple Av Control Set 3byte command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup3;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_3BYTE_FRAME;

/************************************************************/
/* Simple Av Control Set 4byte command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup3;                /**/
    VG_SIMPLE_AV_CONTROL_SET_VG variantgroup4;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_4BYTE_FRAME;

/************************************************************/
/* Simple Av Control Supported Get command class structs */ 
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Simple Av Control Get V2 command class structs */        
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SIMPLE_AV_CONTROL_GET_V2_FRAME;

/************************************************************/
/* Simple Av Control Report V2 command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
} ZW_SIMPLE_AV_CONTROL_REPORT_V2_FRAME;

/************************************************************/
/* Simple Av Control Set V2 variant group structs */        
/************************************************************/
typedef struct _VG_SIMPLE_AV_CONTROL_SET_V2_VG_
{
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} VG_SIMPLE_AV_CONTROL_SET_V2_VG;

/************************************************************/
/* Simple Av Control Set 1byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup1;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Set 2byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup2;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Set 3byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup3;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Set 4byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup3;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V2_VG variantgroup4;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Simple Av Control Get V3 command class structs */        
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SIMPLE_AV_CONTROL_GET_V3_FRAME;

/************************************************************/
/* Simple Av Control Report V3 command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
} ZW_SIMPLE_AV_CONTROL_REPORT_V3_FRAME;

/************************************************************/
/* Simple Av Control Set V3 variant group structs */        
/************************************************************/
typedef struct _VG_SIMPLE_AV_CONTROL_SET_V3_VG_
{
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} VG_SIMPLE_AV_CONTROL_SET_V3_VG;

/************************************************************/
/* Simple Av Control Set 1byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup1;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Set 2byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup2;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Set 3byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup3;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Set 4byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup3;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V3_VG variantgroup4;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Simple Av Control Get V4 command class structs */        
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SIMPLE_AV_CONTROL_GET_V4_FRAME;

/************************************************************/
/* Simple Av Control Report V4 command class structs */     
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfReports;              /**/
} ZW_SIMPLE_AV_CONTROL_REPORT_V4_FRAME;

/************************************************************/
/* Simple Av Control Set V4 variant group structs */        
/************************************************************/
typedef struct _VG_SIMPLE_AV_CONTROL_SET_V4_VG_
{
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} VG_SIMPLE_AV_CONTROL_SET_V4_VG;

/************************************************************/
/* Simple Av Control Set 1byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup1;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Set 2byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup2;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Set 3byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup3;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Set 4byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reserved21;                   /* MSB */
    uint8_t   reserved22;                   /* LSB */
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup1;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup2;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup3;                /**/
    VG_SIMPLE_AV_CONTROL_SET_V4_VG variantgroup4;                /**/
} ZW_SIMPLE_AV_CONTROL_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Supported Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Simple Av Control Supported Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportNo;                     /**/
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_SIMPLE_AV_CONTROL_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Switch All Get command class structs */                  
/************************************************************/
typedef struct _ZW_SWITCH_ALL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_ALL_GET_FRAME;

/************************************************************/
/* Switch All Off command class structs */                  
/************************************************************/
typedef struct _ZW_SWITCH_ALL_OFF_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_ALL_OFF_FRAME;

/************************************************************/
/* Switch All On command class structs */                   
/************************************************************/
typedef struct _ZW_SWITCH_ALL_ON_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_ALL_ON_FRAME;

/************************************************************/
/* Switch All Report command class structs */               
/************************************************************/
typedef struct _ZW_SWITCH_ALL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_SWITCH_ALL_REPORT_FRAME;

/************************************************************/
/* Switch All Set command class structs */                  
/************************************************************/
typedef struct _ZW_SWITCH_ALL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_SWITCH_ALL_SET_FRAME;

/************************************************************/
/* Switch Binary Get command class structs */               
/************************************************************/
typedef struct _ZW_SWITCH_BINARY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_BINARY_GET_FRAME;

/************************************************************/
/* Switch Binary Report command class structs */            
/************************************************************/
typedef struct _ZW_SWITCH_BINARY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_BINARY_REPORT_FRAME;

/************************************************************/
/* Switch Binary Set command class structs */               
/************************************************************/
typedef struct _ZW_SWITCH_BINARY_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   switchValue;                  /**/
} ZW_SWITCH_BINARY_SET_FRAME;

/************************************************************/
/* Switch Binary Get V2 command class structs */            
/************************************************************/
typedef struct _ZW_SWITCH_BINARY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_BINARY_GET_V2_FRAME;

/************************************************************/
/* Switch Binary Report V2 command class structs */         
/************************************************************/
typedef struct _ZW_SWITCH_BINARY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   currentValue;                 /**/
    uint8_t   targetValue;                  /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_BINARY_REPORT_V2_FRAME;

/************************************************************/
/* Switch Binary Set V2 command class structs */            
/************************************************************/
typedef struct _ZW_SWITCH_BINARY_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   targetValue;                  /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_BINARY_SET_V2_FRAME;

/************************************************************/
/* Switch Multilevel Get command class structs */           
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_GET_FRAME;

/************************************************************/
/* Switch Multilevel Report command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_MULTILEVEL_REPORT_FRAME;

/************************************************************/
/* Switch Multilevel Set command class structs */           
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_MULTILEVEL_SET_FRAME;

/************************************************************/
/* Switch Multilevel Start Level Change command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   startLevel;                   /**/
} ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Switch Multilevel Stop Level Change command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Switch Multilevel Get V2 command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_GET_V2_FRAME;

/************************************************************/
/* Switch Multilevel Report V2 command class structs */     
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_MULTILEVEL_REPORT_V2_FRAME;

/************************************************************/
/* Switch Multilevel Set V2 command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_MULTILEVEL_SET_V2_FRAME;

/************************************************************/
/* Switch Multilevel Start Level Change V2 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startLevel;                   /**/
    uint8_t   dimmingDuration;              /**/
} ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V2_FRAME;

/************************************************************/
/* Switch Multilevel Stop Level Change V2 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V2_FRAME;

/************************************************************/
/* Switch Multilevel Get V3 command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_GET_V3_FRAME;

/************************************************************/
/* Switch Multilevel Report V3 command class structs */     
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_MULTILEVEL_REPORT_V3_FRAME;

/************************************************************/
/* Switch Multilevel Set V3 command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_MULTILEVEL_SET_V3_FRAME;

/************************************************************/
/* Switch Multilevel Start Level Change V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startLevel;                   /**/
    uint8_t   dimmingDuration;              /**/
    uint8_t   stepSize;                     /**/
} ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V3_FRAME;

/************************************************************/
/* Switch Multilevel Stop Level Change V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V3_FRAME;

/************************************************************/
/* Switch Multilevel Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Switch Multilevel Supported Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V3_FRAME;

/************************************************************/
/* Switch Multilevel Get V4 command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_GET_V4_FRAME;

/************************************************************/
/* Switch Multilevel Report V4 command class structs */     
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   currentValue;                 /**/
    uint8_t   targetValue;                  /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_MULTILEVEL_REPORT_V4_FRAME;

/************************************************************/
/* Switch Multilevel Set V4 command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_MULTILEVEL_SET_V4_FRAME;

/************************************************************/
/* Switch Multilevel Start Level Change V4 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startLevel;                   /**/
    uint8_t   dimmingDuration;              /**/
    uint8_t   stepSize;                     /**/
} ZW_SWITCH_MULTILEVEL_START_LEVEL_CHANGE_V4_FRAME;

/************************************************************/
/* Switch Multilevel Stop Level Change V4 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_STOP_LEVEL_CHANGE_V4_FRAME;

/************************************************************/
/* Switch Multilevel Supported Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_MULTILEVEL_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Switch Multilevel Supported Report V4 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
} ZW_SWITCH_MULTILEVEL_SUPPORTED_REPORT_V4_FRAME;

/************************************************************/
/* Switch Toggle Binary Set command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_BINARY_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_TOGGLE_BINARY_SET_FRAME;

/************************************************************/
/* Switch Toggle Binary Get command class structs */        
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_BINARY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_TOGGLE_BINARY_GET_FRAME;

/************************************************************/
/* Switch Toggle Binary Report command class structs */     
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_TOGGLE_BINARY_REPORT_FRAME;

/************************************************************/
/* Switch Toggle Multilevel Set command class structs */    
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_TOGGLE_MULTILEVEL_SET_FRAME;

/************************************************************/
/* Switch Toggle Multilevel Get command class structs */    
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_TOGGLE_MULTILEVEL_GET_FRAME;

/************************************************************/
/* Switch Toggle Multilevel Report command class structs */ 
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   value;                        /**/
} ZW_SWITCH_TOGGLE_MULTILEVEL_REPORT_FRAME;

/************************************************************/
/* Switch Toggle Multilevel Start Level Change command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   startLevel;                   /**/
} ZW_SWITCH_TOGGLE_MULTILEVEL_START_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Switch Toggle Multilevel Stop Level Change command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_TOGGLE_MULTILEVEL_STOP_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Tariff Tbl Remove 1byte command class structs */         
/************************************************************/
typedef struct _ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          
} ZW_TARIFF_TBL_REMOVE_1BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Remove 2byte command class structs */         
/************************************************************/
typedef struct _ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          /* MSB */
    uint8_t   rateParameterSetId2;          /* LSB */
} ZW_TARIFF_TBL_REMOVE_2BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Remove 3byte command class structs */         
/************************************************************/
typedef struct _ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          /* MSB */
    uint8_t   rateParameterSetId2;          
    uint8_t   rateParameterSetId3;          /* LSB */
} ZW_TARIFF_TBL_REMOVE_3BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Remove 4byte command class structs */         
/************************************************************/
typedef struct _ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   rateParameterSetId1;          /* MSB */
    uint8_t   rateParameterSetId2;          
    uint8_t   rateParameterSetId3;          
    uint8_t   rateParameterSetId4;          /* LSB */
} ZW_TARIFF_TBL_REMOVE_4BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Set command class structs */                  
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   tariffValue1;                 /* MSB */
    uint8_t   tariffValue2;                 
    uint8_t   tariffValue3;                 
    uint8_t   tariffValue4;                 /* LSB */
} ZW_TARIFF_TBL_SET_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Set 1byte command class structs */   
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           
} ZW_TARIFF_TBL_SUPPLIER_SET_1BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Set 2byte command class structs */   
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           /* MSB */
    uint8_t   supplierCharacter2;           /* LSB */
} ZW_TARIFF_TBL_SUPPLIER_SET_2BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Set 3byte command class structs */   
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           /* MSB */
    uint8_t   supplierCharacter2;           
    uint8_t   supplierCharacter3;           /* LSB */
} ZW_TARIFF_TBL_SUPPLIER_SET_3BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Set 4byte command class structs */   
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           /* MSB */
    uint8_t   supplierCharacter2;           
    uint8_t   supplierCharacter3;           
    uint8_t   supplierCharacter4;           /* LSB */
} ZW_TARIFF_TBL_SUPPLIER_SET_4BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Cost Get command class structs */             
/************************************************************/
typedef struct _ZW_TARIFF_TBL_COST_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
} ZW_TARIFF_TBL_COST_GET_FRAME;

/************************************************************/
/* Tariff Tbl Cost Report command class structs */          
/************************************************************/
typedef struct _ZW_TARIFF_TBL_COST_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   startYear1;                   /* MSB */
    uint8_t   startYear2;                   /* LSB */
    uint8_t   startMonth;                   /**/
    uint8_t   startDay;                     /**/
    uint8_t   startHourLocalTime;           /**/
    uint8_t   startMinuteLocalTime;         /**/
    uint8_t   stopYear1;                    /* MSB */
    uint8_t   stopYear2;                    /* LSB */
    uint8_t   stopMonth;                    /**/
    uint8_t   stopDay;                      /**/
    uint8_t   stopHourLocalTime;            /**/
    uint8_t   stopMinuteLocalTime;          /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   costValue1;                   /* MSB */
    uint8_t   costValue2;                   
    uint8_t   costValue3;                   
    uint8_t   costValue4;                   /* LSB */
} ZW_TARIFF_TBL_COST_REPORT_FRAME;

/************************************************************/
/* Tariff Tbl Get command class structs */                  
/************************************************************/
typedef struct _ZW_TARIFF_TBL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
} ZW_TARIFF_TBL_GET_FRAME;

/************************************************************/
/* Tariff Tbl Report command class structs */               
/************************************************************/
typedef struct _ZW_TARIFF_TBL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   rateParameterSetId;           /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   tariffValue1;                 /* MSB */
    uint8_t   tariffValue2;                 
    uint8_t   tariffValue3;                 
    uint8_t   tariffValue4;                 /* LSB */
} ZW_TARIFF_TBL_REPORT_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Get command class structs */         
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_TARIFF_TBL_SUPPLIER_GET_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           
} ZW_TARIFF_TBL_SUPPLIER_REPORT_1BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           /* MSB */
    uint8_t   supplierCharacter2;           /* LSB */
} ZW_TARIFF_TBL_SUPPLIER_REPORT_2BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           /* MSB */
    uint8_t   supplierCharacter2;           
    uint8_t   supplierCharacter3;           /* LSB */
} ZW_TARIFF_TBL_SUPPLIER_REPORT_3BYTE_FRAME;

/************************************************************/
/* Tariff Tbl Supplier Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourLocalTime;                /**/
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
    uint8_t   currency1;                    /* MSB */
    uint8_t   currency2;                    
    uint8_t   currency3;                    /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   standingChargeValue1;         /* MSB */
    uint8_t   standingChargeValue2;         
    uint8_t   standingChargeValue3;         
    uint8_t   standingChargeValue4;         /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supplierCharacter1;           /* MSB */
    uint8_t   supplierCharacter2;           
    uint8_t   supplierCharacter3;           
    uint8_t   supplierCharacter4;           /* LSB */
} ZW_TARIFF_TBL_SUPPLIER_REPORT_4BYTE_FRAME;

/************************************************************/
/* Thermostat Fan Mode Get command class structs */         
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_GET_FRAME;

/************************************************************/
/* Thermostat Fan Mode Report command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_REPORT_FRAME;

/************************************************************/
/* Thermostat Fan Mode Set command class structs */         
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_SET_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Get command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Thermostat Fan Mode Get V2 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_GET_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Report V2 command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_REPORT_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Set V2 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_SET_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Fan Mode Get V3 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_GET_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Report V3 command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_REPORT_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Set V3 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_SET_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Fan Mode Get V4 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_GET_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Report V4 command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_REPORT_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Set V4 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_SET_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Get V4 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Thermostat Fan Mode Get V5 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_GET_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Report V5 command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_REPORT_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_REPORT_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Set V5 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_FAN_MODE_SET_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Get V5 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_GET_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 1byte V5 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_1BYTE_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 2byte V5 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_2BYTE_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 3byte V5 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_3BYTE_V5_FRAME;

/************************************************************/
/* Thermostat Fan Mode Supported Report 4byte V5 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V5_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_FAN_MODE_SUPPORTED_REPORT_4BYTE_V5_FRAME;

/************************************************************/
/* Thermostat Fan State Get command class structs */        
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_STATE_GET_FRAME;

/************************************************************/
/* Thermostat Fan State Report command class structs */     
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_FAN_STATE_REPORT_FRAME;

/************************************************************/
/* Thermostat Fan State Get V2 command class structs */     
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_STATE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_FAN_STATE_GET_V2_FRAME;

/************************************************************/
/* Thermostat Fan State Report V2 command class structs */  
/************************************************************/
typedef struct _ZW_THERMOSTAT_FAN_STATE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_FAN_STATE_REPORT_V2_FRAME;

/************************************************************/
/* Thermostat Heating Status Report command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_STATUS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_THERMOSTAT_HEATING_STATUS_REPORT_FRAME;

/************************************************************/
/* Thermostat Heating Mode Get command class structs */     
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_HEATING_MODE_GET_FRAME;

/************************************************************/
/* Thermostat Heating Mode Report command class structs */  
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_THERMOSTAT_HEATING_MODE_REPORT_FRAME;

/************************************************************/
/* Thermostat Heating Mode Set command class structs */     
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_THERMOSTAT_HEATING_MODE_SET_FRAME;

/************************************************************/
/* Thermostat Heating Relay Status Get command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_HEATING_RELAY_STATUS_GET_FRAME;

/************************************************************/
/* Thermostat Heating Relay Status Report command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_RELAY_STATUS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   relayStatus;                  /**/
} ZW_THERMOSTAT_HEATING_RELAY_STATUS_REPORT_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Get command class structs */ 
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
} ZW_THERMOSTAT_HEATING_SETPOINT_GET_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_1BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_2BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_3BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_HEATING_SETPOINT_REPORT_4BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_HEATING_SETPOINT_SET_1BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_HEATING_SETPOINT_SET_2BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_HEATING_SETPOINT_SET_3BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Setpoint Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   setpointNr;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_HEATING_SETPOINT_SET_4BYTE_FRAME;

/************************************************************/
/* Thermostat Heating Status Get command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_HEATING_STATUS_GET_FRAME;

/************************************************************/
/* Thermostat Heating Status Set command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_THERMOSTAT_HEATING_STATUS_SET_FRAME;

/************************************************************/
/* Thermostat Heating Timed Off Set command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   minutes;                      /**/
    uint8_t   hours;                        /**/
} ZW_THERMOSTAT_HEATING_TIMED_OFF_SET_FRAME;

/************************************************************/
/* Thermostat Mode Get command class structs */             
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_MODE_GET_FRAME;

/************************************************************/
/* Thermostat Mode Report command class structs */          
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_MODE_REPORT_FRAME;

/************************************************************/
/* Thermostat Mode Set command class structs */             
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_MODE_SET_FRAME;

/************************************************************/
/* Thermostat Mode Supported Get command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_MODE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Thermostat Mode Get V2 command class structs */          
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_MODE_GET_V2_FRAME;

/************************************************************/
/* Thermostat Mode Report V2 command class structs */       
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_MODE_REPORT_V2_FRAME;

/************************************************************/
/* Thermostat Mode Set V2 command class structs */          
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_MODE_SET_V2_FRAME;

/************************************************************/
/* Thermostat Mode Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_MODE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Mode Get V3 command class structs */          
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_MODE_GET_V3_FRAME;

/************************************************************/
/* Thermostat Mode Report 1byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            
} ZW_THERMOSTAT_MODE_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Report 2byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            /* MSB */
    uint8_t   manufacturerData2;            /* LSB */
} ZW_THERMOSTAT_MODE_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Report 3byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            /* MSB */
    uint8_t   manufacturerData2;            
    uint8_t   manufacturerData3;            /* LSB */
} ZW_THERMOSTAT_MODE_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Report 4byte V3 command class structs */ 
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            /* MSB */
    uint8_t   manufacturerData2;            
    uint8_t   manufacturerData3;            
    uint8_t   manufacturerData4;            /* LSB */
} ZW_THERMOSTAT_MODE_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Set 1byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            
} ZW_THERMOSTAT_MODE_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Set 2byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            /* MSB */
    uint8_t   manufacturerData2;            /* LSB */
} ZW_THERMOSTAT_MODE_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Set 3byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            /* MSB */
    uint8_t   manufacturerData2;            
    uint8_t   manufacturerData3;            /* LSB */
} ZW_THERMOSTAT_MODE_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Set 4byte V3 command class structs */    
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   manufacturerData1;            /* MSB */
    uint8_t   manufacturerData2;            
    uint8_t   manufacturerData3;            
    uint8_t   manufacturerData4;            /* LSB */
} ZW_THERMOSTAT_MODE_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_MODE_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Mode Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_MODE_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Operating State Get command class structs */  
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_OPERATING_STATE_GET_FRAME;

/************************************************************/
/* Thermostat Operating State Report command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_OPERATING_STATE_REPORT_FRAME;

/************************************************************/
/* Thermostat Operating State Get V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_OPERATING_STATE_GET_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Report V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_OPERATING_STATE_REPORT_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Thermostat Operating Logging Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating Logging Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating Logging Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating Logging Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_OPERATING_LOGGING_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Get 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Get 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Get 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Get 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_GET_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Report V2 variant group structs */
/************************************************************/
typedef struct _VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   usageTodayHours;              /**/
    uint8_t   usageTodayMinutes;            /**/
    uint8_t   usageYesterdayHours;          /**/
    uint8_t   usageYesterdayMinutes;        /**/
} VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG;

/************************************************************/
/* Thermostat Operating State Logging Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup2;                /**/
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup2;                /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup3;                /**/
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Operating State Logging Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reportsToFollow;              /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup1;                /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup2;                /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup3;                /**/
    VG_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_V2_VG variantgroup4;                /**/
} ZW_THERMOSTAT_OPERATING_STATE_LOGGING_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setback Get command class structs */          
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETBACK_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_SETBACK_GET_FRAME;

/************************************************************/
/* Thermostat Setback Report command class structs */       
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETBACK_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   setbackState;                 /**/
} ZW_THERMOSTAT_SETBACK_REPORT_FRAME;

/************************************************************/
/* Thermostat Setback Set command class structs */          
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETBACK_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   setbackState;                 /**/
} ZW_THERMOSTAT_SETBACK_SET_FRAME;

/************************************************************/
/* Thermostat Setpoint Get command class structs */         
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_SETPOINT_GET_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 1byte command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_SETPOINT_SET_1BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 2byte command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_2BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 3byte command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_3BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 4byte command class structs */   
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_4BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Get command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Thermostat Setpoint Get V2 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_SETPOINT_GET_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Thermostat Setpoint Get V3 command class structs */      
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
} ZW_THERMOSTAT_SETPOINT_GET_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_SETPOINT_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       
} ZW_THERMOSTAT_SETPOINT_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Set 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   level2;                       /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_THERMOSTAT_SETPOINT_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Get V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_THERMOSTAT_SETPOINT_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Capabilities Get V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_CAPABILITIES_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_THERMOSTAT_SETPOINT_CAPABILITIES_GET_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Capabilities Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minValue1;                    
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxvalue1;                    
} ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Capabilities Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxvalue1;                    /* MSB */
    uint8_t   maxvalue2;                    /* LSB */
} ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Capabilities Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    
    uint8_t   minValue3;                    /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxvalue1;                    /* MSB */
    uint8_t   maxvalue2;                    
    uint8_t   maxvalue3;                    /* LSB */
} ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Thermostat Setpoint Capabilities Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minValue1;                    /* MSB */
    uint8_t   minValue2;                    
    uint8_t   minValue3;                    
    uint8_t   minValue4;                    /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maxvalue1;                    /* MSB */
    uint8_t   maxvalue2;                    
    uint8_t   maxvalue3;                    
    uint8_t   maxvalue4;                    /* LSB */
} ZW_THERMOSTAT_SETPOINT_CAPABILITIES_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Time Parameters Get command class structs */             
/************************************************************/
typedef struct _ZW_TIME_PARAMETERS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_TIME_PARAMETERS_GET_FRAME;

/************************************************************/
/* Time Parameters Report command class structs */          
/************************************************************/
typedef struct _ZW_TIME_PARAMETERS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourUtc;                      /**/
    uint8_t   minuteUtc;                    /**/
    uint8_t   secondUtc;                    /**/
} ZW_TIME_PARAMETERS_REPORT_FRAME;

/************************************************************/
/* Time Parameters Set command class structs */             
/************************************************************/
typedef struct _ZW_TIME_PARAMETERS_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
    uint8_t   hourUtc;                      /**/
    uint8_t   minuteUtc;                    /**/
    uint8_t   secondUtc;                    /**/
} ZW_TIME_PARAMETERS_SET_FRAME;

/************************************************************/
/* Date Get command class structs */                        
/************************************************************/
typedef struct _ZW_DATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DATE_GET_FRAME;

/************************************************************/
/* Date Report command class structs */                     
/************************************************************/
typedef struct _ZW_DATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
} ZW_DATE_REPORT_FRAME;

/************************************************************/
/* Time Get command class structs */                        
/************************************************************/
typedef struct _ZW_TIME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_TIME_GET_FRAME;

/************************************************************/
/* Time Report command class structs */                     
/************************************************************/
typedef struct _ZW_TIME_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} ZW_TIME_REPORT_FRAME;

/************************************************************/
/* Date Get V2 command class structs */                     
/************************************************************/
typedef struct _ZW_DATE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DATE_GET_V2_FRAME;

/************************************************************/
/* Date Report V2 command class structs */                  
/************************************************************/
typedef struct _ZW_DATE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   year1;                        /* MSB */
    uint8_t   year2;                        /* LSB */
    uint8_t   month;                        /**/
    uint8_t   day;                          /**/
} ZW_DATE_REPORT_V2_FRAME;

/************************************************************/
/* Time Get V2 command class structs */                     
/************************************************************/
typedef struct _ZW_TIME_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_TIME_GET_V2_FRAME;

/************************************************************/
/* Time Offset Get V2 command class structs */              
/************************************************************/
typedef struct _ZW_TIME_OFFSET_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_TIME_OFFSET_GET_V2_FRAME;

/************************************************************/
/* Time Offset Report V2 command class structs */           
/************************************************************/
typedef struct _ZW_TIME_OFFSET_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
    uint8_t   monthStartDst;                /**/
    uint8_t   dayStartDst;                  /**/
    uint8_t   hourStartDst;                 /**/
    uint8_t   monthEndDst;                  /**/
    uint8_t   dayEndDst;                    /**/
    uint8_t   hourEndDst;                   /**/
} ZW_TIME_OFFSET_REPORT_V2_FRAME;

/************************************************************/
/* Time Offset Set V2 command class structs */              
/************************************************************/
typedef struct _ZW_TIME_OFFSET_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   level;                        /* masked byte */
    uint8_t   minuteTzo;                    /**/
    uint8_t   level2;                       /* masked byte */
    uint8_t   monthStartDst;                /**/
    uint8_t   dayStartDst;                  /**/
    uint8_t   hourStartDst;                 /**/
    uint8_t   monthEndDst;                  /**/
    uint8_t   dayEndDst;                    /**/
    uint8_t   hourEndDst;                   /**/
} ZW_TIME_OFFSET_SET_V2_FRAME;

/************************************************************/
/* Time Report V2 command class structs */                  
/************************************************************/
typedef struct _ZW_TIME_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   minuteLocalTime;              /**/
    uint8_t   secondLocalTime;              /**/
} ZW_TIME_REPORT_V2_FRAME;

/************************************************************/
/* Command First Segment 1byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_SEGMENT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             
    uint8_t   payload1;                     
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_FIRST_SEGMENT_1BYTE_V2_FRAME;

/************************************************************/
/* Command First Segment 2byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_SEGMENT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             /* LSB */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     /* LSB */
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_FIRST_SEGMENT_2BYTE_V2_FRAME;

/************************************************************/
/* Command First Segment 3byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_SEGMENT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             /* LSB */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     /* LSB */
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_FIRST_SEGMENT_3BYTE_V2_FRAME;

/************************************************************/
/* Command First Segment 4byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_SEGMENT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             
    uint8_t   headerExtension4;             /* LSB */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     
    uint8_t   payload4;                     /* LSB */
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_FIRST_SEGMENT_4BYTE_V2_FRAME;

/************************************************************/
/* Command Segment Complete V2 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_SEGMENT_COMPLETE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_reserved;                 /* The command + parameter reserved */
    uint8_t   properties2;                  /* masked byte */
} ZW_COMMAND_SEGMENT_COMPLETE_V2_FRAME;

/************************************************************/
/* Command Segment Request V2 command class structs */      
/************************************************************/
typedef struct _ZW_COMMAND_SEGMENT_REQUEST_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_reserved;                 /* The command + parameter reserved */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
} ZW_COMMAND_SEGMENT_REQUEST_V2_FRAME;

/************************************************************/
/* Command Segment Wait V2 command class structs */         
/************************************************************/
typedef struct _ZW_COMMAND_SEGMENT_WAIT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_reserved;                 /* The command + parameter reserved */
    uint8_t   pendingFragments;             /**/
} ZW_COMMAND_SEGMENT_WAIT_V2_FRAME;

/************************************************************/
/* Command Subsequent Segment 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_SEGMENT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             
    uint8_t   payload1;                     
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_SUBSEQUENT_SEGMENT_1BYTE_V2_FRAME;

/************************************************************/
/* Command Subsequent Segment 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_SEGMENT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             /* LSB */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     /* LSB */
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_SUBSEQUENT_SEGMENT_2BYTE_V2_FRAME;

/************************************************************/
/* Command Subsequent Segment 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_SEGMENT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             /* LSB */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     /* LSB */
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_SUBSEQUENT_SEGMENT_3BYTE_V2_FRAME;

/************************************************************/
/* Command Subsequent Segment 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_SEGMENT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   headerExtensionLength;        /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             
    uint8_t   headerExtension4;             /* LSB */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     
    uint8_t   payload4;                     /* LSB */
    uint8_t   frameCheckSequence1;          /* MSB */
    uint8_t   frameCheckSequence2;          /* LSB */
} ZW_COMMAND_SUBSEQUENT_SEGMENT_4BYTE_V2_FRAME;

/************************************************************/
/* Command First Fragment 1byte command class structs */    
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   payload1;                     
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_FIRST_FRAGMENT_1BYTE_FRAME;

/************************************************************/
/* Command First Fragment 2byte command class structs */    
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_FIRST_FRAGMENT_2BYTE_FRAME;

/************************************************************/
/* Command First Fragment 3byte command class structs */    
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_FIRST_FRAGMENT_3BYTE_FRAME;

/************************************************************/
/* Command First Fragment 4byte command class structs */    
/************************************************************/
typedef struct _ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     
    uint8_t   payload4;                     /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_FIRST_FRAGMENT_4BYTE_FRAME;

/************************************************************/
/* Command Subsequent Fragment 1byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   payload1;                     
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_SUBSEQUENT_FRAGMENT_1BYTE_FRAME;

/************************************************************/
/* Command Subsequent Fragment 2byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_SUBSEQUENT_FRAGMENT_2BYTE_FRAME;

/************************************************************/
/* Command Subsequent Fragment 3byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_SUBSEQUENT_FRAGMENT_3BYTE_FRAME;

/************************************************************/
/* Command Subsequent Fragment 4byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter datagram_size_1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   datagramOffset2;              /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     
    uint8_t   payload4;                     /* LSB */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_COMMAND_SUBSEQUENT_FRAGMENT_4BYTE_FRAME;

/************************************************************/
/* User Code Get command class structs */                   
/************************************************************/
typedef struct _ZW_USER_CODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
} ZW_USER_CODE_GET_FRAME;

/************************************************************/
/* User Code Report 1byte command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    
} ZW_USER_CODE_REPORT_1BYTE_FRAME;

/************************************************************/
/* User Code Report 2byte command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} ZW_USER_CODE_REPORT_2BYTE_FRAME;

/************************************************************/
/* User Code Report 3byte command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} ZW_USER_CODE_REPORT_3BYTE_FRAME;

/************************************************************/
/* User Code Report 4byte command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} ZW_USER_CODE_REPORT_4BYTE_FRAME;

/************************************************************/
/* User Code Set 1byte command class structs */             
/************************************************************/
typedef struct _ZW_USER_CODE_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    
} ZW_USER_CODE_SET_1BYTE_FRAME;

/************************************************************/
/* User Code Set 2byte command class structs */             
/************************************************************/
typedef struct _ZW_USER_CODE_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} ZW_USER_CODE_SET_2BYTE_FRAME;

/************************************************************/
/* User Code Set 3byte command class structs */             
/************************************************************/
typedef struct _ZW_USER_CODE_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} ZW_USER_CODE_SET_3BYTE_FRAME;

/************************************************************/
/* User Code Set 4byte command class structs */             
/************************************************************/
typedef struct _ZW_USER_CODE_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} ZW_USER_CODE_SET_4BYTE_FRAME;

/************************************************************/
/* Users Number Get command class structs */                
/************************************************************/
typedef struct _ZW_USERS_NUMBER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_USERS_NUMBER_GET_FRAME;

/************************************************************/
/* Users Number Report command class structs */             
/************************************************************/
typedef struct _ZW_USERS_NUMBER_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedUsers;               /**/
} ZW_USERS_NUMBER_REPORT_FRAME;

/************************************************************/
/* User Code Get V2 command class structs */                
/************************************************************/
typedef struct _ZW_USER_CODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
} ZW_USER_CODE_GET_V2_FRAME;

/************************************************************/
/* User Code Report 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    
} ZW_USER_CODE_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* User Code Report 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} ZW_USER_CODE_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* User Code Report 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} ZW_USER_CODE_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* User Code Report 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_USER_CODE_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} ZW_USER_CODE_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* User Code Set 1byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    
} ZW_USER_CODE_SET_1BYTE_V2_FRAME;

/************************************************************/
/* User Code Set 2byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} ZW_USER_CODE_SET_2BYTE_V2_FRAME;

/************************************************************/
/* User Code Set 3byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} ZW_USER_CODE_SET_3BYTE_V2_FRAME;

/************************************************************/
/* User Code Set 4byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_USER_CODE_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier;               /**/
    uint8_t   userIdStatus;                 /**/
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} ZW_USER_CODE_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Users Number Get V2 command class structs */             
/************************************************************/
typedef struct _ZW_USERS_NUMBER_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_USERS_NUMBER_GET_V2_FRAME;

/************************************************************/
/* Users Number Report V2 command class structs */          
/************************************************************/
typedef struct _ZW_USERS_NUMBER_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedUsers;               /**/
    uint8_t   extendedSupportedUsers1;      /* MSB */
    uint8_t   extendedSupportedUsers2;      /* LSB */
} ZW_USERS_NUMBER_REPORT_V2_FRAME;

/************************************************************/
/* Extended User Code Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_SET_1BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    
} VG_EXTENDED_USER_CODE_SET_1BYTE_V2_VG;

/************************************************************/
/* Extended User Code Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_SET_2BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} VG_EXTENDED_USER_CODE_SET_2BYTE_V2_VG;

/************************************************************/
/* Extended User Code Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_SET_3BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} VG_EXTENDED_USER_CODE_SET_3BYTE_V2_VG;

/************************************************************/
/* Extended User Code Set V2 variant group structs */       
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG;

/************************************************************/
/* Extended User Code Set 1byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup1;                /**/
} ZW_EXTENDED_USER_CODE_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Set 2byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup2;                /**/
} ZW_EXTENDED_USER_CODE_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Set 3byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup2;                /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup3;                /**/
} ZW_EXTENDED_USER_CODE_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Set 4byte V2 command class structs */ 
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup2;                /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup3;                /**/
    VG_EXTENDED_USER_CODE_SET_4BYTE_V2_VG variantgroup4;                /**/
} ZW_EXTENDED_USER_CODE_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
} ZW_EXTENDED_USER_CODE_GET_V2_FRAME;

/************************************************************/
/* Extended User Code Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_REPORT_1BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    
} VG_EXTENDED_USER_CODE_REPORT_1BYTE_V2_VG;

/************************************************************/
/* Extended User Code Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_REPORT_2BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    /* LSB */
} VG_EXTENDED_USER_CODE_REPORT_2BYTE_V2_VG;

/************************************************************/
/* Extended User Code Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_REPORT_3BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    /* LSB */
} VG_EXTENDED_USER_CODE_REPORT_3BYTE_V2_VG;

/************************************************************/
/* Extended User Code Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG_
{
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   userIdStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userCode1;                    /* MSB */
    uint8_t   userCode2;                    
    uint8_t   userCode3;                    
    uint8_t   userCode4;                    /* LSB */
} VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG;

/************************************************************/
/* Extended User Code Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    uint8_t   nextUserIdentifier1;          /* MSB */
    uint8_t   nextUserIdentifier2;          /* LSB */
} ZW_EXTENDED_USER_CODE_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    uint8_t   nextUserIdentifier1;          /* MSB */
    uint8_t   nextUserIdentifier2;          /* LSB */
} ZW_EXTENDED_USER_CODE_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    uint8_t   nextUserIdentifier1;          /* MSB */
    uint8_t   nextUserIdentifier2;          /* LSB */
} ZW_EXTENDED_USER_CODE_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Extended User Code Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_USER_CODE_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfUserCodes;            /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    VG_EXTENDED_USER_CODE_REPORT_4BYTE_V2_VG variantgroup4;                /**/
    uint8_t   nextUserIdentifier1;          /* MSB */
    uint8_t   nextUserIdentifier2;          /* LSB */
} ZW_EXTENDED_USER_CODE_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* User Code Capabilities Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_USER_CODE_CAPABILITIES_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_USER_CODE_CAPABILITIES_GET_V2_FRAME;

/************************************************************/
/* User Code Capabilities Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_USER_CODE_CAPABILITIES_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserIdStatusBitMask1;
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedKeypadModesBitMask1; 
    uint8_t   properties3;                  /* masked byte */
    uint8_t   supportedKeysBitMask1;        
} ZW_USER_CODE_CAPABILITIES_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* User Code Capabilities Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_USER_CODE_CAPABILITIES_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserIdStatusBitMask1;/* MSB */
    uint8_t   supportedUserIdStatusBitMask2;/* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedKeypadModesBitMask1; /* MSB */
    uint8_t   supportedKeypadModesBitMask2; /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   supportedKeysBitMask1;        /* MSB */
    uint8_t   supportedKeysBitMask2;        /* LSB */
} ZW_USER_CODE_CAPABILITIES_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* User Code Capabilities Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_USER_CODE_CAPABILITIES_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserIdStatusBitMask1;/* MSB */
    uint8_t   supportedUserIdStatusBitMask2;
    uint8_t   supportedUserIdStatusBitMask3;/* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedKeypadModesBitMask1; /* MSB */
    uint8_t   supportedKeypadModesBitMask2; 
    uint8_t   supportedKeypadModesBitMask3; /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   supportedKeysBitMask1;        /* MSB */
    uint8_t   supportedKeysBitMask2;        
    uint8_t   supportedKeysBitMask3;        /* LSB */
} ZW_USER_CODE_CAPABILITIES_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* User Code Capabilities Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_USER_CODE_CAPABILITIES_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserIdStatusBitMask1;/* MSB */
    uint8_t   supportedUserIdStatusBitMask2;
    uint8_t   supportedUserIdStatusBitMask3;
    uint8_t   supportedUserIdStatusBitMask4;/* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedKeypadModesBitMask1; /* MSB */
    uint8_t   supportedKeypadModesBitMask2; 
    uint8_t   supportedKeypadModesBitMask3; 
    uint8_t   supportedKeypadModesBitMask4; /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   supportedKeysBitMask1;        /* MSB */
    uint8_t   supportedKeysBitMask2;        
    uint8_t   supportedKeysBitMask3;        
    uint8_t   supportedKeysBitMask4;        /* LSB */
} ZW_USER_CODE_CAPABILITIES_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* User Code Keypad Mode Set V2 command class structs */    
/************************************************************/
typedef struct _ZW_USER_CODE_KEYPAD_MODE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keypadMode;                   /**/
} ZW_USER_CODE_KEYPAD_MODE_SET_V2_FRAME;

/************************************************************/
/* User Code Keypad Mode Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_USER_CODE_KEYPAD_MODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_USER_CODE_KEYPAD_MODE_GET_V2_FRAME;

/************************************************************/
/* User Code Keypad Mode Report V2 command class structs */ 
/************************************************************/
typedef struct _ZW_USER_CODE_KEYPAD_MODE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keypadMode;                   /**/
} ZW_USER_CODE_KEYPAD_MODE_REPORT_V2_FRAME;

/************************************************************/
/* Admin Code Set 1byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_ADMIN_CODE_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   
} ZW_ADMIN_CODE_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Set 2byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_ADMIN_CODE_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   /* LSB */
} ZW_ADMIN_CODE_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Set 3byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_ADMIN_CODE_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   /* LSB */
} ZW_ADMIN_CODE_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Set 4byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_ADMIN_CODE_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   
    uint8_t   adminCode4;                   /* LSB */
} ZW_ADMIN_CODE_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Get V2 command class structs */               
/************************************************************/
typedef struct _ZW_ADMIN_CODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ADMIN_CODE_GET_V2_FRAME;

/************************************************************/
/* Admin Code Report 1byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_ADMIN_CODE_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   
} ZW_ADMIN_CODE_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Report 2byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_ADMIN_CODE_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   /* LSB */
} ZW_ADMIN_CODE_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Report 3byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_ADMIN_CODE_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   /* LSB */
} ZW_ADMIN_CODE_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Admin Code Report 4byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_ADMIN_CODE_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   
    uint8_t   adminCode4;                   /* LSB */
} ZW_ADMIN_CODE_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* User Code Checksum Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_USER_CODE_CHECKSUM_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_USER_CODE_CHECKSUM_GET_V2_FRAME;

/************************************************************/
/* User Code Checksum Report V2 command class structs */    
/************************************************************/
typedef struct _ZW_USER_CODE_CHECKSUM_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userCodeChecksum1;            /* MSB */
    uint8_t   userCodeChecksum2;            /* LSB */
} ZW_USER_CODE_CHECKSUM_REPORT_V2_FRAME;

/************************************************************/
/* Version Command Class Get command class structs */       
/************************************************************/
typedef struct _ZW_VERSION_COMMAND_CLASS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedCommandClass;        /**/
} ZW_VERSION_COMMAND_CLASS_GET_FRAME;

/************************************************************/
/* Version Command Class Report command class structs */    
/************************************************************/
typedef struct _ZW_VERSION_COMMAND_CLASS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedCommandClass;        /**/
    uint8_t   commandClassVersion;          /**/
} ZW_VERSION_COMMAND_CLASS_REPORT_FRAME;

/************************************************************/
/* Version Get command class structs */                     
/************************************************************/
typedef struct _ZW_VERSION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_VERSION_GET_FRAME;

/************************************************************/
/* Version Report command class structs */                  
/************************************************************/
typedef struct _ZW_VERSION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   applicationVersion;           /**/
    uint8_t   applicationSubVersion;        /**/
} ZW_VERSION_REPORT_FRAME;

/************************************************************/
/* Version Command Class Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_VERSION_COMMAND_CLASS_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedCommandClass;        /**/
} ZW_VERSION_COMMAND_CLASS_GET_V2_FRAME;

/************************************************************/
/* Version Command Class Report V2 command class structs */ 
/************************************************************/
typedef struct _ZW_VERSION_COMMAND_CLASS_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedCommandClass;        /**/
    uint8_t   commandClassVersion;          /**/
} ZW_VERSION_COMMAND_CLASS_REPORT_V2_FRAME;

/************************************************************/
/* Version Get V2 command class structs */                  
/************************************************************/
typedef struct _ZW_VERSION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_VERSION_GET_V2_FRAME;

/************************************************************/
/* Version Report V2 variant group structs */               
/************************************************************/
typedef struct _VG_VERSION_REPORT_V2_VG_
{
    uint8_t   firmwareVersion;              /**/
    uint8_t   firmwareSubVersion;           /**/
} VG_VERSION_REPORT_V2_VG;

/************************************************************/
/* Version Report 1byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V2_VG variantgroup1;                /**/
} ZW_VERSION_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Version Report 2byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V2_VG variantgroup1;                /**/
    VG_VERSION_REPORT_V2_VG variantgroup2;                /**/
} ZW_VERSION_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Version Report 3byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V2_VG variantgroup1;                /**/
    VG_VERSION_REPORT_V2_VG variantgroup2;                /**/
    VG_VERSION_REPORT_V2_VG variantgroup3;                /**/
} ZW_VERSION_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Version Report 4byte V2 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V2_VG variantgroup1;                /**/
    VG_VERSION_REPORT_V2_VG variantgroup2;                /**/
    VG_VERSION_REPORT_V2_VG variantgroup3;                /**/
    VG_VERSION_REPORT_V2_VG variantgroup4;                /**/
} ZW_VERSION_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Version Command Class Get V3 command class structs */    
/************************************************************/
typedef struct _ZW_VERSION_COMMAND_CLASS_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedCommandClass;        /**/
} ZW_VERSION_COMMAND_CLASS_GET_V3_FRAME;

/************************************************************/
/* Version Command Class Report V3 command class structs */ 
/************************************************************/
typedef struct _ZW_VERSION_COMMAND_CLASS_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedCommandClass;        /**/
    uint8_t   commandClassVersion;          /**/
} ZW_VERSION_COMMAND_CLASS_REPORT_V3_FRAME;

/************************************************************/
/* Version Get V3 command class structs */                  
/************************************************************/
typedef struct _ZW_VERSION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_VERSION_GET_V3_FRAME;

/************************************************************/
/* Version Report V3 variant group structs */               
/************************************************************/
typedef struct _VG_VERSION_REPORT_V3_VG_
{
    uint8_t   firmwareVersion;              /**/
    uint8_t   firmwareSubVersion;           /**/
} VG_VERSION_REPORT_V3_VG;

/************************************************************/
/* Version Report 1byte V3 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V3_VG variantgroup1;                /**/
} ZW_VERSION_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Version Report 2byte V3 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V3_VG variantgroup1;                /**/
    VG_VERSION_REPORT_V3_VG variantgroup2;                /**/
} ZW_VERSION_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Version Report 3byte V3 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V3_VG variantgroup1;                /**/
    VG_VERSION_REPORT_V3_VG variantgroup2;                /**/
    VG_VERSION_REPORT_V3_VG variantgroup3;                /**/
} ZW_VERSION_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Version Report 4byte V3 command class structs */         
/************************************************************/
typedef struct _ZW_VERSION_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLibraryType;             /**/
    uint8_t   zWaveProtocolVersion;         /**/
    uint8_t   zWaveProtocolSubVersion;      /**/
    uint8_t   firmware0Version;             /**/
    uint8_t   firmware0SubVersion;          /**/
    uint8_t   hardwareVersion;              /**/
    uint8_t   numberOfFirmwareTargets;      /**/
    VG_VERSION_REPORT_V3_VG variantgroup1;                /**/
    VG_VERSION_REPORT_V3_VG variantgroup2;                /**/
    VG_VERSION_REPORT_V3_VG variantgroup3;                /**/
    VG_VERSION_REPORT_V3_VG variantgroup4;                /**/
} ZW_VERSION_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Version Capabilities Get V3 command class structs */     
/************************************************************/
typedef struct _ZW_VERSION_CAPABILITIES_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_VERSION_CAPABILITIES_GET_V3_FRAME;

/************************************************************/
/* Version Capabilities Report V3 command class structs */  
/************************************************************/
typedef struct _ZW_VERSION_CAPABILITIES_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_VERSION_CAPABILITIES_REPORT_V3_FRAME;

/************************************************************/
/* Version Zwave Software Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_VERSION_ZWAVE_SOFTWARE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_VERSION_ZWAVE_SOFTWARE_GET_V3_FRAME;

/************************************************************/
/* Version Zwave Software Report V3 command class structs */
/************************************************************/
typedef struct _ZW_VERSION_ZWAVE_SOFTWARE_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sdkVersion1;                  /* MSB */
    uint8_t   sdkVersion2;                  
    uint8_t   sdkVersion3;                  /* LSB */
    uint8_t   applicationFrameworkApiVersion1;/* MSB */
    uint8_t   applicationFrameworkApiVersion2;
    uint8_t   applicationFrameworkApiVersion3;/* LSB */
    uint8_t   applicationFrameworkBuildNumber1;/* MSB */
    uint8_t   applicationFrameworkBuildNumber2;/* LSB */
    uint8_t   hostInterfaceVersion1;        /* MSB */
    uint8_t   hostInterfaceVersion2;        
    uint8_t   hostInterfaceVersion3;        /* LSB */
    uint8_t   hostInterfaceBuildNumber1;    /* MSB */
    uint8_t   hostInterfaceBuildNumber2;    /* LSB */
    uint8_t   zWaveProtocolVersion1;        /* MSB */
    uint8_t   zWaveProtocolVersion2;        
    uint8_t   zWaveProtocolVersion3;        /* LSB */
    uint8_t   zWaveProtocolBuildNumber1;    /* MSB */
    uint8_t   zWaveProtocolBuildNumber2;    /* LSB */
    uint8_t   applicationVersion1;          /* MSB */
    uint8_t   applicationVersion2;          
    uint8_t   applicationVersion3;          /* LSB */
    uint8_t   applicationBuildNumber1;      /* MSB */
    uint8_t   applicationBuildNumber2;      /* LSB */
} ZW_VERSION_ZWAVE_SOFTWARE_REPORT_V3_FRAME;

/************************************************************/
/* Wake Up Interval Get command class structs */            
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_INTERVAL_GET_FRAME;

/************************************************************/
/* Wake Up Interval Report command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     
    uint8_t   seconds3;                     /* LSB */
    uint8_t   nodeid;                       /**/
} ZW_WAKE_UP_INTERVAL_REPORT_FRAME;

/************************************************************/
/* Wake Up Interval Set command class structs */            
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     
    uint8_t   seconds3;                     /* LSB */
    uint8_t   nodeid;                       /**/
} ZW_WAKE_UP_INTERVAL_SET_FRAME;

/************************************************************/
/* Wake Up No More Information command class structs */     
/************************************************************/
typedef struct _ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_NO_MORE_INFORMATION_FRAME;

/************************************************************/
/* Wake Up Notification command class structs */            
/************************************************************/
typedef struct _ZW_WAKE_UP_NOTIFICATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_NOTIFICATION_FRAME;

/************************************************************/
/* Wake Up Interval Capabilities Get V2 command class structs */
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V2_FRAME;

/************************************************************/
/* Wake Up Interval Capabilities Report V2 command class structs */
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   minimumWakeUpIntervalSeconds1;/* MSB */
    uint8_t   minimumWakeUpIntervalSeconds2;
    uint8_t   minimumWakeUpIntervalSeconds3;/* LSB */
    uint8_t   maximumWakeUpIntervalSeconds1;/* MSB */
    uint8_t   maximumWakeUpIntervalSeconds2;
    uint8_t   maximumWakeUpIntervalSeconds3;/* LSB */
    uint8_t   defaultWakeUpIntervalSeconds1;/* MSB */
    uint8_t   defaultWakeUpIntervalSeconds2;
    uint8_t   defaultWakeUpIntervalSeconds3;/* LSB */
    uint8_t   wakeUpIntervalStepSeconds1;   /* MSB */
    uint8_t   wakeUpIntervalStepSeconds2;   
    uint8_t   wakeUpIntervalStepSeconds3;   /* LSB */
} ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V2_FRAME;

/************************************************************/
/* Wake Up Interval Get V2 command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_INTERVAL_GET_V2_FRAME;

/************************************************************/
/* Wake Up Interval Report V2 command class structs */      
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     
    uint8_t   seconds3;                     /* LSB */
    uint8_t   nodeid;                       /**/
} ZW_WAKE_UP_INTERVAL_REPORT_V2_FRAME;

/************************************************************/
/* Wake Up Interval Set V2 command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     
    uint8_t   seconds3;                     /* LSB */
    uint8_t   nodeid;                       /**/
} ZW_WAKE_UP_INTERVAL_SET_V2_FRAME;

/************************************************************/
/* Wake Up No More Information V2 command class structs */  
/************************************************************/
typedef struct _ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_NO_MORE_INFORMATION_V2_FRAME;

/************************************************************/
/* Wake Up Notification V2 command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_NOTIFICATION_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_NOTIFICATION_V2_FRAME;

/************************************************************/
/* Wake Up Interval Capabilities Get V3 command class structs */
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_INTERVAL_CAPABILITIES_GET_V3_FRAME;

/************************************************************/
/* Wake Up Interval Capabilities Report V3 command class structs */
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   minimumWakeUpIntervalSeconds1;/* MSB */
    uint8_t   minimumWakeUpIntervalSeconds2;
    uint8_t   minimumWakeUpIntervalSeconds3;/* LSB */
    uint8_t   maximumWakeUpIntervalSeconds1;/* MSB */
    uint8_t   maximumWakeUpIntervalSeconds2;
    uint8_t   maximumWakeUpIntervalSeconds3;/* LSB */
    uint8_t   defaultWakeUpIntervalSeconds1;/* MSB */
    uint8_t   defaultWakeUpIntervalSeconds2;
    uint8_t   defaultWakeUpIntervalSeconds3;/* LSB */
    uint8_t   wakeUpIntervalStepSeconds1;   /* MSB */
    uint8_t   wakeUpIntervalStepSeconds2;   
    uint8_t   wakeUpIntervalStepSeconds3;   /* LSB */
    uint8_t   properties1;                  /* masked byte */
} ZW_WAKE_UP_INTERVAL_CAPABILITIES_REPORT_V3_FRAME;

/************************************************************/
/* Wake Up Interval Get V3 command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_INTERVAL_GET_V3_FRAME;

/************************************************************/
/* Wake Up Interval Report V3 command class structs */      
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     
    uint8_t   seconds3;                     /* LSB */
    uint8_t   nodeid;                       /**/
} ZW_WAKE_UP_INTERVAL_REPORT_V3_FRAME;

/************************************************************/
/* Wake Up Interval Set V3 command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_INTERVAL_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seconds1;                     /* MSB */
    uint8_t   seconds2;                     
    uint8_t   seconds3;                     /* LSB */
    uint8_t   nodeid;                       /**/
} ZW_WAKE_UP_INTERVAL_SET_V3_FRAME;

/************************************************************/
/* Wake Up No More Information V3 command class structs */  
/************************************************************/
typedef struct _ZW_WAKE_UP_NO_MORE_INFORMATION_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_NO_MORE_INFORMATION_V3_FRAME;

/************************************************************/
/* Wake Up Notification V3 command class structs */         
/************************************************************/
typedef struct _ZW_WAKE_UP_NOTIFICATION_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WAKE_UP_NOTIFICATION_V3_FRAME;

/************************************************************/
/* Lowpan First Fragment 1byte command class structs */     
/************************************************************/
typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   payload1;                     
} ZW_LOWPAN_FIRST_FRAGMENT_1BYTE_FRAME;

/************************************************************/
/* Lowpan First Fragment 2byte command class structs */     
/************************************************************/
typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     /* LSB */
} ZW_LOWPAN_FIRST_FRAGMENT_2BYTE_FRAME;

/************************************************************/
/* Lowpan First Fragment 3byte command class structs */     
/************************************************************/
typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     /* LSB */
} ZW_LOWPAN_FIRST_FRAGMENT_3BYTE_FRAME;

/************************************************************/
/* Lowpan First Fragment 4byte command class structs */     
/************************************************************/
typedef struct _ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     
    uint8_t   payload4;                     /* LSB */
} ZW_LOWPAN_FIRST_FRAGMENT_4BYTE_FRAME;

/************************************************************/
/* Lowpan Subsequent Fragment 1byte command class structs */
/************************************************************/
typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   datagramOffset;               /**/
    uint8_t   payload1;                     
} ZW_LOWPAN_SUBSEQUENT_FRAGMENT_1BYTE_FRAME;

/************************************************************/
/* Lowpan Subsequent Fragment 2byte command class structs */
/************************************************************/
typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   datagramOffset;               /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     /* LSB */
} ZW_LOWPAN_SUBSEQUENT_FRAGMENT_2BYTE_FRAME;

/************************************************************/
/* Lowpan Subsequent Fragment 3byte command class structs */
/************************************************************/
typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   datagramOffset;               /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     /* LSB */
} ZW_LOWPAN_SUBSEQUENT_FRAGMENT_3BYTE_FRAME;

/************************************************************/
/* Lowpan Subsequent Fragment 4byte command class structs */
/************************************************************/
typedef struct _ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd_datagramSize1;            /* The command + parameter Datagram Size 1 */
    uint8_t   datagramSize2;                /**/
    uint8_t   datagramTag;                  /**/
    uint8_t   datagramOffset;               /**/
    uint8_t   payload1;                     /* MSB */
    uint8_t   payload2;                     
    uint8_t   payload3;                     
    uint8_t   payload4;                     /* LSB */
} ZW_LOWPAN_SUBSEQUENT_FRAGMENT_4BYTE_FRAME;

/************************************************************/
/* Command Zip Packet 1byte command class structs */        
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerExtension1;             
    uint8_t   zWaveCommand1;                
} ZW_COMMAND_ZIP_PACKET_1BYTE_FRAME;

/************************************************************/
/* Command Zip Packet 2byte command class structs */        
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_2BYTE_FRAME;

/************************************************************/
/* Command Zip Packet 3byte command class structs */        
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_3BYTE_FRAME;

/************************************************************/
/* Command Zip Packet 4byte command class structs */        
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             
    uint8_t   headerExtension4;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                
    uint8_t   zWaveCommand4;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_4BYTE_FRAME;

/************************************************************/
/* Command Zip Packet 1byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             
    uint8_t   zWaveCommand1;                
} ZW_COMMAND_ZIP_PACKET_1BYTE_V2_FRAME;

/************************************************************/
/* Command Zip Packet 2byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_2BYTE_V2_FRAME;

/************************************************************/
/* Command Zip Packet 3byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_3BYTE_V2_FRAME;

/************************************************************/
/* Command Zip Packet 4byte V2 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             
    uint8_t   headerExtension4;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                
    uint8_t   zWaveCommand4;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_4BYTE_V2_FRAME;

/************************************************************/
/* Command Zip Packet 1byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             
    uint8_t   zWaveCommand1;                
} ZW_COMMAND_ZIP_PACKET_1BYTE_V3_FRAME;

/************************************************************/
/* Command Zip Packet 2byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_2BYTE_V3_FRAME;

/************************************************************/
/* Command Zip Packet 3byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_3BYTE_V3_FRAME;

/************************************************************/
/* Command Zip Packet 4byte V3 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             
    uint8_t   headerExtension4;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                
    uint8_t   zWaveCommand4;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_4BYTE_V3_FRAME;

/************************************************************/
/* Command Zip Packet 1byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             
    uint8_t   zWaveCommand1;                
} ZW_COMMAND_ZIP_PACKET_1BYTE_V4_FRAME;

/************************************************************/
/* Command Zip Packet 2byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_2BYTE_V4_FRAME;

/************************************************************/
/* Command Zip Packet 3byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_3BYTE_V4_FRAME;

/************************************************************/
/* Command Zip Packet 4byte V4 command class structs */     
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_PACKET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   seqNo;                        /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   headerLength;                 /**/
    uint8_t   headerExtension1;             /* MSB */
    uint8_t   headerExtension2;             
    uint8_t   headerExtension3;             
    uint8_t   headerExtension4;             /* LSB */
    uint8_t   zWaveCommand1;                /* MSB */
    uint8_t   zWaveCommand2;                
    uint8_t   zWaveCommand3;                
    uint8_t   zWaveCommand4;                /* LSB */
} ZW_COMMAND_ZIP_PACKET_4BYTE_V4_FRAME;

/************************************************************/
/* Command Zip Keep Alive V4 command class structs */       
/************************************************************/
typedef struct _ZW_COMMAND_ZIP_KEEP_ALIVE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_COMMAND_ZIP_KEEP_ALIVE_V4_FRAME;

/************************************************************/
/* Command Command Class Not Supported command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   offendingCommandClass;        /**/
    uint8_t   offendingCommand;             /**/
} ZW_COMMAND_COMMAND_CLASS_NOT_SUPPORTED_FRAME;

/************************************************************/
/* Switch Color Supported Get command class structs */      
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_COLOR_SUPPORTED_GET_FRAME;

/************************************************************/
/* Switch Color Supported Report command class structs */   
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentMask1;          /* MSB */
    uint8_t   colorComponentMask2;          /* LSB */
} ZW_SWITCH_COLOR_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Switch Color Get command class structs */                
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
} ZW_SWITCH_COLOR_GET_FRAME;

/************************************************************/
/* Switch Color Report command class structs */             
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
    uint8_t   value;                        /**/
} ZW_SWITCH_COLOR_REPORT_FRAME;

/************************************************************/
/* Switch Color Set variant group structs */                
/************************************************************/
typedef struct _VG_SWITCH_COLOR_SET_VG_
{
    uint8_t   colorComponentId;             /**/
    uint8_t   value;                        /**/
} VG_SWITCH_COLOR_SET_VG;

/************************************************************/
/* Switch Color Set 1byte command class structs */          
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_VG variantgroup1;                /**/
} ZW_SWITCH_COLOR_SET_1BYTE_FRAME;

/************************************************************/
/* Switch Color Set 2byte command class structs */          
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_VG variantgroup2;                /**/
} ZW_SWITCH_COLOR_SET_2BYTE_FRAME;

/************************************************************/
/* Switch Color Set 3byte command class structs */          
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_VG variantgroup2;                /**/
    VG_SWITCH_COLOR_SET_VG variantgroup3;                /**/
} ZW_SWITCH_COLOR_SET_3BYTE_FRAME;

/************************************************************/
/* Switch Color Set 4byte command class structs */          
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_VG variantgroup2;                /**/
    VG_SWITCH_COLOR_SET_VG variantgroup3;                /**/
    VG_SWITCH_COLOR_SET_VG variantgroup4;                /**/
} ZW_SWITCH_COLOR_SET_4BYTE_FRAME;

/************************************************************/
/* Switch Color Start Level Change command class structs */ 
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_START_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   colorComponentId;             /**/
    uint8_t   startLevel;                   /**/
} ZW_SWITCH_COLOR_START_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Switch Color Stop Level Change command class structs */  
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
} ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Switch Color Supported Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_COLOR_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Switch Color Supported Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentMask1;          /* MSB */
    uint8_t   colorComponentMask2;          /* LSB */
} ZW_SWITCH_COLOR_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Switch Color Get V2 command class structs */             
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
} ZW_SWITCH_COLOR_GET_V2_FRAME;

/************************************************************/
/* Switch Color Report V2 command class structs */          
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
    uint8_t   value;                        /**/
} ZW_SWITCH_COLOR_REPORT_V2_FRAME;

/************************************************************/
/* Switch Color Set V2 variant group structs */             
/************************************************************/
typedef struct _VG_SWITCH_COLOR_SET_V2_VG_
{
    uint8_t   colorComponentId;             /**/
    uint8_t   value;                        /**/
} VG_SWITCH_COLOR_SET_V2_VG;

/************************************************************/
/* Switch Color Set 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V2_VG variantgroup1;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Switch Color Set 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V2_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_V2_VG variantgroup2;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Switch Color Set 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V2_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_V2_VG variantgroup2;                /**/
    VG_SWITCH_COLOR_SET_V2_VG variantgroup3;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Switch Color Set 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V2_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_V2_VG variantgroup2;                /**/
    VG_SWITCH_COLOR_SET_V2_VG variantgroup3;                /**/
    VG_SWITCH_COLOR_SET_V2_VG variantgroup4;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Switch Color Start Level Change V2 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_START_LEVEL_CHANGE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   colorComponentId;             /**/
    uint8_t   startLevel;                   /**/
} ZW_SWITCH_COLOR_START_LEVEL_CHANGE_V2_FRAME;

/************************************************************/
/* Switch Color Stop Level Change V2 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
} ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_V2_FRAME;

/************************************************************/
/* Switch Color Supported Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SWITCH_COLOR_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Switch Color Supported Report V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SUPPORTED_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentMask1;          /* MSB */
    uint8_t   colorComponentMask2;          /* LSB */
} ZW_SWITCH_COLOR_SUPPORTED_REPORT_V3_FRAME;

/************************************************************/
/* Switch Color Get V3 command class structs */             
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
} ZW_SWITCH_COLOR_GET_V3_FRAME;

/************************************************************/
/* Switch Color Report V3 command class structs */          
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
    uint8_t   currentValue;                 /**/
    uint8_t   targetValue;                  /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_REPORT_V3_FRAME;

/************************************************************/
/* Switch Color Set V3 variant group structs */             
/************************************************************/
typedef struct _VG_SWITCH_COLOR_SET_V3_VG_
{
    uint8_t   colorComponentId;             /**/
    uint8_t   value;                        /**/
} VG_SWITCH_COLOR_SET_V3_VG;

/************************************************************/
/* Switch Color Set 1byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V3_VG variantgroup1;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Switch Color Set 2byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V3_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_V3_VG variantgroup2;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Switch Color Set 3byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V3_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_V3_VG variantgroup2;                /**/
    VG_SWITCH_COLOR_SET_V3_VG variantgroup3;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Switch Color Set 4byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_SWITCH_COLOR_SET_V3_VG variantgroup1;                /**/
    VG_SWITCH_COLOR_SET_V3_VG variantgroup2;                /**/
    VG_SWITCH_COLOR_SET_V3_VG variantgroup3;                /**/
    VG_SWITCH_COLOR_SET_V3_VG variantgroup4;                /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Switch Color Start Level Change V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_START_LEVEL_CHANGE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   colorComponentId;             /**/
    uint8_t   startLevel;                   /**/
    uint8_t   duration;                     /**/
} ZW_SWITCH_COLOR_START_LEVEL_CHANGE_V3_FRAME;

/************************************************************/
/* Switch Color Stop Level Change V3 command class structs */
/************************************************************/
typedef struct _ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   colorComponentId;             /**/
} ZW_SWITCH_COLOR_STOP_LEVEL_CHANGE_V3_FRAME;

/************************************************************/
/* Schedule Supported Get command class structs */          
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Schedule Supported Report variant group structs */       
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_REPORT_VG_
{
    uint8_t   supportedCc;                  /**/
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_SUPPORTED_REPORT_VG;

/************************************************************/
/* Schedule Supported Report 1byte command class structs */ 
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Schedule Supported Report 2byte command class structs */ 
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup2;                /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Schedule Supported Report 3byte command class structs */ 
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup3;                /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Schedule Supported Report 4byte command class structs */ 
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup3;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_VG variantgroup4;                /**/
    uint8_t   properties3;                  /* masked byte */
} ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Command Schedule Set variant group structs */            
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_1BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_SET_1BYTE_VG;

/************************************************************/
/* Command Schedule Set variant group structs */            
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_2BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_2BYTE_VG;

/************************************************************/
/* Command Schedule Set variant group structs */            
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_3BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_3BYTE_VG;

/************************************************************/
/* Command Schedule Set variant group structs */            
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_4BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_4BYTE_VG;

/************************************************************/
/* Command Schedule Set 1byte command class structs */      
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_SET_1BYTE_FRAME;

/************************************************************/
/* Command Schedule Set 2byte command class structs */      
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_SET_2BYTE_FRAME;

/************************************************************/
/* Command Schedule Set 3byte command class structs */      
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_SET_3BYTE_FRAME;

/************************************************************/
/* Command Schedule Set 4byte command class structs */      
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_SET_4BYTE_FRAME;

/************************************************************/
/* Command Schedule Get command class structs */            
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
} ZW_COMMAND_SCHEDULE_GET_FRAME;

/************************************************************/
/* Command Schedule Report variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_REPORT_1BYTE_VG;

/************************************************************/
/* Command Schedule Report variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_2BYTE_VG;

/************************************************************/
/* Command Schedule Report variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_3BYTE_VG;

/************************************************************/
/* Command Schedule Report variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG;

/************************************************************/
/* Command Schedule Report 1byte command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Command Schedule Report 2byte command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Command Schedule Report 3byte command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Command Schedule Report 4byte command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   userIdentifier;               /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_4BYTE_FRAME;

/************************************************************/
/* Schedule Remove command class structs */                 
/************************************************************/
typedef struct _ZW_SCHEDULE_REMOVE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
} ZW_SCHEDULE_REMOVE_FRAME;

/************************************************************/
/* Schedule State Set command class structs */              
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleState;                /**/
} ZW_SCHEDULE_STATE_SET_FRAME;

/************************************************************/
/* Schedule State Get command class structs */              
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SCHEDULE_STATE_GET_FRAME;

/************************************************************/
/* Schedule State Report variant group structs */           
/************************************************************/
typedef struct _VG_SCHEDULE_STATE_REPORT_VG_
{
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_STATE_REPORT_VG;

/************************************************************/
/* Schedule State Report 1byte command class structs */     
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_VG variantgroup1;                /**/
} ZW_SCHEDULE_STATE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Schedule State Report 2byte command class structs */     
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_VG variantgroup2;                /**/
} ZW_SCHEDULE_STATE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Schedule State Report 3byte command class structs */     
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_VG variantgroup3;                /**/
} ZW_SCHEDULE_STATE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Schedule State Report 4byte command class structs */     
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_VG variantgroup3;                /**/
    VG_SCHEDULE_STATE_REPORT_VG variantgroup4;                /**/
} ZW_SCHEDULE_STATE_REPORT_4BYTE_FRAME;

/************************************************************/
/* Schedule Supported Get V2 command class structs */       
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Schedule Supported Report V2 variant group structs */    
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_REPORT_V2_VG_
{
    uint8_t   supportedCc;                  /**/
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_SUPPORTED_REPORT_V2_VG;

/************************************************************/
/* Schedule Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup1;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Schedule Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup2;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Schedule Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup3;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Schedule Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup3;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V2_VG variantgroup4;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Set V2 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_1BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_SET_1BYTE_V2_VG;

/************************************************************/
/* Command Schedule Set V2 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_2BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_2BYTE_V2_VG;

/************************************************************/
/* Command Schedule Set V2 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_3BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_3BYTE_V2_VG;

/************************************************************/
/* Command Schedule Set V2 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG;

/************************************************************/
/* Command Schedule Set 1byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Set 2byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Set 3byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Set 4byte V2 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V2_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Get V2 command class structs */         
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_COMMAND_SCHEDULE_GET_V2_FRAME;

/************************************************************/
/* Command Schedule Report V2 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_1BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_REPORT_1BYTE_V2_VG;

/************************************************************/
/* Command Schedule Report V2 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_2BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_2BYTE_V2_VG;

/************************************************************/
/* Command Schedule Report V2 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_3BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_3BYTE_V2_VG;

/************************************************************/
/* Command Schedule Report V2 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG;

/************************************************************/
/* Command Schedule Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Command Schedule Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V2_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Schedule Remove V2 command class structs */              
/************************************************************/
typedef struct _ZW_SCHEDULE_REMOVE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_REMOVE_V2_FRAME;

/************************************************************/
/* Schedule State Set V2 command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleState;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_SET_V2_FRAME;

/************************************************************/
/* Schedule State Get V2 command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_GET_V2_FRAME;

/************************************************************/
/* Schedule State Report V2 variant group structs */        
/************************************************************/
typedef struct _VG_SCHEDULE_STATE_REPORT_V2_VG_
{
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_STATE_REPORT_V2_VG;

/************************************************************/
/* Schedule State Report 1byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup1;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Schedule State Report 2byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup2;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Schedule State Report 3byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup3;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Schedule State Report 4byte V2 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup3;                /**/
    VG_SCHEDULE_STATE_REPORT_V2_VG variantgroup4;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Schedule Supported Get V3 command class structs */       
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Schedule Supported Report V3 variant group structs */    
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_REPORT_V3_VG_
{
    uint8_t   supportedCc;                  /**/
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_SUPPORTED_REPORT_V3_VG;

/************************************************************/
/* Schedule Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup1;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Schedule Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup2;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Schedule Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup3;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Schedule Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup3;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V3_VG variantgroup4;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Set V3 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_1BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_SET_1BYTE_V3_VG;

/************************************************************/
/* Command Schedule Set V3 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_2BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_2BYTE_V3_VG;

/************************************************************/
/* Command Schedule Set V3 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_3BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_3BYTE_V3_VG;

/************************************************************/
/* Command Schedule Set V3 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG;

/************************************************************/
/* Command Schedule Set 1byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Set 2byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Set 3byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Set 4byte V3 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V3_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Get V3 command class structs */         
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_COMMAND_SCHEDULE_GET_V3_FRAME;

/************************************************************/
/* Command Schedule Report V3 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_1BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_REPORT_1BYTE_V3_VG;

/************************************************************/
/* Command Schedule Report V3 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_2BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_2BYTE_V3_VG;

/************************************************************/
/* Command Schedule Report V3 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_3BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_3BYTE_V3_VG;

/************************************************************/
/* Command Schedule Report V3 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG;

/************************************************************/
/* Command Schedule Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Command Schedule Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V3_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Schedule Remove V3 command class structs */              
/************************************************************/
typedef struct _ZW_SCHEDULE_REMOVE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_REMOVE_V3_FRAME;

/************************************************************/
/* Schedule State Set V3 command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleState;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_SET_V3_FRAME;

/************************************************************/
/* Schedule State Get V3 command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_GET_V3_FRAME;

/************************************************************/
/* Schedule State Report V3 variant group structs */        
/************************************************************/
typedef struct _VG_SCHEDULE_STATE_REPORT_V3_VG_
{
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_STATE_REPORT_V3_VG;

/************************************************************/
/* Schedule State Report 1byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup1;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Schedule State Report 2byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup2;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Schedule State Report 3byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup3;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Schedule State Report 4byte V3 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup3;                /**/
    VG_SCHEDULE_STATE_REPORT_V3_VG variantgroup4;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Schedule Supported Get V4 command class structs */       
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_SUPPORTED_GET_V4_FRAME;

/************************************************************/
/* Schedule Supported Report V4 variant group structs */    
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_REPORT_V4_VG_
{
    uint8_t   supportedCc;                  /**/
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_SUPPORTED_REPORT_V4_VG;

/************************************************************/
/* Schedule Supported Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup1;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup2;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup3;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCc;          /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup3;                /**/
    VG_SCHEDULE_SUPPORTED_REPORT_V4_VG variantgroup4;                /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   numberOfSupportedScheduleBlocks;/**/
} ZW_SCHEDULE_SUPPORTED_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Set V4 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_1BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_SET_1BYTE_V4_VG;

/************************************************************/
/* Command Schedule Set V4 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_2BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_2BYTE_V4_VG;

/************************************************************/
/* Command Schedule Set V4 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_3BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_3BYTE_V4_VG;

/************************************************************/
/* Command Schedule Set V4 variant group structs */         
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG;

/************************************************************/
/* Command Schedule Set 1byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_SET_1BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Set 2byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_SET_2BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Set 3byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_SET_3BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Set 4byte V4 command class structs */   
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_SET_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_SET_4BYTE_V4_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_SET_4BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Get V4 command class structs */         
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   properties1;                  /* masked byte */
} ZW_COMMAND_SCHEDULE_GET_V4_FRAME;

/************************************************************/
/* Command Schedule Report V4 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_1BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     
} VG_COMMAND_SCHEDULE_REPORT_1BYTE_V4_VG;

/************************************************************/
/* Command Schedule Report V4 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_2BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_2BYTE_V4_VG;

/************************************************************/
/* Command Schedule Report V4 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_3BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_3BYTE_V4_VG;

/************************************************************/
/* Command Schedule Report V4 variant group structs */      
/************************************************************/
typedef struct _VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG_
{
    uint8_t   cmdLength;                    /**/
    uint8_t   cmdByte1;                     /* MSB */
    uint8_t   cmdByte2;                     
    uint8_t   cmdByte3;                     
    uint8_t   cmdByte4;                     /* LSB */
} VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG;

/************************************************************/
/* Command Schedule Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup1;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup2;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup3;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Command Schedule Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   startYear;                    /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   properties5;                  /* masked byte */
    uint8_t   durationByte1;                /* MSB */
    uint8_t   durationByte2;                /* LSB */
    uint8_t   reportsToFollow;              /**/
    uint8_t   numberOfCmdToFollow;          /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup3;                /**/
    VG_COMMAND_SCHEDULE_REPORT_4BYTE_V4_VG variantgroup4;                /**/
} ZW_COMMAND_SCHEDULE_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Schedule Remove V4 command class structs */              
/************************************************************/
typedef struct _ZW_SCHEDULE_REMOVE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_REMOVE_V4_FRAME;

/************************************************************/
/* Schedule State Set V4 command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId;                   /**/
    uint8_t   scheduleState;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_SET_V4_FRAME;

/************************************************************/
/* Schedule State Get V4 command class structs */           
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_GET_V4_FRAME;

/************************************************************/
/* Schedule State Report V4 variant group structs */        
/************************************************************/
typedef struct _VG_SCHEDULE_STATE_REPORT_V4_VG_
{
    uint8_t   properties2;                  /* masked byte */
} VG_SCHEDULE_STATE_REPORT_V4_VG;

/************************************************************/
/* Schedule State Report 1byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup1;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Schedule State Report 2byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup2;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Schedule State Report 3byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup3;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Schedule State Report 4byte V4 command class structs */  
/************************************************************/
typedef struct _ZW_SCHEDULE_STATE_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleId;  /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup2;                /**/
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup3;                /**/
    VG_SCHEDULE_STATE_REPORT_V4_VG variantgroup4;                /**/
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_STATE_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Commands Get V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_COMMANDS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
} ZW_SCHEDULE_SUPPORTED_COMMANDS_GET_V4_FRAME;

/************************************************************/
/* Schedule Supported Commands Report V4 variant group structs */
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_1BYTE_V4_VG_
{
    uint8_t   commandClass;                 /**/
    uint8_t   supportedCommandListLength;   /**/
    uint8_t   supportedCommand1;            
} VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_1BYTE_V4_VG;

/************************************************************/
/* Schedule Supported Commands Report V4 variant group structs */
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_2BYTE_V4_VG_
{
    uint8_t   commandClass;                 /**/
    uint8_t   supportedCommandListLength;   /**/
    uint8_t   supportedCommand1;            /* MSB */
    uint8_t   supportedCommand2;            /* LSB */
} VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_2BYTE_V4_VG;

/************************************************************/
/* Schedule Supported Commands Report V4 variant group structs */
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_3BYTE_V4_VG_
{
    uint8_t   commandClass;                 /**/
    uint8_t   supportedCommandListLength;   /**/
    uint8_t   supportedCommand1;            /* MSB */
    uint8_t   supportedCommand2;            
    uint8_t   supportedCommand3;            /* LSB */
} VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_3BYTE_V4_VG;

/************************************************************/
/* Schedule Supported Commands Report V4 variant group structs */
/************************************************************/
typedef struct _VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG_
{
    uint8_t   commandClass;                 /**/
    uint8_t   supportedCommandListLength;   /**/
    uint8_t   supportedCommand1;            /* MSB */
    uint8_t   supportedCommand2;            
    uint8_t   supportedCommand3;            
    uint8_t   supportedCommand4;            /* LSB */
} VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG;

/************************************************************/
/* Schedule Supported Commands Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   commandClassListLength;       /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
} ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Commands Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   commandClassListLength;       /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
} ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Commands Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   commandClassListLength;       /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup3;                /**/
} ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Schedule Supported Commands Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleIdBlock;              /**/
    uint8_t   commandClassListLength;       /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup3;                /**/
    VG_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_VG variantgroup4;                /**/
} ZW_SCHEDULE_SUPPORTED_COMMANDS_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Controller Change command class structs */               
/************************************************************/
typedef struct _ZW_CONTROLLER_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   reserved;                     /**/
    uint8_t   mode;                         /**/
    uint8_t   txOptions;                    /**/
} ZW_CONTROLLER_CHANGE_FRAME;

/************************************************************/
/* Controller Change Status 1byte command class structs */  
/************************************************************/
typedef struct _ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                
} ZW_CONTROLLER_CHANGE_STATUS_1BYTE_FRAME;

/************************************************************/
/* Controller Change Status 2byte command class structs */  
/************************************************************/
typedef struct _ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_CONTROLLER_CHANGE_STATUS_2BYTE_FRAME;

/************************************************************/
/* Controller Change Status 3byte command class structs */  
/************************************************************/
typedef struct _ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_CONTROLLER_CHANGE_STATUS_3BYTE_FRAME;

/************************************************************/
/* Controller Change Status 4byte command class structs */  
/************************************************************/
typedef struct _ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   status;                       /**/
    uint8_t   reserved;                     /**/
    uint8_t   newNodeId;                    /**/
    uint8_t   nodeInfoLength;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   basicDeviceClass;             /**/
    uint8_t   genericDeviceClass;           /**/
    uint8_t   specificDeviceClass;          /**/
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_CONTROLLER_CHANGE_STATUS_4BYTE_FRAME;

/************************************************************/
/* Zip Node Solicitation command class structs */           
/************************************************************/
typedef struct _ZW_ZIP_NODE_SOLICITATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reserved;                     /**/
    uint8_t   nodeId;                       /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
} ZW_ZIP_NODE_SOLICITATION_FRAME;

/************************************************************/
/* Zip Inv Node Solicitation command class structs */       
/************************************************************/
typedef struct _ZW_ZIP_INV_NODE_SOLICITATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
} ZW_ZIP_INV_NODE_SOLICITATION_FRAME;

/************************************************************/
/* Zip Node Advertisement command class structs */          
/************************************************************/
typedef struct _ZW_ZIP_NODE_ADVERTISEMENT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   homeId1;                      /* MSB */
    uint8_t   homeId2;                      
    uint8_t   homeId3;                      
    uint8_t   homeId4;                      /* LSB */
} ZW_ZIP_NODE_ADVERTISEMENT_FRAME;

/************************************************************/
/* Zip Node Solicitation V2 command class structs */        
/************************************************************/
typedef struct _ZW_ZIP_NODE_SOLICITATION_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   reserved;                     /**/
    uint8_t   nodeId;                       /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
} ZW_ZIP_NODE_SOLICITATION_V2_FRAME;

/************************************************************/
/* Zip Inv Node Solicitation V2 command class structs */    
/************************************************************/
typedef struct _ZW_ZIP_INV_NODE_SOLICITATION_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_ZIP_INV_NODE_SOLICITATION_V2_FRAME;

/************************************************************/
/* Zip Node Advertisement V2 command class structs */       
/************************************************************/
typedef struct _ZW_ZIP_NODE_ADVERTISEMENT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   nodeId;                       /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   homeId1;                      /* MSB */
    uint8_t   homeId2;                      
    uint8_t   homeId3;                      
    uint8_t   homeId4;                      /* LSB */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_ZIP_NODE_ADVERTISEMENT_V2_FRAME;

/************************************************************/
/* Association Group Name Get command class structs */      
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_NAME_GET_FRAME;

/************************************************************/
/* Association Group Name Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        
} ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_FRAME;

/************************************************************/
/* Association Group Name Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_FRAME;

/************************************************************/
/* Association Group Name Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_FRAME;

/************************************************************/
/* Association Group Name Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_FRAME;

/************************************************************/
/* Association Group Info Get command class structs */      
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_INFO_GET_FRAME;

/************************************************************/
/* Association Group Info Report variant group structs */   
/************************************************************/
typedef struct _VG_ASSOCIATION_GROUP_INFO_REPORT_VG_
{
    uint8_t   groupingIdentifier;           /**/
    uint8_t   mode;                         /**/
    uint8_t   profile1;                     /**/
    uint8_t   profile2;                     /**/
    uint8_t   reserved;                     /**/
    uint8_t   eventCode1;                   /* MSB */
    uint8_t   eventCode2;                   /* LSB */
} VG_ASSOCIATION_GROUP_INFO_REPORT_VG;

/************************************************************/
/* Association Group Info Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_FRAME;

/************************************************************/
/* Association Group Info Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup2;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_FRAME;

/************************************************************/
/* Association Group Info Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup2;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup3;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_FRAME;

/************************************************************/
/* Association Group Info Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup2;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup3;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_VG variantgroup4;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_FRAME;

/************************************************************/
/* Association Group Command List Get command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_FRAME;

/************************************************************/
/* Association Group Command List Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_FRAME;

/************************************************************/
/* Association Group Command List Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_FRAME;

/************************************************************/
/* Association Group Command List Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     
    uint8_t   command3;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_FRAME;

/************************************************************/
/* Association Group Command List Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     
    uint8_t   command3;                     
    uint8_t   command4;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_FRAME;

/************************************************************/
/* Association Group Name Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_NAME_GET_V2_FRAME;

/************************************************************/
/* Association Group Name Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        
} ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Association Group Name Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Association Group Name Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Association Group Name Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Association Group Info Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_INFO_GET_V2_FRAME;

/************************************************************/
/* Association Group Info Report V2 variant group structs */
/************************************************************/
typedef struct _VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG_
{
    uint8_t   groupingIdentifier;           /**/
    uint8_t   mode;                         /**/
    uint8_t   profile1;                     /**/
    uint8_t   profile2;                     /**/
    uint8_t   reserved;                     /**/
    uint8_t   eventCode1;                   /* MSB */
    uint8_t   eventCode2;                   /* LSB */
} VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG;

/************************************************************/
/* Association Group Info Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup1;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Association Group Info Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup2;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Association Group Info Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup2;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup3;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Association Group Info Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup2;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup3;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V2_VG variantgroup4;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Association Group Command List Get V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_V2_FRAME;

/************************************************************/
/* Association Group Command List Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Association Group Command List Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Association Group Command List Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     
    uint8_t   command3;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Association Group Command List Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     
    uint8_t   command3;                     
    uint8_t   command4;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Association Group Name Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_NAME_GET_V3_FRAME;

/************************************************************/
/* Association Group Name Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        
} ZW_ASSOCIATION_GROUP_NAME_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Association Group Name Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Association Group Name Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Association Group Name Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   lengthOfName;                 /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_ASSOCIATION_GROUP_NAME_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Association Group Info Get V3 command class structs */   
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_INFO_GET_V3_FRAME;

/************************************************************/
/* Association Group Info Report V3 variant group structs */
/************************************************************/
typedef struct _VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG_
{
    uint8_t   groupingIdentifier;           /**/
    uint8_t   mode;                         /**/
    uint8_t   profile1;                     /**/
    uint8_t   profile2;                     /**/
    uint8_t   reserved;                     /**/
    uint8_t   eventCode1;                   /* MSB */
    uint8_t   eventCode2;                   /* LSB */
} VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG;

/************************************************************/
/* Association Group Info Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup1;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Association Group Info Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup2;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Association Group Info Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup2;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup3;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Association Group Info Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup1;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup2;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup3;                /**/
    VG_ASSOCIATION_GROUP_INFO_REPORT_V3_VG variantgroup4;                /**/
} ZW_ASSOCIATION_GROUP_INFO_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Association Group Command List Get V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   groupingIdentifier;           /**/
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_GET_V3_FRAME;

/************************************************************/
/* Association Group Command List Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Association Group Command List Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Association Group Command List Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     
    uint8_t   command3;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Association Group Command List Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   listLength;                   /**/
    uint8_t   command1;                     /* MSB */
    uint8_t   command2;                     
    uint8_t   command3;                     
    uint8_t   command4;                     /* LSB */
} ZW_ASSOCIATION_GROUP_COMMAND_LIST_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Device Reset Locally Notification command class structs */
/************************************************************/
typedef struct _ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DEVICE_RESET_LOCALLY_NOTIFICATION_FRAME;

/************************************************************/
/* Central Scene Supported Get command class structs */     
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CENTRAL_SCENE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Central Scene Supported Report command class structs */  
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Central Scene Notification command class structs */      
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_NOTIFICATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sceneNumber;                  /**/
} ZW_CENTRAL_SCENE_NOTIFICATION_FRAME;

/************************************************************/
/* Central Scene Supported Get V2 command class structs */  
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CENTRAL_SCENE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Central Scene Supported Report V2 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V2_VG_
{
    uint8_t   supportedKeyAttributesForScene1;
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V2_VG;

/************************************************************/
/* Central Scene Supported Report V2 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V2_VG_
{
    uint8_t   supportedKeyAttributesForScene1;/* MSB */
    uint8_t   supportedKeyAttributesForScene2;/* LSB */
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V2_VG;

/************************************************************/
/* Central Scene Supported Report V2 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V2_VG_
{
    uint8_t   supportedKeyAttributesForScene1;/* MSB */
    uint8_t   supportedKeyAttributesForScene2;
    uint8_t   supportedKeyAttributesForScene3;/* LSB */
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V2_VG;

/************************************************************/
/* Central Scene Supported Report V2 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG_
{
    uint8_t   supportedKeyAttributesForScene1;/* MSB */
    uint8_t   supportedKeyAttributesForScene2;
    uint8_t   supportedKeyAttributesForScene3;
    uint8_t   supportedKeyAttributesForScene4;/* LSB */
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG;

/************************************************************/
/* Central Scene Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup1;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Central Scene Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup2;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Central Scene Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup3;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Central Scene Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_VG variantgroup4;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Central Scene Notification V2 command class structs */   
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_NOTIFICATION_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sceneNumber;                  /**/
} ZW_CENTRAL_SCENE_NOTIFICATION_V2_FRAME;

/************************************************************/
/* Central Scene Supported Get V3 command class structs */  
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CENTRAL_SCENE_SUPPORTED_GET_V3_FRAME;

/************************************************************/
/* Central Scene Supported Report V3 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V3_VG_
{
    uint8_t   supportedKeyAttributesForScene1;
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V3_VG;

/************************************************************/
/* Central Scene Supported Report V3 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V3_VG_
{
    uint8_t   supportedKeyAttributesForScene1;/* MSB */
    uint8_t   supportedKeyAttributesForScene2;/* LSB */
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V3_VG;

/************************************************************/
/* Central Scene Supported Report V3 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V3_VG_
{
    uint8_t   supportedKeyAttributesForScene1;/* MSB */
    uint8_t   supportedKeyAttributesForScene2;
    uint8_t   supportedKeyAttributesForScene3;/* LSB */
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V3_VG;

/************************************************************/
/* Central Scene Supported Report V3 variant group structs */
/************************************************************/
typedef struct _VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG_
{
    uint8_t   supportedKeyAttributesForScene1;/* MSB */
    uint8_t   supportedKeyAttributesForScene2;
    uint8_t   supportedKeyAttributesForScene3;
    uint8_t   supportedKeyAttributesForScene4;/* LSB */
} VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG;

/************************************************************/
/* Central Scene Supported Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup1;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Central Scene Supported Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup2;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Central Scene Supported Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup3;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Central Scene Supported Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedScenes;              /**/
    uint8_t   properties1;                  /* masked byte */
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup3;                /**/
    VG_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_VG variantgroup4;                /**/
} ZW_CENTRAL_SCENE_SUPPORTED_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Central Scene Notification V3 command class structs */   
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_NOTIFICATION_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   sceneNumber;                  /**/
} ZW_CENTRAL_SCENE_NOTIFICATION_V3_FRAME;

/************************************************************/
/* Central Scene Configuration Set V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_CONFIGURATION_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_CENTRAL_SCENE_CONFIGURATION_SET_V3_FRAME;

/************************************************************/
/* Central Scene Configuration Get V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_CONFIGURATION_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CENTRAL_SCENE_CONFIGURATION_GET_V3_FRAME;

/************************************************************/
/* Central Scene Configuration Report V3 command class structs */
/************************************************************/
typedef struct _ZW_CENTRAL_SCENE_CONFIGURATION_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_CENTRAL_SCENE_CONFIGURATION_REPORT_V3_FRAME;

/************************************************************/
/* Ip Association Set command class structs */              
/************************************************************/
typedef struct _ZW_IP_ASSOCIATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   endPoint;                     /**/
} ZW_IP_ASSOCIATION_SET_FRAME;

/************************************************************/
/* Ip Association Get command class structs */              
/************************************************************/
typedef struct _ZW_IP_ASSOCIATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   index;                        /**/
} ZW_IP_ASSOCIATION_GET_FRAME;

/************************************************************/
/* Ip Association Report command class structs */           
/************************************************************/
typedef struct _ZW_IP_ASSOCIATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   index;                        /**/
    uint8_t   actualNodes;                  /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   endPoint;                     /**/
} ZW_IP_ASSOCIATION_REPORT_FRAME;

/************************************************************/
/* Ip Association Remove command class structs */           
/************************************************************/
typedef struct _ZW_IP_ASSOCIATION_REMOVE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   groupingIdentifier;           /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   endPoint;                     /**/
} ZW_IP_ASSOCIATION_REMOVE_FRAME;

/************************************************************/
/* Antitheft Set 1byte command class structs */             
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           
} ZW_ANTITHEFT_SET_1BYTE_FRAME;

/************************************************************/
/* Antitheft Set 2byte command class structs */             
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           /* LSB */
} ZW_ANTITHEFT_SET_2BYTE_FRAME;

/************************************************************/
/* Antitheft Set 3byte command class structs */             
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           /* LSB */
} ZW_ANTITHEFT_SET_3BYTE_FRAME;

/************************************************************/
/* Antitheft Set 4byte command class structs */             
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   
    uint8_t   magicCode4;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           
    uint8_t   antiTheftHintByte4;           /* LSB */
} ZW_ANTITHEFT_SET_4BYTE_FRAME;

/************************************************************/
/* Antitheft Get command class structs */                   
/************************************************************/
typedef struct _ZW_ANTITHEFT_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ANTITHEFT_GET_FRAME;

/************************************************************/
/* Antitheft Report 1byte command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           
} ZW_ANTITHEFT_REPORT_1BYTE_FRAME;

/************************************************************/
/* Antitheft Report 2byte command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           /* LSB */
} ZW_ANTITHEFT_REPORT_2BYTE_FRAME;

/************************************************************/
/* Antitheft Report 3byte command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           /* LSB */
} ZW_ANTITHEFT_REPORT_3BYTE_FRAME;

/************************************************************/
/* Antitheft Report 4byte command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           
    uint8_t   antiTheftHintByte4;           /* LSB */
} ZW_ANTITHEFT_REPORT_4BYTE_FRAME;

/************************************************************/
/* Antitheft Set 1byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           
} ZW_ANTITHEFT_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Set 2byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           /* LSB */
} ZW_ANTITHEFT_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Set 3byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           /* LSB */
} ZW_ANTITHEFT_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Set 4byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   
    uint8_t   magicCode4;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           
    uint8_t   antiTheftHintByte4;           /* LSB */
} ZW_ANTITHEFT_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Get V2 command class structs */                
/************************************************************/
typedef struct _ZW_ANTITHEFT_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ANTITHEFT_GET_V2_FRAME;

/************************************************************/
/* Antitheft Report 1byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           
} ZW_ANTITHEFT_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Report 2byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           /* LSB */
} ZW_ANTITHEFT_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Report 3byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           /* LSB */
} ZW_ANTITHEFT_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Report 4byte V2 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           
    uint8_t   antiTheftHintByte4;           /* LSB */
} ZW_ANTITHEFT_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Antitheft Set 1byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_SET_1BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Set 2byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_SET_2BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Set 3byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_SET_3BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Set 4byte V3 command class structs */          
/************************************************************/
typedef struct _ZW_ANTITHEFT_SET_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   
    uint8_t   magicCode4;                   /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           
    uint8_t   antiTheftHintByte4;           /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_SET_4BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Get V3 command class structs */                
/************************************************************/
typedef struct _ZW_ANTITHEFT_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ANTITHEFT_GET_V3_FRAME;

/************************************************************/
/* Antitheft Report 1byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Report 2byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Report 3byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Antitheft Report 4byte V3 command class structs */       
/************************************************************/
typedef struct _ZW_ANTITHEFT_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   antiTheftProtectionStatus;    /**/
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   antiTheftHintNumberBytes;     /**/
    uint8_t   antiTheftHintByte1;           /* MSB */
    uint8_t   antiTheftHintByte2;           
    uint8_t   antiTheftHintByte3;           
    uint8_t   antiTheftHintByte4;           /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Zwaveplus Info Get command class structs */              
/************************************************************/
typedef struct _ZW_ZWAVEPLUS_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ZWAVEPLUS_INFO_GET_FRAME;

/************************************************************/
/* Zwaveplus Info Report command class structs */           
/************************************************************/
typedef struct _ZW_ZWAVEPLUS_INFO_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveVersion;                 /**/
    uint8_t   roleType;                     /**/
    uint8_t   nodeType;                     /**/
} ZW_ZWAVEPLUS_INFO_REPORT_FRAME;

/************************************************************/
/* Zwaveplus Info Get V2 command class structs */           
/************************************************************/
typedef struct _ZW_ZWAVEPLUS_INFO_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ZWAVEPLUS_INFO_GET_V2_FRAME;

/************************************************************/
/* Zwaveplus Info Report V2 command class structs */        
/************************************************************/
typedef struct _ZW_ZWAVEPLUS_INFO_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveVersion;                 /**/
    uint8_t   roleType;                     /**/
    uint8_t   nodeType;                     /**/
    uint8_t   installerIconType1;           /* MSB */
    uint8_t   installerIconType2;           /* LSB */
    uint8_t   userIconType1;                /* MSB */
    uint8_t   userIconType2;                /* LSB */
} ZW_ZWAVEPLUS_INFO_REPORT_V2_FRAME;

/************************************************************/
/* Gateway Mode Set command class structs */                
/************************************************************/
typedef struct _ZW_GATEWAY_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_GATEWAY_MODE_SET_FRAME;

/************************************************************/
/* Gateway Mode Get command class structs */                
/************************************************************/
typedef struct _ZW_GATEWAY_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_GATEWAY_MODE_GET_FRAME;

/************************************************************/
/* Gateway Mode Report command class structs */             
/************************************************************/
typedef struct _ZW_GATEWAY_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mode;                         /**/
} ZW_GATEWAY_MODE_REPORT_FRAME;

/************************************************************/
/* Gateway Peer Set 1byte command class structs */          
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    
} ZW_GATEWAY_PEER_SET_1BYTE_FRAME;

/************************************************************/
/* Gateway Peer Set 2byte command class structs */          
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    /* MSB */
    uint8_t   peerName2;                    /* LSB */
} ZW_GATEWAY_PEER_SET_2BYTE_FRAME;

/************************************************************/
/* Gateway Peer Set 3byte command class structs */          
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    /* MSB */
    uint8_t   peerName2;                    
    uint8_t   peerName3;                    /* LSB */
} ZW_GATEWAY_PEER_SET_3BYTE_FRAME;

/************************************************************/
/* Gateway Peer Set 4byte command class structs */          
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    /* MSB */
    uint8_t   peerName2;                    
    uint8_t   peerName3;                    
    uint8_t   peerName4;                    /* LSB */
} ZW_GATEWAY_PEER_SET_4BYTE_FRAME;

/************************************************************/
/* Gateway Peer Get command class structs */                
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
} ZW_GATEWAY_PEER_GET_FRAME;

/************************************************************/
/* Gateway Peer Report 1byte command class structs */       
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   peerCount;                    /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    
} ZW_GATEWAY_PEER_REPORT_1BYTE_FRAME;

/************************************************************/
/* Gateway Peer Report 2byte command class structs */       
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   peerCount;                    /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    /* MSB */
    uint8_t   peerName2;                    /* LSB */
} ZW_GATEWAY_PEER_REPORT_2BYTE_FRAME;

/************************************************************/
/* Gateway Peer Report 3byte command class structs */       
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   peerCount;                    /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    /* MSB */
    uint8_t   peerName2;                    
    uint8_t   peerName3;                    /* LSB */
} ZW_GATEWAY_PEER_REPORT_3BYTE_FRAME;

/************************************************************/
/* Gateway Peer Report 4byte command class structs */       
/************************************************************/
typedef struct _ZW_GATEWAY_PEER_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   peerProfile;                  /**/
    uint8_t   peerCount;                    /**/
    uint8_t   ipv6Address1;                 /* MSB */
    uint8_t   ipv6Address2;                 
    uint8_t   ipv6Address3;                 
    uint8_t   ipv6Address4;                 
    uint8_t   ipv6Address5;                 
    uint8_t   ipv6Address6;                 
    uint8_t   ipv6Address7;                 
    uint8_t   ipv6Address8;                 
    uint8_t   ipv6Address9;                 
    uint8_t   ipv6Address10;                
    uint8_t   ipv6Address11;                
    uint8_t   ipv6Address12;                
    uint8_t   ipv6Address13;                
    uint8_t   ipv6Address14;                
    uint8_t   ipv6Address15;                
    uint8_t   ipv6Address16;                /* LSB */
    uint8_t   port1;                        /* MSB */
    uint8_t   port2;                        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   peerName1;                    /* MSB */
    uint8_t   peerName2;                    
    uint8_t   peerName3;                    
    uint8_t   peerName4;                    /* LSB */
} ZW_GATEWAY_PEER_REPORT_4BYTE_FRAME;

/************************************************************/
/* Gateway Lock Set command class structs */                
/************************************************************/
typedef struct _ZW_GATEWAY_LOCK_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_GATEWAY_LOCK_SET_FRAME;

/************************************************************/
/* Unsolicited Destination Set command class structs */     
/************************************************************/
typedef struct _ZW_UNSOLICITED_DESTINATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   unsolicitedIpv6Destination1;  /* MSB */
    uint8_t   unsolicitedIpv6Destination2;  
    uint8_t   unsolicitedIpv6Destination3;  
    uint8_t   unsolicitedIpv6Destination4;  
    uint8_t   unsolicitedIpv6Destination5;  
    uint8_t   unsolicitedIpv6Destination6;  
    uint8_t   unsolicitedIpv6Destination7;  
    uint8_t   unsolicitedIpv6Destination8;  
    uint8_t   unsolicitedIpv6Destination9;  
    uint8_t   unsolicitedIpv6Destination10; 
    uint8_t   unsolicitedIpv6Destination11; 
    uint8_t   unsolicitedIpv6Destination12; 
    uint8_t   unsolicitedIpv6Destination13; 
    uint8_t   unsolicitedIpv6Destination14; 
    uint8_t   unsolicitedIpv6Destination15; 
    uint8_t   unsolicitedIpv6Destination16; /* LSB */
    uint8_t   unsolicitedDestinationPort1;  /* MSB */
    uint8_t   unsolicitedDestinationPort2;  /* LSB */
} ZW_UNSOLICITED_DESTINATION_SET_FRAME;

/************************************************************/
/* Unsolicited Destination Get command class structs */     
/************************************************************/
typedef struct _ZW_UNSOLICITED_DESTINATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_UNSOLICITED_DESTINATION_GET_FRAME;

/************************************************************/
/* Unsolicited Destination Report command class structs */  
/************************************************************/
typedef struct _ZW_UNSOLICITED_DESTINATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   unsolicitedIpv6Destination1;  /* MSB */
    uint8_t   unsolicitedIpv6Destination2;  
    uint8_t   unsolicitedIpv6Destination3;  
    uint8_t   unsolicitedIpv6Destination4;  
    uint8_t   unsolicitedIpv6Destination5;  
    uint8_t   unsolicitedIpv6Destination6;  
    uint8_t   unsolicitedIpv6Destination7;  
    uint8_t   unsolicitedIpv6Destination8;  
    uint8_t   unsolicitedIpv6Destination9;  
    uint8_t   unsolicitedIpv6Destination10; 
    uint8_t   unsolicitedIpv6Destination11; 
    uint8_t   unsolicitedIpv6Destination12; 
    uint8_t   unsolicitedIpv6Destination13; 
    uint8_t   unsolicitedIpv6Destination14; 
    uint8_t   unsolicitedIpv6Destination15; 
    uint8_t   unsolicitedIpv6Destination16; /* LSB */
    uint8_t   unsolicitedDestinationPort1;  /* MSB */
    uint8_t   unsolicitedDestinationPort2;  /* LSB */
} ZW_UNSOLICITED_DESTINATION_REPORT_FRAME;

/************************************************************/
/* Command Application Node Info Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; 
} ZW_COMMAND_APPLICATION_NODE_INFO_SET_1BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       /* MSB */
    uint8_t   nonSecureCommandClass2;       /* LSB */
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; /* MSB */
    uint8_t   securityScheme0CommandClass2; /* LSB */
} ZW_COMMAND_APPLICATION_NODE_INFO_SET_2BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       /* MSB */
    uint8_t   nonSecureCommandClass2;       
    uint8_t   nonSecureCommandClass3;       /* LSB */
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; /* MSB */
    uint8_t   securityScheme0CommandClass2; 
    uint8_t   securityScheme0CommandClass3; /* LSB */
} ZW_COMMAND_APPLICATION_NODE_INFO_SET_3BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       /* MSB */
    uint8_t   nonSecureCommandClass2;       
    uint8_t   nonSecureCommandClass3;       
    uint8_t   nonSecureCommandClass4;       /* LSB */
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; /* MSB */
    uint8_t   securityScheme0CommandClass2; 
    uint8_t   securityScheme0CommandClass3; 
    uint8_t   securityScheme0CommandClass4; /* LSB */
} ZW_COMMAND_APPLICATION_NODE_INFO_SET_4BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Get command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_COMMAND_APPLICATION_NODE_INFO_GET_FRAME;

/************************************************************/
/* Command Application Node Info Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; 
} ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_1BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       /* MSB */
    uint8_t   nonSecureCommandClass2;       /* LSB */
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; /* MSB */
    uint8_t   securityScheme0CommandClass2; /* LSB */
} ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_2BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       /* MSB */
    uint8_t   nonSecureCommandClass2;       
    uint8_t   nonSecureCommandClass3;       /* LSB */
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; /* MSB */
    uint8_t   securityScheme0CommandClass2; 
    uint8_t   securityScheme0CommandClass3; /* LSB */
} ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_3BYTE_FRAME;

/************************************************************/
/* Command Application Node Info Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nonSecureCommandClass1;       /* MSB */
    uint8_t   nonSecureCommandClass2;       
    uint8_t   nonSecureCommandClass3;       
    uint8_t   nonSecureCommandClass4;       /* LSB */
    uint8_t   securityScheme0Mark1;         /* MSB */
    uint8_t   securityScheme0Mark2;         /* LSB */
    uint8_t   securityScheme0CommandClass1; /* MSB */
    uint8_t   securityScheme0CommandClass2; 
    uint8_t   securityScheme0CommandClass3; 
    uint8_t   securityScheme0CommandClass4; /* LSB */
} ZW_COMMAND_APPLICATION_NODE_INFO_REPORT_4BYTE_FRAME;

/************************************************************/
/* Gateway Configuration Set command class structs */       
/************************************************************/
typedef struct _ZW_GATEWAY_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   lanIpv6Address1;              /* MSB */
    uint8_t   lanIpv6Address2;              
    uint8_t   lanIpv6Address3;              
    uint8_t   lanIpv6Address4;              
    uint8_t   lanIpv6Address5;              
    uint8_t   lanIpv6Address6;              
    uint8_t   lanIpv6Address7;              
    uint8_t   lanIpv6Address8;              
    uint8_t   lanIpv6Address9;              
    uint8_t   lanIpv6Address10;             
    uint8_t   lanIpv6Address11;             
    uint8_t   lanIpv6Address12;             
    uint8_t   lanIpv6Address13;             
    uint8_t   lanIpv6Address14;             
    uint8_t   lanIpv6Address15;             
    uint8_t   lanIpv6Address16;             /* LSB */
    uint8_t   lanIpv6PrefixLength;          /**/
    uint8_t   portalIpv6Prefix1;            /* MSB */
    uint8_t   portalIpv6Prefix2;            
    uint8_t   portalIpv6Prefix3;            
    uint8_t   portalIpv6Prefix4;            
    uint8_t   portalIpv6Prefix5;            
    uint8_t   portalIpv6Prefix6;            
    uint8_t   portalIpv6Prefix7;            
    uint8_t   portalIpv6Prefix8;            
    uint8_t   portalIpv6Prefix9;            
    uint8_t   portalIpv6Prefix10;           
    uint8_t   portalIpv6Prefix11;           
    uint8_t   portalIpv6Prefix12;           
    uint8_t   portalIpv6Prefix13;           
    uint8_t   portalIpv6Prefix14;           
    uint8_t   portalIpv6Prefix15;           
    uint8_t   portalIpv6Prefix16;           /* LSB */
    uint8_t   portalIpv6PrefixLength;       /**/
    uint8_t   defaultGatewayIpv6Address1;   /* MSB */
    uint8_t   defaultGatewayIpv6Address2;   
    uint8_t   defaultGatewayIpv6Address3;   
    uint8_t   defaultGatewayIpv6Address4;   
    uint8_t   defaultGatewayIpv6Address5;   
    uint8_t   defaultGatewayIpv6Address6;   
    uint8_t   defaultGatewayIpv6Address7;   
    uint8_t   defaultGatewayIpv6Address8;   
    uint8_t   defaultGatewayIpv6Address9;   
    uint8_t   defaultGatewayIpv6Address10;  
    uint8_t   defaultGatewayIpv6Address11;  
    uint8_t   defaultGatewayIpv6Address12;  
    uint8_t   defaultGatewayIpv6Address13;  
    uint8_t   defaultGatewayIpv6Address14;  
    uint8_t   defaultGatewayIpv6Address15;  
    uint8_t   defaultGatewayIpv6Address16;  /* LSB */
    uint8_t   panIpv6Prefix1;               /* MSB */
    uint8_t   panIpv6Prefix2;               
    uint8_t   panIpv6Prefix3;               
    uint8_t   panIpv6Prefix4;               
    uint8_t   panIpv6Prefix5;               
    uint8_t   panIpv6Prefix6;               
    uint8_t   panIpv6Prefix7;               
    uint8_t   panIpv6Prefix8;               
    uint8_t   panIpv6Prefix9;               
    uint8_t   panIpv6Prefix10;              
    uint8_t   panIpv6Prefix11;              
    uint8_t   panIpv6Prefix12;              
    uint8_t   panIpv6Prefix13;              
    uint8_t   panIpv6Prefix14;              
    uint8_t   panIpv6Prefix15;              
    uint8_t   panIpv6Prefix16;              /* LSB */
} ZW_GATEWAY_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Gateway Configuration Status command class structs */    
/************************************************************/
typedef struct _ZW_GATEWAY_CONFIGURATION_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   status;                       /**/
} ZW_GATEWAY_CONFIGURATION_STATUS_FRAME;

/************************************************************/
/* Gateway Configuration Get command class structs */       
/************************************************************/
typedef struct _ZW_GATEWAY_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_GATEWAY_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Gateway Configuration Report command class structs */    
/************************************************************/
typedef struct _ZW_GATEWAY_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   lanIpv6Address1;              /* MSB */
    uint8_t   lanIpv6Address2;              
    uint8_t   lanIpv6Address3;              
    uint8_t   lanIpv6Address4;              
    uint8_t   lanIpv6Address5;              
    uint8_t   lanIpv6Address6;              
    uint8_t   lanIpv6Address7;              
    uint8_t   lanIpv6Address8;              
    uint8_t   lanIpv6Address9;              
    uint8_t   lanIpv6Address10;             
    uint8_t   lanIpv6Address11;             
    uint8_t   lanIpv6Address12;             
    uint8_t   lanIpv6Address13;             
    uint8_t   lanIpv6Address14;             
    uint8_t   lanIpv6Address15;             
    uint8_t   lanIpv6Address16;             /* LSB */
    uint8_t   lanIpv6PrefixLength;          /**/
    uint8_t   portalIpv6Prefix1;            /* MSB */
    uint8_t   portalIpv6Prefix2;            
    uint8_t   portalIpv6Prefix3;            
    uint8_t   portalIpv6Prefix4;            
    uint8_t   portalIpv6Prefix5;            
    uint8_t   portalIpv6Prefix6;            
    uint8_t   portalIpv6Prefix7;            
    uint8_t   portalIpv6Prefix8;            
    uint8_t   portalIpv6Prefix9;            
    uint8_t   portalIpv6Prefix10;           
    uint8_t   portalIpv6Prefix11;           
    uint8_t   portalIpv6Prefix12;           
    uint8_t   portalIpv6Prefix13;           
    uint8_t   portalIpv6Prefix14;           
    uint8_t   portalIpv6Prefix15;           
    uint8_t   portalIpv6Prefix16;           /* LSB */
    uint8_t   portalIpv6PrefixLength;       /**/
    uint8_t   defaultGatewayIpv6Address1;   /* MSB */
    uint8_t   defaultGatewayIpv6Address2;   
    uint8_t   defaultGatewayIpv6Address3;   
    uint8_t   defaultGatewayIpv6Address4;   
    uint8_t   defaultGatewayIpv6Address5;   
    uint8_t   defaultGatewayIpv6Address6;   
    uint8_t   defaultGatewayIpv6Address7;   
    uint8_t   defaultGatewayIpv6Address8;   
    uint8_t   defaultGatewayIpv6Address9;   
    uint8_t   defaultGatewayIpv6Address10;  
    uint8_t   defaultGatewayIpv6Address11;  
    uint8_t   defaultGatewayIpv6Address12;  
    uint8_t   defaultGatewayIpv6Address13;  
    uint8_t   defaultGatewayIpv6Address14;  
    uint8_t   defaultGatewayIpv6Address15;  
    uint8_t   defaultGatewayIpv6Address16;  /* LSB */
    uint8_t   panIpv6Prefix1;               /* MSB */
    uint8_t   panIpv6Prefix2;               
    uint8_t   panIpv6Prefix3;               
    uint8_t   panIpv6Prefix4;               
    uint8_t   panIpv6Prefix5;               
    uint8_t   panIpv6Prefix6;               
    uint8_t   panIpv6Prefix7;               
    uint8_t   panIpv6Prefix8;               
    uint8_t   panIpv6Prefix9;               
    uint8_t   panIpv6Prefix10;              
    uint8_t   panIpv6Prefix11;              
    uint8_t   panIpv6Prefix12;              
    uint8_t   panIpv6Prefix13;              
    uint8_t   panIpv6Prefix14;              
    uint8_t   panIpv6Prefix15;              
    uint8_t   panIpv6Prefix16;              /* LSB */
} ZW_GATEWAY_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Gateway Unregister command class structs */              
/************************************************************/
typedef struct _ZW_GATEWAY_UNREGISTER_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_GATEWAY_UNREGISTER_FRAME;

/************************************************************/
/* Dmx Address Set command class structs */                 
/************************************************************/
typedef struct _ZW_DMX_ADDRESS_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   channelId;                    /**/
} ZW_DMX_ADDRESS_SET_FRAME;

/************************************************************/
/* Dmx Address Get command class structs */                 
/************************************************************/
typedef struct _ZW_DMX_ADDRESS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_DMX_ADDRESS_GET_FRAME;

/************************************************************/
/* Dmx Address Report command class structs */              
/************************************************************/
typedef struct _ZW_DMX_ADDRESS_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   channelId;                    /**/
} ZW_DMX_ADDRESS_REPORT_FRAME;

/************************************************************/
/* Dmx Capability Get command class structs */              
/************************************************************/
typedef struct _ZW_DMX_CAPABILITY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   channelId;                    /**/
} ZW_DMX_CAPABILITY_GET_FRAME;

/************************************************************/
/* Dmx Capability Report command class structs */           
/************************************************************/
typedef struct _ZW_DMX_CAPABILITY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   channelId;                    /**/
    uint8_t   propertyId1;                  /* MSB */
    uint8_t   propertyId2;                  /* LSB */
    uint8_t   deviceChannels;               /**/
    uint8_t   maxChannels;                  /**/
} ZW_DMX_CAPABILITY_REPORT_FRAME;

/************************************************************/
/* Dmx Data 1byte command class structs */                  
/************************************************************/
typedef struct _ZW_DMX_DATA_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   source;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dmxChannel1;                  
} ZW_DMX_DATA_1BYTE_FRAME;

/************************************************************/
/* Dmx Data 2byte command class structs */                  
/************************************************************/
typedef struct _ZW_DMX_DATA_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   source;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dmxChannel1;                  /* MSB */
    uint8_t   dmxChannel2;                  /* LSB */
} ZW_DMX_DATA_2BYTE_FRAME;

/************************************************************/
/* Dmx Data 3byte command class structs */                  
/************************************************************/
typedef struct _ZW_DMX_DATA_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   source;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dmxChannel1;                  /* MSB */
    uint8_t   dmxChannel2;                  
    uint8_t   dmxChannel3;                  /* LSB */
} ZW_DMX_DATA_3BYTE_FRAME;

/************************************************************/
/* Dmx Data 4byte command class structs */                  
/************************************************************/
typedef struct _ZW_DMX_DATA_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   source;                       /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dmxChannel1;                  /* MSB */
    uint8_t   dmxChannel2;                  
    uint8_t   dmxChannel3;                  
    uint8_t   dmxChannel4;                  /* LSB */
} ZW_DMX_DATA_4BYTE_FRAME;

/************************************************************/
/* Barrier Operator Set command class structs */            
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   targetValue;                  /**/
} ZW_BARRIER_OPERATOR_SET_FRAME;

/************************************************************/
/* Barrier Operator Get command class structs */            
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BARRIER_OPERATOR_GET_FRAME;

/************************************************************/
/* Barrier Operator Report command class structs */         
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   state;                        /**/
} ZW_BARRIER_OPERATOR_REPORT_FRAME;

/************************************************************/
/* Barrier Operator Signal Supported Get command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_GET_FRAME;

/************************************************************/
/* Barrier Operator Signal Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     
} ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Barrier Operator Signal Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     /* LSB */
} ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Barrier Operator Signal Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     /* LSB */
} ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Barrier Operator Signal Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask1;                     /* MSB */
    uint8_t   bitMask2;                     
    uint8_t   bitMask3;                     
    uint8_t   bitMask4;                     /* LSB */
} ZW_BARRIER_OPERATOR_SIGNAL_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Barrier Operator Event Signal Set command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_EVENT_SIGNAL_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   subsystemType;                /**/
    uint8_t   subsystemState;               /**/
} ZW_BARRIER_OPERATOR_EVENT_SIGNAL_SET_FRAME;

/************************************************************/
/* Barrier Operator Event Signaling Get command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_EVENT_SIGNALING_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   subsystemType;                /**/
} ZW_BARRIER_OPERATOR_EVENT_SIGNALING_GET_FRAME;

/************************************************************/
/* Barrier Operator Event Signaling Report command class structs */
/************************************************************/
typedef struct _ZW_BARRIER_OPERATOR_EVENT_SIGNALING_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   subsystemType;                /**/
    uint8_t   subsystemState;               /**/
} ZW_BARRIER_OPERATOR_EVENT_SIGNALING_REPORT_FRAME;

/************************************************************/
/* Priority Route Set command class structs */              
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_SET_FRAME;

/************************************************************/
/* Priority Route Get command class structs */              
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_PRIORITY_ROUTE_GET_FRAME;

/************************************************************/
/* Priority Route Report command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   type;                         /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_REPORT_FRAME;

/************************************************************/
/* Statistics Get command class structs */                  
/************************************************************/
typedef struct _ZW_STATISTICS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_STATISTICS_GET_FRAME;

/************************************************************/
/* Statistics Report variant group structs */               
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_1BYTE_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_STATISTICS_REPORT_1BYTE_VG;

/************************************************************/
/* Statistics Report variant group structs */               
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_2BYTE_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_STATISTICS_REPORT_2BYTE_VG;

/************************************************************/
/* Statistics Report variant group structs */               
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_3BYTE_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_STATISTICS_REPORT_3BYTE_VG;

/************************************************************/
/* Statistics Report variant group structs */               
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_4BYTE_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_STATISTICS_REPORT_4BYTE_VG;

/************************************************************/
/* Statistics Report 1byte command class structs */         
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_STATISTICS_REPORT_1BYTE_FRAME;

/************************************************************/
/* Statistics Report 2byte command class structs */         
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_STATISTICS_REPORT_2BYTE_FRAME;

/************************************************************/
/* Statistics Report 3byte command class structs */         
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_STATISTICS_REPORT_3BYTE_FRAME;

/************************************************************/
/* Statistics Report 4byte command class structs */         
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_STATISTICS_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_STATISTICS_REPORT_4BYTE_FRAME;

/************************************************************/
/* Statistics Clear command class structs */                
/************************************************************/
typedef struct _ZW_STATISTICS_CLEAR_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_STATISTICS_CLEAR_FRAME;

/************************************************************/
/* Priority Route Set V2 command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_SET_V2_FRAME;

/************************************************************/
/* Priority Route Get V2 command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_PRIORITY_ROUTE_GET_V2_FRAME;

/************************************************************/
/* Priority Route Report V2 command class structs */        
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   type;                         /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_REPORT_V2_FRAME;

/************************************************************/
/* Statistics Get V2 command class structs */               
/************************************************************/
typedef struct _ZW_STATISTICS_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_STATISTICS_GET_V2_FRAME;

/************************************************************/
/* Statistics Report V2 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_1BYTE_V2_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_STATISTICS_REPORT_1BYTE_V2_VG;

/************************************************************/
/* Statistics Report V2 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_2BYTE_V2_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_STATISTICS_REPORT_2BYTE_V2_VG;

/************************************************************/
/* Statistics Report V2 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_3BYTE_V2_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_STATISTICS_REPORT_3BYTE_V2_VG;

/************************************************************/
/* Statistics Report V2 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_4BYTE_V2_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_STATISTICS_REPORT_4BYTE_V2_VG;

/************************************************************/
/* Statistics Report 1byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup1;                /**/
} ZW_STATISTICS_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Statistics Report 2byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup2;                /**/
} ZW_STATISTICS_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Statistics Report 3byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup3;                /**/
} ZW_STATISTICS_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Statistics Report 4byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup3;                /**/
    VG_STATISTICS_REPORT_4BYTE_V2_VG variantgroup4;                /**/
} ZW_STATISTICS_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Statistics Clear V2 command class structs */             
/************************************************************/
typedef struct _ZW_STATISTICS_CLEAR_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_STATISTICS_CLEAR_V2_FRAME;

/************************************************************/
/* Rssi Get V2 command class structs */                     
/************************************************************/
typedef struct _ZW_RSSI_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_RSSI_GET_V2_FRAME;

/************************************************************/
/* Rssi Report V2 command class structs */                  
/************************************************************/
typedef struct _ZW_RSSI_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   channel1Rssi;                 /**/
    uint8_t   channel2Rssi;                 /**/
    uint8_t   channel3Rssi;                 /**/
} ZW_RSSI_REPORT_V2_FRAME;

/************************************************************/
/* Priority Route Set V3 command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_SET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_SET_V3_FRAME;

/************************************************************/
/* Priority Route Get V3 command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_PRIORITY_ROUTE_GET_V3_FRAME;

/************************************************************/
/* Priority Route Report V3 command class structs */        
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   type;                         /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_REPORT_V3_FRAME;

/************************************************************/
/* Statistics Get V3 command class structs */               
/************************************************************/
typedef struct _ZW_STATISTICS_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_STATISTICS_GET_V3_FRAME;

/************************************************************/
/* Statistics Report V3 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_1BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_STATISTICS_REPORT_1BYTE_V3_VG;

/************************************************************/
/* Statistics Report V3 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_2BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_STATISTICS_REPORT_2BYTE_V3_VG;

/************************************************************/
/* Statistics Report V3 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_3BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_STATISTICS_REPORT_3BYTE_V3_VG;

/************************************************************/
/* Statistics Report V3 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_4BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_STATISTICS_REPORT_4BYTE_V3_VG;

/************************************************************/
/* Statistics Report 1byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
} ZW_STATISTICS_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Statistics Report 2byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup2;                /**/
} ZW_STATISTICS_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Statistics Report 3byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup3;                /**/
} ZW_STATISTICS_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Statistics Report 4byte V3 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup3;                /**/
    VG_STATISTICS_REPORT_4BYTE_V3_VG variantgroup4;                /**/
} ZW_STATISTICS_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Statistics Clear V3 command class structs */             
/************************************************************/
typedef struct _ZW_STATISTICS_CLEAR_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_STATISTICS_CLEAR_V3_FRAME;

/************************************************************/
/* Rssi Get V3 command class structs */                     
/************************************************************/
typedef struct _ZW_RSSI_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_RSSI_GET_V3_FRAME;

/************************************************************/
/* Rssi Report V3 command class structs */                  
/************************************************************/
typedef struct _ZW_RSSI_REPORT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   channel1Rssi;                 /**/
    uint8_t   channel2Rssi;                 /**/
    uint8_t   channel3Rssi;                 /**/
} ZW_RSSI_REPORT_V3_FRAME;

/************************************************************/
/* S2 Resynchronization Event V3 command class structs */   
/************************************************************/
typedef struct _ZW_S2_RESYNCHRONIZATION_EVENT_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   reason;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_S2_RESYNCHRONIZATION_EVENT_V3_FRAME;

/************************************************************/
/* Extended Statistics Get V3 command class structs */      
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_GET_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_EXTENDED_STATISTICS_GET_V3_FRAME;

/************************************************************/
/* Extended Statistics Report V3 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_1BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_EXTENDED_STATISTICS_REPORT_1BYTE_V3_VG;

/************************************************************/
/* Extended Statistics Report V3 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_2BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_EXTENDED_STATISTICS_REPORT_2BYTE_V3_VG;

/************************************************************/
/* Extended Statistics Report V3 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_3BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_EXTENDED_STATISTICS_REPORT_3BYTE_V3_VG;

/************************************************************/
/* Extended Statistics Report V3 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG;

/************************************************************/
/* Extended Statistics Report 1byte V3 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_1BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_1BYTE_V3_FRAME;

/************************************************************/
/* Extended Statistics Report 2byte V3 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_2BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup2;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_2BYTE_V3_FRAME;

/************************************************************/
/* Extended Statistics Report 3byte V3 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_3BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup3;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_3BYTE_V3_FRAME;

/************************************************************/
/* Extended Statistics Report 4byte V3 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_4BYTE_V3_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup1;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup2;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup3;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V3_VG variantgroup4;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_4BYTE_V3_FRAME;

/************************************************************/
/* Priority Route Set V4 command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_SET_V4_FRAME;

/************************************************************/
/* Priority Route Get V4 command class structs */           
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_PRIORITY_ROUTE_GET_V4_FRAME;

/************************************************************/
/* Priority Route Report V4 command class structs */        
/************************************************************/
typedef struct _ZW_PRIORITY_ROUTE_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   type;                         /**/
    uint8_t   repeater1;                    /**/
    uint8_t   repeater2;                    /**/
    uint8_t   repeater3;                    /**/
    uint8_t   repeater4;                    /**/
    uint8_t   speed;                        /**/
} ZW_PRIORITY_ROUTE_REPORT_V4_FRAME;

/************************************************************/
/* Statistics Get V4 command class structs */               
/************************************************************/
typedef struct _ZW_STATISTICS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
} ZW_STATISTICS_GET_V4_FRAME;

/************************************************************/
/* Statistics Report V4 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_1BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_STATISTICS_REPORT_1BYTE_V4_VG;

/************************************************************/
/* Statistics Report V4 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_2BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_STATISTICS_REPORT_2BYTE_V4_VG;

/************************************************************/
/* Statistics Report V4 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_3BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_STATISTICS_REPORT_3BYTE_V4_VG;

/************************************************************/
/* Statistics Report V4 variant group structs */            
/************************************************************/
typedef struct _VG_STATISTICS_REPORT_4BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_STATISTICS_REPORT_4BYTE_V4_VG;

/************************************************************/
/* Statistics Report 1byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
} ZW_STATISTICS_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Statistics Report 2byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
} ZW_STATISTICS_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Statistics Report 3byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup3;                /**/
} ZW_STATISTICS_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Statistics Report 4byte V4 command class structs */      
/************************************************************/
typedef struct _ZW_STATISTICS_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup3;                /**/
    VG_STATISTICS_REPORT_4BYTE_V4_VG variantgroup4;                /**/
} ZW_STATISTICS_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Statistics Clear V4 command class structs */             
/************************************************************/
typedef struct _ZW_STATISTICS_CLEAR_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_STATISTICS_CLEAR_V4_FRAME;

/************************************************************/
/* Rssi Get V4 command class structs */                     
/************************************************************/
typedef struct _ZW_RSSI_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_RSSI_GET_V4_FRAME;

/************************************************************/
/* Rssi Report V4 command class structs */                  
/************************************************************/
typedef struct _ZW_RSSI_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   channel1Rssi;                 /**/
    uint8_t   channel2Rssi;                 /**/
    uint8_t   channel3Rssi;                 /**/
} ZW_RSSI_REPORT_V4_FRAME;

/************************************************************/
/* S2 Resynchronization Event V4 command class structs */   
/************************************************************/
typedef struct _ZW_S2_RESYNCHRONIZATION_EVENT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeid;                       /**/
    uint8_t   reason;                       /**/
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_S2_RESYNCHRONIZATION_EVENT_V4_FRAME;

/************************************************************/
/* Extended Statistics Get V4 command class structs */      
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
} ZW_EXTENDED_STATISTICS_GET_V4_FRAME;

/************************************************************/
/* Extended Statistics Report V4 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_1BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_EXTENDED_STATISTICS_REPORT_1BYTE_V4_VG;

/************************************************************/
/* Extended Statistics Report V4 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_2BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_EXTENDED_STATISTICS_REPORT_2BYTE_V4_VG;

/************************************************************/
/* Extended Statistics Report V4 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_3BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_EXTENDED_STATISTICS_REPORT_3BYTE_V4_VG;

/************************************************************/
/* Extended Statistics Report V4 variant group structs */   
/************************************************************/
typedef struct _VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG_
{
    uint8_t   type;                         /**/
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG;

/************************************************************/
/* Extended Statistics Report 1byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_1BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_1BYTE_V4_FRAME;

/************************************************************/
/* Extended Statistics Report 2byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_2BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_2BYTE_V4_FRAME;

/************************************************************/
/* Extended Statistics Report 3byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_3BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup3;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_3BYTE_V4_FRAME;

/************************************************************/
/* Extended Statistics Report 4byte V4 command class structs */
/************************************************************/
typedef struct _ZW_EXTENDED_STATISTICS_REPORT_4BYTE_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   extendedNodeid1;              /* MSB */
    uint8_t   extendedNodeid2;              /* LSB */
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup1;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup2;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup3;                /**/
    VG_EXTENDED_STATISTICS_REPORT_4BYTE_V4_VG variantgroup4;                /**/
} ZW_EXTENDED_STATISTICS_REPORT_4BYTE_V4_FRAME;

/************************************************************/
/* Zwave Lr Channel Configuration Set V4 command class structs */
/************************************************************/
typedef struct _ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_SET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLongRangeChannel;        /**/
} ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_SET_V4_FRAME;

/************************************************************/
/* Zwave Lr Channel Configuration Get V4 command class structs */
/************************************************************/
typedef struct _ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_GET_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_GET_V4_FRAME;

/************************************************************/
/* Zwave Lr Channel Configuration Report V4 command class structs */
/************************************************************/
typedef struct _ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_REPORT_V4_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   zWaveLongRangeChannel;        /**/
} ZW_ZWAVE_LR_CHANNEL_CONFIGURATION_REPORT_V4_FRAME;

/************************************************************/
/* Zip Naming Name Set 1byte command class structs */       
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        
} ZW_ZIP_NAMING_NAME_SET_1BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Set 2byte command class structs */       
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_ZIP_NAMING_NAME_SET_2BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Set 3byte command class structs */       
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_ZIP_NAMING_NAME_SET_3BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Set 4byte command class structs */       
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_ZIP_NAMING_NAME_SET_4BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Get command class structs */             
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ZIP_NAMING_NAME_GET_FRAME;

/************************************************************/
/* Zip Naming Name Report 1byte command class structs */    
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        
} ZW_ZIP_NAMING_NAME_REPORT_1BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Report 2byte command class structs */    
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_ZIP_NAMING_NAME_REPORT_2BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Report 3byte command class structs */    
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_ZIP_NAMING_NAME_REPORT_3BYTE_FRAME;

/************************************************************/
/* Zip Naming Name Report 4byte command class structs */    
/************************************************************/
typedef struct _ZW_ZIP_NAMING_NAME_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_ZIP_NAMING_NAME_REPORT_4BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Set 1byte command class structs */   
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    
} ZW_ZIP_NAMING_LOCATION_SET_1BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Set 2byte command class structs */   
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    /* MSB */
    uint8_t   location2;                    /* LSB */
} ZW_ZIP_NAMING_LOCATION_SET_2BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Set 3byte command class structs */   
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    /* MSB */
    uint8_t   location2;                    
    uint8_t   location3;                    /* LSB */
} ZW_ZIP_NAMING_LOCATION_SET_3BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Set 4byte command class structs */   
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    /* MSB */
    uint8_t   location2;                    
    uint8_t   location3;                    
    uint8_t   location4;                    /* LSB */
} ZW_ZIP_NAMING_LOCATION_SET_4BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Get command class structs */         
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ZIP_NAMING_LOCATION_GET_FRAME;

/************************************************************/
/* Zip Naming Location Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    
} ZW_ZIP_NAMING_LOCATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    /* MSB */
    uint8_t   location2;                    /* LSB */
} ZW_ZIP_NAMING_LOCATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    /* MSB */
    uint8_t   location2;                    
    uint8_t   location3;                    /* LSB */
} ZW_ZIP_NAMING_LOCATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Zip Naming Location Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ZIP_NAMING_LOCATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   location1;                    /* MSB */
    uint8_t   location2;                    
    uint8_t   location3;                    
    uint8_t   location4;                    /* LSB */
} ZW_ZIP_NAMING_LOCATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Mailbox Configuration Get command class structs */       
/************************************************************/
typedef struct _ZW_MAILBOX_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MAILBOX_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Mailbox Configuration Set command class structs */       
/************************************************************/
typedef struct _ZW_MAILBOX_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   forwardingDestinationIpv6Address1;/* MSB */
    uint8_t   forwardingDestinationIpv6Address2;
    uint8_t   forwardingDestinationIpv6Address3;
    uint8_t   forwardingDestinationIpv6Address4;
    uint8_t   forwardingDestinationIpv6Address5;
    uint8_t   forwardingDestinationIpv6Address6;
    uint8_t   forwardingDestinationIpv6Address7;
    uint8_t   forwardingDestinationIpv6Address8;
    uint8_t   forwardingDestinationIpv6Address9;
    uint8_t   forwardingDestinationIpv6Address10;
    uint8_t   forwardingDestinationIpv6Address11;
    uint8_t   forwardingDestinationIpv6Address12;
    uint8_t   forwardingDestinationIpv6Address13;
    uint8_t   forwardingDestinationIpv6Address14;
    uint8_t   forwardingDestinationIpv6Address15;
    uint8_t   forwardingDestinationIpv6Address16;/* LSB */
    uint8_t   udpPortNumber1;               /* MSB */
    uint8_t   udpPortNumber2;               /* LSB */
} ZW_MAILBOX_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Mailbox Configuration Report command class structs */    
/************************************************************/
typedef struct _ZW_MAILBOX_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   mailboxCapacity1;             /* MSB */
    uint8_t   mailboxCapacity2;             /* LSB */
    uint8_t   forwardingDestinationIpv6Address1;/* MSB */
    uint8_t   forwardingDestinationIpv6Address2;
    uint8_t   forwardingDestinationIpv6Address3;
    uint8_t   forwardingDestinationIpv6Address4;
    uint8_t   forwardingDestinationIpv6Address5;
    uint8_t   forwardingDestinationIpv6Address6;
    uint8_t   forwardingDestinationIpv6Address7;
    uint8_t   forwardingDestinationIpv6Address8;
    uint8_t   forwardingDestinationIpv6Address9;
    uint8_t   forwardingDestinationIpv6Address10;
    uint8_t   forwardingDestinationIpv6Address11;
    uint8_t   forwardingDestinationIpv6Address12;
    uint8_t   forwardingDestinationIpv6Address13;
    uint8_t   forwardingDestinationIpv6Address14;
    uint8_t   forwardingDestinationIpv6Address15;
    uint8_t   forwardingDestinationIpv6Address16;/* LSB */
    uint8_t   udpPortNumber1;               /* MSB */
    uint8_t   udpPortNumber2;               /* LSB */
} ZW_MAILBOX_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Mailbox Queue 1byte command class structs */             
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                
} ZW_MAILBOX_QUEUE_1BYTE_FRAME;

/************************************************************/
/* Mailbox Queue 2byte command class structs */             
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                /* MSB */
    uint8_t   mailboxEntry2;                /* LSB */
} ZW_MAILBOX_QUEUE_2BYTE_FRAME;

/************************************************************/
/* Mailbox Queue 3byte command class structs */             
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                /* MSB */
    uint8_t   mailboxEntry2;                
    uint8_t   mailboxEntry3;                /* LSB */
} ZW_MAILBOX_QUEUE_3BYTE_FRAME;

/************************************************************/
/* Mailbox Queue 4byte command class structs */             
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                /* MSB */
    uint8_t   mailboxEntry2;                
    uint8_t   mailboxEntry3;                
    uint8_t   mailboxEntry4;                /* LSB */
} ZW_MAILBOX_QUEUE_4BYTE_FRAME;

/************************************************************/
/* Mailbox Wakeup Notification command class structs */     
/************************************************************/
typedef struct _ZW_MAILBOX_WAKEUP_NOTIFICATION_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   queueHandle;                  /**/
} ZW_MAILBOX_WAKEUP_NOTIFICATION_FRAME;

/************************************************************/
/* Mailbox Node Failing command class structs */            
/************************************************************/
typedef struct _ZW_MAILBOX_NODE_FAILING_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   queueHandle;                  /**/
} ZW_MAILBOX_NODE_FAILING_FRAME;

/************************************************************/
/* Mailbox Configuration Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_MAILBOX_CONFIGURATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_MAILBOX_CONFIGURATION_GET_V2_FRAME;

/************************************************************/
/* Mailbox Configuration Set V2 command class structs */    
/************************************************************/
typedef struct _ZW_MAILBOX_CONFIGURATION_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   forwardingDestinationIpv6Address1;/* MSB */
    uint8_t   forwardingDestinationIpv6Address2;
    uint8_t   forwardingDestinationIpv6Address3;
    uint8_t   forwardingDestinationIpv6Address4;
    uint8_t   forwardingDestinationIpv6Address5;
    uint8_t   forwardingDestinationIpv6Address6;
    uint8_t   forwardingDestinationIpv6Address7;
    uint8_t   forwardingDestinationIpv6Address8;
    uint8_t   forwardingDestinationIpv6Address9;
    uint8_t   forwardingDestinationIpv6Address10;
    uint8_t   forwardingDestinationIpv6Address11;
    uint8_t   forwardingDestinationIpv6Address12;
    uint8_t   forwardingDestinationIpv6Address13;
    uint8_t   forwardingDestinationIpv6Address14;
    uint8_t   forwardingDestinationIpv6Address15;
    uint8_t   forwardingDestinationIpv6Address16;/* LSB */
    uint8_t   udpPortNumber1;               /* MSB */
    uint8_t   udpPortNumber2;               /* LSB */
} ZW_MAILBOX_CONFIGURATION_SET_V2_FRAME;

/************************************************************/
/* Mailbox Configuration Report V2 command class structs */ 
/************************************************************/
typedef struct _ZW_MAILBOX_CONFIGURATION_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   mailboxCapacity1;             /* MSB */
    uint8_t   mailboxCapacity2;             /* LSB */
    uint8_t   forwardingDestinationIpv6Address1;/* MSB */
    uint8_t   forwardingDestinationIpv6Address2;
    uint8_t   forwardingDestinationIpv6Address3;
    uint8_t   forwardingDestinationIpv6Address4;
    uint8_t   forwardingDestinationIpv6Address5;
    uint8_t   forwardingDestinationIpv6Address6;
    uint8_t   forwardingDestinationIpv6Address7;
    uint8_t   forwardingDestinationIpv6Address8;
    uint8_t   forwardingDestinationIpv6Address9;
    uint8_t   forwardingDestinationIpv6Address10;
    uint8_t   forwardingDestinationIpv6Address11;
    uint8_t   forwardingDestinationIpv6Address12;
    uint8_t   forwardingDestinationIpv6Address13;
    uint8_t   forwardingDestinationIpv6Address14;
    uint8_t   forwardingDestinationIpv6Address15;
    uint8_t   forwardingDestinationIpv6Address16;/* LSB */
    uint8_t   udpPortNumber1;               /* MSB */
    uint8_t   udpPortNumber2;               /* LSB */
} ZW_MAILBOX_CONFIGURATION_REPORT_V2_FRAME;

/************************************************************/
/* Mailbox Queue 1byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                
} ZW_MAILBOX_QUEUE_1BYTE_V2_FRAME;

/************************************************************/
/* Mailbox Queue 2byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                /* MSB */
    uint8_t   mailboxEntry2;                /* LSB */
} ZW_MAILBOX_QUEUE_2BYTE_V2_FRAME;

/************************************************************/
/* Mailbox Queue 3byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                /* MSB */
    uint8_t   mailboxEntry2;                
    uint8_t   mailboxEntry3;                /* LSB */
} ZW_MAILBOX_QUEUE_3BYTE_V2_FRAME;

/************************************************************/
/* Mailbox Queue 4byte V2 command class structs */          
/************************************************************/
typedef struct _ZW_MAILBOX_QUEUE_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   queueHandle;                  /**/
    uint8_t   mailboxEntry1;                /* MSB */
    uint8_t   mailboxEntry2;                
    uint8_t   mailboxEntry3;                
    uint8_t   mailboxEntry4;                /* LSB */
} ZW_MAILBOX_QUEUE_4BYTE_V2_FRAME;

/************************************************************/
/* Mailbox Wakeup Notification V2 command class structs */  
/************************************************************/
typedef struct _ZW_MAILBOX_WAKEUP_NOTIFICATION_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   queueHandle;                  /**/
} ZW_MAILBOX_WAKEUP_NOTIFICATION_V2_FRAME;

/************************************************************/
/* Mailbox Node Failing V2 command class structs */         
/************************************************************/
typedef struct _ZW_MAILBOX_NODE_FAILING_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   queueHandle;                  /**/
} ZW_MAILBOX_NODE_FAILING_V2_FRAME;

/************************************************************/
/* Window Covering Supported Get command class structs */   
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_WINDOW_COVERING_SUPPORTED_GET_FRAME;

/************************************************************/
/* Window Covering Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   parameterMask1;               
} ZW_WINDOW_COVERING_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Window Covering Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   parameterMask1;               /* MSB */
    uint8_t   parameterMask2;               /* LSB */
} ZW_WINDOW_COVERING_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Window Covering Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   parameterMask1;               /* MSB */
    uint8_t   parameterMask2;               
    uint8_t   parameterMask3;               /* LSB */
} ZW_WINDOW_COVERING_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Window Covering Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   parameterMask1;               /* MSB */
    uint8_t   parameterMask2;               
    uint8_t   parameterMask3;               
    uint8_t   parameterMask4;               /* LSB */
} ZW_WINDOW_COVERING_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Window Covering Get command class structs */             
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterId;                  /**/
} ZW_WINDOW_COVERING_GET_FRAME;

/************************************************************/
/* Window Covering Report command class structs */          
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterId;                  /**/
    uint8_t   currentValue;                 /**/
    uint8_t   targetValue;                  /**/
    uint8_t   duration;                     /**/
} ZW_WINDOW_COVERING_REPORT_FRAME;

/************************************************************/
/* Window Covering Set variant group structs */             
/************************************************************/
typedef struct _VG_WINDOW_COVERING_SET_VG_
{
    uint8_t   parameterId;                  /**/
    uint8_t   value;                        /**/
} VG_WINDOW_COVERING_SET_VG;

/************************************************************/
/* Window Covering Set 1byte command class structs */       
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_WINDOW_COVERING_SET_VG variantgroup1;                /**/
    uint8_t   duration;                     /**/
} ZW_WINDOW_COVERING_SET_1BYTE_FRAME;

/************************************************************/
/* Window Covering Set 2byte command class structs */       
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_WINDOW_COVERING_SET_VG variantgroup1;                /**/
    VG_WINDOW_COVERING_SET_VG variantgroup2;                /**/
    uint8_t   duration;                     /**/
} ZW_WINDOW_COVERING_SET_2BYTE_FRAME;

/************************************************************/
/* Window Covering Set 3byte command class structs */       
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_WINDOW_COVERING_SET_VG variantgroup1;                /**/
    VG_WINDOW_COVERING_SET_VG variantgroup2;                /**/
    VG_WINDOW_COVERING_SET_VG variantgroup3;                /**/
    uint8_t   duration;                     /**/
} ZW_WINDOW_COVERING_SET_3BYTE_FRAME;

/************************************************************/
/* Window Covering Set 4byte command class structs */       
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    VG_WINDOW_COVERING_SET_VG variantgroup1;                /**/
    VG_WINDOW_COVERING_SET_VG variantgroup2;                /**/
    VG_WINDOW_COVERING_SET_VG variantgroup3;                /**/
    VG_WINDOW_COVERING_SET_VG variantgroup4;                /**/
    uint8_t   duration;                     /**/
} ZW_WINDOW_COVERING_SET_4BYTE_FRAME;

/************************************************************/
/* Window Covering Start Level Change command class structs */
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   parameterId;                  /**/
    uint8_t   duration;                     /**/
} ZW_WINDOW_COVERING_START_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Window Covering Stop Level Change command class structs */
/************************************************************/
typedef struct _ZW_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   parameterId;                  /**/
} ZW_WINDOW_COVERING_STOP_LEVEL_CHANGE_FRAME;

/************************************************************/
/* Security 2 Nonce Get command class structs */            
/************************************************************/
typedef struct _ZW_SECURITY_2_NONCE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
} ZW_SECURITY_2_NONCE_GET_FRAME;

/************************************************************/
/* Security 2 Nonce Report command class structs */         
/************************************************************/
typedef struct _ZW_SECURITY_2_NONCE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   receiversEntropyInput1;       /* MSB */
    uint8_t   receiversEntropyInput2;       
    uint8_t   receiversEntropyInput3;       
    uint8_t   receiversEntropyInput4;       
    uint8_t   receiversEntropyInput5;       
    uint8_t   receiversEntropyInput6;       
    uint8_t   receiversEntropyInput7;       
    uint8_t   receiversEntropyInput8;       
    uint8_t   receiversEntropyInput9;       
    uint8_t   receiversEntropyInput10;      
    uint8_t   receiversEntropyInput11;      
    uint8_t   receiversEntropyInput12;      
    uint8_t   receiversEntropyInput13;      
    uint8_t   receiversEntropyInput14;      
    uint8_t   receiversEntropyInput15;      
    uint8_t   receiversEntropyInput16;      /* LSB */
} ZW_SECURITY_2_NONCE_REPORT_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_VG;

/************************************************************/
/* Security 2 Message Encapsulation variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   /* MSB */
    uint8_t   extension2;                   /* LSB */
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_VG;

/************************************************************/
/* Security 2 Message Encapsulation variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   /* MSB */
    uint8_t   extension2;                   
    uint8_t   extension3;                   /* LSB */
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_VG;

/************************************************************/
/* Security 2 Message Encapsulation variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   /* MSB */
    uint8_t   extension2;                   
    uint8_t   extension3;                   
    uint8_t   extension4;                   /* LSB */
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG;

/************************************************************/
/* Security 2 Message Encapsulation 1byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup1;                /**/
    uint8_t   ccmCiphertextObject1;         
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation 2byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup1;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup2;                /**/
    uint8_t   ccmCiphertextObject1;         /* MSB */
    uint8_t   ccmCiphertextObject2;         /* LSB */
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation 3byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup1;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup2;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup3;                /**/
    uint8_t   ccmCiphertextObject1;         /* MSB */
    uint8_t   ccmCiphertextObject2;         
    uint8_t   ccmCiphertextObject3;         /* LSB */
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation 4byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup1;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup2;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup3;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_VG variantgroup4;                /**/
    uint8_t   ccmCiphertextObject1;         /* MSB */
    uint8_t   ccmCiphertextObject2;         
    uint8_t   ccmCiphertextObject3;         
    uint8_t   ccmCiphertextObject4;         /* LSB */
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_FRAME;

/************************************************************/
/* Kex Get command class structs */                         
/************************************************************/
typedef struct _ZW_KEX_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_KEX_GET_FRAME;

/************************************************************/
/* Kex Report command class structs */                      
/************************************************************/
typedef struct _ZW_KEX_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedKexSchemes;          /**/
    uint8_t   supportedEcdhProfiles;        /**/
    uint8_t   requestedKeys;                /**/
} ZW_KEX_REPORT_FRAME;

/************************************************************/
/* Kex Set command class structs */                         
/************************************************************/
typedef struct _ZW_KEX_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   selectedKexScheme;            /**/
    uint8_t   selectedEcdhProfile;          /**/
    uint8_t   grantedKeys;                  /**/
} ZW_KEX_SET_FRAME;

/************************************************************/
/* Kex Fail command class structs */                        
/************************************************************/
typedef struct _ZW_KEX_FAIL_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   kexFailType;                  /**/
} ZW_KEX_FAIL_FRAME;

/************************************************************/
/* Public Key Report 1byte command class structs */         
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               
} ZW_PUBLIC_KEY_REPORT_1BYTE_FRAME;

/************************************************************/
/* Public Key Report 2byte command class structs */         
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               /* MSB */
    uint8_t   ecdhPublicKey2;               /* LSB */
} ZW_PUBLIC_KEY_REPORT_2BYTE_FRAME;

/************************************************************/
/* Public Key Report 3byte command class structs */         
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               /* MSB */
    uint8_t   ecdhPublicKey2;               
    uint8_t   ecdhPublicKey3;               /* LSB */
} ZW_PUBLIC_KEY_REPORT_3BYTE_FRAME;

/************************************************************/
/* Public Key Report 4byte command class structs */         
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               /* MSB */
    uint8_t   ecdhPublicKey2;               
    uint8_t   ecdhPublicKey3;               
    uint8_t   ecdhPublicKey4;               /* LSB */
} ZW_PUBLIC_KEY_REPORT_4BYTE_FRAME;

/************************************************************/
/* Security 2 Network Key Get command class structs */      
/************************************************************/
typedef struct _ZW_SECURITY_2_NETWORK_KEY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedKey;                 /**/
} ZW_SECURITY_2_NETWORK_KEY_GET_FRAME;

/************************************************************/
/* Security 2 Network Key Report command class structs */   
/************************************************************/
typedef struct _ZW_SECURITY_2_NETWORK_KEY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   grantedKey;                   /**/
    uint8_t   networkKey1;                  /* MSB */
    uint8_t   networkKey2;                  
    uint8_t   networkKey3;                  
    uint8_t   networkKey4;                  
    uint8_t   networkKey5;                  
    uint8_t   networkKey6;                  
    uint8_t   networkKey7;                  
    uint8_t   networkKey8;                  
    uint8_t   networkKey9;                  
    uint8_t   networkKey10;                 
    uint8_t   networkKey11;                 
    uint8_t   networkKey12;                 
    uint8_t   networkKey13;                 
    uint8_t   networkKey14;                 
    uint8_t   networkKey15;                 
    uint8_t   networkKey16;                 /* LSB */
} ZW_SECURITY_2_NETWORK_KEY_REPORT_FRAME;

/************************************************************/
/* Security 2 Network Key Verify command class structs */   
/************************************************************/
typedef struct _ZW_SECURITY_2_NETWORK_KEY_VERIFY_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_2_NETWORK_KEY_VERIFY_FRAME;

/************************************************************/
/* Security 2 Transfer End command class structs */         
/************************************************************/
typedef struct _ZW_SECURITY_2_TRANSFER_END_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_SECURITY_2_TRANSFER_END_FRAME;

/************************************************************/
/* Security 2 Commands Supported Get command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_GET_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Security 2 Nonce Get V2 command class structs */         
/************************************************************/
typedef struct _ZW_SECURITY_2_NONCE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
} ZW_SECURITY_2_NONCE_GET_V2_FRAME;

/************************************************************/
/* Security 2 Nonce Report V2 command class structs */      
/************************************************************/
typedef struct _ZW_SECURITY_2_NONCE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   receiversEntropyInput1;       /* MSB */
    uint8_t   receiversEntropyInput2;       
    uint8_t   receiversEntropyInput3;       
    uint8_t   receiversEntropyInput4;       
    uint8_t   receiversEntropyInput5;       
    uint8_t   receiversEntropyInput6;       
    uint8_t   receiversEntropyInput7;       
    uint8_t   receiversEntropyInput8;       
    uint8_t   receiversEntropyInput9;       
    uint8_t   receiversEntropyInput10;      
    uint8_t   receiversEntropyInput11;      
    uint8_t   receiversEntropyInput12;      
    uint8_t   receiversEntropyInput13;      
    uint8_t   receiversEntropyInput14;      
    uint8_t   receiversEntropyInput15;      
    uint8_t   receiversEntropyInput16;      /* LSB */
} ZW_SECURITY_2_NONCE_REPORT_V2_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation V2 variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_V2_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_V2_VG;

/************************************************************/
/* Security 2 Message Encapsulation V2 variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_V2_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   /* MSB */
    uint8_t   extension2;                   /* LSB */
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_V2_VG;

/************************************************************/
/* Security 2 Message Encapsulation V2 variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_V2_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   /* MSB */
    uint8_t   extension2;                   
    uint8_t   extension3;                   /* LSB */
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_V2_VG;

/************************************************************/
/* Security 2 Message Encapsulation V2 variant group structs */
/************************************************************/
typedef struct _VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG_
{
    uint8_t   extensionLength;              /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   extension1;                   /* MSB */
    uint8_t   extension2;                   
    uint8_t   extension3;                   
    uint8_t   extension4;                   /* LSB */
} VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG;

/************************************************************/
/* Security 2 Message Encapsulation 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup1;                /**/
    uint8_t   ccmCiphertextObject1;         
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_1BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup1;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup2;                /**/
    uint8_t   ccmCiphertextObject1;         /* MSB */
    uint8_t   ccmCiphertextObject2;         /* LSB */
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_2BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup1;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup2;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup3;                /**/
    uint8_t   ccmCiphertextObject1;         /* MSB */
    uint8_t   ccmCiphertextObject2;         
    uint8_t   ccmCiphertextObject3;         /* LSB */
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_3BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Message Encapsulation 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup1;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup2;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup3;                /**/
    VG_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_VG variantgroup4;                /**/
    uint8_t   ccmCiphertextObject1;         /* MSB */
    uint8_t   ccmCiphertextObject2;         
    uint8_t   ccmCiphertextObject3;         
    uint8_t   ccmCiphertextObject4;         /* LSB */
} ZW_SECURITY_2_MESSAGE_ENCAPSULATION_4BYTE_V2_FRAME;

/************************************************************/
/* Kex Get V2 command class structs */                      
/************************************************************/
typedef struct _ZW_KEX_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_KEX_GET_V2_FRAME;

/************************************************************/
/* Kex Report V2 command class structs */                   
/************************************************************/
typedef struct _ZW_KEX_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedKexSchemes;          /**/
    uint8_t   supportedEcdhProfiles;        /**/
    uint8_t   requestedKeys;                /**/
} ZW_KEX_REPORT_V2_FRAME;

/************************************************************/
/* Kex Set V2 command class structs */                      
/************************************************************/
typedef struct _ZW_KEX_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   selectedKexScheme;            /**/
    uint8_t   selectedEcdhProfile;          /**/
    uint8_t   grantedKeys;                  /**/
} ZW_KEX_SET_V2_FRAME;

/************************************************************/
/* Kex Fail V2 command class structs */                     
/************************************************************/
typedef struct _ZW_KEX_FAIL_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   kexFailType;                  /**/
} ZW_KEX_FAIL_V2_FRAME;

/************************************************************/
/* Public Key Report 1byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               
} ZW_PUBLIC_KEY_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Public Key Report 2byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               /* MSB */
    uint8_t   ecdhPublicKey2;               /* LSB */
} ZW_PUBLIC_KEY_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Public Key Report 3byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               /* MSB */
    uint8_t   ecdhPublicKey2;               
    uint8_t   ecdhPublicKey3;               /* LSB */
} ZW_PUBLIC_KEY_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Public Key Report 4byte V2 command class structs */      
/************************************************************/
typedef struct _ZW_PUBLIC_KEY_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   ecdhPublicKey1;               /* MSB */
    uint8_t   ecdhPublicKey2;               
    uint8_t   ecdhPublicKey3;               
    uint8_t   ecdhPublicKey4;               /* LSB */
} ZW_PUBLIC_KEY_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Network Key Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_SECURITY_2_NETWORK_KEY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   requestedKey;                 /**/
} ZW_SECURITY_2_NETWORK_KEY_GET_V2_FRAME;

/************************************************************/
/* Security 2 Network Key Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_NETWORK_KEY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   grantedKey;                   /**/
    uint8_t   networkKey1;                  /* MSB */
    uint8_t   networkKey2;                  
    uint8_t   networkKey3;                  
    uint8_t   networkKey4;                  
    uint8_t   networkKey5;                  
    uint8_t   networkKey6;                  
    uint8_t   networkKey7;                  
    uint8_t   networkKey8;                  
    uint8_t   networkKey9;                  
    uint8_t   networkKey10;                 
    uint8_t   networkKey11;                 
    uint8_t   networkKey12;                 
    uint8_t   networkKey13;                 
    uint8_t   networkKey14;                 
    uint8_t   networkKey15;                 
    uint8_t   networkKey16;                 /* LSB */
} ZW_SECURITY_2_NETWORK_KEY_REPORT_V2_FRAME;

/************************************************************/
/* Security 2 Network Key Verify V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_NETWORK_KEY_VERIFY_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_2_NETWORK_KEY_VERIFY_V2_FRAME;

/************************************************************/
/* Security 2 Transfer End V2 command class structs */      
/************************************************************/
typedef struct _ZW_SECURITY_2_TRANSFER_END_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_SECURITY_2_TRANSFER_END_V2_FRAME;

/************************************************************/
/* Security 2 Commands Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                /* LSB */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                /* LSB */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Security 2 Commands Supported Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   commandClass1;                /* MSB */
    uint8_t   commandClass2;                
    uint8_t   commandClass3;                
    uint8_t   commandClass4;                /* LSB */
} ZW_SECURITY_2_COMMANDS_SUPPORTED_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Nls Node List Get V2 command class structs */            
/************************************************************/
typedef struct _ZW_NLS_NODE_LIST_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   request;                      /**/
} ZW_NLS_NODE_LIST_GET_V2_FRAME;

/************************************************************/
/* Nls Node List Report V2 command class structs */         
/************************************************************/
typedef struct _ZW_NLS_NODE_LIST_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   idMsbOfNodeN;                 /**/
    uint8_t   idLsbOfNodeN;                 /**/
    uint8_t   grantedKeysBitmaskOfNodeN;    /**/
    uint8_t   nlsStateOfNodeN;              /**/
} ZW_NLS_NODE_LIST_REPORT_V2_FRAME;

/************************************************************/
/* Nls State Get V2 command class structs */                
/************************************************************/
typedef struct _ZW_NLS_STATE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_NLS_STATE_GET_V2_FRAME;

/************************************************************/
/* Nls State Report V2 command class structs */             
/************************************************************/
typedef struct _ZW_NLS_STATE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_NLS_STATE_REPORT_V2_FRAME;

/************************************************************/
/* Nls State Set V2 command class structs */                
/************************************************************/
typedef struct _ZW_NLS_STATE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nlsState;                     /**/
} ZW_NLS_STATE_SET_V2_FRAME;

/************************************************************/
/* Irrigation System Info Get command class structs */      
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IRRIGATION_SYSTEM_INFO_GET_FRAME;

/************************************************************/
/* Irrigation System Info Report command class structs */   
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_INFO_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   totalNumberOfValves;          /**/
    uint8_t   totalNumberOfValveTables;     /**/
    uint8_t   properties2;                  /* masked byte */
} ZW_IRRIGATION_SYSTEM_INFO_REPORT_FRAME;

/************************************************************/
/* Irrigation System Status Get command class structs */    
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_STATUS_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IRRIGATION_SYSTEM_STATUS_GET_FRAME;

/************************************************************/
/* Irrigation System Status Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_STATUS_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   systemVoltage;                /**/
    uint8_t   sensorStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   flowValue1;                   
    uint8_t   properties2;                  /* masked byte */
    uint8_t   pressureValue1;               
    uint8_t   shutoffDuration;              /**/
    uint8_t   systemErrorStatus;            /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   valveId;                      /**/
} ZW_IRRIGATION_SYSTEM_STATUS_REPORT_1BYTE_FRAME;

/************************************************************/
/* Irrigation System Status Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_STATUS_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   systemVoltage;                /**/
    uint8_t   sensorStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   flowValue1;                   /* MSB */
    uint8_t   flowValue2;                   /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   pressureValue1;               /* MSB */
    uint8_t   pressureValue2;               /* LSB */
    uint8_t   shutoffDuration;              /**/
    uint8_t   systemErrorStatus;            /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   valveId;                      /**/
} ZW_IRRIGATION_SYSTEM_STATUS_REPORT_2BYTE_FRAME;

/************************************************************/
/* Irrigation System Status Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_STATUS_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   systemVoltage;                /**/
    uint8_t   sensorStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   flowValue1;                   /* MSB */
    uint8_t   flowValue2;                   
    uint8_t   flowValue3;                   /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   pressureValue1;               /* MSB */
    uint8_t   pressureValue2;               
    uint8_t   pressureValue3;               /* LSB */
    uint8_t   shutoffDuration;              /**/
    uint8_t   systemErrorStatus;            /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   valveId;                      /**/
} ZW_IRRIGATION_SYSTEM_STATUS_REPORT_3BYTE_FRAME;

/************************************************************/
/* Irrigation System Status Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_STATUS_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   systemVoltage;                /**/
    uint8_t   sensorStatus;                 /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   flowValue1;                   /* MSB */
    uint8_t   flowValue2;                   
    uint8_t   flowValue3;                   
    uint8_t   flowValue4;                   /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   pressureValue1;               /* MSB */
    uint8_t   pressureValue2;               
    uint8_t   pressureValue3;               
    uint8_t   pressureValue4;               /* LSB */
    uint8_t   shutoffDuration;              /**/
    uint8_t   systemErrorStatus;            /**/
    uint8_t   properties3;                  /* masked byte */
    uint8_t   valveId;                      /**/
} ZW_IRRIGATION_SYSTEM_STATUS_REPORT_4BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_SET_1BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  /* MSB */
    uint8_t   highPressureThresholdValue2;  /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   /* MSB */
    uint8_t   lowPressureThresholdValue2;   /* LSB */
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_SET_2BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  /* MSB */
    uint8_t   highPressureThresholdValue2;  
    uint8_t   highPressureThresholdValue3;  /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   /* MSB */
    uint8_t   lowPressureThresholdValue2;   
    uint8_t   lowPressureThresholdValue3;   /* LSB */
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_SET_3BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  /* MSB */
    uint8_t   highPressureThresholdValue2;  
    uint8_t   highPressureThresholdValue3;  
    uint8_t   highPressureThresholdValue4;  /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   /* MSB */
    uint8_t   lowPressureThresholdValue2;   
    uint8_t   lowPressureThresholdValue3;   
    uint8_t   lowPressureThresholdValue4;   /* LSB */
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_SET_4BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Get command class structs */    
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IRRIGATION_SYSTEM_CONFIG_GET_FRAME;

/************************************************************/
/* Irrigation System Config Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_1BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  /* MSB */
    uint8_t   highPressureThresholdValue2;  /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   /* MSB */
    uint8_t   lowPressureThresholdValue2;   /* LSB */
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_2BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  /* MSB */
    uint8_t   highPressureThresholdValue2;  
    uint8_t   highPressureThresholdValue3;  /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   /* MSB */
    uint8_t   lowPressureThresholdValue2;   
    uint8_t   lowPressureThresholdValue3;   /* LSB */
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_3BYTE_FRAME;

/************************************************************/
/* Irrigation System Config Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   mainValveDelay;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   highPressureThresholdValue1;  /* MSB */
    uint8_t   highPressureThresholdValue2;  
    uint8_t   highPressureThresholdValue3;  
    uint8_t   highPressureThresholdValue4;  /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   lowPressureThresholdValue1;   /* MSB */
    uint8_t   lowPressureThresholdValue2;   
    uint8_t   lowPressureThresholdValue3;   
    uint8_t   lowPressureThresholdValue4;   /* LSB */
    uint8_t   sensorPolarity;               /**/
} ZW_IRRIGATION_SYSTEM_CONFIG_REPORT_4BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Info Get command class structs */       
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
} ZW_IRRIGATION_VALVE_INFO_GET_FRAME;

/************************************************************/
/* Irrigation Valve Info Report command class structs */    
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_INFO_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrent;               /**/
    uint8_t   valveErrorStatus;             /**/
} ZW_IRRIGATION_VALVE_INFO_REPORT_FRAME;

/************************************************************/
/* Irrigation Valve Config Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_SET_1BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            /* MSB */
    uint8_t   maximumFlowValue2;            /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      /* MSB */
    uint8_t   flowHighThresholdValue2;      /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       /* MSB */
    uint8_t   flowLowThresholdValue2;       /* LSB */
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_SET_2BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            /* MSB */
    uint8_t   maximumFlowValue2;            
    uint8_t   maximumFlowValue3;            /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      /* MSB */
    uint8_t   flowHighThresholdValue2;      
    uint8_t   flowHighThresholdValue3;      /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       /* MSB */
    uint8_t   flowLowThresholdValue2;       
    uint8_t   flowLowThresholdValue3;       /* LSB */
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_SET_3BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            /* MSB */
    uint8_t   maximumFlowValue2;            
    uint8_t   maximumFlowValue3;            
    uint8_t   maximumFlowValue4;            /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      /* MSB */
    uint8_t   flowHighThresholdValue2;      
    uint8_t   flowHighThresholdValue3;      
    uint8_t   flowHighThresholdValue4;      /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       /* MSB */
    uint8_t   flowLowThresholdValue2;       
    uint8_t   flowLowThresholdValue3;       
    uint8_t   flowLowThresholdValue4;       /* LSB */
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_SET_4BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Get command class structs */     
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
} ZW_IRRIGATION_VALVE_CONFIG_GET_FRAME;

/************************************************************/
/* Irrigation Valve Config Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_REPORT_1BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            /* MSB */
    uint8_t   maximumFlowValue2;            /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      /* MSB */
    uint8_t   flowHighThresholdValue2;      /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       /* MSB */
    uint8_t   flowLowThresholdValue2;       /* LSB */
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_REPORT_2BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            /* MSB */
    uint8_t   maximumFlowValue2;            
    uint8_t   maximumFlowValue3;            /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      /* MSB */
    uint8_t   flowHighThresholdValue2;      
    uint8_t   flowHighThresholdValue3;      /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       /* MSB */
    uint8_t   flowLowThresholdValue2;       
    uint8_t   flowLowThresholdValue3;       /* LSB */
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_REPORT_3BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Config Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_CONFIG_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   nominalCurrentHighThreshold;  /**/
    uint8_t   nominalCurrentLowThreshold;   /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumFlowValue1;            /* MSB */
    uint8_t   maximumFlowValue2;            
    uint8_t   maximumFlowValue3;            
    uint8_t   maximumFlowValue4;            /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   flowHighThresholdValue1;      /* MSB */
    uint8_t   flowHighThresholdValue2;      
    uint8_t   flowHighThresholdValue3;      
    uint8_t   flowHighThresholdValue4;      /* LSB */
    uint8_t   properties4;                  /* masked byte */
    uint8_t   flowLowThresholdValue1;       /* MSB */
    uint8_t   flowLowThresholdValue2;       
    uint8_t   flowLowThresholdValue3;       
    uint8_t   flowLowThresholdValue4;       /* LSB */
    uint8_t   sensorUsage;                  /**/
} ZW_IRRIGATION_VALVE_CONFIG_REPORT_4BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Run command class structs */            
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_RUN_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   valveId;                      /**/
    uint8_t   duration1;                    /* MSB */
    uint8_t   duration2;                    /* LSB */
} ZW_IRRIGATION_VALVE_RUN_FRAME;

/************************************************************/
/* Irrigation Valve Table Set variant group structs */      
/************************************************************/
typedef struct _VG_IRRIGATION_VALVE_TABLE_SET_VG_
{
    uint8_t   valveId;                      /**/
    uint8_t   duration1;                    /* MSB */
    uint8_t   duration2;                    /* LSB */
} VG_IRRIGATION_VALVE_TABLE_SET_VG;

/************************************************************/
/* Irrigation Valve Table Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup1;                /**/
} ZW_IRRIGATION_VALVE_TABLE_SET_1BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup1;                /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup2;                /**/
} ZW_IRRIGATION_VALVE_TABLE_SET_2BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup1;                /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup2;                /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup3;                /**/
} ZW_IRRIGATION_VALVE_TABLE_SET_3BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup1;                /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup2;                /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup3;                /**/
    VG_IRRIGATION_VALVE_TABLE_SET_VG variantgroup4;                /**/
} ZW_IRRIGATION_VALVE_TABLE_SET_4BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Get command class structs */      
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
} ZW_IRRIGATION_VALVE_TABLE_GET_FRAME;

/************************************************************/
/* Irrigation Valve Table Report variant group structs */   
/************************************************************/
typedef struct _VG_IRRIGATION_VALVE_TABLE_REPORT_VG_
{
    uint8_t   valveId;                      /**/
    uint8_t   duration1;                    /* MSB */
    uint8_t   duration2;                    /* LSB */
} VG_IRRIGATION_VALVE_TABLE_REPORT_VG;

/************************************************************/
/* Irrigation Valve Table Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup1;                /**/
} ZW_IRRIGATION_VALVE_TABLE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup1;                /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup2;                /**/
} ZW_IRRIGATION_VALVE_TABLE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup1;                /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup2;                /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup3;                /**/
} ZW_IRRIGATION_VALVE_TABLE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId;                 /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup1;                /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup2;                /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup3;                /**/
    VG_IRRIGATION_VALVE_TABLE_REPORT_VG variantgroup4;                /**/
} ZW_IRRIGATION_VALVE_TABLE_REPORT_4BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Run 1byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_RUN_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId1;                
} ZW_IRRIGATION_VALVE_TABLE_RUN_1BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Run 2byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_RUN_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId1;                /* MSB */
    uint8_t   valveTableId2;                /* LSB */
} ZW_IRRIGATION_VALVE_TABLE_RUN_2BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Run 3byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_RUN_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId1;                /* MSB */
    uint8_t   valveTableId2;                
    uint8_t   valveTableId3;                /* LSB */
} ZW_IRRIGATION_VALVE_TABLE_RUN_3BYTE_FRAME;

/************************************************************/
/* Irrigation Valve Table Run 4byte command class structs */
/************************************************************/
typedef struct _ZW_IRRIGATION_VALVE_TABLE_RUN_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   valveTableId1;                /* MSB */
    uint8_t   valveTableId2;                
    uint8_t   valveTableId3;                
    uint8_t   valveTableId4;                /* LSB */
} ZW_IRRIGATION_VALVE_TABLE_RUN_4BYTE_FRAME;

/************************************************************/
/* Irrigation System Shutoff command class structs */       
/************************************************************/
typedef struct _ZW_IRRIGATION_SYSTEM_SHUTOFF_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   duration;                     /**/
} ZW_IRRIGATION_SYSTEM_SHUTOFF_FRAME;

/************************************************************/
/* Supervision Get command class structs */                 
/************************************************************/
typedef struct _ZW_SUPERVISION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   encapsulatedCommandLength;    /**/
} ZW_SUPERVISION_GET_FRAME;

/************************************************************/
/* Supervision Report command class structs */              
/************************************************************/
typedef struct _ZW_SUPERVISION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   status;                       /**/
    uint8_t   duration;                     /**/
} ZW_SUPERVISION_REPORT_FRAME;

/************************************************************/
/* Supervision Get V2 command class structs */              
/************************************************************/
typedef struct _ZW_SUPERVISION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   encapsulatedCommandLength;    /**/
} ZW_SUPERVISION_GET_V2_FRAME;

/************************************************************/
/* Supervision Report V2 command class structs */           
/************************************************************/
typedef struct _ZW_SUPERVISION_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   status;                       /**/
    uint8_t   duration;                     /**/
} ZW_SUPERVISION_REPORT_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_1BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_2BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_3BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_4BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Get command class structs */   
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_GET_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_1BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_2BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_3BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_4BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Supported Get command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_FRAME;

/************************************************************/
/* Humidity Control Setpoint Supported Report command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask;                      /**/
} ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Humidity Control Setpoint Scale Supported Get command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Humidity Control Setpoint Scale Supported Report command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Get command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_1BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                /* MSB */
    uint8_t   minimumValue2;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                /* MSB */
    uint8_t   maximumValue2;                /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_2BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                /* MSB */
    uint8_t   minimumValue2;                
    uint8_t   minimumValue3;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                /* MSB */
    uint8_t   maximumValue2;                
    uint8_t   maximumValue3;                /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_3BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                /* MSB */
    uint8_t   minimumValue2;                
    uint8_t   minimumValue3;                
    uint8_t   minimumValue4;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                /* MSB */
    uint8_t   maximumValue2;                
    uint8_t   maximumValue3;                
    uint8_t   maximumValue4;                /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_4BYTE_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_1BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_2BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_3BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Set 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SET_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_SET_4BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Get V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_GET_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Supported Report V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask;                      /**/
} ZW_HUMIDITY_CONTROL_SETPOINT_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Scale Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Scale Supported Report V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_SCALE_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Get V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_GET_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                /* MSB */
    uint8_t   minimumValue2;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                /* MSB */
    uint8_t   maximumValue2;                /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                /* MSB */
    uint8_t   minimumValue2;                
    uint8_t   minimumValue3;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                /* MSB */
    uint8_t   maximumValue2;                
    uint8_t   maximumValue3;                /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Setpoint Capabilities Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   minimumValue1;                /* MSB */
    uint8_t   minimumValue2;                
    uint8_t   minimumValue3;                
    uint8_t   minimumValue4;                /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   maximumValue1;                /* MSB */
    uint8_t   maximumValue2;                
    uint8_t   maximumValue3;                
    uint8_t   maximumValue4;                /* LSB */
} ZW_HUMIDITY_CONTROL_SETPOINT_CAPABILITIES_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Humidity Control Mode Set command class structs */       
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_MODE_SET_FRAME;

/************************************************************/
/* Humidity Control Mode Get command class structs */       
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_MODE_GET_FRAME;

/************************************************************/
/* Humidity Control Mode Report command class structs */    
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_MODE_REPORT_FRAME;

/************************************************************/
/* Humidity Control Mode Supported Get command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_GET_FRAME;

/************************************************************/
/* Humidity Control Mode Supported Report command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask;                      /**/
} ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_FRAME;

/************************************************************/
/* Humidity Control Mode Set V2 command class structs */    
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_MODE_SET_V2_FRAME;

/************************************************************/
/* Humidity Control Mode Get V2 command class structs */    
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_MODE_GET_V2_FRAME;

/************************************************************/
/* Humidity Control Mode Report V2 command class structs */ 
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_MODE_REPORT_V2_FRAME;

/************************************************************/
/* Humidity Control Mode Supported Get V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_GET_V2_FRAME;

/************************************************************/
/* Humidity Control Mode Supported Report V2 command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   bitMask;                      /**/
} ZW_HUMIDITY_CONTROL_MODE_SUPPORTED_REPORT_V2_FRAME;

/************************************************************/
/* Humidity Control Operating State Get command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_OPERATING_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_HUMIDITY_CONTROL_OPERATING_STATE_GET_FRAME;

/************************************************************/
/* Humidity Control Operating State Report command class structs */
/************************************************************/
typedef struct _ZW_HUMIDITY_CONTROL_OPERATING_STATE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_HUMIDITY_CONTROL_OPERATING_STATE_REPORT_FRAME;

/************************************************************/
/* Entry Control Notification 1byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_NOTIFICATION_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventType;                    /**/
    uint8_t   eventDataLength;              /**/
    uint8_t   eventData1;                   
} ZW_ENTRY_CONTROL_NOTIFICATION_1BYTE_FRAME;

/************************************************************/
/* Entry Control Notification 2byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_NOTIFICATION_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventType;                    /**/
    uint8_t   eventDataLength;              /**/
    uint8_t   eventData1;                   /* MSB */
    uint8_t   eventData2;                   /* LSB */
} ZW_ENTRY_CONTROL_NOTIFICATION_2BYTE_FRAME;

/************************************************************/
/* Entry Control Notification 3byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_NOTIFICATION_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventType;                    /**/
    uint8_t   eventDataLength;              /**/
    uint8_t   eventData1;                   /* MSB */
    uint8_t   eventData2;                   
    uint8_t   eventData3;                   /* LSB */
} ZW_ENTRY_CONTROL_NOTIFICATION_3BYTE_FRAME;

/************************************************************/
/* Entry Control Notification 4byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_NOTIFICATION_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   eventType;                    /**/
    uint8_t   eventDataLength;              /**/
    uint8_t   eventData1;                   /* MSB */
    uint8_t   eventData2;                   
    uint8_t   eventData3;                   
    uint8_t   eventData4;                   /* LSB */
} ZW_ENTRY_CONTROL_NOTIFICATION_4BYTE_FRAME;

/************************************************************/
/* Entry Control Key Supported Get command class structs */ 
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_KEY_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ENTRY_CONTROL_KEY_SUPPORTED_GET_FRAME;

/************************************************************/
/* Entry Control Key Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keySupportedBitMaskLength;    /**/
    uint8_t   keySupportedBitMask1;         
} ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Entry Control Key Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keySupportedBitMaskLength;    /**/
    uint8_t   keySupportedBitMask1;         /* MSB */
    uint8_t   keySupportedBitMask2;         /* LSB */
} ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Entry Control Key Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keySupportedBitMaskLength;    /**/
    uint8_t   keySupportedBitMask1;         /* MSB */
    uint8_t   keySupportedBitMask2;         
    uint8_t   keySupportedBitMask3;         /* LSB */
} ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Entry Control Key Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keySupportedBitMaskLength;    /**/
    uint8_t   keySupportedBitMask1;         /* MSB */
    uint8_t   keySupportedBitMask2;         
    uint8_t   keySupportedBitMask3;         
    uint8_t   keySupportedBitMask4;         /* LSB */
} ZW_ENTRY_CONTROL_KEY_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Entry Control Event Supported Get command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_EVENT_SUPPORTED_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ENTRY_CONTROL_EVENT_SUPPORTED_GET_FRAME;

/************************************************************/
/* Entry Control Event Supported Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataTypeSupportedBitMask1;    
    uint8_t   properties2;                  /* masked byte */
    uint8_t   eventTypeSupportedBitMask1;   
    uint8_t   keyCachedSizeSupportedMinimum;/**/
    uint8_t   keyCachedSizeSupportedMaximum;/**/
    uint8_t   keyCachedTimeoutSupportedMinimum;/**/
    uint8_t   keyCachedTimeoutSupportedMaximum;/**/
} ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_1BYTE_FRAME;

/************************************************************/
/* Entry Control Event Supported Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataTypeSupportedBitMask1;    /* MSB */
    uint8_t   dataTypeSupportedBitMask2;    /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   eventTypeSupportedBitMask1;   /* MSB */
    uint8_t   eventTypeSupportedBitMask2;   /* LSB */
    uint8_t   keyCachedSizeSupportedMinimum;/**/
    uint8_t   keyCachedSizeSupportedMaximum;/**/
    uint8_t   keyCachedTimeoutSupportedMinimum;/**/
    uint8_t   keyCachedTimeoutSupportedMaximum;/**/
} ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_2BYTE_FRAME;

/************************************************************/
/* Entry Control Event Supported Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataTypeSupportedBitMask1;    /* MSB */
    uint8_t   dataTypeSupportedBitMask2;    
    uint8_t   dataTypeSupportedBitMask3;    /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   eventTypeSupportedBitMask1;   /* MSB */
    uint8_t   eventTypeSupportedBitMask2;   
    uint8_t   eventTypeSupportedBitMask3;   /* LSB */
    uint8_t   keyCachedSizeSupportedMinimum;/**/
    uint8_t   keyCachedSizeSupportedMaximum;/**/
    uint8_t   keyCachedTimeoutSupportedMinimum;/**/
    uint8_t   keyCachedTimeoutSupportedMaximum;/**/
} ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_3BYTE_FRAME;

/************************************************************/
/* Entry Control Event Supported Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataTypeSupportedBitMask1;    /* MSB */
    uint8_t   dataTypeSupportedBitMask2;    
    uint8_t   dataTypeSupportedBitMask3;    
    uint8_t   dataTypeSupportedBitMask4;    /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   eventTypeSupportedBitMask1;   /* MSB */
    uint8_t   eventTypeSupportedBitMask2;   
    uint8_t   eventTypeSupportedBitMask3;   
    uint8_t   eventTypeSupportedBitMask4;   /* LSB */
    uint8_t   keyCachedSizeSupportedMinimum;/**/
    uint8_t   keyCachedSizeSupportedMaximum;/**/
    uint8_t   keyCachedTimeoutSupportedMinimum;/**/
    uint8_t   keyCachedTimeoutSupportedMaximum;/**/
} ZW_ENTRY_CONTROL_EVENT_SUPPORTED_REPORT_4BYTE_FRAME;

/************************************************************/
/* Entry Control Configuration Set command class structs */ 
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keyCacheSize;                 /**/
    uint8_t   keyCacheTimeout;              /**/
} ZW_ENTRY_CONTROL_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Entry Control Configuration Get command class structs */ 
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ENTRY_CONTROL_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Entry Control Configuration Report command class structs */
/************************************************************/
typedef struct _ZW_ENTRY_CONTROL_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   keyCacheSize;                 /**/
    uint8_t   keyCacheTimeout;              /**/
} ZW_ENTRY_CONTROL_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Initiate command class structs */                        
/************************************************************/
typedef struct _ZW_INITIATE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   nodeId;                       /**/
    uint8_t   stepId;                       /**/
} ZW_INITIATE_FRAME;

/************************************************************/
/* Complete command class structs */                        
/************************************************************/
typedef struct _ZW_COMPLETE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   stepId;                       /**/
    uint8_t   status;                       /**/
} ZW_COMPLETE_FRAME;

/************************************************************/
/* Node Provisioning Set variant group structs */           
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_SET_1BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_NODE_PROVISIONING_SET_1BYTE_VG;

/************************************************************/
/* Node Provisioning Set variant group structs */           
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_SET_2BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_NODE_PROVISIONING_SET_2BYTE_VG;

/************************************************************/
/* Node Provisioning Set variant group structs */           
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_SET_3BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_NODE_PROVISIONING_SET_3BYTE_VG;

/************************************************************/
/* Node Provisioning Set variant group structs */           
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_SET_4BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_NODE_PROVISIONING_SET_4BYTE_VG;

/************************************************************/
/* Node Provisioning Set 1byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup1;                /**/
} ZW_NODE_PROVISIONING_SET_1BYTE_FRAME;

/************************************************************/
/* Node Provisioning Set 2byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup2;                /**/
} ZW_NODE_PROVISIONING_SET_2BYTE_FRAME;

/************************************************************/
/* Node Provisioning Set 3byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup2;                /**/
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup3;                /**/
} ZW_NODE_PROVISIONING_SET_3BYTE_FRAME;

/************************************************************/
/* Node Provisioning Set 4byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup2;                /**/
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup3;                /**/
    VG_NODE_PROVISIONING_SET_4BYTE_VG variantgroup4;                /**/
} ZW_NODE_PROVISIONING_SET_4BYTE_FRAME;

/************************************************************/
/* Node Provisioning Delete 1byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_DELETE_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_NODE_PROVISIONING_DELETE_1BYTE_FRAME;

/************************************************************/
/* Node Provisioning Delete 2byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_DELETE_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_NODE_PROVISIONING_DELETE_2BYTE_FRAME;

/************************************************************/
/* Node Provisioning Delete 3byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_DELETE_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_NODE_PROVISIONING_DELETE_3BYTE_FRAME;

/************************************************************/
/* Node Provisioning Delete 4byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_DELETE_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_NODE_PROVISIONING_DELETE_4BYTE_FRAME;

/************************************************************/
/* Node Provisioning List Iteration Get command class structs */
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_LIST_ITERATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   remainingCounter;             /**/
} ZW_NODE_PROVISIONING_LIST_ITERATION_GET_FRAME;

/************************************************************/
/* Node Provisioning List Iteration Report variant group structs */
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_1BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_1BYTE_VG;

/************************************************************/
/* Node Provisioning List Iteration Report variant group structs */
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_2BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_2BYTE_VG;

/************************************************************/
/* Node Provisioning List Iteration Report variant group structs */
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_3BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_3BYTE_VG;

/************************************************************/
/* Node Provisioning List Iteration Report variant group structs */
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG_
{
    uint8_t   properties2;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG;

/************************************************************/
/* Node Provisioning List Iteration Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   remainingCount;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Node Provisioning List Iteration Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   remainingCount;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Node Provisioning List Iteration Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   remainingCount;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Node Provisioning List Iteration Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   remainingCount;               /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_NODE_PROVISIONING_LIST_ITERATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Node Provisioning Get 1byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_GET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
} ZW_NODE_PROVISIONING_GET_1BYTE_FRAME;

/************************************************************/
/* Node Provisioning Get 2byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_GET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
} ZW_NODE_PROVISIONING_GET_2BYTE_FRAME;

/************************************************************/
/* Node Provisioning Get 3byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_GET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
} ZW_NODE_PROVISIONING_GET_3BYTE_FRAME;

/************************************************************/
/* Node Provisioning Get 4byte command class structs */     
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_GET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
} ZW_NODE_PROVISIONING_GET_4BYTE_FRAME;

/************************************************************/
/* Node Provisioning Report variant group structs */        
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_REPORT_1BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       
} VG_NODE_PROVISIONING_REPORT_1BYTE_VG;

/************************************************************/
/* Node Provisioning Report variant group structs */        
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_REPORT_2BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       /* LSB */
} VG_NODE_PROVISIONING_REPORT_2BYTE_VG;

/************************************************************/
/* Node Provisioning Report variant group structs */        
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_REPORT_3BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       /* LSB */
} VG_NODE_PROVISIONING_REPORT_3BYTE_VG;

/************************************************************/
/* Node Provisioning Report variant group structs */        
/************************************************************/
typedef struct _VG_NODE_PROVISIONING_REPORT_4BYTE_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   length;                       /**/
    uint8_t   value1;                       /* MSB */
    uint8_t   value2;                       
    uint8_t   value3;                       
    uint8_t   value4;                       /* LSB */
} VG_NODE_PROVISIONING_REPORT_4BYTE_VG;

/************************************************************/
/* Node Provisioning Report 1byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_NODE_PROVISIONING_REPORT_1BYTE_FRAME;

/************************************************************/
/* Node Provisioning Report 2byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         /* LSB */
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_NODE_PROVISIONING_REPORT_2BYTE_FRAME;

/************************************************************/
/* Node Provisioning Report 3byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         /* LSB */
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_NODE_PROVISIONING_REPORT_3BYTE_FRAME;

/************************************************************/
/* Node Provisioning Report 4byte command class structs */  
/************************************************************/
typedef struct _ZW_NODE_PROVISIONING_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   seqNo;                        /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dsk1;                         /* MSB */
    uint8_t   dsk2;                         
    uint8_t   dsk3;                         
    uint8_t   dsk4;                         /* LSB */
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_NODE_PROVISIONING_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_NODE_PROVISIONING_REPORT_4BYTE_FRAME;

/************************************************************/
/* Sound Switch Tones Number Get command class structs */   
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONES_NUMBER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SOUND_SWITCH_TONES_NUMBER_GET_FRAME;

/************************************************************/
/* Sound Switch Tones Number Report command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONES_NUMBER_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedTones;               /**/
} ZW_SOUND_SWITCH_TONES_NUMBER_REPORT_FRAME;

/************************************************************/
/* Sound Switch Tone Info Get command class structs */      
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
} ZW_SOUND_SWITCH_TONE_INFO_GET_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_1BYTE_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_2BYTE_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_3BYTE_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_4BYTE_FRAME;

/************************************************************/
/* Sound Switch Configuration Set command class structs */  
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_CONFIGURATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   volume;                       /**/
    uint8_t   defaultToneIdentifier;        /**/
} ZW_SOUND_SWITCH_CONFIGURATION_SET_FRAME;

/************************************************************/
/* Sound Switch Configuration Get command class structs */  
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SOUND_SWITCH_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Sound Switch Configuration Report command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_CONFIGURATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   volume;                       /**/
    uint8_t   defaultToneIdentifer;         /**/
} ZW_SOUND_SWITCH_CONFIGURATION_REPORT_FRAME;

/************************************************************/
/* Sound Switch Tone Play Set command class structs */      
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_PLAY_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
} ZW_SOUND_SWITCH_TONE_PLAY_SET_FRAME;

/************************************************************/
/* Sound Switch Tone Play Get command class structs */      
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_PLAY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SOUND_SWITCH_TONE_PLAY_GET_FRAME;

/************************************************************/
/* Sound Switch Tone Play Report command class structs */   
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_PLAY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
} ZW_SOUND_SWITCH_TONE_PLAY_REPORT_FRAME;

/************************************************************/
/* Sound Switch Tones Number Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONES_NUMBER_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SOUND_SWITCH_TONES_NUMBER_GET_V2_FRAME;

/************************************************************/
/* Sound Switch Tones Number Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONES_NUMBER_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedTones;               /**/
} ZW_SOUND_SWITCH_TONES_NUMBER_REPORT_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Info Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
} ZW_SOUND_SWITCH_TONE_INFO_GET_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 1byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_1BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_1BYTE_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 2byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_2BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        /* LSB */
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_2BYTE_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 3byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_3BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        /* LSB */
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_3BYTE_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Info Report 4byte V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_INFO_REPORT_4BYTE_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   toneDuration1;                /* MSB */
    uint8_t   toneDuration2;                /* LSB */
    uint8_t   nameLength;                   /**/
    uint8_t   name1;                        /* MSB */
    uint8_t   name2;                        
    uint8_t   name3;                        
    uint8_t   name4;                        /* LSB */
} ZW_SOUND_SWITCH_TONE_INFO_REPORT_4BYTE_V2_FRAME;

/************************************************************/
/* Sound Switch Configuration Set V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_CONFIGURATION_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   volume;                       /**/
    uint8_t   defaultToneIdentifier;        /**/
} ZW_SOUND_SWITCH_CONFIGURATION_SET_V2_FRAME;

/************************************************************/
/* Sound Switch Configuration Get V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_CONFIGURATION_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SOUND_SWITCH_CONFIGURATION_GET_V2_FRAME;

/************************************************************/
/* Sound Switch Configuration Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_CONFIGURATION_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   volume;                       /**/
    uint8_t   defaultToneIdentifer;         /**/
} ZW_SOUND_SWITCH_CONFIGURATION_REPORT_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Play Set V2 command class structs */   
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_PLAY_SET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   playCommandToneVolume;        /**/
} ZW_SOUND_SWITCH_TONE_PLAY_SET_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Play Get V2 command class structs */   
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_PLAY_GET_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_SOUND_SWITCH_TONE_PLAY_GET_V2_FRAME;

/************************************************************/
/* Sound Switch Tone Play Report V2 command class structs */
/************************************************************/
typedef struct _ZW_SOUND_SWITCH_TONE_PLAY_REPORT_V2_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   toneIdentifier;               /**/
    uint8_t   playCommandToneVolume;        /**/
} ZW_SOUND_SWITCH_TONE_PLAY_REPORT_V2_FRAME;

/************************************************************/
/* Ir Repeater Capabilities Get command class structs */    
/************************************************************/
typedef struct _ZW_IR_REPEATER_CAPABILITIES_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IR_REPEATER_CAPABILITIES_GET_FRAME;

/************************************************************/
/* Ir Repeater Capabilities Report command class structs */ 
/************************************************************/
typedef struct _ZW_IR_REPEATER_CAPABILITIES_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfIrCodeIdentifiersForLearning;/**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   carrier;                      /**/
    uint8_t   minimumSubCarrier;            /**/
    uint8_t   maxiumSubCarrier;             /**/
    uint8_t   minimumPulseTimeUnitMsb;      /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   maximumPulseTimeUnitLsb;      /**/
} ZW_IR_REPEATER_CAPABILITIES_REPORT_FRAME;

/************************************************************/
/* Ir Repeater Ir Code Learning Start command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_IR_CODE_LEARNING_START_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   timeout;                      /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
} ZW_IR_REPEATER_IR_CODE_LEARNING_START_FRAME;

/************************************************************/
/* Ir Repeater Ir Code Learning Stop command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_IR_CODE_LEARNING_STOP_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IR_REPEATER_IR_CODE_LEARNING_STOP_FRAME;

/************************************************************/
/* Ir Repeater Ir Code Learning Status command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_IR_CODE_LEARNING_STATUS_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   status;                       /**/
} ZW_IR_REPEATER_IR_CODE_LEARNING_STATUS_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Remove command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_REMOVE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
} ZW_IR_REPEATER_LEARNT_IR_CODE_REMOVE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Get command class structs */  
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IR_REPEATER_LEARNT_IR_CODE_GET_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   irCodeIdentifierStatusBitmask1;
} ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   irCodeIdentifierStatusBitmask1;/* MSB */
    uint8_t   irCodeIdentifierStatusBitmask2;/* LSB */
} ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   irCodeIdentifierStatusBitmask1;/* MSB */
    uint8_t   irCodeIdentifierStatusBitmask2;
    uint8_t   irCodeIdentifierStatusBitmask3;/* LSB */
} ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   irCodeIdentifierStatusBitmask1;/* MSB */
    uint8_t   irCodeIdentifierStatusBitmask2;
    uint8_t   irCodeIdentifierStatusBitmask3;
    uint8_t   irCodeIdentifierStatusBitmask4;/* LSB */
} ZW_IR_REPEATER_LEARNT_IR_CODE_REPORT_4BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Get command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
} ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_GET_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_1BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              
} VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_1BYTE_VG;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_2BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              /* MSB */
    uint8_t   dataBlockValue2;              /* LSB */
} VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_2BYTE_VG;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_3BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              /* MSB */
    uint8_t   dataBlockValue2;              
    uint8_t   dataBlockValue3;              /* LSB */
} VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_3BYTE_VG;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              /* MSB */
    uint8_t   dataBlockValue2;              
    uint8_t   dataBlockValue3;              
    uint8_t   dataBlockValue4;              /* LSB */
} VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_1BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_2BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_3BYTE_FRAME;

/************************************************************/
/* Ir Repeater Learnt Ir Code Readback Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_IR_REPEATER_LEARNT_IR_CODE_READBACK_REPORT_4BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Set variant group structs */   
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_SET_1BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             
} VG_IR_REPEATER_CONFIGURATION_SET_1BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Set variant group structs */   
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_SET_2BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             /* MSB */
    uint8_t   dataBitEncoding2;             /* LSB */
} VG_IR_REPEATER_CONFIGURATION_SET_2BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Set variant group structs */   
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_SET_3BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             /* MSB */
    uint8_t   dataBitEncoding2;             
    uint8_t   dataBitEncoding3;             /* LSB */
} VG_IR_REPEATER_CONFIGURATION_SET_3BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Set variant group structs */   
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             /* MSB */
    uint8_t   dataBitEncoding2;             
    uint8_t   dataBitEncoding3;             
    uint8_t   dataBitEncoding4;             /* LSB */
} VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup1;                /**/
} ZW_IR_REPEATER_CONFIGURATION_SET_1BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup2;                /**/
} ZW_IR_REPEATER_CONFIGURATION_SET_2BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup3;                /**/
} ZW_IR_REPEATER_CONFIGURATION_SET_3BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup3;                /**/
    VG_IR_REPEATER_CONFIGURATION_SET_4BYTE_VG variantgroup4;                /**/
} ZW_IR_REPEATER_CONFIGURATION_SET_4BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Get command class structs */   
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_IR_REPEATER_CONFIGURATION_GET_FRAME;

/************************************************************/
/* Ir Repeater Configuration Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_REPORT_1BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             
} VG_IR_REPEATER_CONFIGURATION_REPORT_1BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_REPORT_2BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             /* MSB */
    uint8_t   dataBitEncoding2;             /* LSB */
} VG_IR_REPEATER_CONFIGURATION_REPORT_2BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_REPORT_3BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             /* MSB */
    uint8_t   dataBitEncoding2;             
    uint8_t   dataBitEncoding3;             /* LSB */
} VG_IR_REPEATER_CONFIGURATION_REPORT_3BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Report variant group structs */
/************************************************************/
typedef struct _VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG_
{
    uint8_t   dataBitEncodingLength1;       /* MSB */
    uint8_t   dataBitEncodingLength2;       /* LSB */
    uint8_t   dataBitEncoding1;             /* MSB */
    uint8_t   dataBitEncoding2;             
    uint8_t   dataBitEncoding3;             
    uint8_t   dataBitEncoding4;             /* LSB */
} VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG;

/************************************************************/
/* Ir Repeater Configuration Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup1;                /**/
} ZW_IR_REPEATER_CONFIGURATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup2;                /**/
} ZW_IR_REPEATER_CONFIGURATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup3;                /**/
} ZW_IR_REPEATER_CONFIGURATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Ir Repeater Configuration Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   periodMsb;                    /**/
    uint8_t   properties1;                  /* masked byte */
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_VG variantgroup4;                /**/
} ZW_IR_REPEATER_CONFIGURATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Ir Repeater Repeat Learnt Code command class structs */  
/************************************************************/
typedef struct _ZW_IR_REPEATER_REPEAT_LEARNT_CODE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   irCodeIdentifier;             /**/
} ZW_IR_REPEATER_REPEAT_LEARNT_CODE_FRAME;

/************************************************************/
/* Ir Repeater Repeat variant group structs */              
/************************************************************/
typedef struct _VG_IR_REPEATER_REPEAT_1BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              
} VG_IR_REPEATER_REPEAT_1BYTE_VG;

/************************************************************/
/* Ir Repeater Repeat variant group structs */              
/************************************************************/
typedef struct _VG_IR_REPEATER_REPEAT_2BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              /* MSB */
    uint8_t   dataBlockValue2;              /* LSB */
} VG_IR_REPEATER_REPEAT_2BYTE_VG;

/************************************************************/
/* Ir Repeater Repeat variant group structs */              
/************************************************************/
typedef struct _VG_IR_REPEATER_REPEAT_3BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              /* MSB */
    uint8_t   dataBlockValue2;              
    uint8_t   dataBlockValue3;              /* LSB */
} VG_IR_REPEATER_REPEAT_3BYTE_VG;

/************************************************************/
/* Ir Repeater Repeat variant group structs */              
/************************************************************/
typedef struct _VG_IR_REPEATER_REPEAT_4BYTE_VG_
{
    uint8_t   properties3;                  /* masked byte */
    uint8_t   dataBlockValue1;              /* MSB */
    uint8_t   dataBlockValue2;              
    uint8_t   dataBlockValue3;              
    uint8_t   dataBlockValue4;              /* LSB */
} VG_IR_REPEATER_REPEAT_4BYTE_VG;

/************************************************************/
/* Ir Repeater Repeat 1byte command class structs */        
/************************************************************/
typedef struct _ZW_IR_REPEATER_REPEAT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup1;                /**/
} ZW_IR_REPEATER_REPEAT_1BYTE_FRAME;

/************************************************************/
/* Ir Repeater Repeat 2byte command class structs */        
/************************************************************/
typedef struct _ZW_IR_REPEATER_REPEAT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup2;                /**/
} ZW_IR_REPEATER_REPEAT_2BYTE_FRAME;

/************************************************************/
/* Ir Repeater Repeat 3byte command class structs */        
/************************************************************/
typedef struct _ZW_IR_REPEATER_REPEAT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup3;                /**/
} ZW_IR_REPEATER_REPEAT_3BYTE_FRAME;

/************************************************************/
/* Ir Repeater Repeat 4byte command class structs */        
/************************************************************/
typedef struct _ZW_IR_REPEATER_REPEAT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   subCarrier;                   /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   pulseTimeUnitLsb;             /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   reportNumberLsb;              /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup1;                /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup2;                /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup3;                /**/
    VG_IR_REPEATER_REPEAT_4BYTE_VG variantgroup4;                /**/
} ZW_IR_REPEATER_REPEAT_4BYTE_FRAME;

/************************************************************/
/* Authentication Capability Get command class structs */   
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CAPABILITY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AUTHENTICATION_CAPABILITY_GET_FRAME;

/************************************************************/
/* Authentication Capability Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CAPABILITY_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedDataIdEntries1;      /* MSB */
    uint8_t   supportedDataIdEntries2;      /* LSB */
    uint8_t   supportedAuthenticationIdEntries1;/* MSB */
    uint8_t   supportedAuthenticationIdEntries2;/* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask1;
    uint8_t   supportedChecksumTypeBitMask; /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedFallbackStatusBitMask1;
} ZW_AUTHENTICATION_CAPABILITY_REPORT_1BYTE_FRAME;

/************************************************************/
/* Authentication Capability Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CAPABILITY_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedDataIdEntries1;      /* MSB */
    uint8_t   supportedDataIdEntries2;      /* LSB */
    uint8_t   supportedAuthenticationIdEntries1;/* MSB */
    uint8_t   supportedAuthenticationIdEntries2;/* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask1;/* MSB */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask2;/* LSB */
    uint8_t   supportedChecksumTypeBitMask; /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedFallbackStatusBitMask1;/* MSB */
    uint8_t   supportedFallbackStatusBitMask2;/* LSB */
} ZW_AUTHENTICATION_CAPABILITY_REPORT_2BYTE_FRAME;

/************************************************************/
/* Authentication Capability Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CAPABILITY_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedDataIdEntries1;      /* MSB */
    uint8_t   supportedDataIdEntries2;      /* LSB */
    uint8_t   supportedAuthenticationIdEntries1;/* MSB */
    uint8_t   supportedAuthenticationIdEntries2;/* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask1;/* MSB */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask2;
    uint8_t   supportedAuthenticationTechnologyTypeBitMask3;/* LSB */
    uint8_t   supportedChecksumTypeBitMask; /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedFallbackStatusBitMask1;/* MSB */
    uint8_t   supportedFallbackStatusBitMask2;
    uint8_t   supportedFallbackStatusBitMask3;/* LSB */
} ZW_AUTHENTICATION_CAPABILITY_REPORT_3BYTE_FRAME;

/************************************************************/
/* Authentication Capability Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CAPABILITY_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   supportedDataIdEntries1;      /* MSB */
    uint8_t   supportedDataIdEntries2;      /* LSB */
    uint8_t   supportedAuthenticationIdEntries1;/* MSB */
    uint8_t   supportedAuthenticationIdEntries2;/* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask1;/* MSB */
    uint8_t   supportedAuthenticationTechnologyTypeBitMask2;
    uint8_t   supportedAuthenticationTechnologyTypeBitMask3;
    uint8_t   supportedAuthenticationTechnologyTypeBitMask4;/* LSB */
    uint8_t   supportedChecksumTypeBitMask; /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   supportedFallbackStatusBitMask1;/* MSB */
    uint8_t   supportedFallbackStatusBitMask2;
    uint8_t   supportedFallbackStatusBitMask3;
    uint8_t   supportedFallbackStatusBitMask4;/* LSB */
} ZW_AUTHENTICATION_CAPABILITY_REPORT_4BYTE_FRAME;

/************************************************************/
/* Authentication Data Set 1byte command class structs */   
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          
} ZW_AUTHENTICATION_DATA_SET_1BYTE_FRAME;

/************************************************************/
/* Authentication Data Set 2byte command class structs */   
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          /* MSB */
    uint8_t   authenticationData2;          /* LSB */
} ZW_AUTHENTICATION_DATA_SET_2BYTE_FRAME;

/************************************************************/
/* Authentication Data Set 3byte command class structs */   
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          /* MSB */
    uint8_t   authenticationData2;          
    uint8_t   authenticationData3;          /* LSB */
} ZW_AUTHENTICATION_DATA_SET_3BYTE_FRAME;

/************************************************************/
/* Authentication Data Set 4byte command class structs */   
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          /* MSB */
    uint8_t   authenticationData2;          
    uint8_t   authenticationData3;          
    uint8_t   authenticationData4;          /* LSB */
} ZW_AUTHENTICATION_DATA_SET_4BYTE_FRAME;

/************************************************************/
/* Authentication Data Get command class structs */         
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
} ZW_AUTHENTICATION_DATA_GET_FRAME;

/************************************************************/
/* Authentication Data Report variant group structs */      
/************************************************************/
typedef struct _VG_AUTHENTICATION_DATA_REPORT_1BYTE_VG_
{
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          
} VG_AUTHENTICATION_DATA_REPORT_1BYTE_VG;

/************************************************************/
/* Authentication Data Report variant group structs */      
/************************************************************/
typedef struct _VG_AUTHENTICATION_DATA_REPORT_2BYTE_VG_
{
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          /* MSB */
    uint8_t   authenticationData2;          /* LSB */
} VG_AUTHENTICATION_DATA_REPORT_2BYTE_VG;

/************************************************************/
/* Authentication Data Report variant group structs */      
/************************************************************/
typedef struct _VG_AUTHENTICATION_DATA_REPORT_3BYTE_VG_
{
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          /* MSB */
    uint8_t   authenticationData2;          
    uint8_t   authenticationData3;          /* LSB */
} VG_AUTHENTICATION_DATA_REPORT_3BYTE_VG;

/************************************************************/
/* Authentication Data Report variant group structs */      
/************************************************************/
typedef struct _VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG_
{
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   authenticationDataLength;     /**/
    uint8_t   authenticationData1;          /* MSB */
    uint8_t   authenticationData2;          
    uint8_t   authenticationData3;          
    uint8_t   authenticationData4;          /* LSB */
} VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG;

/************************************************************/
/* Authentication Data Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationDataIdBlocks;/**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup1;                /**/
    uint8_t   nextAuthenticationDataId1;    /* MSB */
    uint8_t   nextAuthenticationDataId2;    /* LSB */
} ZW_AUTHENTICATION_DATA_REPORT_1BYTE_FRAME;

/************************************************************/
/* Authentication Data Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationDataIdBlocks;/**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup2;                /**/
    uint8_t   nextAuthenticationDataId1;    /* MSB */
    uint8_t   nextAuthenticationDataId2;    /* LSB */
} ZW_AUTHENTICATION_DATA_REPORT_2BYTE_FRAME;

/************************************************************/
/* Authentication Data Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationDataIdBlocks;/**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup3;                /**/
    uint8_t   nextAuthenticationDataId1;    /* MSB */
    uint8_t   nextAuthenticationDataId2;    /* LSB */
} ZW_AUTHENTICATION_DATA_REPORT_3BYTE_FRAME;

/************************************************************/
/* Authentication Data Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_DATA_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationDataIdBlocks;/**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_AUTHENTICATION_DATA_REPORT_4BYTE_VG variantgroup4;                /**/
    uint8_t   nextAuthenticationDataId1;    /* MSB */
    uint8_t   nextAuthenticationDataId2;    /* LSB */
} ZW_AUTHENTICATION_DATA_REPORT_4BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Set variant group structs */
/************************************************************/
typedef struct _VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG_
{
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
} VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG;

/************************************************************/
/* Authentication Technologies Combination Set 1byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup1;                /**/
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_1BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Set 2byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup2;                /**/
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_2BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Set 3byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup2;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup3;                /**/
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_3BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Set 4byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup2;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup3;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_VG variantgroup4;                /**/
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_SET_4BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Get command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   properties1;                  /* masked byte */
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_GET_FRAME;

/************************************************************/
/* Authentication Technologies Combination Report variant group structs */
/************************************************************/
typedef struct _VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG_
{
    uint8_t   authenticationDataId1;        /* MSB */
    uint8_t   authenticationDataId2;        /* LSB */
} VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG;

/************************************************************/
/* Authentication Technologies Combination Report variant group structs */
/************************************************************/
typedef struct _VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_1BYTE_VG_
{
    uint8_t   authenticationIdBlockLength;  /**/
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup1;                /**/
} VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_1BYTE_VG;

/************************************************************/
/* Authentication Technologies Combination Report variant group structs */
/************************************************************/
typedef struct _VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_2BYTE_VG_
{
    uint8_t   authenticationIdBlockLength;  /**/
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup2;                /**/
} VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_2BYTE_VG;

/************************************************************/
/* Authentication Technologies Combination Report variant group structs */
/************************************************************/
typedef struct _VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_3BYTE_VG_
{
    uint8_t   authenticationIdBlockLength;  /**/
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup2;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup3;                /**/
} VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_3BYTE_VG;

/************************************************************/
/* Authentication Technologies Combination Report variant group structs */
/************************************************************/
typedef struct _VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG_
{
    uint8_t   authenticationIdBlockLength;  /**/
    uint8_t   authenticationId1;            /* MSB */
    uint8_t   authenticationId2;            /* LSB */
    uint8_t   fallbackStatus;               /**/
    uint8_t   userIdentifier1;              /* MSB */
    uint8_t   userIdentifier2;              /* LSB */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   properties1;                  /* masked byte */
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup2;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup3;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_VG_VG variantgroup4;                /**/
} VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG;

/************************************************************/
/* Authentication Technologies Combination Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationIdBlocks;/**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup1;                /**/
    uint8_t   nextAuthenticationId1;        /* MSB */
    uint8_t   nextAuthenticationId2;        /* LSB */
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_1BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationIdBlocks;/**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup2;                /**/
    uint8_t   nextAuthenticationId1;        /* MSB */
    uint8_t   nextAuthenticationId2;        /* LSB */
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_2BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationIdBlocks;/**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup3;                /**/
    uint8_t   nextAuthenticationId1;        /* MSB */
    uint8_t   nextAuthenticationId2;        /* LSB */
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_3BYTE_FRAME;

/************************************************************/
/* Authentication Technologies Combination Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfAuthenticationIdBlocks;/**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup1;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup2;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup3;                /**/
    VG_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_VG variantgroup4;                /**/
    uint8_t   nextAuthenticationId1;        /* MSB */
    uint8_t   nextAuthenticationId2;        /* LSB */
} ZW_AUTHENTICATION_TECHNOLOGIES_COMBINATION_REPORT_4BYTE_FRAME;

/************************************************************/
/* Authentication Checksum Get command class structs */     
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CHECKSUM_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_AUTHENTICATION_CHECKSUM_GET_FRAME;

/************************************************************/
/* Authentication Checksum Report command class structs */  
/************************************************************/
typedef struct _ZW_AUTHENTICATION_CHECKSUM_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   checksum1;                    /* MSB */
    uint8_t   checksum2;                    /* LSB */
} ZW_AUTHENTICATION_CHECKSUM_REPORT_FRAME;

/************************************************************/
/* Authentication Media Capability Get command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_CAPABILITY_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AUTHENTICATION_MEDIA_CAPABILITY_GET_FRAME;

/************************************************************/
/* Authentication Media Capability Report command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_CAPABILITY_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
} ZW_AUTHENTICATION_MEDIA_CAPABILITY_REPORT_FRAME;

/************************************************************/
/* Authentication Media Write Start 1byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_START_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   timeout;                      /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        
} ZW_AUTHENTICATION_MEDIA_WRITE_START_1BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Start 2byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_START_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   timeout;                      /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_AUTHENTICATION_MEDIA_WRITE_START_2BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Start 3byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_START_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   timeout;                      /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_AUTHENTICATION_MEDIA_WRITE_START_3BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Start 4byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_START_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   timeout;                      /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_AUTHENTICATION_MEDIA_WRITE_START_4BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Stop command class structs */ 
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_STOP_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_AUTHENTICATION_MEDIA_WRITE_STOP_FRAME;

/************************************************************/
/* Authentication Media Write Status 1byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   status;                       /**/
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        
} ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_1BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Status 2byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   status;                       /**/
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        /* LSB */
} ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_2BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Status 3byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   status;                       /**/
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        /* LSB */
} ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_3BYTE_FRAME;

/************************************************************/
/* Authentication Media Write Status 4byte command class structs */
/************************************************************/
typedef struct _ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   sequenceNumber;               /**/
    uint8_t   status;                       /**/
    uint8_t   dataLength;                   /**/
    uint8_t   data1;                        /* MSB */
    uint8_t   data2;                        
    uint8_t   data3;                        
    uint8_t   data4;                        /* LSB */
} ZW_AUTHENTICATION_MEDIA_WRITE_STATUS_4BYTE_FRAME;

/************************************************************/
/* Generic Schedule Capabilities Get command class structs */
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_CAPABILITIES_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_GENERIC_SCHEDULE_CAPABILITIES_GET_FRAME;

/************************************************************/
/* Generic Schedule Capabilities Report command class structs */
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_CAPABILITIES_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedScheduleIds1;/* MSB */
    uint8_t   numberOfSupportedScheduleIds2;/* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedTimeRangeIds2;/**/
    uint8_t   numberOfSupportedTimeRangesPerSchedule;/**/
    uint8_t   properties2;                  /* masked byte */
} ZW_GENERIC_SCHEDULE_CAPABILITIES_REPORT_FRAME;

/************************************************************/
/* Generic Schedule Time Range Set command class structs */ 
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_TIME_RANGE_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   timeRangeId2;                 /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   startYear2;                   /**/
    uint8_t   properties4;                  /* masked byte */
    uint8_t   stopYear2;                    /**/
    uint8_t   properties5;                  /* masked byte */
    uint8_t   properties6;                  /* masked byte */
    uint8_t   properties7;                  /* masked byte */
    uint8_t   properties8;                  /* masked byte */
    uint8_t   properties9;                  /* masked byte */
    uint8_t   properties10;                 /* masked byte */
    uint8_t   properties11;                 /* masked byte */
    uint8_t   properties12;                 /* masked byte */
    uint8_t   properties13;                 /* masked byte */
    uint8_t   properties14;                 /* masked byte */
    uint8_t   properties15;                 /* masked byte */
    uint8_t   properties16;                 /* masked byte */
} ZW_GENERIC_SCHEDULE_TIME_RANGE_SET_FRAME;

/************************************************************/
/* Generic Schedule Time Range Get command class structs */ 
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_TIME_RANGE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   timeRangeId2;                 /**/
} ZW_GENERIC_SCHEDULE_TIME_RANGE_GET_FRAME;

/************************************************************/
/* Generic Schedule Time Range Report command class structs */
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_TIME_RANGE_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   timeRangeId2;                 /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   startYear2;                   /**/
    uint8_t   properties4;                  /* masked byte */
    uint8_t   stopYear2;                    /**/
    uint8_t   properties5;                  /* masked byte */
    uint8_t   properties6;                  /* masked byte */
    uint8_t   properties7;                  /* masked byte */
    uint8_t   properties8;                  /* masked byte */
    uint8_t   properties9;                  /* masked byte */
    uint8_t   properties10;                 /* masked byte */
    uint8_t   properties11;                 /* masked byte */
    uint8_t   properties12;                 /* masked byte */
    uint8_t   properties13;                 /* masked byte */
    uint8_t   properties14;                 /* masked byte */
    uint8_t   properties15;                 /* masked byte */
    uint8_t   properties16;                 /* masked byte */
    uint8_t   properties17;                 /* masked byte */
    uint8_t   nextTimeRangeId2;             /**/
} ZW_GENERIC_SCHEDULE_TIME_RANGE_REPORT_FRAME;

/************************************************************/
/* Generic Schedule Set variant group structs */            
/************************************************************/
typedef struct _VG_GENERIC_SCHEDULE_SET_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   timeRangeId2;                 /**/
} VG_GENERIC_SCHEDULE_SET_VG;

/************************************************************/
/* Generic Schedule Set 1byte command class structs */      
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup1;                /**/
} ZW_GENERIC_SCHEDULE_SET_1BYTE_FRAME;

/************************************************************/
/* Generic Schedule Set 2byte command class structs */      
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup1;                /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup2;                /**/
} ZW_GENERIC_SCHEDULE_SET_2BYTE_FRAME;

/************************************************************/
/* Generic Schedule Set 3byte command class structs */      
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup1;                /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup2;                /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup3;                /**/
} ZW_GENERIC_SCHEDULE_SET_3BYTE_FRAME;

/************************************************************/
/* Generic Schedule Set 4byte command class structs */      
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup1;                /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup2;                /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup3;                /**/
    VG_GENERIC_SCHEDULE_SET_VG variantgroup4;                /**/
} ZW_GENERIC_SCHEDULE_SET_4BYTE_FRAME;

/************************************************************/
/* Generic Schedule Get command class structs */            
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
} ZW_GENERIC_SCHEDULE_GET_FRAME;

/************************************************************/
/* Generic Schedule Report variant group structs */         
/************************************************************/
typedef struct _VG_GENERIC_SCHEDULE_REPORT_VG_
{
    uint8_t   properties1;                  /* masked byte */
    uint8_t   timeRangeId2;                 /**/
} VG_GENERIC_SCHEDULE_REPORT_VG;

/************************************************************/
/* Generic Schedule Report 1byte command class structs */   
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup1;                /**/
    uint8_t   nextScheduleId1;              /* MSB */
    uint8_t   nextScheduleId2;              /* LSB */
} ZW_GENERIC_SCHEDULE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Generic Schedule Report 2byte command class structs */   
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup1;                /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup2;                /**/
    uint8_t   nextScheduleId1;              /* MSB */
    uint8_t   nextScheduleId2;              /* LSB */
} ZW_GENERIC_SCHEDULE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Generic Schedule Report 3byte command class structs */   
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup1;                /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup2;                /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup3;                /**/
    uint8_t   nextScheduleId1;              /* MSB */
    uint8_t   nextScheduleId2;              /* LSB */
} ZW_GENERIC_SCHEDULE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Generic Schedule Report 4byte command class structs */   
/************************************************************/
typedef struct _ZW_GENERIC_SCHEDULE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   scheduleId1;                  /* MSB */
    uint8_t   scheduleId2;                  /* LSB */
    uint8_t   numberOfTimeRangeIds;         /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup1;                /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup2;                /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup3;                /**/
    VG_GENERIC_SCHEDULE_REPORT_VG variantgroup4;                /**/
    uint8_t   nextScheduleId1;              /* MSB */
    uint8_t   nextScheduleId2;              /* LSB */
} ZW_GENERIC_SCHEDULE_REPORT_4BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock State Get command class structs */      
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_STATE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ANTITHEFT_UNLOCK_STATE_GET_FRAME;

/************************************************************/
/* Antitheft Unlock State Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_STATE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   antiTheftHint1;               
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_UNLOCK_STATE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock State Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_STATE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   antiTheftHint1;               /* MSB */
    uint8_t   antiTheftHint2;               /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_UNLOCK_STATE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock State Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_STATE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   antiTheftHint1;               /* MSB */
    uint8_t   antiTheftHint2;               
    uint8_t   antiTheftHint3;               /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_UNLOCK_STATE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock State Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_STATE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   antiTheftHint1;               /* MSB */
    uint8_t   antiTheftHint2;               
    uint8_t   antiTheftHint3;               
    uint8_t   antiTheftHint4;               /* LSB */
    uint8_t   manufacturerId1;              /* MSB */
    uint8_t   manufacturerId2;              /* LSB */
    uint8_t   zWaveAllianceLockingEntityId1;/* MSB */
    uint8_t   zWaveAllianceLockingEntityId2;/* LSB */
} ZW_ANTITHEFT_UNLOCK_STATE_REPORT_4BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock Set 1byte command class structs */      
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   
} ZW_ANTITHEFT_UNLOCK_SET_1BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock Set 2byte command class structs */      
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   /* LSB */
} ZW_ANTITHEFT_UNLOCK_SET_2BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock Set 3byte command class structs */      
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   /* LSB */
} ZW_ANTITHEFT_UNLOCK_SET_3BYTE_FRAME;

/************************************************************/
/* Antitheft Unlock Set 4byte command class structs */      
/************************************************************/
typedef struct _ZW_ANTITHEFT_UNLOCK_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   magicCode1;                   /* MSB */
    uint8_t   magicCode2;                   
    uint8_t   magicCode3;                   
    uint8_t   magicCode4;                   /* LSB */
} ZW_ANTITHEFT_UNLOCK_SET_4BYTE_FRAME;

/************************************************************/
/* User Capabilities Get command class structs */           
/************************************************************/
typedef struct _ZW_USER_CAPABILITIES_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_USER_CAPABILITIES_GET_FRAME;

/************************************************************/
/* User Capabilities Report variant group structs */        
/************************************************************/
typedef struct _VG_USER_CAPABILITIES_REPORT_VG_
{
    uint8_t   supportedUserTypesBitMask;    /**/
} VG_USER_CAPABILITIES_REPORT_VG;

/************************************************************/
/* User Capabilities Report 1byte command class structs */  
/************************************************************/
typedef struct _ZW_USER_CAPABILITIES_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedUserUniqueIdentifiers1;/* MSB */
    uint8_t   numberOfSupportedUserUniqueIdentifiers2;/* LSB */
    uint8_t   supportedCredentialRulesBitMask;/**/
    uint8_t   maxLengthOfUserName;          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserTypesBitMaskLength;/**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup1;                /**/
} ZW_USER_CAPABILITIES_REPORT_1BYTE_FRAME;

/************************************************************/
/* User Capabilities Report 2byte command class structs */  
/************************************************************/
typedef struct _ZW_USER_CAPABILITIES_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedUserUniqueIdentifiers1;/* MSB */
    uint8_t   numberOfSupportedUserUniqueIdentifiers2;/* LSB */
    uint8_t   supportedCredentialRulesBitMask;/**/
    uint8_t   maxLengthOfUserName;          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserTypesBitMaskLength;/**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup2;                /**/
} ZW_USER_CAPABILITIES_REPORT_2BYTE_FRAME;

/************************************************************/
/* User Capabilities Report 3byte command class structs */  
/************************************************************/
typedef struct _ZW_USER_CAPABILITIES_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedUserUniqueIdentifiers1;/* MSB */
    uint8_t   numberOfSupportedUserUniqueIdentifiers2;/* LSB */
    uint8_t   supportedCredentialRulesBitMask;/**/
    uint8_t   maxLengthOfUserName;          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserTypesBitMaskLength;/**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup2;                /**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup3;                /**/
} ZW_USER_CAPABILITIES_REPORT_3BYTE_FRAME;

/************************************************************/
/* User Capabilities Report 4byte command class structs */  
/************************************************************/
typedef struct _ZW_USER_CAPABILITIES_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   numberOfSupportedUserUniqueIdentifiers1;/* MSB */
    uint8_t   numberOfSupportedUserUniqueIdentifiers2;/* LSB */
    uint8_t   supportedCredentialRulesBitMask;/**/
    uint8_t   maxLengthOfUserName;          /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   supportedUserTypesBitMaskLength;/**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup2;                /**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup3;                /**/
    VG_USER_CAPABILITIES_REPORT_VG variantgroup4;                /**/
} ZW_USER_CAPABILITIES_REPORT_4BYTE_FRAME;

/************************************************************/
/* Credential Capabilities Get command class structs */     
/************************************************************/
typedef struct _ZW_CREDENTIAL_CAPABILITIES_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CREDENTIAL_CAPABILITIES_GET_FRAME;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_
{
    uint8_t   credentialType;               /**/
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1_
{
    uint8_t   properties2;                  /* masked byte */
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2_
{
    uint8_t   numberOfSupportedCredentialSlots1;/* MSB */
    uint8_t   numberOfSupportedCredentialSlots2;/* LSB */
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3_
{
    uint8_t   minLengthOfCredentialData;    /**/
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4_
{
    uint8_t   maxLengthOfCredentialData;    /**/
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5_
{
    uint8_t   clRecommendedTimeout;         /**/
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6_
{
    uint8_t   clNumberOfSteps;              /**/
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6;

/************************************************************/
/* Credential Capabilities Report variant group structs */  
/************************************************************/
typedef struct _VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7_
{
    uint8_t   maximumCredentialHashLength;  /**/
} VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7;

/************************************************************/
/* Credential Capabilities Report 1byte command class structs */
/************************************************************/
typedef struct _ZW_CREDENTIAL_CAPABILITIES_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCredentialTypes;/**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup1_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup1_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup1_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup1_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup1_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup1_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup1_7;              /**/
} ZW_CREDENTIAL_CAPABILITIES_REPORT_1BYTE_FRAME;

/************************************************************/
/* Credential Capabilities Report 2byte command class structs */
/************************************************************/
typedef struct _ZW_CREDENTIAL_CAPABILITIES_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCredentialTypes;/**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup2;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup1_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup2_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup1_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup2_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup1_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup2_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup1_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup2_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup1_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup2_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup1_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup2_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup1_7;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup2_7;              /**/
} ZW_CREDENTIAL_CAPABILITIES_REPORT_2BYTE_FRAME;

/************************************************************/
/* Credential Capabilities Report 3byte command class structs */
/************************************************************/
typedef struct _ZW_CREDENTIAL_CAPABILITIES_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCredentialTypes;/**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup2;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup3;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup1_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup2_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup3_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup1_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup2_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup3_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup1_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup2_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup3_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup1_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup2_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup3_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup1_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup2_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup3_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup1_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup2_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup3_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup1_7;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup2_7;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup3_7;              /**/
} ZW_CREDENTIAL_CAPABILITIES_REPORT_3BYTE_FRAME;

/************************************************************/
/* Credential Capabilities Report 4byte command class structs */
/************************************************************/
typedef struct _ZW_CREDENTIAL_CAPABILITIES_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   numberOfSupportedCredentialTypes;/**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup1;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup2;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup3;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG variantgroup4;                /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup1_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup2_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup3_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_1 variantgroup4_1;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup1_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup2_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup3_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_2 variantgroup4_2;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup1_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup2_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup3_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_3 variantgroup4_3;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup1_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup2_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup3_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_4 variantgroup4_4;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup1_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup2_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup3_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_5 variantgroup4_5;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup1_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup2_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup3_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_6 variantgroup4_6;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup1_7;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup2_7;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup3_7;              /**/
    VG_CREDENTIAL_CAPABILITIES_REPORT_VG_7 variantgroup4_7;              /**/
} ZW_CREDENTIAL_CAPABILITIES_REPORT_4BYTE_FRAME;

/************************************************************/
/* User Set 1byte command class structs */                  
/************************************************************/
typedef struct _ZW_USER_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    
} ZW_USER_SET_1BYTE_FRAME;

/************************************************************/
/* User Set 2byte command class structs */                  
/************************************************************/
typedef struct _ZW_USER_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    /* MSB */
    uint8_t   userName2;                    /* LSB */
} ZW_USER_SET_2BYTE_FRAME;

/************************************************************/
/* User Set 3byte command class structs */                  
/************************************************************/
typedef struct _ZW_USER_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    /* MSB */
    uint8_t   userName2;                    
    uint8_t   userName3;                    /* LSB */
} ZW_USER_SET_3BYTE_FRAME;

/************************************************************/
/* User Set 4byte command class structs */                  
/************************************************************/
typedef struct _ZW_USER_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties2;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties3;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    /* MSB */
    uint8_t   userName2;                    
    uint8_t   userName3;                    
    uint8_t   userName4;                    /* LSB */
} ZW_USER_SET_4BYTE_FRAME;

/************************************************************/
/* User Get command class structs */                        
/************************************************************/
typedef struct _ZW_USER_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
} ZW_USER_GET_FRAME;

/************************************************************/
/* User Report 1byte command class structs */               
/************************************************************/
typedef struct _ZW_USER_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userReportType;               /**/
    uint8_t   nextUserUniqueIdentifier1;    /* MSB */
    uint8_t   nextUserUniqueIdentifier2;    /* LSB */
    uint8_t   userModifierType;             /**/
    uint8_t   userModifierNodeId1;          /* MSB */
    uint8_t   userModifierNodeId2;          /* LSB */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    
} ZW_USER_REPORT_1BYTE_FRAME;

/************************************************************/
/* User Report 2byte command class structs */               
/************************************************************/
typedef struct _ZW_USER_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userReportType;               /**/
    uint8_t   nextUserUniqueIdentifier1;    /* MSB */
    uint8_t   nextUserUniqueIdentifier2;    /* LSB */
    uint8_t   userModifierType;             /**/
    uint8_t   userModifierNodeId1;          /* MSB */
    uint8_t   userModifierNodeId2;          /* LSB */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    /* MSB */
    uint8_t   userName2;                    /* LSB */
} ZW_USER_REPORT_2BYTE_FRAME;

/************************************************************/
/* User Report 3byte command class structs */               
/************************************************************/
typedef struct _ZW_USER_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userReportType;               /**/
    uint8_t   nextUserUniqueIdentifier1;    /* MSB */
    uint8_t   nextUserUniqueIdentifier2;    /* LSB */
    uint8_t   userModifierType;             /**/
    uint8_t   userModifierNodeId1;          /* MSB */
    uint8_t   userModifierNodeId2;          /* LSB */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    /* MSB */
    uint8_t   userName2;                    
    uint8_t   userName3;                    /* LSB */
} ZW_USER_REPORT_3BYTE_FRAME;

/************************************************************/
/* User Report 4byte command class structs */               
/************************************************************/
typedef struct _ZW_USER_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userReportType;               /**/
    uint8_t   nextUserUniqueIdentifier1;    /* MSB */
    uint8_t   nextUserUniqueIdentifier2;    /* LSB */
    uint8_t   userModifierType;             /**/
    uint8_t   userModifierNodeId1;          /* MSB */
    uint8_t   userModifierNodeId2;          /* LSB */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userType;                     /**/
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialRule;               /**/
    uint8_t   expiringTimeoutMinutes1;      /* MSB */
    uint8_t   expiringTimeoutMinutes2;      /* LSB */
    uint8_t   properties2;                  /* masked byte */
    uint8_t   userNameLength;               /**/
    uint8_t   userName1;                    /* MSB */
    uint8_t   userName2;                    
    uint8_t   userName3;                    
    uint8_t   userName4;                    /* LSB */
} ZW_USER_REPORT_4BYTE_FRAME;

/************************************************************/
/* Credential Set 1byte command class structs */            
/************************************************************/
typedef struct _ZW_CREDENTIAL_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              
} ZW_CREDENTIAL_SET_1BYTE_FRAME;

/************************************************************/
/* Credential Set 2byte command class structs */            
/************************************************************/
typedef struct _ZW_CREDENTIAL_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              /* MSB */
    uint8_t   credentialData2;              /* LSB */
} ZW_CREDENTIAL_SET_2BYTE_FRAME;

/************************************************************/
/* Credential Set 3byte command class structs */            
/************************************************************/
typedef struct _ZW_CREDENTIAL_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              /* MSB */
    uint8_t   credentialData2;              
    uint8_t   credentialData3;              /* LSB */
} ZW_CREDENTIAL_SET_3BYTE_FRAME;

/************************************************************/
/* Credential Set 4byte command class structs */            
/************************************************************/
typedef struct _ZW_CREDENTIAL_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              /* MSB */
    uint8_t   credentialData2;              
    uint8_t   credentialData3;              
    uint8_t   credentialData4;              /* LSB */
} ZW_CREDENTIAL_SET_4BYTE_FRAME;

/************************************************************/
/* Credential Get command class structs */                  
/************************************************************/
typedef struct _ZW_CREDENTIAL_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
} ZW_CREDENTIAL_GET_FRAME;

/************************************************************/
/* Credential Report 1byte command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialReportType;         /**/
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              
    uint8_t   credentialModifierType;       /**/
    uint8_t   credentialModifierNodeId1;    /* MSB */
    uint8_t   credentialModifierNodeId2;    /* LSB */
    uint8_t   nextCredentialType;           /**/
    uint8_t   nextCredentialSlot1;          /* MSB */
    uint8_t   nextCredentialSlot2;          /* LSB */
} ZW_CREDENTIAL_REPORT_1BYTE_FRAME;

/************************************************************/
/* Credential Report 2byte command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialReportType;         /**/
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              /* MSB */
    uint8_t   credentialData2;              /* LSB */
    uint8_t   credentialModifierType;       /**/
    uint8_t   credentialModifierNodeId1;    /* MSB */
    uint8_t   credentialModifierNodeId2;    /* LSB */
    uint8_t   nextCredentialType;           /**/
    uint8_t   nextCredentialSlot1;          /* MSB */
    uint8_t   nextCredentialSlot2;          /* LSB */
} ZW_CREDENTIAL_REPORT_2BYTE_FRAME;

/************************************************************/
/* Credential Report 3byte command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialReportType;         /**/
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              /* MSB */
    uint8_t   credentialData2;              
    uint8_t   credentialData3;              /* LSB */
    uint8_t   credentialModifierType;       /**/
    uint8_t   credentialModifierNodeId1;    /* MSB */
    uint8_t   credentialModifierNodeId2;    /* LSB */
    uint8_t   nextCredentialType;           /**/
    uint8_t   nextCredentialSlot1;          /* MSB */
    uint8_t   nextCredentialSlot2;          /* LSB */
} ZW_CREDENTIAL_REPORT_3BYTE_FRAME;

/************************************************************/
/* Credential Report 4byte command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialReportType;         /**/
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLength;             /**/
    uint8_t   credentialData1;              /* MSB */
    uint8_t   credentialData2;              
    uint8_t   credentialData3;              
    uint8_t   credentialData4;              /* LSB */
    uint8_t   credentialModifierType;       /**/
    uint8_t   credentialModifierNodeId1;    /* MSB */
    uint8_t   credentialModifierNodeId2;    /* LSB */
    uint8_t   nextCredentialType;           /**/
    uint8_t   nextCredentialSlot1;          /* MSB */
    uint8_t   nextCredentialSlot2;          /* LSB */
} ZW_CREDENTIAL_REPORT_4BYTE_FRAME;

/************************************************************/
/* Credential Learn Start command class structs */          
/************************************************************/
typedef struct _ZW_CREDENTIAL_LEARN_START_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   credentialLearnTimeout;       /**/
} ZW_CREDENTIAL_LEARN_START_FRAME;

/************************************************************/
/* Credential Learn Cancel command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_LEARN_CANCEL_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_CREDENTIAL_LEARN_CANCEL_FRAME;

/************************************************************/
/* Credential Learn Report command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_LEARN_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialLearnStatus;        /**/
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   credentialType;               /**/
    uint8_t   credentialSlot1;              /* MSB */
    uint8_t   credentialSlot2;              /* LSB */
    uint8_t   credentialLearnStepsRemaining;/**/
} ZW_CREDENTIAL_LEARN_REPORT_FRAME;

/************************************************************/
/* User Credential Association Set command class structs */ 
/************************************************************/
typedef struct _ZW_USER_CREDENTIAL_ASSOCIATION_SET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialType;               /**/
    uint8_t   sourceCredentialSlot1;        /* MSB */
    uint8_t   sourceCredentialSlot2;        /* LSB */
    uint8_t   destinationUserUniqueIdentifier1;/* MSB */
    uint8_t   destinationUserUniqueIdentifier2;/* LSB */
    uint8_t   destinationCredentialSlot1;   /* MSB */
    uint8_t   destinationCredentialSlot2;   /* LSB */
} ZW_USER_CREDENTIAL_ASSOCIATION_SET_FRAME;

/************************************************************/
/* User Credential Association Report command class structs */
/************************************************************/
typedef struct _ZW_USER_CREDENTIAL_ASSOCIATION_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialType;               /**/
    uint8_t   sourceCredentialSlot1;        /* MSB */
    uint8_t   sourceCredentialSlot2;        /* LSB */
    uint8_t   destinationUserUniqueIdentifier1;/* MSB */
    uint8_t   destinationUserUniqueIdentifier2;/* LSB */
    uint8_t   destinationCredentialSlot1;   /* MSB */
    uint8_t   destinationCredentialSlot2;   /* LSB */
    uint8_t   userCredentialAssociationStatus;/**/
} ZW_USER_CREDENTIAL_ASSOCIATION_REPORT_FRAME;

/************************************************************/
/* All Users Checksum Get command class structs */          
/************************************************************/
typedef struct _ZW_ALL_USERS_CHECKSUM_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ALL_USERS_CHECKSUM_GET_FRAME;

/************************************************************/
/* All Users Checksum Report command class structs */       
/************************************************************/
typedef struct _ZW_ALL_USERS_CHECKSUM_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   allUsersChecksum1;            /* MSB */
    uint8_t   allUsersChecksum2;            /* LSB */
} ZW_ALL_USERS_CHECKSUM_REPORT_FRAME;

/************************************************************/
/* User Checksum Get command class structs */               
/************************************************************/
typedef struct _ZW_USER_CHECKSUM_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
} ZW_USER_CHECKSUM_GET_FRAME;

/************************************************************/
/* User Checksum Report command class structs */            
/************************************************************/
typedef struct _ZW_USER_CHECKSUM_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   userUniqueIdentifier1;        /* MSB */
    uint8_t   userUniqueIdentifier2;        /* LSB */
    uint8_t   userChecksum1;                /* MSB */
    uint8_t   userChecksum2;                /* LSB */
} ZW_USER_CHECKSUM_REPORT_FRAME;

/************************************************************/
/* Credential Checksum Get command class structs */         
/************************************************************/
typedef struct _ZW_CREDENTIAL_CHECKSUM_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialType;               /**/
} ZW_CREDENTIAL_CHECKSUM_GET_FRAME;

/************************************************************/
/* Credential Checksum Report command class structs */      
/************************************************************/
typedef struct _ZW_CREDENTIAL_CHECKSUM_REPORT_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   credentialType;               /**/
    uint8_t   credentialChecksum1;          /* MSB */
    uint8_t   credentialChecksum2;          /* LSB */
} ZW_CREDENTIAL_CHECKSUM_REPORT_FRAME;

/************************************************************/
/* Admin Pin Code Set 1byte command class structs */        
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_SET_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   
} ZW_ADMIN_PIN_CODE_SET_1BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Set 2byte command class structs */        
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_SET_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   /* LSB */
} ZW_ADMIN_PIN_CODE_SET_2BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Set 3byte command class structs */        
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_SET_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   /* LSB */
} ZW_ADMIN_PIN_CODE_SET_3BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Set 4byte command class structs */        
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_SET_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   
    uint8_t   adminCode4;                   /* LSB */
} ZW_ADMIN_PIN_CODE_SET_4BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Get command class structs */              
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_GET_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
} ZW_ADMIN_PIN_CODE_GET_FRAME;

/************************************************************/
/* Admin Pin Code Report 1byte command class structs */     
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_REPORT_1BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   
} ZW_ADMIN_PIN_CODE_REPORT_1BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Report 2byte command class structs */     
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_REPORT_2BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   /* LSB */
} ZW_ADMIN_PIN_CODE_REPORT_2BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Report 3byte command class structs */     
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_REPORT_3BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   /* LSB */
} ZW_ADMIN_PIN_CODE_REPORT_3BYTE_FRAME;

/************************************************************/
/* Admin Pin Code Report 4byte command class structs */     
/************************************************************/
typedef struct _ZW_ADMIN_PIN_CODE_REPORT_4BYTE_FRAME_
{
    uint8_t   cmdClass;                     /* The command class */
    uint8_t   cmd;                          /* The command */
    uint8_t   properties1;                  /* masked byte */
    uint8_t   adminCode1;                   /* MSB */
    uint8_t   adminCode2;                   
    uint8_t   adminCode3;                   
    uint8_t   adminCode4;                   /* LSB */
} ZW_ADMIN_PIN_CODE_REPORT_4BYTE_FRAME;



/**********************************************************************/
/* Command class structs use to encapsulating other commands          */
/* Do not define these commands in ZW_FRAME_COLLECTION_MACRO          */
/* Do not include commands defined in ZW_FRAME_COLLECTION_MACRO below */
/**********************************************************************/
typedef union _ALL_EXCEPT_ENCAP
{
ZW_FRAME_COLLECTION_MACRO0
ZW_FRAME_COLLECTION_MACRO1
ZW_FRAME_COLLECTION_MACRO2
ZW_FRAME_COLLECTION_MACRO3
ZW_FRAME_COLLECTION_MACRO4
ZW_FRAME_COLLECTION_MACRO5
ZW_FRAME_COLLECTION_MACRO6
ZW_FRAME_COLLECTION_MACRO7
} ALL_EXCEPT_ENCAP;

typedef struct _ZW_MULTI_COMMAND_ENCAP_FRAME_
{
  uint8_t        cmdClass;            /* The command class */
  uint8_t        cmd;                 /* The command */
  uint8_t        numberOfCommands;
  uint8_t        commandLength;
  ALL_EXCEPT_ENCAP     encapFrame;
} ZW_MULTI_COMMAND_ENCAP_FRAME;

typedef struct _ZW_COMPOSITE_CMD_ENCAP_FRAME_
{
  uint8_t        cmdClass;            /* The command class */
  uint8_t        cmd;                 /* The command */
  uint8_t        endPointMask1;       /* End point mask 1 */
  uint8_t        endPointMask2;       /* End point mask 2 */
  ALL_EXCEPT_ENCAP     encapFrame;
} ZW_COMPOSITE_CMD_ENCAP_FRAME;

typedef struct _ZW_COMPOSITE_REPLY_ENCAP_FRAME_
{
  uint8_t        cmdClass;            /* The command class */
  uint8_t        cmd;                 /* The command */
  uint8_t        endPoint;            /* Bit7-5=Reserved and Bit0-4=End Point */
  ALL_EXCEPT_ENCAP     encapFrame;
} ZW_COMPOSITE_REPLY_ENCAP_FRAME;

typedef struct _ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME_
{
  uint8_t        cmdClass;            /* The command class */
  uint8_t        cmd;                 /* The command */
  uint8_t        instance;            /* The instance to access */
  ALL_EXCEPT_ENCAP     encapFrame;
} ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME;

typedef struct _ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME_
{
    uint8_t      cmdClass;                     /* The command class */
    uint8_t      cmd;                          /* The command */
    uint8_t      properties1;                  /* masked byte */
    uint8_t      properties2;                  /* masked byte */
  ALL_EXCEPT_ENCAP     encapFrame;
} ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME;

typedef struct _ZW_SECURITY_MESSAGE_ENCAP_FRAME_
{
  uint8_t        cmdClass;            /* The command class */
  uint8_t        cmd;                 /* The command */
  uint8_t        initVectorByte1;     /* The initialization vector byte 1 (MSB) */
  uint8_t        initVectorByte2;     /* The initialization vector byte 2  */
  uint8_t        initVectorByte3;     /* The initialization vector byte 3 */
  uint8_t        initVectorByte4;     /* The initialization vector byte 4 */
  uint8_t        initVectorByte5;     /* The initialization vector byte 5 */
  uint8_t        initVectorByte6;     /* The initialization vector byte 6 */
  uint8_t        initVectorByte7;     /* The initialization vector byte 7 */
  uint8_t        initVectorByte8;     /* The initialization vector byte 8 (LSB) */
  uint8_t        securityEncapMessage[29];
  uint8_t        receiverNonceIdent;
  uint8_t        messageAuthenticationCodeByte1; /* The Authentication code byte 1 (MSB) */
  uint8_t        messageAuthenticationCodeByte2; /* The Authentication code byte 2 */
  uint8_t        messageAuthenticationCodeByte3; /* The Authentication code byte 3 */
  uint8_t        messageAuthenticationCodeByte4; /* The Authentication code byte 4 */
  uint8_t        messageAuthenticationCodeByte5; /* The Authentication code byte 5 */
  uint8_t        messageAuthenticationCodeByte6; /* The Authentication code byte 6 */
  uint8_t        messageAuthenticationCodeByte7; /* The Authentication code byte 7 */
  uint8_t        messageAuthenticationCodeByte8; /* The Authentication code byte 8 (LSB) */
} ZW_SECURITY_MESSAGE_ENCAP_FRAME;

/************************************************************/
/* Union of all command classes                             */
/************************************************************/
typedef union _ZW_APPLICATION_TX_BUFFER_
{
  ZW_MULTI_COMMAND_ENCAP_FRAME           ZW_MultiCommandEncapFrame;
  ZW_COMPOSITE_CMD_ENCAP_FRAME           ZW_CompositeCmdEncapFrame;
  ZW_COMPOSITE_REPLY_ENCAP_FRAME         ZW_CompositeReplyEncapFrame;
  ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME      ZW_MultiInstanceCmdEncapFrame;
  ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME    ZW_MultiChannelCmdEncapV2Frame;
ZW_FRAME_COLLECTION_MACRO0
ZW_FRAME_COLLECTION_MACRO1
ZW_FRAME_COLLECTION_MACRO2
ZW_FRAME_COLLECTION_MACRO3
ZW_FRAME_COLLECTION_MACRO4
ZW_FRAME_COLLECTION_MACRO5
ZW_FRAME_COLLECTION_MACRO6
ZW_FRAME_COLLECTION_MACRO7
  uint8_t                                bPadding[TX_DATA_MAX_DATA_SIZE];
} ZW_APPLICATION_TX_BUFFER;

/************************************************************/
/* Union of all command classes with room for a full        */
/* meta data frame                                          */
/************************************************************/
typedef union _ZW_APPLICATION_META_TX_BUFFER_
{
  ZW_MULTI_COMMAND_ENCAP_FRAME           ZW_MultiCommandEncapFrame;
  ZW_COMPOSITE_CMD_ENCAP_FRAME           ZW_CompositeCmdEncapFrame;
  ZW_COMPOSITE_REPLY_ENCAP_FRAME         ZW_CompositeReplyEncapFrame;
  ZW_MULTI_INSTANCE_CMD_ENCAP_FRAME      ZW_MultiInstanceCmdEncapFrame;
  ZW_MULTI_CHANNEL_CMD_ENCAP_V2_FRAME    ZW_MultiChannelCmdEncapV2Frame;
ZW_FRAME_COLLECTION_MACRO0
ZW_FRAME_COLLECTION_MACRO1
ZW_FRAME_COLLECTION_MACRO2
ZW_FRAME_COLLECTION_MACRO3
ZW_FRAME_COLLECTION_MACRO4
ZW_FRAME_COLLECTION_MACRO5
ZW_FRAME_COLLECTION_MACRO6
ZW_FRAME_COLLECTION_MACRO7
  uint8_t                                bPadding[META_DATA_MAX_DATA_SIZE];
} ZW_APPLICATION_META_TX_BUFFER;


#endif
